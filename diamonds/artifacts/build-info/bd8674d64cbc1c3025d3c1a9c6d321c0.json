{
	"id": "bd8674d64cbc1c3025d3c1a9c6d321c0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"diamonds/Diamond.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\nimport 'abstracts/ERC2535.sol';\n\n/**\n* ref https://eips.ethereum.org/EIPS/eip-2535#abstract\n */\ncontract Diamond is ERC2535 {}"
			},
			"abstracts/ERC2535.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\nimport 'imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol';\n\nabstract contract ERC2535 is SolidStateDiamond {}"
			},
			"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nimport { IOwnable, Ownable, OwnableInternal } from '../../access/ownable/Ownable.sol';\nimport { ISafeOwnable, SafeOwnable } from '../../access/ownable/SafeOwnable.sol';\nimport { IERC165 } from '../../interfaces/IERC165.sol';\nimport { IERC173 } from '../../interfaces/IERC173.sol';\nimport { ERC165Base, ERC165BaseStorage } from '../../introspection/ERC165/base/ERC165Base.sol';\nimport { DiamondBase } from './base/DiamondBase.sol';\nimport { DiamondFallback, IDiamondFallback } from './fallback/DiamondFallback.sol';\nimport { DiamondReadable, IDiamondReadable } from './readable/DiamondReadable.sol';\nimport { DiamondWritable, IDiamondWritable } from './writable/DiamondWritable.sol';\nimport { ISolidStateDiamond } from './ISolidStateDiamond.sol';\n\n/**\n * @title SolidState \"Diamond\" proxy reference implementation\n */\nabstract contract SolidStateDiamond is\n    ISolidStateDiamond,\n    DiamondBase,\n    DiamondFallback,\n    DiamondReadable,\n    DiamondWritable,\n    SafeOwnable,\n    ERC165Base\n{\n    constructor() {\n        bytes4[] memory selectors = new bytes4[](12);\n        uint256 selectorIndex;\n\n        // register DiamondFallback\n\n        selectors[selectorIndex++] = IDiamondFallback\n            .getFallbackAddress\n            .selector;\n        selectors[selectorIndex++] = IDiamondFallback\n            .setFallbackAddress\n            .selector;\n\n        _setSupportsInterface(type(IDiamondFallback).interfaceId, true);\n\n        // register DiamondWritable\n\n        selectors[selectorIndex++] = IDiamondWritable.diamondCut.selector;\n\n        _setSupportsInterface(type(IDiamondWritable).interfaceId, true);\n\n        // register DiamondReadable\n\n        selectors[selectorIndex++] = IDiamondReadable.facets.selector;\n        selectors[selectorIndex++] = IDiamondReadable\n            .facetFunctionSelectors\n            .selector;\n        selectors[selectorIndex++] = IDiamondReadable.facetAddresses.selector;\n        selectors[selectorIndex++] = IDiamondReadable.facetAddress.selector;\n\n        _setSupportsInterface(type(IDiamondReadable).interfaceId, true);\n\n        // register ERC165\n\n        selectors[selectorIndex++] = IERC165.supportsInterface.selector;\n\n        _setSupportsInterface(type(IERC165).interfaceId, true);\n\n        // register SafeOwnable\n\n        selectors[selectorIndex++] = Ownable.owner.selector;\n        selectors[selectorIndex++] = SafeOwnable.nomineeOwner.selector;\n        selectors[selectorIndex++] = Ownable.transferOwnership.selector;\n        selectors[selectorIndex++] = SafeOwnable.acceptOwnership.selector;\n\n        _setSupportsInterface(type(IERC173).interfaceId, true);\n\n        // diamond cut\n\n        FacetCut[] memory facetCuts = new FacetCut[](1);\n\n        facetCuts[0] = FacetCut({\n            target: address(this),\n            action: FacetCutAction.ADD,\n            selectors: selectors\n        });\n\n        _diamondCut(facetCuts, address(0), '');\n\n        // set owner\n\n        _setOwner(msg.sender);\n    }\n\n    receive() external payable {}\n\n    function _transferOwnership(\n        address account\n    ) internal virtual override(OwnableInternal, SafeOwnable) {\n        super._transferOwnership(account);\n    }\n\n    /**\n     * @inheritdoc DiamondFallback\n     */\n    function _getImplementation()\n        internal\n        view\n        override(DiamondBase, DiamondFallback)\n        returns (address implementation)\n    {\n        implementation = super._getImplementation();\n    }\n}\n"
			},
			"imports/solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nimport { ISafeOwnable } from '../../access/ownable/ISafeOwnable.sol';\nimport { IERC165 } from '../../interfaces/IERC165.sol';\nimport { IDiamondBase } from './base/IDiamondBase.sol';\nimport { IDiamondFallback } from './fallback/IDiamondFallback.sol';\nimport { IDiamondReadable } from './readable/IDiamondReadable.sol';\nimport { IDiamondWritable } from './writable/IDiamondWritable.sol';\n\ninterface ISolidStateDiamond is\n    IDiamondBase,\n    IDiamondFallback,\n    IDiamondReadable,\n    IDiamondWritable,\n    ISafeOwnable,\n    IERC165\n{\n    receive() external payable;\n}\n"
			},
			"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nimport { OwnableInternal } from '../../../access/ownable/OwnableInternal.sol';\nimport { IDiamondWritable } from './IDiamondWritable.sol';\nimport { DiamondWritableInternal } from './DiamondWritableInternal.sol';\n\n/**\n * @title EIP-2535 \"Diamond\" proxy update contract\n */\nabstract contract DiamondWritable is\n    IDiamondWritable,\n    DiamondWritableInternal,\n    OwnableInternal\n{\n    /**\n     * @inheritdoc IDiamondWritable\n     */\n    function diamondCut(\n        FacetCut[] calldata facetCuts,\n        address target,\n        bytes calldata data\n    ) external onlyOwner {\n        _diamondCut(facetCuts, target, data);\n    }\n}\n"
			},
			"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nimport { DiamondBaseStorage } from '../base/DiamondBaseStorage.sol';\nimport { IDiamondReadable } from './IDiamondReadable.sol';\n\n/**\n * @title EIP-2535 \"Diamond\" proxy introspection contract\n * @dev derived from https://github.com/mudgen/diamond-2 (MIT license)\n */\nabstract contract DiamondReadable is IDiamondReadable {\n    /**\n     * @inheritdoc IDiamondReadable\n     */\n    function facets() external view returns (Facet[] memory diamondFacets) {\n        DiamondBaseStorage.Layout storage l = DiamondBaseStorage.layout();\n\n        diamondFacets = new Facet[](l.selectorCount);\n\n        uint8[] memory numFacetSelectors = new uint8[](l.selectorCount);\n        uint256 numFacets;\n        uint256 selectorIndex;\n\n        // loop through function selectors\n        for (uint256 slotIndex; selectorIndex < l.selectorCount; slotIndex++) {\n            bytes32 slot = l.selectorSlots[slotIndex];\n\n            for (\n                uint256 selectorSlotIndex;\n                selectorSlotIndex < 8;\n                selectorSlotIndex++\n            ) {\n                selectorIndex++;\n\n                if (selectorIndex > l.selectorCount) {\n                    break;\n                }\n\n                bytes4 selector = bytes4(slot << (selectorSlotIndex << 5));\n                address facet = address(bytes20(l.facets[selector]));\n\n                bool continueLoop;\n\n                for (uint256 facetIndex; facetIndex < numFacets; facetIndex++) {\n                    if (diamondFacets[facetIndex].target == facet) {\n                        diamondFacets[facetIndex].selectors[\n                            numFacetSelectors[facetIndex]\n                        ] = selector;\n                        // probably will never have more than 256 functions from one facet contract\n                        require(numFacetSelectors[facetIndex] < 255);\n                        numFacetSelectors[facetIndex]++;\n                        continueLoop = true;\n                        break;\n                    }\n                }\n\n                if (continueLoop) {\n                    continue;\n                }\n\n                diamondFacets[numFacets].target = facet;\n                diamondFacets[numFacets].selectors = new bytes4[](\n                    l.selectorCount\n                );\n                diamondFacets[numFacets].selectors[0] = selector;\n                numFacetSelectors[numFacets] = 1;\n                numFacets++;\n            }\n        }\n\n        for (uint256 facetIndex; facetIndex < numFacets; facetIndex++) {\n            uint256 numSelectors = numFacetSelectors[facetIndex];\n            bytes4[] memory selectors = diamondFacets[facetIndex].selectors;\n\n            // setting the number of selectors\n            assembly {\n                mstore(selectors, numSelectors)\n            }\n        }\n\n        // setting the number of facets\n        assembly {\n            mstore(diamondFacets, numFacets)\n        }\n    }\n\n    /**\n     * @inheritdoc IDiamondReadable\n     */\n    function facetFunctionSelectors(\n        address facet\n    ) external view returns (bytes4[] memory selectors) {\n        DiamondBaseStorage.Layout storage l = DiamondBaseStorage.layout();\n\n        selectors = new bytes4[](l.selectorCount);\n\n        uint256 numSelectors;\n        uint256 selectorIndex;\n\n        // loop through function selectors\n        for (uint256 slotIndex; selectorIndex < l.selectorCount; slotIndex++) {\n            bytes32 slot = l.selectorSlots[slotIndex];\n\n            for (\n                uint256 selectorSlotIndex;\n                selectorSlotIndex < 8;\n                selectorSlotIndex++\n            ) {\n                selectorIndex++;\n\n                if (selectorIndex > l.selectorCount) {\n                    break;\n                }\n\n                bytes4 selector = bytes4(slot << (selectorSlotIndex << 5));\n\n                if (facet == address(bytes20(l.facets[selector]))) {\n                    selectors[numSelectors] = selector;\n                    numSelectors++;\n                }\n            }\n        }\n\n        // set the number of selectors in the array\n        assembly {\n            mstore(selectors, numSelectors)\n        }\n    }\n\n    /**\n     * @inheritdoc IDiamondReadable\n     */\n    function facetAddresses()\n        external\n        view\n        returns (address[] memory addresses)\n    {\n        DiamondBaseStorage.Layout storage l = DiamondBaseStorage.layout();\n\n        addresses = new address[](l.selectorCount);\n        uint256 numFacets;\n        uint256 selectorIndex;\n\n        for (uint256 slotIndex; selectorIndex < l.selectorCount; slotIndex++) {\n            bytes32 slot = l.selectorSlots[slotIndex];\n\n            for (\n                uint256 selectorSlotIndex;\n                selectorSlotIndex < 8;\n                selectorSlotIndex++\n            ) {\n                selectorIndex++;\n\n                if (selectorIndex > l.selectorCount) {\n                    break;\n                }\n\n                bytes4 selector = bytes4(slot << (selectorSlotIndex << 5));\n                address facet = address(bytes20(l.facets[selector]));\n\n                bool continueLoop;\n\n                for (uint256 facetIndex; facetIndex < numFacets; facetIndex++) {\n                    if (facet == addresses[facetIndex]) {\n                        continueLoop = true;\n                        break;\n                    }\n                }\n\n                if (continueLoop) {\n                    continue;\n                }\n\n                addresses[numFacets] = facet;\n                numFacets++;\n            }\n        }\n\n        // set the number of facet addresses in the array\n        assembly {\n            mstore(addresses, numFacets)\n        }\n    }\n\n    /**\n     * @inheritdoc IDiamondReadable\n     */\n    function facetAddress(\n        bytes4 selector\n    ) external view returns (address facet) {\n        facet = address(bytes20(DiamondBaseStorage.layout().facets[selector]));\n    }\n}\n"
			},
			"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nimport { OwnableInternal } from '../../../access/ownable/OwnableInternal.sol';\nimport { DiamondBase } from '../base/DiamondBase.sol';\nimport { DiamondBaseStorage } from '../base/DiamondBaseStorage.sol';\nimport { IDiamondFallback } from './IDiamondFallback.sol';\n\n/**\n * @title Fallback feature for EIP-2535 \"Diamond\" proxy\n */\nabstract contract DiamondFallback is\n    IDiamondFallback,\n    OwnableInternal,\n    DiamondBase\n{\n    /**\n     * @inheritdoc IDiamondFallback\n     */\n    function getFallbackAddress()\n        external\n        view\n        returns (address fallbackAddress)\n    {\n        fallbackAddress = _getFallbackAddress();\n    }\n\n    /**\n     * @inheritdoc IDiamondFallback\n     */\n    function setFallbackAddress(address fallbackAddress) external onlyOwner {\n        _setFallbackAddress(fallbackAddress);\n    }\n\n    /**\n     * @inheritdoc DiamondBase\n     * @notice query custom fallback address is no implementation is found\n     */\n    function _getImplementation()\n        internal\n        view\n        virtual\n        override\n        returns (address implementation)\n    {\n        implementation = super._getImplementation();\n\n        if (implementation == address(0)) {\n            implementation = _getFallbackAddress();\n        }\n    }\n\n    /**\n     * @notice query the address of the fallback implementation\n     * @return fallbackAddress address of fallback implementation\n     */\n    function _getFallbackAddress()\n        internal\n        view\n        virtual\n        returns (address fallbackAddress)\n    {\n        fallbackAddress = DiamondBaseStorage.layout().fallbackAddress;\n    }\n\n    /**\n     * @notice set the address of the fallback implementation\n     * @param fallbackAddress address of fallback implementation\n     */\n    function _setFallbackAddress(address fallbackAddress) internal virtual {\n        DiamondBaseStorage.layout().fallbackAddress = fallbackAddress;\n    }\n}\n"
			},
			"imports/solidstate/contracts/proxy/diamond/base/DiamondBase.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nimport { Proxy } from '../../Proxy.sol';\nimport { IDiamondBase } from './IDiamondBase.sol';\nimport { DiamondBaseStorage } from './DiamondBaseStorage.sol';\n\n/**\n * @title EIP-2535 \"Diamond\" proxy base contract\n * @dev see https://eips.ethereum.org/EIPS/eip-2535\n */\nabstract contract DiamondBase is IDiamondBase, Proxy {\n    /**\n     * @inheritdoc Proxy\n     */\n    function _getImplementation()\n        internal\n        view\n        virtual\n        override\n        returns (address implementation)\n    {\n        // inline storage layout retrieval uses less gas\n        DiamondBaseStorage.Layout storage l;\n        bytes32 slot = DiamondBaseStorage.STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n\n        implementation = address(bytes20(l.facets[msg.sig]));\n    }\n}\n"
			},
			"imports/solidstate/contracts/introspection/ERC165/base/ERC165Base.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nimport { IERC165 } from '../../../interfaces/IERC165.sol';\nimport { IERC165Base } from './IERC165Base.sol';\nimport { ERC165BaseInternal } from './ERC165BaseInternal.sol';\nimport { ERC165BaseStorage } from './ERC165BaseStorage.sol';\n\n/**\n * @title ERC165 implementation\n */\nabstract contract ERC165Base is IERC165Base, ERC165BaseInternal {\n    /**\n     * @inheritdoc IERC165\n     */\n    function supportsInterface(bytes4 interfaceId) public view returns (bool) {\n        return _supportsInterface(interfaceId);\n    }\n}\n"
			},
			"imports/solidstate/contracts/interfaces/IERC173.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nimport { IERC173Internal } from './IERC173Internal.sol';\n\n/**\n * @title Contract ownership standard interface\n * @dev see https://eips.ethereum.org/EIPS/eip-173\n */\ninterface IERC173 is IERC173Internal {\n    /**\n     * @notice get the ERC173 contract owner\n     * @return contract owner\n     */\n    function owner() external view returns (address);\n\n    /**\n     * @notice transfer contract ownership to new account\n     * @param account address of new owner\n     */\n    function transferOwnership(address account) external;\n}\n"
			},
			"imports/solidstate/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nimport { IERC165Internal } from './IERC165Internal.sol';\n\n/**\n * @title ERC165 interface registration interface\n * @dev see https://eips.ethereum.org/EIPS/eip-165\n */\ninterface IERC165 is IERC165Internal {\n    /**\n     * @notice query whether contract has registered support for given interface\n     * @param interfaceId interface id\n     * @return bool whether interface is supported\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"imports/solidstate/contracts/access/ownable/SafeOwnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nimport { Ownable } from './Ownable.sol';\nimport { ISafeOwnable } from './ISafeOwnable.sol';\nimport { OwnableInternal } from './OwnableInternal.sol';\nimport { SafeOwnableInternal } from './SafeOwnableInternal.sol';\n\n/**\n * @title Ownership access control based on ERC173 with ownership transfer safety check\n */\nabstract contract SafeOwnable is ISafeOwnable, Ownable, SafeOwnableInternal {\n    /**\n     * @inheritdoc ISafeOwnable\n     */\n    function nomineeOwner() public view virtual returns (address) {\n        return _nomineeOwner();\n    }\n\n    /**\n     * @inheritdoc ISafeOwnable\n     */\n    function acceptOwnership() public virtual onlyNomineeOwner {\n        _acceptOwnership();\n    }\n\n    function _transferOwnership(\n        address account\n    ) internal virtual override(OwnableInternal, SafeOwnableInternal) {\n        super._transferOwnership(account);\n    }\n}\n"
			},
			"imports/solidstate/contracts/access/ownable/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nimport { IERC173 } from '../../interfaces/IERC173.sol';\nimport { IOwnable } from './IOwnable.sol';\nimport { OwnableInternal } from './OwnableInternal.sol';\n\n/**\n * @title Ownership access control based on ERC173\n */\nabstract contract Ownable is IOwnable, OwnableInternal {\n    /**\n     * @inheritdoc IERC173\n     */\n    function owner() public view virtual returns (address) {\n        return _owner();\n    }\n\n    /**\n     * @inheritdoc IERC173\n     */\n    function transferOwnership(address account) public virtual onlyOwner {\n        _transferOwnership(account);\n    }\n}\n"
			},
			"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport { AddressUtils } from '../../../utils/AddressUtils.sol';\nimport { DiamondBaseStorage } from '../base/DiamondBaseStorage.sol';\nimport { IDiamondWritableInternal } from './IDiamondWritableInternal.sol';\n\nabstract contract DiamondWritableInternal is IDiamondWritableInternal {\n    using AddressUtils for address;\n\n    bytes32 private constant CLEAR_ADDRESS_MASK =\n        bytes32(uint256(0xffffffffffffffffffffffff));\n    bytes32 private constant CLEAR_SELECTOR_MASK =\n        bytes32(uint256(0xffffffff << 224));\n\n    /**\n     * @notice update functions callable on Diamond proxy\n     * @param facetCuts array of structured Diamond facet update data\n     * @param target optional recipient of initialization delegatecall\n     * @param data optional initialization call data\n     */\n    function _diamondCut(\n        FacetCut[] memory facetCuts,\n        address target,\n        bytes memory data\n    ) internal virtual {\n        DiamondBaseStorage.Layout storage l = DiamondBaseStorage.layout();\n\n        unchecked {\n            uint256 originalSelectorCount = l.selectorCount;\n            uint256 selectorCount = originalSelectorCount;\n            bytes32 selectorSlot;\n\n            // Check if last selector slot is not full\n            if (selectorCount & 7 > 0) {\n                // get last selectorSlot\n                selectorSlot = l.selectorSlots[selectorCount >> 3];\n            }\n\n            for (uint256 i; i < facetCuts.length; i++) {\n                FacetCut memory facetCut = facetCuts[i];\n                FacetCutAction action = facetCut.action;\n\n                if (facetCut.selectors.length == 0)\n                    revert DiamondWritable__SelectorNotSpecified();\n\n                if (action == FacetCutAction.ADD) {\n                    (selectorCount, selectorSlot) = _addFacetSelectors(\n                        l,\n                        selectorCount,\n                        selectorSlot,\n                        facetCut\n                    );\n                } else if (action == FacetCutAction.REPLACE) {\n                    _replaceFacetSelectors(l, facetCut);\n                } else if (action == FacetCutAction.REMOVE) {\n                    (selectorCount, selectorSlot) = _removeFacetSelectors(\n                        l,\n                        selectorCount,\n                        selectorSlot,\n                        facetCut\n                    );\n                }\n            }\n\n            if (selectorCount != originalSelectorCount) {\n                l.selectorCount = uint16(selectorCount);\n            }\n\n            // If last selector slot is not full\n            if (selectorCount & 7 > 0) {\n                l.selectorSlots[selectorCount >> 3] = selectorSlot;\n            }\n\n            emit DiamondCut(facetCuts, target, data);\n            _initialize(target, data);\n        }\n    }\n\n    function _addFacetSelectors(\n        DiamondBaseStorage.Layout storage l,\n        uint256 selectorCount,\n        bytes32 selectorSlot,\n        FacetCut memory facetCut\n    ) internal returns (uint256, bytes32) {\n        unchecked {\n            if (\n                facetCut.target != address(this) &&\n                !facetCut.target.isContract()\n            ) revert DiamondWritable__TargetHasNoCode();\n\n            for (uint256 i; i < facetCut.selectors.length; i++) {\n                bytes4 selector = facetCut.selectors[i];\n                bytes32 oldFacet = l.facets[selector];\n\n                if (address(bytes20(oldFacet)) != address(0))\n                    revert DiamondWritable__SelectorAlreadyAdded();\n\n                // add facet for selector\n                l.facets[selector] =\n                    bytes20(facetCut.target) |\n                    bytes32(selectorCount);\n                uint256 selectorInSlotPosition = (selectorCount & 7) << 5;\n\n                // clear selector position in slot and add selector\n                selectorSlot =\n                    (selectorSlot &\n                        ~(CLEAR_SELECTOR_MASK >> selectorInSlotPosition)) |\n                    (bytes32(selector) >> selectorInSlotPosition);\n\n                // if slot is full then write it to storage\n                if (selectorInSlotPosition == 224) {\n                    l.selectorSlots[selectorCount >> 3] = selectorSlot;\n                    selectorSlot = 0;\n                }\n\n                selectorCount++;\n            }\n\n            return (selectorCount, selectorSlot);\n        }\n    }\n\n    function _removeFacetSelectors(\n        DiamondBaseStorage.Layout storage l,\n        uint256 selectorCount,\n        bytes32 selectorSlot,\n        FacetCut memory facetCut\n    ) internal returns (uint256, bytes32) {\n        unchecked {\n            if (facetCut.target != address(0))\n                revert DiamondWritable__RemoveTargetNotZeroAddress();\n\n            uint256 selectorSlotCount = selectorCount >> 3;\n            uint256 selectorInSlotIndex = selectorCount & 7;\n\n            for (uint256 i; i < facetCut.selectors.length; i++) {\n                bytes4 selector = facetCut.selectors[i];\n                bytes32 oldFacet = l.facets[selector];\n\n                if (address(bytes20(oldFacet)) == address(0))\n                    revert DiamondWritable__SelectorNotFound();\n\n                if (address(bytes20(oldFacet)) == address(this))\n                    revert DiamondWritable__SelectorIsImmutable();\n\n                if (selectorSlot == 0) {\n                    selectorSlotCount--;\n                    selectorSlot = l.selectorSlots[selectorSlotCount];\n                    selectorInSlotIndex = 7;\n                } else {\n                    selectorInSlotIndex--;\n                }\n\n                bytes4 lastSelector;\n                uint256 oldSelectorsSlotCount;\n                uint256 oldSelectorInSlotPosition;\n\n                // adding a block here prevents stack too deep error\n                {\n                    // replace selector with last selector in l.facets\n                    lastSelector = bytes4(\n                        selectorSlot << (selectorInSlotIndex << 5)\n                    );\n\n                    if (lastSelector != selector) {\n                        // update last selector slot position info\n                        l.facets[lastSelector] =\n                            (oldFacet & CLEAR_ADDRESS_MASK) |\n                            bytes20(l.facets[lastSelector]);\n                    }\n\n                    delete l.facets[selector];\n                    uint256 oldSelectorCount = uint16(uint256(oldFacet));\n                    oldSelectorsSlotCount = oldSelectorCount >> 3;\n                    oldSelectorInSlotPosition = (oldSelectorCount & 7) << 5;\n                }\n\n                if (oldSelectorsSlotCount != selectorSlotCount) {\n                    bytes32 oldSelectorSlot = l.selectorSlots[\n                        oldSelectorsSlotCount\n                    ];\n\n                    // clears the selector we are deleting and puts the last selector in its place.\n                    oldSelectorSlot =\n                        (oldSelectorSlot &\n                            ~(CLEAR_SELECTOR_MASK >>\n                                oldSelectorInSlotPosition)) |\n                        (bytes32(lastSelector) >> oldSelectorInSlotPosition);\n\n                    // update storage with the modified slot\n                    l.selectorSlots[oldSelectorsSlotCount] = oldSelectorSlot;\n                } else {\n                    // clears the selector we are deleting and puts the last selector in its place.\n                    selectorSlot =\n                        (selectorSlot &\n                            ~(CLEAR_SELECTOR_MASK >>\n                                oldSelectorInSlotPosition)) |\n                        (bytes32(lastSelector) >> oldSelectorInSlotPosition);\n                }\n\n                if (selectorInSlotIndex == 0) {\n                    delete l.selectorSlots[selectorSlotCount];\n                    selectorSlot = 0;\n                }\n            }\n\n            selectorCount = (selectorSlotCount << 3) | selectorInSlotIndex;\n\n            return (selectorCount, selectorSlot);\n        }\n    }\n\n    function _replaceFacetSelectors(\n        DiamondBaseStorage.Layout storage l,\n        FacetCut memory facetCut\n    ) internal {\n        unchecked {\n            if (!facetCut.target.isContract())\n                revert DiamondWritable__TargetHasNoCode();\n\n            for (uint256 i; i < facetCut.selectors.length; i++) {\n                bytes4 selector = facetCut.selectors[i];\n                bytes32 oldFacet = l.facets[selector];\n                address oldFacetAddress = address(bytes20(oldFacet));\n\n                if (oldFacetAddress == address(0))\n                    revert DiamondWritable__SelectorNotFound();\n                if (oldFacetAddress == address(this))\n                    revert DiamondWritable__SelectorIsImmutable();\n                if (oldFacetAddress == facetCut.target)\n                    revert DiamondWritable__ReplaceTargetIsIdentical();\n\n                // replace old facet address\n                l.facets[selector] =\n                    (oldFacet & CLEAR_ADDRESS_MASK) |\n                    bytes20(facetCut.target);\n            }\n        }\n    }\n\n    function _initialize(address target, bytes memory data) private {\n        if ((target == address(0)) != (data.length == 0))\n            revert DiamondWritable__InvalidInitializationParameters();\n\n        if (target != address(0)) {\n            if (target != address(this)) {\n                if (!target.isContract())\n                    revert DiamondWritable__TargetHasNoCode();\n            }\n\n            (bool success, ) = target.delegatecall(data);\n\n            if (!success) {\n                assembly {\n                    returndatacopy(0, 0, returndatasize())\n                    revert(0, returndatasize())\n                }\n            }\n        }\n    }\n}\n"
			},
			"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nimport { IDiamondWritableInternal } from './IDiamondWritableInternal.sol';\n\n/**\n * @title Diamond proxy upgrade interface\n * @dev see https://eips.ethereum.org/EIPS/eip-2535\n */\ninterface IDiamondWritable is IDiamondWritableInternal {\n    /**\n     * @notice update diamond facets and optionally execute arbitrary initialization function\n     * @param facetCuts array of structured Diamond facet update data\n     * @param target optional target of initialization delegatecall\n     * @param data optional initialization function call data\n     */\n    function diamondCut(\n        FacetCut[] calldata facetCuts,\n        address target,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"imports/solidstate/contracts/access/ownable/OwnableInternal.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nimport { IERC173 } from '../../interfaces/IERC173.sol';\nimport { AddressUtils } from '../../utils/AddressUtils.sol';\nimport { IOwnableInternal } from './IOwnableInternal.sol';\nimport { OwnableStorage } from './OwnableStorage.sol';\n\nabstract contract OwnableInternal is IOwnableInternal {\n    using AddressUtils for address;\n\n    modifier onlyOwner() {\n        if (msg.sender != _owner()) revert Ownable__NotOwner();\n        _;\n    }\n\n    modifier onlyTransitiveOwner() {\n        if (msg.sender != _transitiveOwner())\n            revert Ownable__NotTransitiveOwner();\n        _;\n    }\n\n    function _owner() internal view virtual returns (address) {\n        return OwnableStorage.layout().owner;\n    }\n\n    function _transitiveOwner() internal view virtual returns (address owner) {\n        owner = _owner();\n\n        while (owner.isContract()) {\n            try IERC173(owner).owner() returns (address transitiveOwner) {\n                owner = transitiveOwner;\n            } catch {\n                break;\n            }\n        }\n    }\n\n    function _transferOwnership(address account) internal virtual {\n        _setOwner(account);\n    }\n\n    function _setOwner(address account) internal virtual {\n        OwnableStorage.Layout storage l = OwnableStorage.layout();\n        emit OwnershipTransferred(l.owner, account);\n        l.owner = account;\n    }\n}\n"
			},
			"imports/solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\n/**\n * @title Diamond proxy introspection interface\n * @dev see https://eips.ethereum.org/EIPS/eip-2535\n */\ninterface IDiamondReadable {\n    struct Facet {\n        address target;\n        bytes4[] selectors;\n    }\n\n    /**\n     * @notice get all facets and their selectors\n     * @return diamondFacets array of structured facet data\n     */\n    function facets() external view returns (Facet[] memory diamondFacets);\n\n    /**\n     * @notice get all selectors for given facet address\n     * @param facet address of facet to query\n     * @return selectors array of function selectors\n     */\n    function facetFunctionSelectors(\n        address facet\n    ) external view returns (bytes4[] memory selectors);\n\n    /**\n     * @notice get addresses of all facets used by diamond\n     * @return addresses array of facet addresses\n     */\n    function facetAddresses()\n        external\n        view\n        returns (address[] memory addresses);\n\n    /**\n     * @notice get the address of the facet associated with given selector\n     * @param selector function selector to query\n     * @return facet facet address (zero address if not found)\n     */\n    function facetAddress(\n        bytes4 selector\n    ) external view returns (address facet);\n}\n"
			},
			"imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\n/**\n * @dev derived from https://github.com/mudgen/diamond-2 (MIT license)\n */\nlibrary DiamondBaseStorage {\n    struct Layout {\n        // function selector => (facet address, selector slot position)\n        mapping(bytes4 => bytes32) facets;\n        // total number of selectors registered\n        uint16 selectorCount;\n        // array of selector slots with 8 selectors per slot\n        mapping(uint256 => bytes32) selectorSlots;\n        address fallbackAddress;\n    }\n\n    bytes32 internal constant STORAGE_SLOT =\n        keccak256('solidstate.contracts.storage.DiamondBase');\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"
			},
			"imports/solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nimport { IDiamondBase } from '../base/IDiamondBase.sol';\n\ninterface IDiamondFallback is IDiamondBase {\n    /**\n     * @notice query the address of the fallback implementation\n     * @return fallbackAddress address of fallback implementation\n     */\n    function getFallbackAddress()\n        external\n        view\n        returns (address fallbackAddress);\n\n    /**\n     * @notice set the address of the fallback implementation\n     * @param fallbackAddress address of fallback implementation\n     */\n    function setFallbackAddress(address fallbackAddress) external;\n}\n"
			},
			"imports/solidstate/contracts/proxy/diamond/base/IDiamondBase.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nimport { IProxy } from '../../IProxy.sol';\n\ninterface IDiamondBase is IProxy {}\n"
			},
			"imports/solidstate/contracts/proxy/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nimport { AddressUtils } from '../utils/AddressUtils.sol';\nimport { IProxy } from './IProxy.sol';\n\n/**\n * @title Base proxy contract\n */\nabstract contract Proxy is IProxy {\n    using AddressUtils for address;\n\n    /**\n     * @notice delegate all calls to implementation contract\n     * @dev reverts if implementation address contains no code, for compatibility with metamorphic contracts\n     * @dev memory location in use by assembly may be unsafe in other contexts\n     */\n    fallback() external payable virtual {\n        address implementation = _getImplementation();\n\n        if (!implementation.isContract())\n            revert Proxy__ImplementationIsNotContract();\n\n        assembly {\n            calldatacopy(0, 0, calldatasize())\n            let result := delegatecall(\n                gas(),\n                implementation,\n                0,\n                calldatasize(),\n                0,\n                0\n            )\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @notice get logic implementation address\n     * @return implementation address\n     */\n    function _getImplementation() internal virtual returns (address);\n}\n"
			},
			"imports/solidstate/contracts/access/ownable/ISafeOwnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nimport { IOwnable } from './IOwnable.sol';\nimport { ISafeOwnableInternal } from './ISafeOwnableInternal.sol';\n\ninterface ISafeOwnable is ISafeOwnableInternal, IOwnable {\n    /**\n     * @notice get the nominated owner who has permission to call acceptOwnership\n     */\n    function nomineeOwner() external view returns (address);\n\n    /**\n     * @notice accept transfer of contract ownership\n     */\n    function acceptOwnership() external;\n}\n"
			},
			"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nlibrary ERC165BaseStorage {\n    struct Layout {\n        mapping(bytes4 => bool) supportedInterfaces;\n    }\n\n    bytes32 internal constant STORAGE_SLOT =\n        keccak256('solidstate.contracts.storage.ERC165Base');\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"
			},
			"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nimport { IERC165BaseInternal } from './IERC165BaseInternal.sol';\nimport { ERC165BaseStorage } from './ERC165BaseStorage.sol';\n\n/**\n * @title ERC165 implementation\n */\nabstract contract ERC165BaseInternal is IERC165BaseInternal {\n    /**\n     * @notice indicates whether an interface is already supported based on the interfaceId\n     * @param interfaceId id of interface to check\n     * @return bool indicating whether interface is supported\n     */\n    function _supportsInterface(\n        bytes4 interfaceId\n    ) internal view virtual returns (bool) {\n        return ERC165BaseStorage.layout().supportedInterfaces[interfaceId];\n    }\n\n    /**\n     * @notice sets status of interface support\n     * @param interfaceId id of interface to set status for\n     * @param status boolean indicating whether interface will be set as supported\n     */\n    function _setSupportsInterface(\n        bytes4 interfaceId,\n        bool status\n    ) internal virtual {\n        if (interfaceId == 0xffffffff) revert ERC165Base__InvalidInterfaceId();\n        ERC165BaseStorage.layout().supportedInterfaces[interfaceId] = status;\n    }\n}\n"
			},
			"imports/solidstate/contracts/introspection/ERC165/base/IERC165Base.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport { IERC165 } from '../../../interfaces/IERC165.sol';\nimport { IERC165BaseInternal } from './IERC165BaseInternal.sol';\n\ninterface IERC165Base is IERC165, IERC165BaseInternal {}\n"
			},
			"imports/solidstate/contracts/interfaces/IERC173Internal.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\n/**\n * @title Partial ERC173 interface needed by internal functions\n */\ninterface IERC173Internal {\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n}\n"
			},
			"imports/solidstate/contracts/interfaces/IERC165Internal.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\n/**\n * @title ERC165 interface registration interface\n */\ninterface IERC165Internal {\n\n}\n"
			},
			"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nimport { ISafeOwnableInternal } from './ISafeOwnableInternal.sol';\nimport { OwnableInternal } from './OwnableInternal.sol';\nimport { SafeOwnableStorage } from './SafeOwnableStorage.sol';\n\nabstract contract SafeOwnableInternal is ISafeOwnableInternal, OwnableInternal {\n    modifier onlyNomineeOwner() {\n        if (msg.sender != _nomineeOwner())\n            revert SafeOwnable__NotNomineeOwner();\n        _;\n    }\n\n    /**\n     * @notice get the nominated owner who has permission to call acceptOwnership\n     */\n    function _nomineeOwner() internal view virtual returns (address) {\n        return SafeOwnableStorage.layout().nomineeOwner;\n    }\n\n    /**\n     * @notice accept transfer of contract ownership\n     */\n    function _acceptOwnership() internal virtual {\n        _setOwner(msg.sender);\n        delete SafeOwnableStorage.layout().nomineeOwner;\n    }\n\n    /**\n     * @notice grant permission to given address to claim contract ownership\n     */\n    function _transferOwnership(address account) internal virtual override {\n        _setNomineeOwner(account);\n    }\n\n    /**\n     * @notice set nominee owner\n     */\n    function _setNomineeOwner(address account) internal virtual {\n        SafeOwnableStorage.layout().nomineeOwner = account;\n    }\n}\n"
			},
			"imports/solidstate/contracts/access/ownable/IOwnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nimport { IERC173 } from '../../interfaces/IERC173.sol';\nimport { IOwnableInternal } from './IOwnableInternal.sol';\n\ninterface IOwnable is IOwnableInternal, IERC173 {}\n"
			},
			"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\ninterface IDiamondWritableInternal {\n    enum FacetCutAction {\n        ADD,\n        REPLACE,\n        REMOVE\n    }\n\n    event DiamondCut(FacetCut[] facetCuts, address target, bytes data);\n\n    error DiamondWritable__InvalidInitializationParameters();\n    error DiamondWritable__RemoveTargetNotZeroAddress();\n    error DiamondWritable__ReplaceTargetIsIdentical();\n    error DiamondWritable__SelectorAlreadyAdded();\n    error DiamondWritable__SelectorIsImmutable();\n    error DiamondWritable__SelectorNotFound();\n    error DiamondWritable__SelectorNotSpecified();\n    error DiamondWritable__TargetHasNoCode();\n\n    struct FacetCut {\n        address target;\n        FacetCutAction action;\n        bytes4[] selectors;\n    }\n}\n"
			},
			"imports/solidstate/contracts/utils/AddressUtils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nimport { UintUtils } from './UintUtils.sol';\n\nlibrary AddressUtils {\n    using UintUtils for uint256;\n\n    error AddressUtils__InsufficientBalance();\n    error AddressUtils__NotContract();\n    error AddressUtils__SendValueFailed();\n\n    function toString(address account) internal pure returns (string memory) {\n        return uint256(uint160(account)).toHexString(20);\n    }\n\n    function isContract(address account) internal view returns (bool) {\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    function sendValue(address payable account, uint256 amount) internal {\n        (bool success, ) = account.call{ value: amount }('');\n        if (!success) revert AddressUtils__SendValueFailed();\n    }\n\n    function functionCall(\n        address target,\n        bytes memory data\n    ) internal returns (bytes memory) {\n        return\n            functionCall(target, data, 'AddressUtils: failed low-level call');\n    }\n\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory error\n    ) internal returns (bytes memory) {\n        return _functionCallWithValue(target, data, 0, error);\n    }\n\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return\n            functionCallWithValue(\n                target,\n                data,\n                value,\n                'AddressUtils: failed low-level call with value'\n            );\n    }\n\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory error\n    ) internal returns (bytes memory) {\n        if (value > address(this).balance)\n            revert AddressUtils__InsufficientBalance();\n        return _functionCallWithValue(target, data, value, error);\n    }\n\n    /**\n     * @notice execute arbitrary external call with limited gas usage and amount of copied return data\n     * @dev derived from https://github.com/nomad-xyz/ExcessivelySafeCall (MIT License)\n     * @param target recipient of call\n     * @param gasAmount gas allowance for call\n     * @param value native token value to include in call\n     * @param maxCopy maximum number of bytes to copy from return data\n     * @param data encoded call data\n     * @return success whether call is successful\n     * @return returnData copied return data\n     */\n    function excessivelySafeCall(\n        address target,\n        uint256 gasAmount,\n        uint256 value,\n        uint16 maxCopy,\n        bytes memory data\n    ) internal returns (bool success, bytes memory returnData) {\n        returnData = new bytes(maxCopy);\n\n        assembly {\n            // execute external call via assembly to avoid automatic copying of return data\n            success := call(\n                gasAmount,\n                target,\n                value,\n                add(data, 0x20),\n                mload(data),\n                0,\n                0\n            )\n\n            // determine whether to limit amount of data to copy\n            let toCopy := returndatasize()\n\n            if gt(toCopy, maxCopy) {\n                toCopy := maxCopy\n            }\n\n            // store the length of the copied bytes\n            mstore(returnData, toCopy)\n\n            // copy the bytes from returndata[0:toCopy]\n            returndatacopy(add(returnData, 0x20), 0, toCopy)\n        }\n    }\n\n    function _functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory error\n    ) private returns (bytes memory) {\n        if (!isContract(target)) revert AddressUtils__NotContract();\n\n        (bool success, bytes memory returnData) = target.call{ value: value }(\n            data\n        );\n\n        if (success) {\n            return returnData;\n        } else if (returnData.length > 0) {\n            assembly {\n                let returnData_size := mload(returnData)\n                revert(add(32, returnData), returnData_size)\n            }\n        } else {\n            revert(error);\n        }\n    }\n}\n"
			},
			"imports/solidstate/contracts/proxy/IProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\ninterface IProxy {\n    error Proxy__ImplementationIsNotContract();\n\n    fallback() external payable;\n}\n"
			},
			"imports/solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport { IERC165Internal } from '../../../interfaces/IERC165Internal.sol';\n\ninterface IERC165BaseInternal is IERC165Internal {\n    error ERC165Base__InvalidInterfaceId();\n}\n"
			},
			"imports/solidstate/contracts/access/ownable/SafeOwnableStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nlibrary SafeOwnableStorage {\n    struct Layout {\n        address nomineeOwner;\n    }\n\n    bytes32 internal constant STORAGE_SLOT =\n        keccak256('solidstate.contracts.storage.SafeOwnable');\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"
			},
			"imports/solidstate/contracts/access/ownable/ISafeOwnableInternal.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nimport { IOwnableInternal } from './IOwnableInternal.sol';\n\ninterface ISafeOwnableInternal is IOwnableInternal {\n    error SafeOwnable__NotNomineeOwner();\n}\n"
			},
			"imports/solidstate/contracts/access/ownable/OwnableStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nlibrary OwnableStorage {\n    struct Layout {\n        address owner;\n    }\n\n    bytes32 internal constant STORAGE_SLOT =\n        keccak256('solidstate.contracts.storage.Ownable');\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"
			},
			"imports/solidstate/contracts/access/ownable/IOwnableInternal.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nimport { IERC173Internal } from '../../interfaces/IERC173Internal.sol';\n\ninterface IOwnableInternal is IERC173Internal {\n    error Ownable__NotOwner();\n    error Ownable__NotTransitiveOwner();\n}\n"
			},
			"imports/solidstate/contracts/utils/UintUtils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\n/**\n * @title utility functions for uint256 operations\n * @dev derived from https://github.com/OpenZeppelin/openzeppelin-contracts/ (MIT license)\n */\nlibrary UintUtils {\n    error UintUtils__InsufficientHexLength();\n\n    bytes16 private constant HEX_SYMBOLS = '0123456789abcdef';\n\n    function add(uint256 a, int256 b) internal pure returns (uint256) {\n        return b < 0 ? sub(a, -b) : a + uint256(b);\n    }\n\n    function sub(uint256 a, int256 b) internal pure returns (uint256) {\n        return b < 0 ? add(a, -b) : a - uint256(b);\n    }\n\n    function toString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return '0';\n        }\n\n        uint256 temp = value;\n        uint256 digits;\n\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n\n        bytes memory buffer = new bytes(digits);\n\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n\n        return string(buffer);\n    }\n\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return '0x00';\n        }\n\n        uint256 length = 0;\n\n        for (uint256 temp = value; temp != 0; temp >>= 8) {\n            unchecked {\n                length++;\n            }\n        }\n\n        return toHexString(value, length);\n    }\n\n    function toHexString(\n        uint256 value,\n        uint256 length\n    ) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = '0';\n        buffer[1] = 'x';\n\n        unchecked {\n            for (uint256 i = 2 * length + 1; i > 1; --i) {\n                buffer[i] = HEX_SYMBOLS[value & 0xf];\n                value >>= 4;\n            }\n        }\n\n        if (value != 0) revert UintUtils__InsufficientHexLength();\n\n        return string(buffer);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"abstracts/ERC2535.sol": {
				"ERC2535": {
					"abi": [
						{
							"inputs": [],
							"name": "DiamondWritable__InvalidInitializationParameters",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__RemoveTargetNotZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__ReplaceTargetIsIdentical",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorAlreadyAdded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorIsImmutable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotSpecified",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__TargetHasNoCode",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC165Base__InvalidInterfaceId",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotTransitiveOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Proxy__ImplementationIsNotContract",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SafeOwnable__NotNomineeOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "enum IDiamondWritableInternal.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"indexed": false,
									"internalType": "struct IDiamondWritableInternal.FacetCut[]",
									"name": "facetCuts",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "DiamondCut",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "enum IDiamondWritableInternal.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"internalType": "struct IDiamondWritableInternal.FacetCut[]",
									"name": "facetCuts",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "diamondCut",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "selector",
									"type": "bytes4"
								}
							],
							"name": "facetAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "facet",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "facetAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "addresses",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "facet",
									"type": "address"
								}
							],
							"name": "facetFunctionSelectors",
							"outputs": [
								{
									"internalType": "bytes4[]",
									"name": "selectors",
									"type": "bytes4[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "facets",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"internalType": "struct IDiamondReadable.Facet[]",
									"name": "diamondFacets",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFallbackAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "fallbackAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nomineeOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "fallbackAddress",
									"type": "address"
								}
							],
							"name": "setFallbackAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"params": {
									"data": "optional initialization function call data",
									"facetCuts": "array of structured Diamond facet update data",
									"target": "optional target of initialization delegatecall"
								}
							},
							"facetAddress(bytes4)": {
								"params": {
									"selector": "function selector to query"
								},
								"returns": {
									"facet": "facet address (zero address if not found)"
								}
							},
							"facetAddresses()": {
								"returns": {
									"addresses": "array of facet addresses"
								}
							},
							"facetFunctionSelectors(address)": {
								"params": {
									"facet": "address of facet to query"
								},
								"returns": {
									"selectors": "array of function selectors"
								}
							},
							"facets()": {
								"returns": {
									"diamondFacets": "array of structured facet data"
								}
							},
							"getFallbackAddress()": {
								"returns": {
									"fallbackAddress": "address of fallback implementation"
								}
							},
							"owner()": {
								"returns": {
									"_0": "contract owner"
								}
							},
							"setFallbackAddress(address)": {
								"params": {
									"fallbackAddress": "address of fallback implementation"
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"interfaceId": "interface id"
								},
								"returns": {
									"_0": "bool whether interface is supported"
								}
							},
							"transferOwnership(address)": {
								"params": {
									"account": "address of new owner"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": "1f931c1c",
							"facetAddress(bytes4)": "cdffacc6",
							"facetAddresses()": "52ef6b2c",
							"facetFunctionSelectors(address)": "adfca15e",
							"facets()": "7a0ed627",
							"getFallbackAddress()": "2c408059",
							"nomineeOwner()": "8ab5150a",
							"owner()": "8da5cb5b",
							"setFallbackAddress(address)": "91423765",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DiamondWritable__InvalidInitializationParameters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__RemoveTargetNotZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__ReplaceTargetIsIdentical\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorAlreadyAdded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorIsImmutable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__TargetHasNoCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC165Base__InvalidInterfaceId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Proxy__ImplementationIsNotContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeOwnable__NotNomineeOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondWritableInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamondWritableInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondWritableInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondWritableInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"diamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"facetAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"facet\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facetAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"facet\",\"type\":\"address\"}],\"name\":\"facetFunctionSelectors\",\"outputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondReadable.Facet[]\",\"name\":\"diamondFacets\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFallbackAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"fallbackAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nomineeOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fallbackAddress\",\"type\":\"address\"}],\"name\":\"setFallbackAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"params\":{\"data\":\"optional initialization function call data\",\"facetCuts\":\"array of structured Diamond facet update data\",\"target\":\"optional target of initialization delegatecall\"}},\"facetAddress(bytes4)\":{\"params\":{\"selector\":\"function selector to query\"},\"returns\":{\"facet\":\"facet address (zero address if not found)\"}},\"facetAddresses()\":{\"returns\":{\"addresses\":\"array of facet addresses\"}},\"facetFunctionSelectors(address)\":{\"params\":{\"facet\":\"address of facet to query\"},\"returns\":{\"selectors\":\"array of function selectors\"}},\"facets()\":{\"returns\":{\"diamondFacets\":\"array of structured facet data\"}},\"getFallbackAddress()\":{\"returns\":{\"fallbackAddress\":\"address of fallback implementation\"}},\"owner()\":{\"returns\":{\"_0\":\"contract owner\"}},\"setFallbackAddress(address)\":{\"params\":{\"fallbackAddress\":\"address of fallback implementation\"}},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"interface id\"},\"returns\":{\"_0\":\"bool whether interface is supported\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"accept transfer of contract ownership\"},\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"notice\":\"update diamond facets and optionally execute arbitrary initialization function\"},\"facetAddress(bytes4)\":{\"notice\":\"get the address of the facet associated with given selector\"},\"facetAddresses()\":{\"notice\":\"get addresses of all facets used by diamond\"},\"facetFunctionSelectors(address)\":{\"notice\":\"get all selectors for given facet address\"},\"facets()\":{\"notice\":\"get all facets and their selectors\"},\"getFallbackAddress()\":{\"notice\":\"query the address of the fallback implementation\"},\"nomineeOwner()\":{\"notice\":\"get the nominated owner who has permission to call acceptOwnership\"},\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"setFallbackAddress(address)\":{\"notice\":\"set the address of the fallback implementation\"},\"supportsInterface(bytes4)\":{\"notice\":\"query whether contract has registered support for given interface\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"abstracts/ERC2535.sol\":\"ERC2535\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"abstracts/ERC2535.sol\":{\"keccak256\":\"0x718ddecd62e0c40c6bcc2a9f0288f412b5ddda267203eaba937475939d762033\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ccd618925fceb5bb442fd1d2e7d667ef4e92aba4027d3ba3497328bcdf1b05\",\"dweb:/ipfs/QmbZtR8j8iiR1Xe22eLrJdwVBYkdabJ2XfQKGCP561WBrC\"]},\"imports/solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0xee77272fcf35108e2103ebb4f5d68d46844c447d9d2e411f8f9136298ae1bc2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fef49f85af45dbadb55c259528e33fb91ecd74942305c101ee33120211b6dc0d\",\"dweb:/ipfs/QmVRVH7aWFQrSqWvku3E9LQAEar9L7bmxXrPoXLCpZDkLb\"]},\"imports/solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"]},\"imports/solidstate/contracts/access/ownable/ISafeOwnable.sol\":{\"keccak256\":\"0xfb9a7920498ab2bb3d493c292c40223eb3a6631431ea381ca39274b165c60102\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d720242e56f4aedf2975f4deba5ff4a177668d3b8c9c40c1a240a17a2f8a7c38\",\"dweb:/ipfs/QmfCcZ4ACMDULUjmPcrUNUY88i17pHYEkDFpxyKCcHsUP3\"]},\"imports/solidstate/contracts/access/ownable/ISafeOwnableInternal.sol\":{\"keccak256\":\"0xd5d44576a2f82b4ffdcf29feec6043e82436011784d92567a968609aa49a0f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43961ad59d89c044a403ebb3fdd8c9be9b01a59d5e549ef205423725dcfb9889\",\"dweb:/ipfs/QmeatkxGznGMCHXAz2CHTTSbk5HjUXzrjEtMc8CppNxnTZ\"]},\"imports/solidstate/contracts/access/ownable/Ownable.sol\":{\"keccak256\":\"0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc\",\"dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79\"]},\"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52\",\"dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF\"]},\"imports/solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995\",\"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM\"]},\"imports/solidstate/contracts/access/ownable/SafeOwnable.sol\":{\"keccak256\":\"0x84d5694ad1f6cc77170ec667b02080dca1ccdde26eddaf46960d95971df1a5f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd6b07d586dd3365884d48fb0dde9a46d03b4d5ee7508b1c817e261820bf29b9\",\"dweb:/ipfs/QmUwnEW2oK91S54MosgKk4YA44qhruMSFeGB6yLP58xByZ\"]},\"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":{\"keccak256\":\"0x1ab5cbb63b897d2bef48d4437ef9519fc15cd49ed976539c1d0fd262f087786f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e348b34065e6297fc7485f52d4671add3abc4c4329c9c907c30f315d91c80dd0\",\"dweb:/ipfs/Qmc7dvy2roTkJyi6G51Aoay8Mai7hGxBSBWHeXWSDwA9dL\"]},\"imports/solidstate/contracts/access/ownable/SafeOwnableStorage.sol\":{\"keccak256\":\"0x4818afb0b39e0770f881cbeaea1b1c77fba0daaa64bd8c1361d6e3a197628e93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db4cb17939eb9bf2d1ae1d8aec3c95495991a75b760a3ff211fb485ac4aeb1cb\",\"dweb:/ipfs/Qme93NCwDTb7B6MYCxLedZreEAjpEe9NCQFpPLsaT823jq\"]},\"imports/solidstate/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xc250e493770feaa0da8e5a55d241712c1c6526caa7d8df2455c3e5fa25124c0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://768e47d9ddeb15daeab0c8c1109ae43a4c2a0633bd9e4bf141488dfc9252f7ba\",\"dweb:/ipfs/QmWMTTRTncar9LptrxU7WK7WG5hHp8KsYnBGfm3cYowuP8\"]},\"imports/solidstate/contracts/interfaces/IERC165Internal.sol\":{\"keccak256\":\"0xf4d4708a60ed04887849509a258db49d4eb686f33214cb9c9643325cd8dae89d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66e7ade64c12edf7adbc0f20c1195b3c635ea2df67b836215441a4fe22ae17da\",\"dweb:/ipfs/QmUAbU31ZYg3FrKzXCk8CE1FbCg6LNoB5HpR4pU2QwZc7p\"]},\"imports/solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0xf1c1fbf0ec82110c29d549db1fbd8ec728ba0b995dc5f087e0a5464243135dce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16c7f3eba0547576833d0c1fddb7ec34aeba4f28b4ce9e878c3bd3ebc9c8d3d1\",\"dweb:/ipfs/Qme79eYLo7dinnhotgC4bvYnCg4doBDShHeCajrf5zpAUF\"]},\"imports/solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]},\"imports/solidstate/contracts/introspection/ERC165/base/ERC165Base.sol\":{\"keccak256\":\"0x3f2268856fdd9b27946adc65010bc83992069a90034bf692ab630802a926a9c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8f4aa0a9d369054fa3241abbf4a937eff32e42f7984ec2c11efe84b3536bdfd\",\"dweb:/ipfs/QmdL9cjvBLa5yszgCdxsqoh5BMYj6tJ2YWKPfLcRSzkA9c\"]},\"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":{\"keccak256\":\"0xad163d89454d9c8a018880253c5be156ee0f847f05a392a12b2a7061c7fa8682\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f76be2455986e64dd5108360e42087c7f5d87552d60a256ff616d3258c01fa7d\",\"dweb:/ipfs/QmZEYtAya7yeZQ6BWBUYeCetm5Wem3vaxiq3mdx4DLLtUJ\"]},\"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol\":{\"keccak256\":\"0xfd1cfba40f8aabda5898ffe21adeeea8c7011da12bfdad7f7aa0cf87b3635653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b80596a94faae265ecd9e03875ccebf5c1e45d94d8119dcf04e3a1cd92f5fb6\",\"dweb:/ipfs/QmVK8xje6PeEwVoZfFcugAdy43kLx59D9UHr4m8Qu9GgV9\"]},\"imports/solidstate/contracts/introspection/ERC165/base/IERC165Base.sol\":{\"keccak256\":\"0x288c50013c735cf30be90eb084589fc54bc0ee77a88ec69c3cc1efb11d7dccf4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://857c5836ad7808d13a87afa482af6ef2adbb26616767b2dd558b33ccb9569a28\",\"dweb:/ipfs/QmdptfxicGQUfsXFHpTW1y8NDV6k6oCuk5r9UqgGuv49Tk\"]},\"imports/solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol\":{\"keccak256\":\"0xccda4b118c8c09c276a0e577168aa404ea6207aad6b384b04f5f3a8923316422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcbafa161920a2a39ac001c76ee166ae4b345bef3ee6a0c5ca505504c0e9c052\",\"dweb:/ipfs/QmTF3DPJQPLsiYTmGNZXGBkmVRs14g2bUb1QJDH4ywwMq5\"]},\"imports/solidstate/contracts/proxy/IProxy.sol\":{\"keccak256\":\"0x2a06657ce005059e60a0765fe090240732d910fc38de43ca8fd48804bb86c5e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f893e1d80c28099c028560f96fdbc77fb28c5f3a5d30197e8274a130aa50c20b\",\"dweb:/ipfs/QmQ2WReybvHmivdwmSdZa4G3sCPJnJ4Ars9fYvb1byUPrw\"]},\"imports/solidstate/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x4d6ba63d71b8cddb57746d564cc904931d1ee479052a19f902787417ee5d97a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a13877552ba5a5678585fddd45ead718e195454a65b525a9fa21bc8bc6b1d317\",\"dweb:/ipfs/QmQ2jbrRE2JJKYo9baXvhU17X4URkYYPSXUud62UpDZn2k\"]},\"imports/solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol\":{\"keccak256\":\"0x541fe148acc6b9331149498d6f66308761a650da10c9bd8f9e933bdfec52f730\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca4739de22c9d58ff72fbd29c5a9a3072eb0ede8fc66a4f9345ba25f6d1e80cc\",\"dweb:/ipfs/Qmbo93KbYF1K7pUpjZKkUP2ABLhayyLAzVs9AnZ9vwZHUA\"]},\"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":{\"keccak256\":\"0xaa948c0ce846c4d4cec638b1b12580217b4782bbd1b25274d89bce5e2df14713\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6994f606378439530c8a902f448c3dd0d47a0592aa52a859d4344e9ebe6c7a4\",\"dweb:/ipfs/QmRbYWfMyVKEvNJNkwgrHGQd9tWmznhUrPaUzvW7vsv2iw\"]},\"imports/solidstate/contracts/proxy/diamond/base/DiamondBase.sol\":{\"keccak256\":\"0x6712d6c7bee937ac07ee00eeaa30895634fbd3cda7f5b5c179a2331ad05623df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c659c518ba877963adad6693287acdc9cc579603290df9ccf3d0c2a93af955e1\",\"dweb:/ipfs/QmPx59k37388TGXDT6EA2VZzBRWJQiT5F6H7Qt3cnPpQ3M\"]},\"imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":{\"keccak256\":\"0x74365666c0e9917d742bbab21e174dea6bc6ccf6146153e43dd9d9fe8417a36a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0328f0cee62d871c2ff5696384e213941623cd7d85e932205396c01416ceb77f\",\"dweb:/ipfs/QmR46DxncG2WVjxSBPAHziv2yXEknwm5tTHkd2nkv9neJD\"]},\"imports/solidstate/contracts/proxy/diamond/base/IDiamondBase.sol\":{\"keccak256\":\"0x3329852027ffb50519a245376a1dee8f828223c0fa439bbb16a80a1bc226c2fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4343964d070386d12d9e663607ad96e5134d4edd12234cb6412911ba77bcc5a9\",\"dweb:/ipfs/Qmbhp7gZRWRdryatZbjbgcxT4aWy9siaLWDXNoB1oCRWis\"]},\"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":{\"keccak256\":\"0x12dccd7f0e714012ac5e2746ea9c74c0eb990efab580ff45e1e3eef268b3fe54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b613f5140cae84540193a276a94e1b9959be2b51a57c3db5ea83ae8d16cc0f64\",\"dweb:/ipfs/QmPbbckwcC84kt6237L5829cXAcqvVfR91QLV684yfT9gk\"]},\"imports/solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol\":{\"keccak256\":\"0x1b52280562511510101b03ea1c73d64645770582ba72aad8bb1633ccc8ae6d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://730e215de2e4fd1e401716d4bdf1c4a3d6c5c9bdce9b8000a18fa3b48a69857d\",\"dweb:/ipfs/QmPyC5QYjLBZikRwYUTxENz3nX26KDUKSsCvhvg5wbAv6r\"]},\"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":{\"keccak256\":\"0x03fd06c9bd8642a42ece1d9f75c9e99869a06f4310fa9fe80df924ff68984036\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5f13b8c513694b11a7aca91cfb4e7cc0f025360c49f4ab5cdb7451a460bef38\",\"dweb:/ipfs/QmPpzhGud3ujg8tPygdMggpVzKThF7T9uVz5uuVJ9Yvp35\"]},\"imports/solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol\":{\"keccak256\":\"0xe3536079514a210e74f6e93b62525d451ed75c50c82773f9574c24e886ebe1ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f815154b93cf0619d01f779f0b7b88e2bae701adb1f92a36bbe6132e5321b656\",\"dweb:/ipfs/QmYhYKEuVEEHD2hc5P1iegppfNHMUAvdqsA22RS1Nh16wr\"]},\"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol\":{\"keccak256\":\"0xf481debe21720da2aa6a26492a57469b3592da44867935bc432f9ac8ffcdddd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b08ae74d3adc1415a0c1d34fd78b1b7bfdcf91c3b40123822cf33b28fe9f2aa\",\"dweb:/ipfs/Qmad6tp6wV3dKbqi2Mmaw4U89SvkXUEZ3EnD2NbQSwer5Y\"]},\"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":{\"keccak256\":\"0x741bbca02cacee6dab8dac18416f58200d75675600d7f6db7813e8385c4719e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ace0e6809a0b134b9697cbec3e2e3630828ff0b58c29cd0779eb50527c3b804d\",\"dweb:/ipfs/QmUvLY1kL8oAgCD7rQciRpq4mmKAANkzrtvPJo3m56e3BS\"]},\"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol\":{\"keccak256\":\"0x3d7dd0fa5d4cef8889d507880fe68d0b1558f6c21c5855170c44ef7e2b05bcef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://641081382a63beee3cae8b0f40b3146710f5377a964843160bf79921815e528c\",\"dweb:/ipfs/QmfWcAeDRtcvnCTnv3PE7er7WD73n9ct1YvrmxYDQFt9wP\"]},\"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol\":{\"keccak256\":\"0x82e0eeb28c8b8bd1ee9c5dd3247fa3d4062d5c6d43061833714c88741ecb5605\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4488dbd8056f270930da3ecae6f42037274fcac0444cacc25a57153541acb740\",\"dweb:/ipfs/QmURtgVddgar1YecAXZDEDStGaX7tBZTmcuZQJkeiA9NzZ\"]},\"imports/solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"]},\"imports/solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "accept transfer of contract ownership"
							},
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"notice": "update diamond facets and optionally execute arbitrary initialization function"
							},
							"facetAddress(bytes4)": {
								"notice": "get the address of the facet associated with given selector"
							},
							"facetAddresses()": {
								"notice": "get addresses of all facets used by diamond"
							},
							"facetFunctionSelectors(address)": {
								"notice": "get all selectors for given facet address"
							},
							"facets()": {
								"notice": "get all facets and their selectors"
							},
							"getFallbackAddress()": {
								"notice": "query the address of the fallback implementation"
							},
							"nomineeOwner()": {
								"notice": "get the nominated owner who has permission to call acceptOwnership"
							},
							"owner()": {
								"notice": "get the ERC173 contract owner"
							},
							"setFallbackAddress(address)": {
								"notice": "set the address of the fallback implementation"
							},
							"supportsInterface(bytes4)": {
								"notice": "query whether contract has registered support for given interface"
							},
							"transferOwnership(address)": {
								"notice": "transfer contract ownership to new account"
							}
						},
						"version": 1
					}
				}
			},
			"diamonds/Diamond.sol": {
				"Diamond": {
					"abi": [
						{
							"inputs": [],
							"name": "DiamondWritable__InvalidInitializationParameters",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__RemoveTargetNotZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__ReplaceTargetIsIdentical",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorAlreadyAdded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorIsImmutable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotSpecified",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__TargetHasNoCode",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC165Base__InvalidInterfaceId",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotTransitiveOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Proxy__ImplementationIsNotContract",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SafeOwnable__NotNomineeOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "enum IDiamondWritableInternal.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"indexed": false,
									"internalType": "struct IDiamondWritableInternal.FacetCut[]",
									"name": "facetCuts",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "DiamondCut",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "enum IDiamondWritableInternal.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"internalType": "struct IDiamondWritableInternal.FacetCut[]",
									"name": "facetCuts",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "diamondCut",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "selector",
									"type": "bytes4"
								}
							],
							"name": "facetAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "facet",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "facetAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "addresses",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "facet",
									"type": "address"
								}
							],
							"name": "facetFunctionSelectors",
							"outputs": [
								{
									"internalType": "bytes4[]",
									"name": "selectors",
									"type": "bytes4[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "facets",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"internalType": "struct IDiamondReadable.Facet[]",
									"name": "diamondFacets",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFallbackAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "fallbackAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nomineeOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "fallbackAddress",
									"type": "address"
								}
							],
							"name": "setFallbackAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"params": {
									"data": "optional initialization function call data",
									"facetCuts": "array of structured Diamond facet update data",
									"target": "optional target of initialization delegatecall"
								}
							},
							"facetAddress(bytes4)": {
								"params": {
									"selector": "function selector to query"
								},
								"returns": {
									"facet": "facet address (zero address if not found)"
								}
							},
							"facetAddresses()": {
								"returns": {
									"addresses": "array of facet addresses"
								}
							},
							"facetFunctionSelectors(address)": {
								"params": {
									"facet": "address of facet to query"
								},
								"returns": {
									"selectors": "array of function selectors"
								}
							},
							"facets()": {
								"returns": {
									"diamondFacets": "array of structured facet data"
								}
							},
							"getFallbackAddress()": {
								"returns": {
									"fallbackAddress": "address of fallback implementation"
								}
							},
							"owner()": {
								"returns": {
									"_0": "contract owner"
								}
							},
							"setFallbackAddress(address)": {
								"params": {
									"fallbackAddress": "address of fallback implementation"
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"interfaceId": "interface id"
								},
								"returns": {
									"_0": "bool whether interface is supported"
								}
							},
							"transferOwnership(address)": {
								"params": {
									"account": "address of new owner"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"diamonds/Diamond.sol\":152:182  contract Diamond is ERC2535 {} */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1108:1124  new bytes4[](12) */\n  0x40\n  dup1\n  mload\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1121:1123  12 */\n  0x0c\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1108:1124  new bytes4[](12) */\n  dup1\n  dup3\n  mstore\n  0x01a0\n  dup3\n  add\n  swap1\n  swap3\n  mstore\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1080:1105  bytes4[] memory selectors */\n  0x00\n  swap2\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1108:1124  new bytes4[](12) */\n  0x20\n  dup3\n  add\n  0x0180\n  dup1\n  calldatasize\n  dup4\n  calldatacopy\n  add\n  swap1\n  pop\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1080:1124  bytes4[] memory selectors = new bytes4[](12) */\n  swap1\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1134:1155  uint256 selectorIndex */\n  0x00\n  shl(0xe0, 0x2c408059)\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1080:1124  bytes4[] memory selectors = new bytes4[](12) */\n  dup3\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1134:1155  uint256 selectorIndex */\n  dup3\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1213:1228  selectorIndex++ */\n  tag_8\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1134:1155  uint256 selectorIndex */\n  dup2\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1213:1228  selectorIndex++ */\n  tag_9\n  jump\t// in\ntag_8:\n  swap4\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1203:1229  selectors[selectorIndex++] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_11\n  jumpi\n  tag_11\n  tag_12\n  jump\t// in\ntag_11:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1203:1302  selectors[selectorIndex++] = IDiamondFallback... */\n  swap1\n  swap3\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1203:1229  selectors[selectorIndex++] */\n  0x20\n  swap3\n  dup4\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  swap1\n  swap2\n  add\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1203:1302  selectors[selectorIndex++] = IDiamondFallback... */\n  mstore\n  shl(0xe0, 0x91423765)\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1312:1321  selectors */\n  dup3\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1322:1337  selectorIndex++ */\n  dup3\n  tag_13\n  dup2\n  tag_9\n  jump\t// in\ntag_13:\n  swap4\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1312:1338  selectors[selectorIndex++] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_15\n  jumpi\n  tag_15\n  tag_12\n  jump\t// in\ntag_15:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1312:1411  selectors[selectorIndex++] = IDiamondFallback... */\n  swap1\n  swap3\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1312:1338  selectors[selectorIndex++] */\n  0x20\n  swap3\n  dup4\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  swap1\n  swap2\n  add\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1312:1411  selectors[selectorIndex++] = IDiamondFallback... */\n  mstore\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1422:1485  _setSupportsInterface(type(IDiamondFallback).interfaceId, true) */\n  tag_16\n  shl(0xe2, 0x2f40adcf)\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1480:1484  true */\n  0x01\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1422:1443  _setSupportsInterface */\n  tag_17\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1422:1485  _setSupportsInterface(type(IDiamondFallback).interfaceId, true) */\n  jump\t// in\ntag_16:\n  shl(0xe2, 0x07e4c707)\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1533:1542  selectors */\n  dup3\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1543:1558  selectorIndex++ */\n  dup3\n  tag_18\n  dup2\n  tag_9\n  jump\t// in\ntag_18:\n  swap4\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1533:1559  selectors[selectorIndex++] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_20\n  jumpi\n  tag_20\n  tag_12\n  jump\t// in\ntag_20:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1533:1598  selectors[selectorIndex++] = IDiamondWritable.diamondCut.selector */\n  swap1\n  swap3\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1533:1559  selectors[selectorIndex++] */\n  0x20\n  swap3\n  dup4\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  swap1\n  swap2\n  add\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1533:1598  selectors[selectorIndex++] = IDiamondWritable.diamondCut.selector */\n  mstore\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1609:1672  _setSupportsInterface(type(IDiamondWritable).interfaceId, true) */\n  tag_21\n  shl(0xe2, 0x07e4c707)\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1667:1671  true */\n  0x01\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1609:1630  _setSupportsInterface */\n  tag_17\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1609:1672  _setSupportsInterface(type(IDiamondWritable).interfaceId, true) */\n  jump\t// in\ntag_21:\n  shl(0xe0, 0x7a0ed627)\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1720:1729  selectors */\n  dup3\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1730:1745  selectorIndex++ */\n  dup3\n  tag_22\n  dup2\n  tag_9\n  jump\t// in\ntag_22:\n  swap4\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1720:1746  selectors[selectorIndex++] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_24\n  jumpi\n  tag_24\n  tag_12\n  jump\t// in\ntag_24:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1720:1781  selectors[selectorIndex++] = IDiamondReadable.facets.selector */\n  swap1\n  swap3\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1720:1746  selectors[selectorIndex++] */\n  0x20\n  swap3\n  dup4\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  swap1\n  swap2\n  add\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1720:1781  selectors[selectorIndex++] = IDiamondReadable.facets.selector */\n  mstore\n  shl(0xe1, 0x56fe50af)\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1791:1800  selectors */\n  dup3\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1801:1816  selectorIndex++ */\n  dup3\n  tag_25\n  dup2\n  tag_9\n  jump\t// in\ntag_25:\n  swap4\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1791:1817  selectors[selectorIndex++] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_27\n  jumpi\n  tag_27\n  tag_12\n  jump\t// in\ntag_27:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1791:1894  selectors[selectorIndex++] = IDiamondReadable... */\n  swap1\n  swap3\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1791:1817  selectors[selectorIndex++] */\n  0x20\n  swap3\n  dup4\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  swap1\n  swap2\n  add\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1791:1894  selectors[selectorIndex++] = IDiamondReadable... */\n  mstore\n  shl(0xe2, 0x14bbdacb)\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1904:1913  selectors */\n  dup3\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1914:1929  selectorIndex++ */\n  dup3\n  tag_28\n  dup2\n  tag_9\n  jump\t// in\ntag_28:\n  swap4\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1904:1930  selectors[selectorIndex++] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_30\n  jumpi\n  tag_30\n  tag_12\n  jump\t// in\ntag_30:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1904:1973  selectors[selectorIndex++] = IDiamondReadable.facetAddresses.selector */\n  swap1\n  swap3\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1904:1930  selectors[selectorIndex++] */\n  0x20\n  swap3\n  dup4\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  swap1\n  swap2\n  add\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1904:1973  selectors[selectorIndex++] = IDiamondReadable.facetAddresses.selector */\n  mstore\n  shl(0xe1, 0x66ffd663)\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1983:1992  selectors */\n  dup3\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1993:2008  selectorIndex++ */\n  dup3\n  tag_31\n  dup2\n  tag_9\n  jump\t// in\ntag_31:\n  swap4\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1983:2009  selectors[selectorIndex++] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_33\n  jumpi\n  tag_33\n  tag_12\n  jump\t// in\ntag_33:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1983:2050  selectors[selectorIndex++] = IDiamondReadable.facetAddress.selector */\n  swap1\n  swap3\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1983:2009  selectors[selectorIndex++] */\n  0x20\n  swap3\n  dup4\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  swap1\n  swap2\n  add\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1983:2050  selectors[selectorIndex++] = IDiamondReadable.facetAddress.selector */\n  mstore\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2061:2124  _setSupportsInterface(type(IDiamondReadable).interfaceId, true) */\n  tag_34\n  shl(0xe0, 0x48e2b093)\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2119:2123  true */\n  0x01\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2061:2082  _setSupportsInterface */\n  tag_17\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2061:2124  _setSupportsInterface(type(IDiamondReadable).interfaceId, true) */\n  jump\t// in\ntag_34:\n  shl(0xe0, 0x01ffc9a7)\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2163:2172  selectors */\n  dup3\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2173:2188  selectorIndex++ */\n  dup3\n  tag_35\n  dup2\n  tag_9\n  jump\t// in\ntag_35:\n  swap4\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2163:2189  selectors[selectorIndex++] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_37\n  jumpi\n  tag_37\n  tag_12\n  jump\t// in\ntag_37:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2163:2226  selectors[selectorIndex++] = IERC165.supportsInterface.selector */\n  swap1\n  swap3\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2163:2189  selectors[selectorIndex++] */\n  0x20\n  swap3\n  dup4\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  swap1\n  swap2\n  add\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2163:2226  selectors[selectorIndex++] = IERC165.supportsInterface.selector */\n  mstore\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2237:2291  _setSupportsInterface(type(IERC165).interfaceId, true) */\n  tag_38\n  shl(0xe0, 0x01ffc9a7)\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2286:2290  true */\n  0x01\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2237:2258  _setSupportsInterface */\n  tag_17\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2237:2291  _setSupportsInterface(type(IERC165).interfaceId, true) */\n  jump\t// in\ntag_38:\n  shl(0xe0, 0x8da5cb5b)\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2335:2344  selectors */\n  dup3\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2345:2360  selectorIndex++ */\n  dup3\n  tag_39\n  dup2\n  tag_9\n  jump\t// in\ntag_39:\n  swap4\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2335:2361  selectors[selectorIndex++] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_41\n  jumpi\n  tag_41\n  tag_12\n  jump\t// in\ntag_41:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2335:2386  selectors[selectorIndex++] = Ownable.owner.selector */\n  swap1\n  swap3\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2335:2361  selectors[selectorIndex++] */\n  0x20\n  swap3\n  dup4\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  swap1\n  swap2\n  add\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2335:2386  selectors[selectorIndex++] = Ownable.owner.selector */\n  mstore\n  shl(0xe1, 0x455a8a85)\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2396:2405  selectors */\n  dup3\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2406:2421  selectorIndex++ */\n  dup3\n  tag_42\n  dup2\n  tag_9\n  jump\t// in\ntag_42:\n  swap4\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2396:2422  selectors[selectorIndex++] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_44\n  jumpi\n  tag_44\n  tag_12\n  jump\t// in\ntag_44:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2396:2458  selectors[selectorIndex++] = SafeOwnable.nomineeOwner.selector */\n  swap1\n  swap3\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2396:2422  selectors[selectorIndex++] */\n  0x20\n  swap3\n  dup4\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  swap1\n  swap2\n  add\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2396:2458  selectors[selectorIndex++] = SafeOwnable.nomineeOwner.selector */\n  mstore\n  shl(0xe0, 0xf2fde38b)\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2468:2477  selectors */\n  dup3\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2478:2493  selectorIndex++ */\n  dup3\n  tag_45\n  dup2\n  tag_9\n  jump\t// in\ntag_45:\n  swap4\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2468:2494  selectors[selectorIndex++] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_47\n  jumpi\n  tag_47\n  tag_12\n  jump\t// in\ntag_47:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2468:2531  selectors[selectorIndex++] = Ownable.transferOwnership.selector */\n  swap1\n  swap3\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2468:2494  selectors[selectorIndex++] */\n  0x20\n  swap3\n  dup4\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  swap1\n  swap2\n  add\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2468:2531  selectors[selectorIndex++] = Ownable.transferOwnership.selector */\n  mstore\n  shl(0xe0, 0x79ba5097)\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2541:2550  selectors */\n  dup3\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2551:2566  selectorIndex++ */\n  dup3\n  tag_48\n  dup2\n  tag_9\n  jump\t// in\ntag_48:\n  swap4\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2541:2567  selectors[selectorIndex++] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_50\n  jumpi\n  tag_50\n  tag_12\n  jump\t// in\ntag_50:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2541:2606  selectors[selectorIndex++] = SafeOwnable.acceptOwnership.selector */\n  swap1\n  swap3\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2541:2567  selectors[selectorIndex++] */\n  0x20\n  swap3\n  dup4\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  swap1\n  swap2\n  add\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2541:2606  selectors[selectorIndex++] = SafeOwnable.acceptOwnership.selector */\n  mstore\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2617:2671  _setSupportsInterface(type(IERC173).interfaceId, true) */\n  tag_51\n  shl(0xe4, 0x07f5828d)\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2666:2670  true */\n  0x01\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2617:2638  _setSupportsInterface */\n  tag_17\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2617:2671  _setSupportsInterface(type(IERC173).interfaceId, true) */\n  jump\t// in\ntag_51:\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2736:2753  new FacetCut[](1) */\n  0x40\n  dup1\n  mload\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2751:2752  1 */\n  0x01\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2736:2753  new FacetCut[](1) */\n  dup1\n  dup3\n  mstore\n  dup2\n  dup4\n  add\n  swap1\n  swap3\n  mstore\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2706:2733  FacetCut[] memory facetCuts */\n  0x00\n  swap2\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2736:2753  new FacetCut[](1) */\n  dup2\n  0x20\n  add\ntag_55:\n    /* \"diamonds/Diamond.sol\":152:182  contract Diamond is ERC2535 {} */\n  0x40\n  dup1\n  mload\n  0x60\n  dup1\n  dup3\n  add\n  dup4\n  mstore\n  0x00\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  mstore\n  swap2\n  dup2\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2736:2753  new FacetCut[](1) */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  0x01\n  swap1\n  sub\n  swap1\n  dup2\n  tag_55\n  jumpi\n  swap1\n  pop\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2779:2908  FacetCut({... */\n  0x40\n  dup1\n  mload\n  0x60\n  dup2\n  add\n  swap1\n  swap2\n  mstore\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2818:2822  this */\n  address\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2779:2908  FacetCut({... */\n  dup2\n  mstore\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2706:2753  FacetCut[] memory facetCuts = new FacetCut[](1) */\n  swap1\n  swap2\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2779:2908  FacetCut({... */\n  0x20\n  dup2\n  add\n  0x00\n  dup2\n  mstore\n  0x20\n  add\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2888:2897  selectors */\n  dup5\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2779:2908  FacetCut({... */\n  dup2\n  mstore\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2764:2773  facetCuts */\n  dup2\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2774:2775  0 */\n  0x00\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2764:2776  facetCuts[0] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_62\n  jumpi\n  tag_62\n  tag_12\n  jump\t// in\ntag_62:\n  0x20\n  mul\n  0x20\n  add\n  add\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2764:2908  facetCuts[0] = FacetCut({... */\n  dup2\n  swap1\n  mstore\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2919:2957  _diamondCut(facetCuts, address(0), '') */\n  tag_63\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2931:2940  facetCuts */\n  dup2\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2950:2951  0 */\n  0x00\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2919:2957  _diamondCut(facetCuts, address(0), '') */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2919:2930  _diamondCut */\n  shl(0x20, tag_64)\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2919:2957  _diamondCut(facetCuts, address(0), '') */\n  0x20\n  shr\n  jump\t// in\ntag_63:\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2990:3011  _setOwner(msg.sender) */\n  tag_65\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":3000:3010  msg.sender */\n  caller\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2990:2999  _setOwner */\n  tag_66\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":2990:3011  _setOwner(msg.sender) */\n  jump\t// in\ntag_65:\n    /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":1070:3018  {... */\n  pop\n  pop\n  pop\n    /* \"diamonds/Diamond.sol\":152:182  contract Diamond is ERC2535 {} */\n  jump(tag_173)\n    /* \"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":907:1175  function _setSupportsInterface(... */\ntag_17:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":1024:1049  interfaceId == 0xffffffff */\n  dup1\n  dup4\n  and\n  swap1\n  sub\n    /* \"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":1020:1090  if (interfaceId == 0xffffffff) revert ERC165Base__InvalidInterfaceId() */\n  tag_69\n  jumpi\n    /* \"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":1058:1090  ERC165Base__InvalidInterfaceId() */\n  mload(0x40)\n  shl(0xe0, 0xb0a19dd5)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":1020:1090  if (interfaceId == 0xffffffff) revert ERC165Base__InvalidInterfaceId() */\ntag_69:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":1100:1159  ERC165BaseStorage.layout().supportedInterfaces[interfaceId] */\n  swap2\n  swap1\n  swap2\n  and\n    /* \"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":1100:1146  ERC165BaseStorage.layout().supportedInterfaces */\n  0x00\n    /* \"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":1100:1159  ERC165BaseStorage.layout().supportedInterfaces[interfaceId] */\n  swap1\n  dup2\n  mstore\n    /* \"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol\":219:271  keccak256('solidstate.contracts.storage.ERC165Base') */\n  0xfc606c433378e3a7e0a6a531deac289b66caa1b4aa8554fd4ab2c6f1570f92d8\n    /* \"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":1100:1159  ERC165BaseStorage.layout().supportedInterfaces[interfaceId] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":1100:1168  ERC165BaseStorage.layout().supportedInterfaces[interfaceId] = status */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap2\n  iszero\n  iszero\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":907:1175  function _setSupportsInterface(... */\n  jump\t// out\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":849:2892  function _diamondCut(... */\ntag_64:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1123:1138  l.selectorCount */\n  sload(0x177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc94)\n    /* \"imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":584:637  keccak256('solidstate.contracts.storage.DiamondBase') */\n  0x177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc93\n  swap1\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1123:1138  l.selectorCount */\n  0xffff\n  dup2\n  and\n  swap1\n  dup2\n  swap1\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":991:1026  DiamondBaseStorage.Layout storage l */\n  0x00\n  swap1\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1321:1322  7 */\n  0x07\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1305:1322  selectorCount & 7 */\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1305:1326  selectorCount & 7 > 0 */\n  iszero\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1301:1452  if (selectorCount & 7 > 0) {... */\n  tag_75\n  jumpi\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1435:1436  3 */\n  0x03\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1418:1436  selectorCount >> 3 */\n  dup2\n  swap1\n  shr\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1402:1437  l.selectorSlots[selectorCount >> 3] */\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1402:1417  l.selectorSlots */\n  0x02\n  dup5\n  add\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1402:1437  l.selectorSlots[selectorCount >> 3] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1301:1452  if (selectorCount & 7 > 0) {... */\ntag_75:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1471:1480  uint256 i */\n  0x00\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1466:2479  for (uint256 i; i < facetCuts.length; i++) {... */\ntag_76:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1486:1495  facetCuts */\n  dup8\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1486:1502  facetCuts.length */\n  mload\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1482:1483  i */\n  dup2\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1482:1502  i < facetCuts.length */\n  lt\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1466:2479  for (uint256 i; i < facetCuts.length; i++) {... */\n  iszero\n  tag_77\n  jumpi\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1527:1551  FacetCut memory facetCut */\n  0x00\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1554:1563  facetCuts */\n  dup9\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1564:1565  i */\n  dup3\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1554:1566  facetCuts[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_80\n  jumpi\n  tag_80\n  tag_12\n  jump\t// in\ntag_80:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1527:1566  FacetCut memory facetCut = facetCuts[i] */\n  swap1\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1584:1605  FacetCutAction action */\n  0x00\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1608:1616  facetCut */\n  dup2\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1608:1623  facetCut.action */\n  0x20\n  add\n  mload\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1584:1623  FacetCutAction action = facetCut.action */\n  swap1\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1646:1654  facetCut */\n  dup2\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1646:1664  facetCut.selectors */\n  0x40\n  add\n  mload\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1646:1671  facetCut.selectors.length */\n  mload\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1675:1676  0 */\n  0x00\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1646:1676  facetCut.selectors.length == 0 */\n  sub\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1642:1744  if (facetCut.selectors.length == 0)... */\n  tag_81\n  jumpi\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1705:1744  DiamondWritable__SelectorNotSpecified() */\n  mload(0x40)\n  shl(0xe0, 0xeb6c3aeb)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1642:1744  if (facetCut.selectors.length == 0)... */\ntag_81:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1777:1795  FacetCutAction.ADD */\n  0x00\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1767:1773  action */\n  dup2\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1767:1795  action == FacetCutAction.ADD */\n  0x02\n  dup2\n  gt\n  iszero\n  tag_85\n  jumpi\n  tag_85\n  tag_60\n  jump\t// in\ntag_85:\n  sub\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1763:2465  if (action == FacetCutAction.ADD) {... */\n  tag_86\n  jumpi\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1851:2029  _addFacetSelectors(... */\n  tag_87\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1895:1896  l */\n  dup8\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1922:1935  selectorCount */\n  dup7\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1961:1973  selectorSlot */\n  dup7\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1999:2007  facetCut */\n  dup6\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1851:1869  _addFacetSelectors */\n  tag_88\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1851:2029  _addFacetSelectors(... */\n  jump\t// in\ntag_87:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1819:2029  (selectorCount, selectorSlot) = _addFacetSelectors(... */\n  swap1\n  swap6\n  pop\n  swap4\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1763:2465  if (action == FacetCutAction.ADD) {... */\n  jump(tag_102)\ntag_86:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2068:2090  FacetCutAction.REPLACE */\n  0x01\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2058:2064  action */\n  dup2\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2058:2090  action == FacetCutAction.REPLACE */\n  0x02\n  dup2\n  gt\n  iszero\n  tag_93\n  jumpi\n  tag_93\n  tag_60\n  jump\t// in\ntag_93:\n  sub\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2054:2465  if (action == FacetCutAction.REPLACE) {... */\n  tag_94\n  jumpi\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2114:2149  _replaceFacetSelectors(l, facetCut) */\n  tag_95\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2137:2138  l */\n  dup8\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2140:2148  facetCut */\n  dup4\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2114:2136  _replaceFacetSelectors */\n  tag_96\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2114:2149  _replaceFacetSelectors(l, facetCut) */\n  jump\t// in\ntag_95:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2054:2465  if (action == FacetCutAction.REPLACE) {... */\n  jump(tag_102)\ntag_94:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2188:2209  FacetCutAction.REMOVE */\n  0x02\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2178:2184  action */\n  dup2\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2178:2209  action == FacetCutAction.REMOVE */\n  0x02\n  dup2\n  gt\n  iszero\n  tag_101\n  jumpi\n  tag_101\n  tag_60\n  jump\t// in\ntag_101:\n  sub\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2174:2465  if (action == FacetCutAction.REMOVE) {... */\n  tag_102\n  jumpi\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2265:2446  _removeFacetSelectors(... */\n  tag_103\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2312:2313  l */\n  dup8\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2339:2352  selectorCount */\n  dup7\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2378:2390  selectorSlot */\n  dup7\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2416:2424  facetCut */\n  dup6\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2265:2286  _removeFacetSelectors */\n  tag_104\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2265:2446  _removeFacetSelectors(... */\n  jump\t// in\ntag_103:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2233:2446  (selectorCount, selectorSlot) = _removeFacetSelectors(... */\n  swap1\n  swap6\n  pop\n  swap4\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2174:2465  if (action == FacetCutAction.REMOVE) {... */\ntag_102:\n  pop\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1504:1507  i++ */\n  0x01\n  add\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1466:2479  for (uint256 i; i < facetCuts.length; i++) {... */\n  jump(tag_76)\ntag_77:\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2514:2535  originalSelectorCount */\n  dup3\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2497:2510  selectorCount */\n  dup3\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2497:2535  selectorCount != originalSelectorCount */\n  eq\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2493:2609  if (selectorCount != originalSelectorCount) {... */\n  tag_105\n  jumpi\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2555:2570  l.selectorCount */\n  0x01\n  dup5\n  add\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2555:2594  l.selectorCount = uint16(selectorCount) */\n  dup1\n  sload\n  not(0xffff)\n  and\n  0xffff\n  dup5\n  and\n  or\n  swap1\n  sstore\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2493:2609  if (selectorCount != originalSelectorCount) {... */\ntag_105:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2692:2693  7 */\n  0x07\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2676:2693  selectorCount & 7 */\n  dup3\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2676:2697  selectorCount & 7 > 0 */\n  iszero\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2672:2782  if (selectorCount & 7 > 0) {... */\n  tag_106\n  jumpi\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2750:2751  3 */\n  0x03\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2733:2751  selectorCount >> 3 */\n  dup3\n  swap1\n  shr\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2717:2752  l.selectorSlots[selectorCount >> 3] */\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2717:2732  l.selectorSlots */\n  0x02\n  dup6\n  add\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2717:2752  l.selectorSlots[selectorCount >> 3] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2717:2767  l.selectorSlots[selectorCount >> 3] = selectorSlot */\n  dup2\n  swap1\n  sstore\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2672:2782  if (selectorCount & 7 > 0) {... */\ntag_106:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2801:2836  DiamondCut(facetCuts, target, data) */\n  0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2812:2821  facetCuts */\n  dup8\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2823:2829  target */\n  dup8\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2831:2835  data */\n  dup8\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2801:2836  DiamondCut(facetCuts, target, data) */\n  mload(0x40)\n  tag_107\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_108\n  jump\t// in\ntag_107:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2850:2875  _initialize(target, data) */\n  tag_109\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2862:2868  target */\n  dup7\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2870:2874  data */\n  dup7\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2850:2861  _initialize */\n  tag_110\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2850:2875  _initialize(target, data) */\n  jump\t// in\ntag_109:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1067:2886  unchecked {... */\n  pop\n  pop\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":981:2892  {... */\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":849:2892  function _diamondCut(... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":1203:1410  function _setOwner(address account) internal virtual {... */\ntag_66:\n    /* \"imports/solidstate/contracts/access/ownable/OwnableStorage.sol\":186:235  keccak256('solidstate.contracts.storage.Ownable') */\n  0x8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460\n    /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":1359:1366  l.owner */\n  dup1\n  sload\n    /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":1338:1376  OwnershipTransferred(l.owner, account) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  dup2\n  and\n  swap3\n    /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":1359:1366  l.owner */\n  and\n  swap1\n    /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":1338:1376  OwnershipTransferred(l.owner, account) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":1266:1297  OwnableStorage.Layout storage l */\n  0x00\n  swap1\n    /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":1338:1376  OwnershipTransferred(l.owner, account) */\n  log3\n    /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":1386:1403  l.owner = account */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":1203:1410  function _setOwner(address account) internal virtual {... */\n  jump\t// out\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2898:4493  function _addFacetSelectors(... */\ntag_88:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3163:3178  facetCut.target */\n  dup1\n  mload\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3090:3097  uint256 */\n  0x00\n  swap1\n  dup2\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3163:3195  facetCut.target != address(this) */\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3190:3194  this */\n  address\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3163:3195  facetCut.target != address(this) */\n  eq\n  dup1\n  iszero\n  swap1\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3163:3244  facetCut.target != address(this) &&... */\n  tag_117\n  jumpi\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3216:3231  facetCut.target */\n  dup3\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3216:3242  facetCut.target.isContract */\n  and\n    /* \"imports/solidstate/contracts/utils/AddressUtils.sol\":568:588  extcodesize(account) */\n  extcodesize\n    /* \"imports/solidstate/contracts/utils/AddressUtils.sol\":614:622  size > 0 */\n  iszero\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3163:3244  facetCut.target != address(this) &&... */\ntag_117:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3142:3300  if (... */\n  iszero\n  tag_120\n  jumpi\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3266:3300  DiamondWritable__TargetHasNoCode() */\n  mload(0x40)\n  shl(0xe2, 0x3ddc5cab)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3142:3300  if (... */\ntag_120:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3320:3329  uint256 i */\n  0x00\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3315:4426  for (uint256 i; i < facetCut.selectors.length; i++) {... */\ntag_121:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3335:3343  facetCut */\n  dup4\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3335:3353  facetCut.selectors */\n  0x40\n  add\n  mload\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3335:3360  facetCut.selectors.length */\n  mload\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3331:3332  i */\n  dup2\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3331:3360  i < facetCut.selectors.length */\n  lt\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3315:4426  for (uint256 i; i < facetCut.selectors.length; i++) {... */\n  iszero\n  tag_122\n  jumpi\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3385:3400  bytes4 selector */\n  0x00\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3403:3411  facetCut */\n  dup5\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3403:3421  facetCut.selectors */\n  0x40\n  add\n  mload\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3422:3423  i */\n  dup3\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3403:3424  facetCut.selectors[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_125\n  jumpi\n  tag_125\n  tag_12\n  jump\t// in\ntag_125:\n  0x20\n  swap1\n  dup2\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  dup2\n  add\n  mload\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3461:3479  l.facets[selector] */\n  dup2\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3442:3458  bytes32 oldFacet */\n  0x00\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3461:3479  l.facets[selector] */\n  swap1\n  dup2\n  mstore\n  swap2\n  dup11\n  swap1\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n  sload\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3403:3424  facetCut.selectors[i] */\n  swap1\n  swap2\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3502:3528  address(bytes20(oldFacet)) */\n  0x60\n  dup2\n  swap1\n  shr\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3502:3542  address(bytes20(oldFacet)) != address(0) */\n  iszero\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3498:3610  if (address(bytes20(oldFacet)) != address(0))... */\n  tag_126\n  jumpi\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3571:3610  DiamondWritable__SelectorAlreadyAdded() */\n  mload(0x40)\n  shl(0xe1, 0x4923a771)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3498:3610  if (address(bytes20(oldFacet)) != address(0))... */\ntag_126:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3720:3735  facetCut.target */\n  dup6\n  mload\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3671:3689  l.facets[selector] */\n  dup4\n  dup2\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3759:3781  bytes32(selectorCount) */\n  0x00\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3671:3689  l.facets[selector] */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup14\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3712:3736  bytes20(facetCut.target) */\n  0x60\n  swap4\n  swap1\n  swap4\n  shl\n  not(sub(shl(0x60, 0x01), 0x01))\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3712:3781  bytes20(facetCut.target) |... */\n  and\n  dup12\n  or\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3671:3781  l.facets[selector] =... */\n  swap1\n  swap3\n  sstore\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3855:3856  5 */\n  0x05\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3832:3856  (selectorCount & 7) << 5 */\n  dup11\n  swap1\n  shl\n  0xe0\n  swap1\n  dup2\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4091:4134  bytes32(selector) >> selectorInSlotPosition */\n  swap3\n  dup4\n  shr\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4020:4065  CLEAR_SELECTOR_MASK >> selectorInSlotPosition */\n  swap2\n  dup4\n  shr\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4018:4066  ~(CLEAR_SELECTOR_MASK >> selectorInSlotPosition) */\n  not\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3979:4066  selectorSlot &... */\n  swap10\n  swap1\n  swap10\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3978:4135  (selectorSlot &... */\n  or\n  swap8\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4218:4247  selectorInSlotPosition == 224 */\n  dup2\n  swap1\n  sub\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4214:4378  if (selectorInSlotPosition == 224) {... */\n  tag_127\n  jumpi\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4304:4305  3 */\n  0x03\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4287:4305  selectorCount >> 3 */\n  dup10\n  swap1\n  shr\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4271:4306  l.selectorSlots[selectorCount >> 3] */\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4271:4286  l.selectorSlots */\n  0x02\n  dup12\n  add\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4271:4306  l.selectorSlots[selectorCount >> 3] */\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4271:4321  l.selectorSlots[selectorCount >> 3] = selectorSlot */\n  swap9\n  swap1\n  swap9\n  sstore\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4214:4378  if (selectorInSlotPosition == 224) {... */\ntag_127:\n  pop\n  pop\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4396:4411  selectorCount++ */\n  0x01\n  swap6\n  dup7\n  add\n  swap6\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3362:3365  i++ */\n  add\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3315:4426  for (uint256 i; i < facetCut.selectors.length; i++) {... */\n  jump(tag_121)\ntag_122:\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4448:4461  selectorCount */\n  swap4\n  swap6\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4463:4475  selectorSlot */\n  swap3\n  swap5\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2898:4493  function _addFacetSelectors(... */\n  swap2\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8179:9259  function _replaceFacetSelectors(... */\ntag_96:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8344:8359  facetCut.target */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8344:8370  facetCut.target.isContract */\n  and\n    /* \"imports/solidstate/contracts/utils/AddressUtils.sol\":568:588  extcodesize(account) */\n  extcodesize\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8339:8431  if (!facetCut.target.isContract())... */\n  tag_130\n  jumpi\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8397:8431  DiamondWritable__TargetHasNoCode() */\n  mload(0x40)\n  shl(0xe2, 0x3ddc5cab)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8339:8431  if (!facetCut.target.isContract())... */\ntag_130:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8451:8460  uint256 i */\n  0x00\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8446:9243  for (uint256 i; i < facetCut.selectors.length; i++) {... */\ntag_131:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8466:8474  facetCut */\n  dup2\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8466:8484  facetCut.selectors */\n  0x40\n  add\n  mload\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8466:8491  facetCut.selectors.length */\n  mload\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8462:8463  i */\n  dup2\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8462:8491  i < facetCut.selectors.length */\n  lt\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8446:9243  for (uint256 i; i < facetCut.selectors.length; i++) {... */\n  iszero\n  tag_132\n  jumpi\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8516:8531  bytes4 selector */\n  0x00\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8534:8542  facetCut */\n  dup3\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8534:8552  facetCut.selectors */\n  0x40\n  add\n  mload\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8553:8554  i */\n  dup3\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8534:8555  facetCut.selectors[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_135\n  jumpi\n  tag_135\n  tag_12\n  jump\t// in\ntag_135:\n  0x20\n  swap1\n  dup2\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  dup2\n  add\n  mload\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8592:8610  l.facets[selector] */\n  dup2\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8573:8589  bytes32 oldFacet */\n  0x00\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8592:8610  l.facets[selector] */\n  swap1\n  dup2\n  mstore\n  swap2\n  dup7\n  swap1\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n  sload\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8534:8555  facetCut.selectors[i] */\n  swap1\n  swap2\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8654:8680  address(bytes20(oldFacet)) */\n  0x60\n  dup2\n  swap1\n  shr\n  dup1\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8699:8796  if (oldFacetAddress == address(0))... */\n  tag_136\n  jumpi\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8761:8796  DiamondWritable__SelectorNotFound() */\n  mload(0x40)\n  shl(0xe1, 0x37e25a97)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8699:8796  if (oldFacetAddress == address(0))... */\ntag_136:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8845:8849  this */\n  address\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8818:8850  oldFacetAddress == address(this) */\n  dup3\n  and\n  sub\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8814:8917  if (oldFacetAddress == address(this))... */\n  tag_137\n  jumpi\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8879:8917  DiamondWritable__SelectorIsImmutable() */\n  mload(0x40)\n  shl(0xe0, 0xe9835731)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8814:8917  if (oldFacetAddress == address(this))... */\ntag_137:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8958:8966  facetCut */\n  dup5\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8958:8973  facetCut.target */\n  0x00\n  add\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8939:8973  oldFacetAddress == facetCut.target */\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8939:8954  oldFacetAddress */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8939:8973  oldFacetAddress == facetCut.target */\n  and\n  sub\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8935:9045  if (oldFacetAddress == facetCut.target)... */\n  tag_138\n  jumpi\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9002:9045  DiamondWritable__ReplaceTargetIsIdentical() */\n  mload(0x40)\n  shl(0xe1, 0x30baabf3)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8935:9045  if (oldFacetAddress == facetCut.target)... */\ntag_138:\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9212:9227  facetCut.target */\n  dup4\n  mload\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9109:9127  l.facets[selector] */\n  swap3\n  swap1\n  swap3\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9212:9227  facetCut.target */\n  0x00\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9109:9127  l.facets[selector] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup7\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9204:9228  bytes20(facetCut.target) */\n  0x60\n  swap3\n  swap1\n  swap3\n  shl\n  not(sub(shl(0x60, 0x01), 0x01))\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9150:9228  (oldFacet & CLEAR_ADDRESS_MASK) |... */\n  and\n  sub(shl(0x60, 0x01), 0x01)\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9151:9180  oldFacet & CLEAR_ADDRESS_MASK */\n  swap2\n  swap1\n  swap2\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9150:9228  (oldFacet & CLEAR_ADDRESS_MASK) |... */\n  or\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9109:9228  l.facets[selector] =... */\n  swap1\n  sstore\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8493:8496  i++ */\n  0x01\n  add\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8446:9243  for (uint256 i; i < facetCut.selectors.length; i++) {... */\n  jump(tag_131)\ntag_132:\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8179:9259  function _replaceFacetSelectors(... */\n  pop\n  pop\n  jump\t// out\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4499:8173  function _removeFacetSelectors(... */\ntag_104:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4750:4765  facetCut.target */\n  dup1\n  mload\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4694:4701  uint256 */\n  0x00\n  swap1\n  dup2\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4750:4779  facetCut.target != address(0) */\n  and\n  iszero\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4746:4849  if (facetCut.target != address(0))... */\n  tag_140\n  jumpi\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4804:4849  DiamondWritable__RemoveTargetNotZeroAddress() */\n  mload(0x40)\n  shl(0xe2, 0x3ab34909)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4746:4849  if (facetCut.target != address(0))... */\ntag_140:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4909:4910  3 */\n  0x03\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4892:4910  selectorCount >> 3 */\n  dup6\n  swap1\n  shr\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4970:4971  7 */\n  0x07\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4954:4971  selectorCount & 7 */\n  dup7\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4864:4889  uint256 selectorSlotCount */\n  0x00\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4986:8029  for (uint256 i; i < facetCut.selectors.length; i++) {... */\ntag_141:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5006:5014  facetCut */\n  dup6\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5006:5024  facetCut.selectors */\n  0x40\n  add\n  mload\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5006:5031  facetCut.selectors.length */\n  mload\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5002:5003  i */\n  dup2\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5002:5031  i < facetCut.selectors.length */\n  lt\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4986:8029  for (uint256 i; i < facetCut.selectors.length; i++) {... */\n  iszero\n  tag_142\n  jumpi\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5056:5071  bytes4 selector */\n  0x00\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5074:5082  facetCut */\n  dup7\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5074:5092  facetCut.selectors */\n  0x40\n  add\n  mload\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5093:5094  i */\n  dup3\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5074:5095  facetCut.selectors[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_145\n  jumpi\n  tag_145\n  tag_12\n  jump\t// in\ntag_145:\n  0x20\n  swap1\n  dup2\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  dup2\n  add\n  mload\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5132:5150  l.facets[selector] */\n  dup2\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5113:5129  bytes32 oldFacet */\n  0x00\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5132:5150  l.facets[selector] */\n  swap1\n  dup2\n  mstore\n  swap2\n  dup13\n  swap1\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n  sload\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5074:5095  facetCut.selectors[i] */\n  swap1\n  swap2\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5173:5199  address(bytes20(oldFacet)) */\n  0x60\n  dup2\n  swap1\n  shr\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5169:5277  if (address(bytes20(oldFacet)) == address(0))... */\n  tag_146\n  jumpi\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5242:5277  DiamondWritable__SelectorNotFound() */\n  mload(0x40)\n  shl(0xe1, 0x37e25a97)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5169:5277  if (address(bytes20(oldFacet)) == address(0))... */\ntag_146:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5338:5342  this */\n  address\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5300:5326  address(bytes20(oldFacet)) */\n  0x60\n  dup3\n  swap1\n  shr\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5300:5343  address(bytes20(oldFacet)) == address(this) */\n  sub\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5296:5410  if (address(bytes20(oldFacet)) == address(this))... */\n  tag_147\n  jumpi\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5372:5410  DiamondWritable__SelectorIsImmutable() */\n  mload(0x40)\n  shl(0xe0, 0xe9835731)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5296:5410  if (address(bytes20(oldFacet)) == address(this))... */\ntag_147:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5449:5450  0 */\n  0x00\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5433:5450  selectorSlot == 0 */\n  dup10\n  swap1\n  sub\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5429:5696  if (selectorSlot == 0) {... */\n  tag_148\n  jumpi\n  not(0x00)\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5474:5493  selectorSlotCount-- */\n  swap1\n  swap5\n  add\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5530:5564  l.selectorSlots[selectorSlotCount] */\n  0x00\n  dup2\n  dup2\n  mstore\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5530:5545  l.selectorSlots */\n  0x02\n  dup13\n  add\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5530:5564  l.selectorSlots[selectorSlotCount] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  swap9\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5474:5493  selectorSlotCount-- */\n  swap4\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5608:5609  7 */\n  0x07\n  swap4\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5429:5696  if (selectorSlot == 0) {... */\n  jump(tag_149)\ntag_148:\n  not(0x00)\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5656:5677  selectorInSlotIndex-- */\n  swap1\n  swap4\n  add\n  swap3\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5429:5696  if (selectorSlot == 0) {... */\ntag_149:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6099:6100  5 */\n  0x05\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6076:6100  selectorInSlotIndex << 5 */\n  dup5\n  swap1\n  shl\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6059:6101  selectorSlot << (selectorInSlotIndex << 5) */\n  dup10\n  swap1\n  shl\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5714:5733  bytes4 lastSelector */\n  0x00\n  dup1\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6150:6174  lastSelector != selector */\n  dup1\n  dup5\n  and\n  swap1\n  dup7\n  and\n  eq\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6146:6438  if (lastSelector != selector) {... */\n  tag_150\n  jumpi\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6392:6414  l.facets[lastSelector] */\n  dup4\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6392:6400  l.facets */\n  0x00\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6392:6414  l.facets[lastSelector] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup16\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  dup1\n  sload\n  not(sub(shl(0x60, 0x01), 0x01))\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6322:6415  (oldFacet & CLEAR_ADDRESS_MASK) |... */\n  and\n  sub(shl(0x60, 0x01), 0x01)\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6323:6352  oldFacet & CLEAR_ADDRESS_MASK */\n  dup7\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6322:6415  (oldFacet & CLEAR_ADDRESS_MASK) |... */\n  or\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6269:6415  l.facets[lastSelector] =... */\n  swap1\n  sstore\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6146:6438  if (lastSelector != selector) {... */\ntag_150:\n  pop\n  pop\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6467:6485  l.facets[selector] */\n  dup4\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6467:6475  l.facets */\n  0x00\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6467:6485  l.facets[selector] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup14\n  swap1\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6460:6485  delete l.facets[selector] */\n  sstore\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6605:6626  oldSelectorCount >> 3 */\n  0x1fff\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6625:6626  3 */\n  0x03\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6605:6626  oldSelectorCount >> 3 */\n  dup4\n  swap1\n  shr\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6676:6703  (oldSelectorCount & 7) << 5 */\n  0xe0\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6702:6703  5 */\n  0x05\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6676:6703  (oldSelectorCount & 7) << 5 */\n  dup5\n  swap1\n  shl\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6744:6786  oldSelectorsSlotCount != selectorSlotCount */\n  dup8\n  dup3\n  eq\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6740:7847  if (oldSelectorsSlotCount != selectorSlotCount) {... */\n  tag_151\n  jumpi\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6810:6833  bytes32 oldSelectorSlot */\n  0x00\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6836:6920  l.selectorSlots[... */\n  dup3\n  dup2\n  mstore\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6836:6851  l.selectorSlots */\n  0x02\n  dup16\n  add\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6836:6920  l.selectorSlots[... */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  dup1\n  sload\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7134:7214  CLEAR_SELECTOR_MASK >>... */\n  dup1\n  dup5\n  shr\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7132:7215  ~(CLEAR_SELECTOR_MASK >>... */\n  not\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7086:7215  oldSelectorSlot &... */\n  swap1\n  swap2\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7244:7265  bytes32(lastSelector) */\n  swap1\n  dup6\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7244:7294  bytes32(lastSelector) >> oldSelectorInSlotPosition */\n  dup4\n  shr\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7085:7295  (oldSelectorSlot &... */\n  or\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7379:7435  l.selectorSlots[oldSelectorsSlotCount] = oldSelectorSlot */\n  swap1\n  sstore\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6740:7847  if (oldSelectorsSlotCount != selectorSlotCount) {... */\n  jump(tag_152)\ntag_151:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7802:7827  oldSelectorInSlotPosition */\n  dup1\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7785:7797  lastSelector */\n  dup4\n  sub(shl(0xe0, 0x01), 0x01)\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7777:7798  bytes32(lastSelector) */\n  not\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7777:7827  bytes32(lastSelector) >> oldSelectorInSlotPosition */\n  swap1\n  shr\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7722:7747  oldSelectorInSlotPosition */\n  dup2\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":539:574  bytes32(uint256(0xffffffff << 224)) */\n  0x00\n  shl\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7667:7747  CLEAR_SELECTOR_MASK >>... */\n  swap1\n  shr\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7665:7748  ~(CLEAR_SELECTOR_MASK >>... */\n  not\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7622:7634  selectorSlot */\n  dup14\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7622:7748  selectorSlot &... */\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7621:7828  (selectorSlot &... */\n  or\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7582:7828  selectorSlot =... */\n  swap12\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6740:7847  if (oldSelectorsSlotCount != selectorSlotCount) {... */\ntag_152:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7869:7888  selectorInSlotIndex */\n  dup7\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7892:7893  0 */\n  0x00\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7869:7893  selectorInSlotIndex == 0 */\n  sub\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7865:8015  if (selectorInSlotIndex == 0) {... */\n  tag_153\n  jumpi\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7924:7958  l.selectorSlots[selectorSlotCount] */\n  0x00\n  dup9\n  dup2\n  mstore\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7924:7939  l.selectorSlots */\n  0x02\n  dup16\n  add\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7924:7958  l.selectorSlots[selectorSlotCount] */\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7917:7958  delete l.selectorSlots[selectorSlotCount] */\n  dup2\n  swap1\n  sstore\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7924:7958  l.selectorSlots[selectorSlotCount] */\n  swap12\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7865:8015  if (selectorInSlotIndex == 0) {... */\ntag_153:\n  pop\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5033:5036  i++ */\n  0x01\n  swap1\n  swap4\n  add\n  swap3\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4986:8029  for (uint256 i; i < facetCut.selectors.length; i++) {... */\n  tag_141\n  swap2\n  pop\n  pop\n  jump\ntag_142:\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8081:8082  3 */\n  0x03\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8060:8082  selectorSlotCount << 3 */\n  swap2\n  swap1\n  swap2\n  shl\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8059:8105  (selectorSlotCount << 3) | selectorInSlotIndex */\n  or\n  swap7\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8143:8155  selectorSlot */\n  swap4\n  swap6\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4499:8173  function _removeFacetSelectors(... */\n  swap3\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9265:9928  function _initialize(address target, bytes memory data) private {... */\ntag_110:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9370:9381  data.length */\n  dup1\n  mload\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9370:9386  data.length == 0 */\n  iszero\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9344:9364  target == address(0) */\n  dup4\n  and\n  iszero\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9343:9387  (target == address(0)) != (data.length == 0) */\n  eq\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9339:9458  if ((target == address(0)) != (data.length == 0))... */\n  tag_155\n  jumpi\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9408:9458  DiamondWritable__InvalidInitializationParameters() */\n  mload(0x40)\n  shl(0xe0, 0x26df4ccd)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9339:9458  if ((target == address(0)) != (data.length == 0))... */\ntag_155:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9473:9493  target != address(0) */\n  dup3\n  and\n  iszero\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9469:9922  if (target != address(0)) {... */\n  tag_156\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9513:9536  target != address(this) */\n  dup3\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9531:9535  this */\n  address\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9513:9536  target != address(this) */\n  eq\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9509:9658  if (target != address(this)) {... */\n  tag_159\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9561:9578  target.isContract */\n  dup3\n  and\n    /* \"imports/solidstate/contracts/utils/AddressUtils.sol\":568:588  extcodesize(account) */\n  extcodesize\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9556:9643  if (!target.isContract())... */\n  tag_159\n  jumpi\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9609:9643  DiamondWritable__TargetHasNoCode() */\n  mload(0x40)\n  shl(0xe2, 0x3ddc5cab)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9556:9643  if (!target.isContract())... */\ntag_159:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9673:9685  bool success */\n  0x00\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9691:9697  target */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9691:9710  target.delegatecall */\n  and\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9711:9715  data */\n  dup3\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9691:9716  target.delegatecall(data) */\n  mload(0x40)\n  tag_160\n  swap2\n  swap1\n  tag_161\n  jump\t// in\ntag_160:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_164\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_163)\ntag_164:\n  0x60\n  swap2\n  pop\ntag_163:\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9672:9716  (bool success, ) = target.delegatecall(data) */\n  pop\n  swap1\n  pop\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9736:9743  success */\n  dup1\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9731:9912  if (!success) {... */\n  tag_132\n  jumpi\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9815:9831  returndatasize() */\n  returndatasize\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9812:9813  0 */\n  0x00\n  dup1\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9794:9832  returndatacopy(0, 0, returndatasize()) */\n  returndatacopy\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9863:9879  returndatasize() */\n  returndatasize\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9812:9813  0 */\n  0x00\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9853:9880  revert(0, returndatasize()) */\n  revert\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9469:9922  if (target != address(0)) {... */\ntag_156:\n    /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9265:9928  function _initialize(address target, bytes memory data) private {... */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":146:378   */\ntag_9:\n    /* \"#utility.yul\":185:188   */\n  0x00\n    /* \"#utility.yul\":206:223   */\n  0x01\n  dup3\n  add\n    /* \"#utility.yul\":203:343   */\n  tag_176\n  jumpi\n    /* \"#utility.yul\":265:275   */\n  0x4e487b71\n    /* \"#utility.yul\":260:263   */\n  0xe0\n    /* \"#utility.yul\":256:276   */\n  shl\n    /* \"#utility.yul\":253:254   */\n  0x00\n    /* \"#utility.yul\":246:277   */\n  mstore\n    /* \"#utility.yul\":300:304   */\n  0x11\n    /* \"#utility.yul\":297:298   */\n  0x04\n    /* \"#utility.yul\":290:305   */\n  mstore\n    /* \"#utility.yul\":328:332   */\n  0x24\n    /* \"#utility.yul\":325:326   */\n  0x00\n    /* \"#utility.yul\":318:333   */\n  revert\n    /* \"#utility.yul\":203:343   */\ntag_176:\n  pop\n    /* \"#utility.yul\":370:371   */\n  0x01\n    /* \"#utility.yul\":359:372   */\n  add\n  swap1\n    /* \"#utility.yul\":146:378   */\n  jump\t// out\n    /* \"#utility.yul\":383:510   */\ntag_12:\n    /* \"#utility.yul\":444:454   */\n  0x4e487b71\n    /* \"#utility.yul\":439:442   */\n  0xe0\n    /* \"#utility.yul\":435:455   */\n  shl\n    /* \"#utility.yul\":432:433   */\n  0x00\n    /* \"#utility.yul\":425:456   */\n  mstore\n    /* \"#utility.yul\":475:479   */\n  0x32\n    /* \"#utility.yul\":472:473   */\n  0x04\n    /* \"#utility.yul\":465:480   */\n  mstore\n    /* \"#utility.yul\":499:503   */\n  0x24\n    /* \"#utility.yul\":496:497   */\n  0x00\n    /* \"#utility.yul\":489:504   */\n  revert\n    /* \"#utility.yul\":515:642   */\ntag_60:\n    /* \"#utility.yul\":576:586   */\n  0x4e487b71\n    /* \"#utility.yul\":571:574   */\n  0xe0\n    /* \"#utility.yul\":567:587   */\n  shl\n    /* \"#utility.yul\":564:565   */\n  0x00\n    /* \"#utility.yul\":557:588   */\n  mstore\n    /* \"#utility.yul\":607:611   */\n  0x21\n    /* \"#utility.yul\":604:605   */\n  0x04\n    /* \"#utility.yul\":597:612   */\n  mstore\n    /* \"#utility.yul\":631:635   */\n  0x24\n    /* \"#utility.yul\":628:629   */\n  0x00\n    /* \"#utility.yul\":621:636   */\n  revert\n    /* \"#utility.yul\":756:1006   */\ntag_171:\n    /* \"#utility.yul\":841:842   */\n  0x00\n    /* \"#utility.yul\":851:964   */\ntag_181:\n    /* \"#utility.yul\":865:871   */\n  dup4\n    /* \"#utility.yul\":862:863   */\n  dup2\n    /* \"#utility.yul\":859:872   */\n  lt\n    /* \"#utility.yul\":851:964   */\n  iszero\n  tag_183\n  jumpi\n    /* \"#utility.yul\":941:952   */\n  dup2\n  dup2\n  add\n    /* \"#utility.yul\":935:953   */\n  mload\n    /* \"#utility.yul\":922:933   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":915:954   */\n  mstore\n    /* \"#utility.yul\":887:889   */\n  0x20\n    /* \"#utility.yul\":880:890   */\n  add\n    /* \"#utility.yul\":851:964   */\n  jump(tag_181)\ntag_183:\n  pop\n  pop\n    /* \"#utility.yul\":998:999   */\n  0x00\n    /* \"#utility.yul\":980:996   */\n  swap2\n  add\n    /* \"#utility.yul\":973:1000   */\n  mstore\n    /* \"#utility.yul\":756:1006   */\n  jump\t// out\n    /* \"#utility.yul\":1011:1281   */\ntag_172:\n    /* \"#utility.yul\":1052:1055   */\n  0x00\n    /* \"#utility.yul\":1090:1095   */\n  dup2\n    /* \"#utility.yul\":1084:1096   */\n  mload\n    /* \"#utility.yul\":1117:1123   */\n  dup1\n    /* \"#utility.yul\":1112:1115   */\n  dup5\n    /* \"#utility.yul\":1105:1124   */\n  mstore\n    /* \"#utility.yul\":1133:1209   */\n  tag_185\n    /* \"#utility.yul\":1202:1208   */\n  dup2\n    /* \"#utility.yul\":1195:1199   */\n  0x20\n    /* \"#utility.yul\":1190:1193   */\n  dup7\n    /* \"#utility.yul\":1186:1200   */\n  add\n    /* \"#utility.yul\":1179:1183   */\n  0x20\n    /* \"#utility.yul\":1172:1177   */\n  dup7\n    /* \"#utility.yul\":1168:1184   */\n  add\n    /* \"#utility.yul\":1133:1209   */\n  tag_171\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":1263:1265   */\n  0x1f\n    /* \"#utility.yul\":1242:1257   */\n  add\n  not(0x1f)\n    /* \"#utility.yul\":1238:1267   */\n  and\n    /* \"#utility.yul\":1229:1268   */\n  swap3\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":1270:1274   */\n  0x20\n    /* \"#utility.yul\":1225:1275   */\n  add\n  swap3\n    /* \"#utility.yul\":1011:1281   */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1286:3376   */\ntag_108:\n    /* \"#utility.yul\":1554:1558   */\n  0x00\n    /* \"#utility.yul\":1583:1585   */\n  0x60\n    /* \"#utility.yul\":1623:1625   */\n  dup1\n    /* \"#utility.yul\":1612:1621   */\n  dup4\n    /* \"#utility.yul\":1608:1626   */\n  add\n    /* \"#utility.yul\":1653:1655   */\n  dup2\n    /* \"#utility.yul\":1642:1651   */\n  dup5\n    /* \"#utility.yul\":1635:1656   */\n  mstore\n    /* \"#utility.yul\":1676:1682   */\n  dup1\n    /* \"#utility.yul\":1711:1717   */\n  dup8\n    /* \"#utility.yul\":1705:1718   */\n  mload\n    /* \"#utility.yul\":1742:1748   */\n  dup1\n    /* \"#utility.yul\":1734:1740   */\n  dup4\n    /* \"#utility.yul\":1727:1749   */\n  mstore\n    /* \"#utility.yul\":1768:1771   */\n  0x80\n    /* \"#utility.yul\":1758:1771   */\n  swap3\n  pop\n    /* \"#utility.yul\":1802:1804   */\n  dup3\n    /* \"#utility.yul\":1791:1800   */\n  dup7\n    /* \"#utility.yul\":1787:1805   */\n  add\n    /* \"#utility.yul\":1780:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1864:1866   */\n  dup3\n    /* \"#utility.yul\":1854:1860   */\n  dup2\n    /* \"#utility.yul\":1851:1852   */\n  0x05\n    /* \"#utility.yul\":1847:1861   */\n  shl\n    /* \"#utility.yul\":1836:1845   */\n  dup8\n    /* \"#utility.yul\":1832:1862   */\n  add\n    /* \"#utility.yul\":1828:1867   */\n  add\n    /* \"#utility.yul\":1886:1890   */\n  0x20\n    /* \"#utility.yul\":1925:1927   */\n  dup1\n    /* \"#utility.yul\":1917:1923   */\n  dup12\n    /* \"#utility.yul\":1913:1928   */\n  add\n    /* \"#utility.yul\":1946:1947   */\n  0x00\n    /* \"#utility.yul\":1956:3205   */\ntag_187:\n    /* \"#utility.yul\":1970:1976   */\n  dup5\n    /* \"#utility.yul\":1967:1968   */\n  dup2\n    /* \"#utility.yul\":1964:1977   */\n  lt\n    /* \"#utility.yul\":1956:3205   */\n  iszero\n  tag_189\n  jumpi\n    /* \"#utility.yul\":2035:2057   */\n  dup10\n  dup5\n  sub\n  not(0x7f)\n    /* \"#utility.yul\":2031:2068   */\n  add\n    /* \"#utility.yul\":2019:2069   */\n  dup7\n  mstore\n    /* \"#utility.yul\":2092:2105   */\n  dup2\n  mload\n    /* \"#utility.yul\":2179:2188   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":2175:2210   */\n  and\n    /* \"#utility.yul\":2160:2211   */\n  dup6\n  mstore\n    /* \"#utility.yul\":2250:2261   */\n  dup4\n  dup2\n  add\n    /* \"#utility.yul\":2244:2262   */\n  mload\n    /* \"#utility.yul\":2132:2147   */\n  dup10\n  dup7\n  add\n  swap1\n    /* \"#utility.yul\":2302:2303   */\n  0x03\n    /* \"#utility.yul\":2285:2304   */\n  dup2\n  lt\n    /* \"#utility.yul\":2275:2445   */\n  tag_190\n  jumpi\n    /* \"#utility.yul\":2355:2365   */\n  0x4e487b71\n    /* \"#utility.yul\":2350:2353   */\n  0xe0\n    /* \"#utility.yul\":2346:2366   */\n  shl\n    /* \"#utility.yul\":2343:2344   */\n  0x00\n    /* \"#utility.yul\":2336:2367   */\n  mstore\n    /* \"#utility.yul\":2394:2398   */\n  0x21\n    /* \"#utility.yul\":2391:2392   */\n  0x04\n    /* \"#utility.yul\":2384:2399   */\n  mstore\n    /* \"#utility.yul\":2426:2430   */\n  0x24\n    /* \"#utility.yul\":2423:2424   */\n  0x00\n    /* \"#utility.yul\":2416:2431   */\n  revert\n    /* \"#utility.yul\":2275:2445   */\ntag_190:\n    /* \"#utility.yul\":2465:2480   */\n  dup7\n  dup7\n  add\n    /* \"#utility.yul\":2458:2495   */\n  mstore\n    /* \"#utility.yul\":2518:2522   */\n  0x40\n    /* \"#utility.yul\":2563:2574   */\n  swap2\n  dup3\n  add\n    /* \"#utility.yul\":2557:2575   */\n  mload\n    /* \"#utility.yul\":2595:2610   */\n  swap2\n  dup7\n  add\n    /* \"#utility.yul\":2588:2615   */\n  dup11\n  swap1\n  mstore\n    /* \"#utility.yul\":2676:2697   */\n  dup2\n  mload\n    /* \"#utility.yul\":2710:2734   */\n  swap1\n  dup2\n  swap1\n  mstore\n    /* \"#utility.yul\":2800:2823   */\n  swap1\n  dup5\n  add\n  swap1\n  0x00\n  swap1\n    /* \"#utility.yul\":2756:2771   */\n  dup10\n  dup8\n  add\n  swap1\n    /* \"#utility.yul\":2861:3097   */\ntag_191:\n    /* \"#utility.yul\":2877:2885   */\n  dup1\n    /* \"#utility.yul\":2872:2875   */\n  dup4\n    /* \"#utility.yul\":2869:2886   */\n  lt\n    /* \"#utility.yul\":2861:3097   */\n  iszero\n  tag_193\n  jumpi\n    /* \"#utility.yul\":2958:2973   */\n  dup4\n  mload\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"#utility.yul\":2954:2996   */\n  and\n    /* \"#utility.yul\":2940:2997   */\n  dup3\n  mstore\n    /* \"#utility.yul\":3066:3083   */\n  swap3\n  dup7\n  add\n  swap3\n    /* \"#utility.yul\":2905:2906   */\n  0x01\n    /* \"#utility.yul\":2896:2907   */\n  swap3\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3023:3037   */\n  swap1\n  dup7\n  add\n  swap1\n    /* \"#utility.yul\":2861:3097   */\n  jump(tag_191)\ntag_193:\n  pop\n    /* \"#utility.yul\":3183:3195   */\n  swap8\n  dup6\n  add\n  swap8\n    /* \"#utility.yul\":3120:3125   */\n  swap6\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3148:3163   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":1992:1993   */\n  0x01\n    /* \"#utility.yul\":1985:1994   */\n  add\n    /* \"#utility.yul\":1956:3205   */\n  jump(tag_187)\ntag_189:\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":713:744   */\n  dup11\n  and\n    /* \"#utility.yul\":3241:3259   */\n  swap1\n  dup9\n  add\n    /* \"#utility.yul\":701:745   */\n  mstore\n    /* \"#utility.yul\":3298:3320   */\n  dup7\n  dup2\n  sub\n    /* \"#utility.yul\":3291:3295   */\n  0x40\n    /* \"#utility.yul\":3276:3296   */\n  dup9\n  add\n    /* \"#utility.yul\":3269:3321   */\n  mstore\n    /* \"#utility.yul\":3338:3370   */\n  tag_195\n    /* \"#utility.yul\":3302:3308   */\n  dup2\n    /* \"#utility.yul\":3355:3361   */\n  dup10\n    /* \"#utility.yul\":3338:3370   */\n  tag_172\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":3330:3370   */\n  swap11\n    /* \"#utility.yul\":1286:3376   */\n  swap10\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3381:3668   */\ntag_161:\n    /* \"#utility.yul\":3510:3513   */\n  0x00\n    /* \"#utility.yul\":3548:3554   */\n  dup3\n    /* \"#utility.yul\":3542:3555   */\n  mload\n    /* \"#utility.yul\":3564:3630   */\n  tag_197\n    /* \"#utility.yul\":3623:3629   */\n  dup2\n    /* \"#utility.yul\":3618:3621   */\n  dup5\n    /* \"#utility.yul\":3611:3615   */\n  0x20\n    /* \"#utility.yul\":3603:3609   */\n  dup8\n    /* \"#utility.yul\":3599:3616   */\n  add\n    /* \"#utility.yul\":3564:3630   */\n  tag_171\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":3646:3662   */\n  swap2\n  swap1\n  swap2\n  add\n  swap3\n    /* \"#utility.yul\":3381:3668   */\n  swap2\n  pop\n  pop\n  jump\t// out\ntag_173:\n    /* \"diamonds/Diamond.sol\":152:182  contract Diamond is ERC2535 {} */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"diamonds/Diamond.sol\":152:182  contract Diamond is ERC2535 {} */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8ab5150a\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x8ab5150a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x91423765\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xadfca15e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xcdffacc6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1f931c1c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2c408059\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x52ef6b2c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x79ba5097\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7a0ed627\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":582:604  address implementation */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":607:627  _getImplementation() */\n      tag_20\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":607:625  _getImplementation */\n      tag_21\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":607:627  _getImplementation() */\n      jump\t// in\n    tag_20:\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":582:627  address implementation = _getImplementation() */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":643:668  implementation.isContract */\n      dup2\n      and\n        /* \"imports/solidstate/contracts/utils/AddressUtils.sol\":568:588  extcodesize(account) */\n      extcodesize\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":638:727  if (!implementation.isContract())... */\n      tag_24\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":691:727  Proxy__ImplementationIsNotContract() */\n      mload(0x40)\n      shl(0xe2, 0x21f27f0d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":638:727  if (!implementation.isContract())... */\n    tag_24:\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":780:794  calldatasize() */\n      calldatasize\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":777:778  0 */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":774:775  0 */\n      dup1\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":761:795  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":977:978  0 */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":958:959  0 */\n      dup1\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":926:940  calldatasize() */\n      calldatasize\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":907:908  0 */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":875:889  implementation */\n      dup5\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":852:857  gas() */\n      gas\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":822:992  delegatecall(... */\n      delegatecall\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":1026:1042  returndatasize() */\n      returndatasize\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":1023:1024  0 */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":1020:1021  0 */\n      dup1\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":1005:1043  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":1064:1070  result */\n      dup1\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":1083:1149  case 0 {... */\n      dup1\n      iszero\n      tag_26\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":1198:1214  returndatasize() */\n      returndatasize\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":1195:1196  0 */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":1188:1215  return(0, returndatasize()) */\n      return\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":1083:1149  case 0 {... */\n    tag_26:\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":1118:1134  returndatasize() */\n      returndatasize\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":1115:1116  0 */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":1108:1135  revert(0, returndatasize()) */\n      revert\n        /* \"imports/solidstate/contracts/proxy/Proxy.sol\":1057:1229  switch result... */\n    tag_25:\n      stop\n        /* \"imports/solidstate/contracts/introspection/ERC165/base/ERC165Base.sol\":444:573  function supportsInterface(bytes4 interfaceId) public view returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":628:687  ERC165BaseStorage.layout().supportedInterfaces[interfaceId] */\n      and\n        /* \"imports/solidstate/contracts/introspection/ERC165/base/ERC165Base.sol\":512:516  bool */\n      0x00\n        /* \"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":628:687  ERC165BaseStorage.layout().supportedInterfaces[interfaceId] */\n      swap1\n      dup2\n      mstore\n        /* \"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol\":219:271  keccak256('solidstate.contracts.storage.ERC165Base') */\n      0xfc606c433378e3a7e0a6a531deac289b66caa1b4aa8554fd4ab2c6f1570f92d8\n        /* \"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":628:687  ERC165BaseStorage.layout().supportedInterfaces[interfaceId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"imports/solidstate/contracts/introspection/ERC165/base/ERC165Base.sol\":444:573  function supportsInterface(bytes4 interfaceId) public view returns (bool) {... */\n      jump\n    tag_28:\n      mload(0x40)\n        /* \"#utility.yul\":546:560   */\n      swap1\n      iszero\n        /* \"#utility.yul\":539:561   */\n      iszero\n        /* \"#utility.yul\":521:562   */\n      dup2\n      mstore\n        /* \"#utility.yul\":509:511   */\n      0x20\n        /* \"#utility.yul\":494:512   */\n      add\n        /* \"imports/solidstate/contracts/introspection/ERC165/base/ERC165Base.sol\":444:573  function supportsInterface(bytes4 interfaceId) public view returns (bool) {... */\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol\":495:685  function diamondCut(... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_25\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n        /* \"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":539:701  function getFallbackAddress()... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2391:2423   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2373:2424   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2361:2363   */\n      0x20\n        /* \"#utility.yul\":2346:2364   */\n      add\n        /* \"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":539:701  function getFallbackAddress()... */\n      tag_32\n        /* \"#utility.yul\":2227:2430   */\n      jump\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4281:5755  function facetAddresses()... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnable.sol\":654:748  function acceptOwnership() public virtual onlyNomineeOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_25\n      tag_51\n      jump\t// in\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":436:2985  function facets() external view returns (Facet[] memory diamondFacets) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnable.sol\":499:600  function nomineeOwner() public view virtual returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_40\n      tag_59\n      jump\t// in\n        /* \"imports/solidstate/contracts/access/ownable/Ownable.sol\":378:465  function owner() public view virtual returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_40\n      tag_63\n      jump\t// in\n        /* \"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":759:884  function setFallbackAddress(address fallbackAddress) external onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_25\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3043:4223  function facetFunctionSelectors(... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_71\n      tag_72\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5813:5991  function facetAddress(... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_40\n      tag_78\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_78:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5938:5982  DiamondBaseStorage.layout().facets[selector] */\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5889:5902  address facet */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5938:5982  DiamondBaseStorage.layout().facets[selector] */\n      swap1\n      dup2\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_b4a3f1194ff204df3421c76163ff361a7821792777bfc1dcb14fa8d3eb97e7f5\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5922:5984  address(bytes20(DiamondBaseStorage.layout().facets[selector])) */\n      0x60\n      shr\n      swap1\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5813:5991  function facetAddress(... */\n      jump\n        /* \"imports/solidstate/contracts/access/ownable/Ownable.sol\":514:627  function transferOwnership(address account) public virtual onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_25\n      tag_83\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n        /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":3281:3493  function _getImplementation()... */\n    tag_21:\n        /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":3405:3427  address implementation */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":3460:3486  super._getImplementation() */\n      tag_86\n        /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":3460:3484  super._getImplementation */\n      tag_87\n        /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":3460:3486  super._getImplementation() */\n      jump\t// in\n    tag_86:\n        /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":3443:3486  implementation = super._getImplementation() */\n      swap1\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":3281:3493  function _getImplementation()... */\n      swap1\n      jump\t// out\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol\":495:685  function diamondCut(... */\n    tag_38:\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":436:444  _owner() */\n      tag_93\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":436:442  _owner */\n      tag_94\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":436:444  _owner() */\n      jump\t// in\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":422:444  msg.sender != _owner() */\n      and\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":422:432  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":422:444  msg.sender != _owner() */\n      and\n      eq\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":418:472  if (msg.sender != _owner()) revert Ownable__NotOwner() */\n      tag_95\n      jumpi\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":453:472  Ownable__NotOwner() */\n      mload(0x40)\n      shl(0xe0, 0x2f7a8ee1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":418:472  if (msg.sender != _owner()) revert Ownable__NotOwner() */\n    tag_95:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol\":642:678  _diamondCut(facetCuts, target, data) */\n      tag_97\n      tag_98\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol\":654:663  facetCuts */\n      dup6\n      dup8\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol\":642:678  _diamondCut(facetCuts, target, data) */\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol\":665:671  target */\n      dup5\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol\":673:677  data */\n      dup5\n      dup5\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol\":642:678  _diamondCut(facetCuts, target, data) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol\":642:653  _diamondCut */\n      tag_100\n      swap3\n      pop\n      pop\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol\":642:678  _diamondCut(facetCuts, target, data) */\n      jump\t// in\n    tag_97:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol\":495:685  function diamondCut(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":539:701  function getFallbackAddress()... */\n    tag_41:\n        /* \"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":616:639  address fallbackAddress */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":673:694  _getFallbackAddress() */\n      tag_86\n        /* \"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":1620:1663  DiamondBaseStorage.layout().fallbackAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc96))\n      swap1\n        /* \"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":1469:1670  function _getFallbackAddress()... */\n      jump\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4281:5755  function facetAddresses()... */\n    tag_46:\n      0x00\n      dup1\n      mload\n      0x20\n      data_a5e74bf718c7d6929bf8f422c8be92118782759abac1bf7601c5a938d6f306a1\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4498:4513  l.selectorCount */\n      sload\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4354:4380  address[] memory addresses */\n      0x60\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_b4a3f1194ff204df3421c76163ff361a7821792777bfc1dcb14fa8d3eb97e7f5\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":584:637  keccak256('solidstate.contracts.storage.DiamondBase') */\n      swap1\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4498:4513  l.selectorCount */\n      0xffff\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4484:4514  new address[](l.selectorCount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_108\n      jumpi\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_110\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_110:\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4472:4514  addresses = new address[](l.selectorCount) */\n      swap2\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4524:4541  uint256 numFacets */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4551:4572  uint256 selectorIndex */\n      dup1\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4588:4605  uint256 slotIndex */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4583:5620  for (uint256 slotIndex; selectorIndex < l.selectorCount; slotIndex++) {... */\n    tag_111:\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4623:4638  l.selectorCount */\n      0x01\n      dup5\n      add\n      sload\n      0xffff\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4607:4638  selectorIndex < l.selectorCount */\n      dup3\n      lt\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4583:5620  for (uint256 slotIndex; selectorIndex < l.selectorCount; slotIndex++) {... */\n      iszero\n      tag_112\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4667:4679  bytes32 slot */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4682:4708  l.selectorSlots[slotIndex] */\n      dup2\n      dup2\n      mstore\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4682:4697  l.selectorSlots */\n      0x02\n      dup6\n      add\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4682:4708  l.selectorSlots[slotIndex] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4723:5610  for (... */\n    tag_114:\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4808:4809  8 */\n      0x08\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4788:4805  selectorSlotIndex */\n      dup2\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4788:4809  selectorSlotIndex < 8 */\n      lt\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4723:5610  for (... */\n      iszero\n      tag_115\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4879:4894  selectorIndex++ */\n      dup4\n      tag_117\n      dup2\n      tag_118\n      jump\t// in\n    tag_117:\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4933:4948  l.selectorCount */\n      0x01\n      dup9\n      add\n      sload\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4879:4894  selectorIndex++ */\n      swap1\n      swap6\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4933:4948  l.selectorCount */\n      0xffff\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4917:4948  selectorIndex > l.selectorCount */\n      dup6\n      gt\n      swap1\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4972:4977  break */\n      tag_115\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4913:4996  if (selectorIndex > l.selectorCount) {... */\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5069:5070  5 */\n      0x05\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5048:5070  selectorSlotIndex << 5 */\n      dup2\n      swap1\n      shl\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5039:5071  slot << (selectorSlotIndex << 5) */\n      dup3\n      swap1\n      shl\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5122:5140  l.facets[selector] */\n      dup2\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5014:5029  bytes4 selector */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5122:5140  l.facets[selector] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup9\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5106:5142  address(bytes20(l.facets[selector])) */\n      0x60\n      shr\n      swap1\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5014:5029  bytes4 selector */\n      dup1\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5197:5435  for (uint256 facetIndex; facetIndex < numFacets; facetIndex++) {... */\n    tag_120:\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5235:5244  numFacets */\n      dup9\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5222:5232  facetIndex */\n      dup2\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5222:5244  facetIndex < numFacets */\n      lt\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5197:5435  for (uint256 facetIndex; facetIndex < numFacets; facetIndex++) {... */\n      iszero\n      tag_121\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5295:5304  addresses */\n      dup11\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5305:5315  facetIndex */\n      dup2\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5295:5316  addresses[facetIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_124\n      jumpi\n      tag_124\n      tag_125\n      jump\t// in\n    tag_124:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5286:5316  facet == addresses[facetIndex] */\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5286:5291  facet */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5286:5316  facet == addresses[facetIndex] */\n      and\n      sub\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5282:5417  if (facet == addresses[facetIndex]) {... */\n      tag_126\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5359:5363  true */\n      0x01\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5344:5363  continueLoop = true */\n      swap2\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5389:5394  break */\n      jump(tag_121)\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5282:5417  if (facet == addresses[facetIndex]) {... */\n    tag_126:\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5246:5258  facetIndex++ */\n      dup1\n      tag_127\n      dup2\n      tag_118\n      jump\t// in\n    tag_127:\n      swap2\n      pop\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5197:5435  for (uint256 facetIndex; facetIndex < numFacets; facetIndex++) {... */\n      jump(tag_120)\n    tag_121:\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5457:5469  continueLoop */\n      dup1\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5453:5520  if (continueLoop) {... */\n      iszero\n      tag_128\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5493:5501  continue */\n      pop\n      pop\n      pop\n      jump(tag_116)\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5453:5520  if (continueLoop) {... */\n    tag_128:\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5561:5566  facet */\n      dup2\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5538:5547  addresses */\n      dup11\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5548:5557  numFacets */\n      dup10\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5538:5558  addresses[numFacets] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_130\n      jumpi\n      tag_130\n      tag_125\n      jump\t// in\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5538:5566  addresses[numFacets] = facet */\n      swap1\n      swap3\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5538:5558  addresses[numFacets] */\n      0x20\n      swap3\n      dup4\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      add\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5538:5566  addresses[numFacets] = facet */\n      mstore\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5584:5595  numFacets++ */\n      dup8\n      tag_131\n      dup2\n      tag_118\n      jump\t// in\n    tag_131:\n      swap9\n      pop\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4861:5610  {... */\n      pop\n      pop\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4723:5610  for (... */\n    tag_116:\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4827:4846  selectorSlotIndex++ */\n      dup1\n      tag_132\n      dup2\n      tag_118\n      jump\t// in\n    tag_132:\n      swap2\n      pop\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4723:5610  for (... */\n      jump(tag_114)\n    tag_115:\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4653:5620  {... */\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4640:4651  slotIndex++ */\n      dup1\n      dup1\n      tag_133\n      swap1\n      tag_118\n      jump\t// in\n    tag_133:\n      swap2\n      pop\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4583:5620  for (uint256 slotIndex; selectorIndex < l.selectorCount; slotIndex++) {... */\n      jump(tag_111)\n    tag_112:\n      pop\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5711:5739  mstore(addresses, numFacets) */\n      dup3\n      mstore\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":5718:5727  addresses */\n      swap1\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4281:5755  function facetAddresses()... */\n      jump\t// out\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnable.sol\":654:748  function acceptOwnership() public virtual onlyNomineeOwner {... */\n    tag_51:\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":387:402  _nomineeOwner() */\n      tag_135\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":387:400  _nomineeOwner */\n      tag_136\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":387:402  _nomineeOwner() */\n      jump\t// in\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":373:402  msg.sender != _nomineeOwner() */\n      and\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":373:383  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":373:402  msg.sender != _nomineeOwner() */\n      and\n      eq\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":369:453  if (msg.sender != _nomineeOwner())... */\n      tag_137\n      jumpi\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":423:453  SafeOwnable__NotNomineeOwner() */\n      mload(0x40)\n      shl(0xe0, 0xefd1052d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":369:453  if (msg.sender != _nomineeOwner())... */\n    tag_137:\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnable.sol\":723:741  _acceptOwnership() */\n      tag_139\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnable.sol\":723:739  _acceptOwnership */\n      tag_140\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnable.sol\":723:741  _acceptOwnership() */\n      jump\t// in\n    tag_139:\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnable.sol\":654:748  function acceptOwnership() public virtual onlyNomineeOwner {... */\n      jump\t// out\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":436:2985  function facets() external view returns (Facet[] memory diamondFacets) {... */\n    tag_54:\n      0x00\n      dup1\n      mload\n      0x20\n      data_a5e74bf718c7d6929bf8f422c8be92118782759abac1bf7601c5a938d6f306a1\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":621:636  l.selectorCount */\n      sload\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":477:505  Facet[] memory diamondFacets */\n      0x60\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_b4a3f1194ff204df3421c76163ff361a7821792777bfc1dcb14fa8d3eb97e7f5\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":584:637  keccak256('solidstate.contracts.storage.DiamondBase') */\n      swap1\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":621:636  l.selectorCount */\n      0xffff\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":609:637  new Facet[](l.selectorCount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_144\n      jumpi\n      tag_144\n      tag_109\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_145\n      jumpi\n      dup2\n      0x20\n      add\n    tag_146:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      0x60\n      0x20\n      dup3\n      add\n      mstore\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_146\n      jumpi\n      swap1\n      pop\n    tag_145:\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":695:710  l.selectorCount */\n      0x01\n      dup3\n      add\n      sload\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":593:637  diamondFacets = new Facet[](l.selectorCount) */\n      swap1\n      swap3\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":648:680  uint8[] memory numFacetSelectors */\n      0x00\n      swap1\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":695:710  l.selectorCount */\n      0xffff\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":683:711  new uint8[](l.selectorCount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_150\n      jumpi\n      tag_150\n      tag_109\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_151\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_151:\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":648:711  uint8[] memory numFacetSelectors = new uint8[](l.selectorCount) */\n      swap1\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":721:738  uint256 numFacets */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":748:769  uint256 selectorIndex */\n      dup1\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":828:845  uint256 slotIndex */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":823:2504  for (uint256 slotIndex; selectorIndex < l.selectorCount; slotIndex++) {... */\n    tag_152:\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":863:878  l.selectorCount */\n      0x01\n      dup6\n      add\n      sload\n      0xffff\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":847:878  selectorIndex < l.selectorCount */\n      dup3\n      lt\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":823:2504  for (uint256 slotIndex; selectorIndex < l.selectorCount; slotIndex++) {... */\n      iszero\n      tag_153\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":907:919  bytes32 slot */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":922:948  l.selectorSlots[slotIndex] */\n      dup2\n      dup2\n      mstore\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":922:937  l.selectorSlots */\n      0x02\n      dup7\n      add\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":922:948  l.selectorSlots[slotIndex] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":963:2494  for (... */\n    tag_155:\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1048:1049  8 */\n      0x08\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1028:1045  selectorSlotIndex */\n      dup2\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1028:1049  selectorSlotIndex < 8 */\n      lt\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":963:2494  for (... */\n      iszero\n      tag_156\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1119:1134  selectorIndex++ */\n      dup4\n      tag_158\n      dup2\n      tag_118\n      jump\t// in\n    tag_158:\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1173:1188  l.selectorCount */\n      0x01\n      dup10\n      add\n      sload\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1119:1134  selectorIndex++ */\n      swap1\n      swap6\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1173:1188  l.selectorCount */\n      0xffff\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1157:1188  selectorIndex > l.selectorCount */\n      dup6\n      gt\n      swap1\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1212:1217  break */\n      tag_156\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1153:1236  if (selectorIndex > l.selectorCount) {... */\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1309:1310  5 */\n      0x05\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1288:1310  selectorSlotIndex << 5 */\n      dup2\n      swap1\n      shl\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1279:1311  slot << (selectorSlotIndex << 5) */\n      dup3\n      swap1\n      shl\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1362:1380  l.facets[selector] */\n      dup2\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1254:1269  bytes4 selector */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1362:1380  l.facets[selector] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup10\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1346:1382  address(bytes20(l.facets[selector])) */\n      0x60\n      shr\n      swap1\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1254:1269  bytes4 selector */\n      dup1\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1437:2070  for (uint256 facetIndex; facetIndex < numFacets; facetIndex++) {... */\n    tag_160:\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1475:1484  numFacets */\n      dup9\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1462:1472  facetIndex */\n      dup2\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1462:1484  facetIndex < numFacets */\n      lt\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1437:2070  for (uint256 facetIndex; facetIndex < numFacets; facetIndex++) {... */\n      iszero\n      tag_161\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1562:1567  facet */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1526:1567  diamondFacets[facetIndex].target == facet */\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1526:1539  diamondFacets */\n      dup13\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1540:1550  facetIndex */\n      dup3\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1526:1551  diamondFacets[facetIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_164\n      jumpi\n      tag_164\n      tag_125\n      jump\t// in\n    tag_164:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1526:1558  diamondFacets[facetIndex].target */\n      0x00\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1526:1567  diamondFacets[facetIndex].target == facet */\n      and\n      sub\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1522:2052  if (diamondFacets[facetIndex].target == facet) {... */\n      tag_165\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1718:1726  selector */\n      dup4\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1595:1608  diamondFacets */\n      dup13\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1609:1619  facetIndex */\n      dup3\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1595:1620  diamondFacets[facetIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_167\n      jumpi\n      tag_167\n      tag_125\n      jump\t// in\n    tag_167:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1595:1630  diamondFacets[facetIndex].selectors */\n      0x20\n      add\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1660:1677  numFacetSelectors */\n      dup12\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1678:1688  facetIndex */\n      dup4\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1660:1689  numFacetSelectors[facetIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_169\n      jumpi\n      tag_169\n      tag_125\n      jump\t// in\n    tag_169:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1595:1715  diamondFacets[facetIndex].selectors[... */\n      0xff\n      and\n      dup2\n      mload\n      dup2\n      lt\n      tag_171\n      jumpi\n      tag_171\n      tag_125\n      jump\t// in\n    tag_171:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1595:1726  diamondFacets[facetIndex].selectors[... */\n      swap1\n      not(sub(shl(0xe0, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      not(sub(shl(0xe0, 0x01), 0x01))\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1892:1895  255 */\n      0xff\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1860:1877  numFacetSelectors */\n      dup11\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1878:1888  facetIndex */\n      dup3\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1860:1889  numFacetSelectors[facetIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_173\n      jumpi\n      tag_173\n      tag_125\n      jump\t// in\n    tag_173:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1860:1895  numFacetSelectors[facetIndex] < 255 */\n      0xff\n      and\n      lt\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1852:1896  require(numFacetSelectors[facetIndex] < 255) */\n      tag_174\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_174:\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1922:1939  numFacetSelectors */\n      dup10\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1940:1950  facetIndex */\n      dup2\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1922:1951  numFacetSelectors[facetIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_176\n      jumpi\n      tag_176\n      tag_125\n      jump\t// in\n    tag_176:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1922:1953  numFacetSelectors[facetIndex]++ */\n      dup1\n      mload\n      dup1\n      swap2\n      swap1\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      0xff\n      and\n      swap1\n      mstore\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1994:1998  true */\n      0x01\n      swap2\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2024:2029  break */\n      jump(tag_161)\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1522:2052  if (diamondFacets[facetIndex].target == facet) {... */\n    tag_165:\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1486:1498  facetIndex++ */\n      dup1\n      tag_179\n      dup2\n      tag_118\n      jump\t// in\n    tag_179:\n      swap2\n      pop\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1437:2070  for (uint256 facetIndex; facetIndex < numFacets; facetIndex++) {... */\n      jump(tag_160)\n    tag_161:\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2092:2104  continueLoop */\n      dup1\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2088:2155  if (continueLoop) {... */\n      iszero\n      tag_180\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2128:2136  continue */\n      pop\n      pop\n      pop\n      jump(tag_157)\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2088:2155  if (continueLoop) {... */\n    tag_180:\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2207:2212  facet */\n      dup2\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2173:2186  diamondFacets */\n      dup12\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2187:2196  numFacets */\n      dup10\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2173:2197  diamondFacets[numFacets] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_182\n      jumpi\n      tag_182\n      tag_125\n      jump\t// in\n    tag_182:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2173:2212  diamondFacets[numFacets].target = facet */\n      swap1\n      swap2\n      and\n      swap1\n      mstore\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2301:2316  l.selectorCount */\n      0x01\n      dup11\n      add\n      sload\n      0xffff\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2267:2334  new bytes4[](... */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_184\n      jumpi\n      tag_184\n      tag_109\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_185\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_185:\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2230:2243  diamondFacets */\n      dup12\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2244:2253  numFacets */\n      dup10\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2230:2254  diamondFacets[numFacets] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_187\n      jumpi\n      tag_187\n      tag_125\n      jump\t// in\n    tag_187:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2230:2264  diamondFacets[numFacets].selectors */\n      0x20\n      add\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2230:2334  diamondFacets[numFacets].selectors = new bytes4[](... */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2392:2400  selector */\n      dup3\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2352:2365  diamondFacets */\n      dup12\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2366:2375  numFacets */\n      dup10\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2352:2376  diamondFacets[numFacets] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_189\n      jumpi\n      tag_189\n      tag_125\n      jump\t// in\n    tag_189:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2352:2386  diamondFacets[numFacets].selectors */\n      0x20\n      add\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2387:2388  0 */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2352:2389  diamondFacets[numFacets].selectors[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_191\n      jumpi\n      tag_191\n      tag_125\n      jump\t// in\n    tag_191:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2352:2400  diamondFacets[numFacets].selectors[0] = selector */\n      swap1\n      not(sub(shl(0xe0, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      not(sub(shl(0xe0, 0x01), 0x01))\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2449:2450  1 */\n      0x01\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2418:2435  numFacetSelectors */\n      dup10\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2436:2445  numFacets */\n      dup10\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2418:2446  numFacetSelectors[numFacets] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_193\n      jumpi\n      tag_193\n      tag_125\n      jump\t// in\n    tag_193:\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2418:2450  numFacetSelectors[numFacets] = 1 */\n      0xff\n      swap1\n      swap3\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2418:2446  numFacetSelectors[numFacets] */\n      0x20\n      swap3\n      dup4\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      add\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2418:2450  numFacetSelectors[numFacets] = 1 */\n      mstore\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2468:2479  numFacets++ */\n      dup8\n      tag_194\n      dup2\n      tag_118\n      jump\t// in\n    tag_194:\n      swap9\n      pop\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1101:2494  {... */\n      pop\n      pop\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":963:2494  for (... */\n    tag_157:\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":1067:1086  selectorSlotIndex++ */\n      dup1\n      tag_195\n      dup2\n      tag_118\n      jump\t// in\n    tag_195:\n      swap2\n      pop\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":963:2494  for (... */\n      jump(tag_155)\n    tag_156:\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":893:2504  {... */\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":880:891  slotIndex++ */\n      dup1\n      dup1\n      tag_196\n      swap1\n      tag_118\n      jump\t// in\n    tag_196:\n      swap2\n      pop\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":823:2504  for (uint256 slotIndex; selectorIndex < l.selectorCount; slotIndex++) {... */\n      jump(tag_152)\n    tag_153:\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2519:2537  uint256 facetIndex */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2514:2864  for (uint256 facetIndex; facetIndex < numFacets; facetIndex++) {... */\n    tag_197:\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2552:2561  numFacets */\n      dup3\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2539:2549  facetIndex */\n      dup2\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2539:2561  facetIndex < numFacets */\n      lt\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2514:2864  for (uint256 facetIndex; facetIndex < numFacets; facetIndex++) {... */\n      iszero\n      tag_198\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2591:2611  uint256 numSelectors */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2614:2631  numFacetSelectors */\n      dup5\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2632:2642  facetIndex */\n      dup3\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2614:2643  numFacetSelectors[facetIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_201\n      jumpi\n      tag_201\n      tag_125\n      jump\t// in\n    tag_201:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2591:2643  uint256 numSelectors = numFacetSelectors[facetIndex] */\n      0xff\n      and\n      swap1\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2657:2682  bytes4[] memory selectors */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2685:2698  diamondFacets */\n      dup8\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2699:2709  facetIndex */\n      dup4\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2685:2710  diamondFacets[facetIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_203\n      jumpi\n      tag_203\n      tag_125\n      jump\t// in\n    tag_203:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2685:2720  diamondFacets[facetIndex].selectors */\n      0x20\n      add\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2657:2720  bytes4[] memory selectors = diamondFacets[facetIndex].selectors */\n      swap1\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2827:2839  numSelectors */\n      dup2\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2816:2825  selectors */\n      dup2\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2809:2840  mstore(selectors, numSelectors) */\n      mstore\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2791:2854  {... */\n      pop\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2563:2575  facetIndex++ */\n      dup1\n      dup1\n      tag_204\n      swap1\n      tag_118\n      jump\t// in\n    tag_204:\n      swap2\n      pop\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2514:2864  for (uint256 facetIndex; facetIndex < numFacets; facetIndex++) {... */\n      jump(tag_197)\n    tag_198:\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2959:2968  numFacets */\n      dup2\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2944:2957  diamondFacets */\n      dup6\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2937:2969  mstore(diamondFacets, numFacets) */\n      mstore\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":2923:2979  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":436:2985  function facets() external view returns (Facet[] memory diamondFacets) {... */\n      swap1\n      jump\t// out\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnable.sol\":499:600  function nomineeOwner() public view virtual returns (address) {... */\n    tag_59:\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnable.sol\":552:559  address */\n      0x00\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnable.sol\":578:593  _nomineeOwner() */\n      tag_86\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnable.sol\":578:591  _nomineeOwner */\n      tag_136\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnable.sol\":578:593  _nomineeOwner() */\n      jump\t// in\n        /* \"imports/solidstate/contracts/access/ownable/Ownable.sol\":378:465  function owner() public view virtual returns (address) {... */\n    tag_63:\n        /* \"imports/solidstate/contracts/access/ownable/Ownable.sol\":424:431  address */\n      0x00\n        /* \"imports/solidstate/contracts/access/ownable/Ownable.sol\":450:458  _owner() */\n      tag_86\n        /* \"imports/solidstate/contracts/access/ownable/Ownable.sol\":450:456  _owner */\n      tag_94\n        /* \"imports/solidstate/contracts/access/ownable/Ownable.sol\":450:458  _owner() */\n      jump\t// in\n        /* \"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":759:884  function setFallbackAddress(address fallbackAddress) external onlyOwner {... */\n    tag_69:\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":436:444  _owner() */\n      tag_210\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":436:442  _owner */\n      tag_94\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":436:444  _owner() */\n      jump\t// in\n    tag_210:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":422:444  msg.sender != _owner() */\n      and\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":422:432  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":422:444  msg.sender != _owner() */\n      and\n      eq\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":418:472  if (msg.sender != _owner()) revert Ownable__NotOwner() */\n      tag_211\n      jumpi\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":453:472  Ownable__NotOwner() */\n      mload(0x40)\n      shl(0xe0, 0x2f7a8ee1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":418:472  if (msg.sender != _owner()) revert Ownable__NotOwner() */\n    tag_211:\n        /* \"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":1900:1943  DiamondBaseStorage.layout().fallbackAddress */\n      0x177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc96\n        /* \"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":1900:1961  DiamondBaseStorage.layout().fallbackAddress = fallbackAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":759:884  function setFallbackAddress(address fallbackAddress) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":841:877  _setFallbackAddress(fallbackAddress) */\n    tag_213:\n        /* \"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":759:884  function setFallbackAddress(address fallbackAddress) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3043:4223  function facetFunctionSelectors(... */\n    tag_73:\n      0x00\n      dup1\n      mload\n      0x20\n      data_a5e74bf718c7d6929bf8f422c8be92118782759abac1bf7601c5a938d6f306a1\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3265:3280  l.selectorCount */\n      sload\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3127:3152  bytes4[] memory selectors */\n      0x60\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_b4a3f1194ff204df3421c76163ff361a7821792777bfc1dcb14fa8d3eb97e7f5\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":584:637  keccak256('solidstate.contracts.storage.DiamondBase') */\n      swap1\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3265:3280  l.selectorCount */\n      0xffff\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3252:3281  new bytes4[](l.selectorCount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_218\n      jumpi\n      tag_218\n      tag_109\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_219\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_219:\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3240:3281  selectors = new bytes4[](l.selectorCount) */\n      swap2\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3292:3312  uint256 numSelectors */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3322:3343  uint256 selectorIndex */\n      dup1\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3402:3419  uint256 slotIndex */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3397:4091  for (uint256 slotIndex; selectorIndex < l.selectorCount; slotIndex++) {... */\n    tag_220:\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3437:3452  l.selectorCount */\n      0x01\n      dup5\n      add\n      sload\n      0xffff\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3421:3452  selectorIndex < l.selectorCount */\n      dup3\n      lt\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3397:4091  for (uint256 slotIndex; selectorIndex < l.selectorCount; slotIndex++) {... */\n      iszero\n      tag_221\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3481:3493  bytes32 slot */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3496:3522  l.selectorSlots[slotIndex] */\n      dup2\n      dup2\n      mstore\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3496:3511  l.selectorSlots */\n      0x02\n      dup6\n      add\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3496:3522  l.selectorSlots[slotIndex] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3537:4081  for (... */\n    tag_223:\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3622:3623  8 */\n      0x08\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3602:3619  selectorSlotIndex */\n      dup2\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3602:3623  selectorSlotIndex < 8 */\n      lt\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3537:4081  for (... */\n      iszero\n      tag_224\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3693:3708  selectorIndex++ */\n      dup4\n      tag_226\n      dup2\n      tag_118\n      jump\t// in\n    tag_226:\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3747:3762  l.selectorCount */\n      0x01\n      dup9\n      add\n      sload\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3693:3708  selectorIndex++ */\n      swap1\n      swap6\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3747:3762  l.selectorCount */\n      0xffff\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3731:3762  selectorIndex > l.selectorCount */\n      dup6\n      gt\n      swap1\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3786:3791  break */\n      tag_224\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3727:3810  if (selectorIndex > l.selectorCount) {... */\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3883:3884  5 */\n      0x05\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3862:3884  selectorSlotIndex << 5 */\n      dup2\n      swap1\n      shl\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3853:3885  slot << (selectorSlotIndex << 5) */\n      dup3\n      swap1\n      shl\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3934:3952  l.facets[selector] */\n      dup2\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3828:3843  bytes4 selector */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3934:3952  l.facets[selector] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup9\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3918:3954  address(bytes20(l.facets[selector])) */\n      0x60\n      shr\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3909:3954  facet == address(bytes20(l.facets[selector])) */\n      dup11\n      and\n      sub\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3905:4067  if (facet == address(bytes20(l.facets[selector]))) {... */\n      tag_228\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4004:4012  selector */\n      dup1\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3978:3987  selectors */\n      dup9\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3988:4000  numSelectors */\n      dup8\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3978:4001  selectors[numSelectors] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_230\n      jumpi\n      tag_230\n      tag_125\n      jump\t// in\n    tag_230:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3978:4012  selectors[numSelectors] = selector */\n      swap1\n      swap3\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3978:4001  selectors[numSelectors] */\n      0x20\n      swap3\n      dup4\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      add\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3978:4012  selectors[numSelectors] = selector */\n      mstore\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4034:4048  numSelectors++ */\n      dup6\n      tag_231\n      dup2\n      tag_118\n      jump\t// in\n    tag_231:\n      swap7\n      pop\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3905:4067  if (facet == address(bytes20(l.facets[selector]))) {... */\n    tag_228:\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3641:3660  selectorSlotIndex++ */\n      dup1\n      tag_232\n      dup2\n      tag_118\n      jump\t// in\n    tag_232:\n      swap2\n      pop\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3537:4081  for (... */\n      jump(tag_223)\n    tag_224:\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3467:4091  {... */\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3454:3465  slotIndex++ */\n      dup1\n      dup1\n      tag_233\n      swap1\n      tag_118\n      jump\t// in\n    tag_233:\n      swap2\n      pop\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3397:4091  for (uint256 slotIndex; selectorIndex < l.selectorCount; slotIndex++) {... */\n      jump(tag_220)\n    tag_221:\n      pop\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4176:4207  mstore(selectors, numSelectors) */\n      dup3\n      mstore\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":4183:4192  selectors */\n      swap2\n        /* \"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":3043:4223  function facetFunctionSelectors(... */\n      swap1\n      pop\n      jump\t// out\n        /* \"imports/solidstate/contracts/access/ownable/Ownable.sol\":514:627  function transferOwnership(address account) public virtual onlyOwner {... */\n    tag_84:\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":436:444  _owner() */\n      tag_237\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":436:442  _owner */\n      tag_94\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":436:444  _owner() */\n      jump\t// in\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":422:444  msg.sender != _owner() */\n      and\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":422:432  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":422:444  msg.sender != _owner() */\n      and\n      eq\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":418:472  if (msg.sender != _owner()) revert Ownable__NotOwner() */\n      tag_238\n      jumpi\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":453:472  Ownable__NotOwner() */\n      mload(0x40)\n      shl(0xe0, 0x2f7a8ee1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":418:472  if (msg.sender != _owner()) revert Ownable__NotOwner() */\n    tag_238:\n        /* \"imports/solidstate/contracts/access/ownable/Ownable.sol\":593:620  _transferOwnership(account) */\n      tag_213\n        /* \"imports/solidstate/contracts/access/ownable/Ownable.sol\":612:619  account */\n      dup2\n        /* \"imports/solidstate/contracts/access/ownable/Ownable.sol\":593:611  _transferOwnership */\n      tag_241\n        /* \"imports/solidstate/contracts/access/ownable/Ownable.sol\":593:620  _transferOwnership(account) */\n      jump\t// in\n        /* \"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":1012:1317  function _getImplementation()... */\n    tag_87:\n        /* \"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":1122:1144  address implementation */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/base/DiamondBase.sol\":828:835  msg.sig */\n      dup1\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/base/DiamondBase.sol\":819:836  l.facets[msg.sig] */\n      dup2\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_b4a3f1194ff204df3421c76163ff361a7821792777bfc1dcb14fa8d3eb97e7f5\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"imports/solidstate/contracts/proxy/diamond/base/DiamondBase.sol\":803:838  address(bytes20(l.facets[msg.sig])) */\n      0x60\n      shr\n      dup1\n        /* \"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":1214:1311  if (implementation == address(0)) {... */\n      tag_245\n      jumpi\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":1620:1663  DiamondBaseStorage.layout().fallbackAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc96))\n      swap1\n        /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":3281:3493  function _getImplementation()... */\n      jump\t// out\n        /* \"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":1214:1311  if (implementation == address(0)) {... */\n    tag_245:\n        /* \"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":1012:1317  function _getImplementation()... */\n      swap1\n      jump\t// out\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":647:758  function _owner() internal view virtual returns (address) {... */\n    tag_94:\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":696:703  address */\n      0x00\n        /* \"imports/solidstate/contracts/access/ownable/OwnableStorage.sol\":186:235  keccak256('solidstate.contracts.storage.Ownable') */\n      0x8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":722:745  OwnableStorage.layout() */\n    tag_251:\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":722:751  OwnableStorage.layout().owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap2\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":647:758  function _owner() internal view virtual returns (address) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":849:2892  function _diamondCut(... */\n    tag_100:\n      0x00\n      dup1\n      mload\n      0x20\n      data_a5e74bf718c7d6929bf8f422c8be92118782759abac1bf7601c5a938d6f306a1\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1123:1138  l.selectorCount */\n      sload\n      0x00\n      dup1\n      mload\n      0x20\n      data_b4a3f1194ff204df3421c76163ff361a7821792777bfc1dcb14fa8d3eb97e7f5\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":584:637  keccak256('solidstate.contracts.storage.DiamondBase') */\n      swap1\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1123:1138  l.selectorCount */\n      0xffff\n      dup2\n      and\n      swap1\n      dup2\n      swap1\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":991:1026  DiamondBaseStorage.Layout storage l */\n      0x00\n      swap1\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1321:1322  7 */\n      0x07\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1305:1322  selectorCount & 7 */\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1305:1326  selectorCount & 7 > 0 */\n      iszero\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1301:1452  if (selectorCount & 7 > 0) {... */\n      tag_255\n      jumpi\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1435:1436  3 */\n      0x03\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1418:1436  selectorCount >> 3 */\n      dup2\n      swap1\n      shr\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1402:1437  l.selectorSlots[selectorCount >> 3] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1402:1417  l.selectorSlots */\n      0x02\n      dup5\n      add\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1402:1437  l.selectorSlots[selectorCount >> 3] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1301:1452  if (selectorCount & 7 > 0) {... */\n    tag_255:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1471:1480  uint256 i */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1466:2479  for (uint256 i; i < facetCuts.length; i++) {... */\n    tag_256:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1486:1495  facetCuts */\n      dup8\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1486:1502  facetCuts.length */\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1482:1483  i */\n      dup2\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1482:1502  i < facetCuts.length */\n      lt\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1466:2479  for (uint256 i; i < facetCuts.length; i++) {... */\n      iszero\n      tag_257\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1527:1551  FacetCut memory facetCut */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1554:1563  facetCuts */\n      dup9\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1564:1565  i */\n      dup3\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1554:1566  facetCuts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_260\n      jumpi\n      tag_260\n      tag_125\n      jump\t// in\n    tag_260:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1527:1566  FacetCut memory facetCut = facetCuts[i] */\n      swap1\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1584:1605  FacetCutAction action */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1608:1616  facetCut */\n      dup2\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1608:1623  facetCut.action */\n      0x20\n      add\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1584:1623  FacetCutAction action = facetCut.action */\n      swap1\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1646:1654  facetCut */\n      dup2\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1646:1664  facetCut.selectors */\n      0x40\n      add\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1646:1671  facetCut.selectors.length */\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1675:1676  0 */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1646:1676  facetCut.selectors.length == 0 */\n      sub\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1642:1744  if (facetCut.selectors.length == 0)... */\n      tag_261\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1705:1744  DiamondWritable__SelectorNotSpecified() */\n      mload(0x40)\n      shl(0xe0, 0xeb6c3aeb)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1642:1744  if (facetCut.selectors.length == 0)... */\n    tag_261:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1777:1795  FacetCutAction.ADD */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1767:1773  action */\n      dup2\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1767:1795  action == FacetCutAction.ADD */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_266\n      jumpi\n      tag_266\n      tag_264\n      jump\t// in\n    tag_266:\n      sub\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1763:2465  if (action == FacetCutAction.ADD) {... */\n      tag_267\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1851:2029  _addFacetSelectors(... */\n      tag_268\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1895:1896  l */\n      dup8\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1922:1935  selectorCount */\n      dup7\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1961:1973  selectorSlot */\n      dup7\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1999:2007  facetCut */\n      dup6\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1851:1869  _addFacetSelectors */\n      tag_269\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1851:2029  _addFacetSelectors(... */\n      jump\t// in\n    tag_268:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1819:2029  (selectorCount, selectorSlot) = _addFacetSelectors(... */\n      swap1\n      swap6\n      pop\n      swap4\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1763:2465  if (action == FacetCutAction.ADD) {... */\n      jump(tag_283)\n    tag_267:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2068:2090  FacetCutAction.REPLACE */\n      0x01\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2058:2064  action */\n      dup2\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2058:2090  action == FacetCutAction.REPLACE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_274\n      jumpi\n      tag_274\n      tag_264\n      jump\t// in\n    tag_274:\n      sub\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2054:2465  if (action == FacetCutAction.REPLACE) {... */\n      tag_275\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2114:2149  _replaceFacetSelectors(l, facetCut) */\n      tag_276\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2137:2138  l */\n      dup8\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2140:2148  facetCut */\n      dup4\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2114:2136  _replaceFacetSelectors */\n      tag_277\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2114:2149  _replaceFacetSelectors(l, facetCut) */\n      jump\t// in\n    tag_276:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2054:2465  if (action == FacetCutAction.REPLACE) {... */\n      jump(tag_283)\n    tag_275:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2188:2209  FacetCutAction.REMOVE */\n      0x02\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2178:2184  action */\n      dup2\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2178:2209  action == FacetCutAction.REMOVE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_282\n      jumpi\n      tag_282\n      tag_264\n      jump\t// in\n    tag_282:\n      sub\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2174:2465  if (action == FacetCutAction.REMOVE) {... */\n      tag_283\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2265:2446  _removeFacetSelectors(... */\n      tag_284\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2312:2313  l */\n      dup8\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2339:2352  selectorCount */\n      dup7\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2378:2390  selectorSlot */\n      dup7\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2416:2424  facetCut */\n      dup6\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2265:2286  _removeFacetSelectors */\n      tag_285\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2265:2446  _removeFacetSelectors(... */\n      jump\t// in\n    tag_284:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2233:2446  (selectorCount, selectorSlot) = _removeFacetSelectors(... */\n      swap1\n      swap6\n      pop\n      swap4\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2174:2465  if (action == FacetCutAction.REMOVE) {... */\n    tag_283:\n      pop\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1504:1507  i++ */\n      0x01\n      add\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1466:2479  for (uint256 i; i < facetCuts.length; i++) {... */\n      jump(tag_256)\n    tag_257:\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2514:2535  originalSelectorCount */\n      dup3\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2497:2510  selectorCount */\n      dup3\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2497:2535  selectorCount != originalSelectorCount */\n      eq\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2493:2609  if (selectorCount != originalSelectorCount) {... */\n      tag_286\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2555:2570  l.selectorCount */\n      0x01\n      dup5\n      add\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2555:2594  l.selectorCount = uint16(selectorCount) */\n      dup1\n      sload\n      not(0xffff)\n      and\n      0xffff\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2493:2609  if (selectorCount != originalSelectorCount) {... */\n    tag_286:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2692:2693  7 */\n      0x07\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2676:2693  selectorCount & 7 */\n      dup3\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2676:2697  selectorCount & 7 > 0 */\n      iszero\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2672:2782  if (selectorCount & 7 > 0) {... */\n      tag_287\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2750:2751  3 */\n      0x03\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2733:2751  selectorCount >> 3 */\n      dup3\n      swap1\n      shr\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2717:2752  l.selectorSlots[selectorCount >> 3] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2717:2732  l.selectorSlots */\n      0x02\n      dup6\n      add\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2717:2752  l.selectorSlots[selectorCount >> 3] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2717:2767  l.selectorSlots[selectorCount >> 3] = selectorSlot */\n      dup2\n      swap1\n      sstore\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2672:2782  if (selectorCount & 7 > 0) {... */\n    tag_287:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2801:2836  DiamondCut(facetCuts, target, data) */\n      0x8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2812:2821  facetCuts */\n      dup8\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2823:2829  target */\n      dup8\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2831:2835  data */\n      dup8\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2801:2836  DiamondCut(facetCuts, target, data) */\n      mload(0x40)\n      tag_288\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2850:2875  _initialize(target, data) */\n      tag_290\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2862:2868  target */\n      dup7\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2870:2874  data */\n      dup7\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2850:2861  _initialize */\n      tag_291\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2850:2875  _initialize(target, data) */\n      jump\t// in\n    tag_290:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":1067:2886  unchecked {... */\n      pop\n      pop\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":981:2892  {... */\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":849:2892  function _diamondCut(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":575:704  function _nomineeOwner() internal view virtual returns (address) {... */\n    tag_136:\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":631:638  address */\n      0x00\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnableStorage.sol\":197:250  keccak256('solidstate.contracts.storage.SafeOwnable') */\n      0x24aa1f7b31fd188a8d3ecfb06bc55c806040e59b03bd4396283442fce6617890\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":657:684  SafeOwnableStorage.layout() */\n      tag_251\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnableStorage.sol\":257:416  function layout() internal pure returns (Layout storage l) {... */\n      jump\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":779:919  function _acceptOwnership() internal virtual {... */\n    tag_140:\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":834:855  _setOwner(msg.sender) */\n      tag_299\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":844:854  msg.sender */\n      caller\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":834:843  _setOwner */\n      tag_300\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":834:855  _setOwner(msg.sender) */\n      jump\t// in\n    tag_299:\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnableStorage.sol\":197:250  keccak256('solidstate.contracts.storage.SafeOwnable') */\n      0x24aa1f7b31fd188a8d3ecfb06bc55c806040e59b03bd4396283442fce6617890\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":865:912  delete SafeOwnableStorage.layout().nomineeOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":779:919  function _acceptOwnership() internal virtual {... */\n      jump\t// out\n        /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":3059:3224  function _transferOwnership(... */\n    tag_241:\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnableStorage.sol\":197:250  keccak256('solidstate.contracts.storage.SafeOwnable') */\n      0x24aa1f7b31fd188a8d3ecfb06bc55c806040e59b03bd4396283442fce6617890\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":1256:1306  SafeOwnableStorage.layout().nomineeOwner = account */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":3184:3217  super._transferOwnership(account) */\n      tag_213\n        /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":3209:3216  account */\n      dup2\n        /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":3184:3217  super._transferOwnership(account) */\n      dup2\n        /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":3209:3216  account */\n      dup2\n        /* \"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":3184:3217  super._transferOwnership(account) */\n      dup2\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":1186:1313  function _setNomineeOwner(address account) internal virtual {... */\n      jump\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2898:4493  function _addFacetSelectors(... */\n    tag_269:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3163:3178  facetCut.target */\n      dup1\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3090:3097  uint256 */\n      0x00\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3163:3195  facetCut.target != address(this) */\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3190:3194  this */\n      address\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3163:3195  facetCut.target != address(this) */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3163:3244  facetCut.target != address(this) &&... */\n      tag_311\n      jumpi\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3216:3231  facetCut.target */\n      dup3\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3216:3242  facetCut.target.isContract */\n      and\n        /* \"imports/solidstate/contracts/utils/AddressUtils.sol\":568:588  extcodesize(account) */\n      extcodesize\n        /* \"imports/solidstate/contracts/utils/AddressUtils.sol\":614:622  size > 0 */\n      iszero\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3163:3244  facetCut.target != address(this) &&... */\n    tag_311:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3142:3300  if (... */\n      iszero\n      tag_313\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3266:3300  DiamondWritable__TargetHasNoCode() */\n      mload(0x40)\n      shl(0xe2, 0x3ddc5cab)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3142:3300  if (... */\n    tag_313:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3320:3329  uint256 i */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3315:4426  for (uint256 i; i < facetCut.selectors.length; i++) {... */\n    tag_314:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3335:3343  facetCut */\n      dup4\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3335:3353  facetCut.selectors */\n      0x40\n      add\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3335:3360  facetCut.selectors.length */\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3331:3332  i */\n      dup2\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3331:3360  i < facetCut.selectors.length */\n      lt\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3315:4426  for (uint256 i; i < facetCut.selectors.length; i++) {... */\n      iszero\n      tag_315\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3385:3400  bytes4 selector */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3403:3411  facetCut */\n      dup5\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3403:3421  facetCut.selectors */\n      0x40\n      add\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3422:3423  i */\n      dup3\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3403:3424  facetCut.selectors[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_318\n      jumpi\n      tag_318\n      tag_125\n      jump\t// in\n    tag_318:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3461:3479  l.facets[selector] */\n      dup2\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3442:3458  bytes32 oldFacet */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3461:3479  l.facets[selector] */\n      swap1\n      dup2\n      mstore\n      swap2\n      dup11\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3403:3424  facetCut.selectors[i] */\n      swap1\n      swap2\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3502:3528  address(bytes20(oldFacet)) */\n      0x60\n      dup2\n      swap1\n      shr\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3502:3542  address(bytes20(oldFacet)) != address(0) */\n      iszero\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3498:3610  if (address(bytes20(oldFacet)) != address(0))... */\n      tag_319\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3571:3610  DiamondWritable__SelectorAlreadyAdded() */\n      mload(0x40)\n      shl(0xe1, 0x4923a771)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3498:3610  if (address(bytes20(oldFacet)) != address(0))... */\n    tag_319:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3720:3735  facetCut.target */\n      dup6\n      mload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3671:3689  l.facets[selector] */\n      dup4\n      dup2\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3759:3781  bytes32(selectorCount) */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3671:3689  l.facets[selector] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup14\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3712:3736  bytes20(facetCut.target) */\n      0x60\n      swap4\n      swap1\n      swap4\n      shl\n      not(sub(shl(0x60, 0x01), 0x01))\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3712:3781  bytes20(facetCut.target) |... */\n      and\n      dup12\n      or\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3671:3781  l.facets[selector] =... */\n      swap1\n      swap3\n      sstore\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3855:3856  5 */\n      0x05\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3832:3856  (selectorCount & 7) << 5 */\n      dup11\n      swap1\n      shl\n      0xe0\n      swap1\n      dup2\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4091:4134  bytes32(selector) >> selectorInSlotPosition */\n      swap3\n      dup4\n      shr\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4020:4065  CLEAR_SELECTOR_MASK >> selectorInSlotPosition */\n      swap2\n      dup4\n      shr\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4018:4066  ~(CLEAR_SELECTOR_MASK >> selectorInSlotPosition) */\n      not\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3979:4066  selectorSlot &... */\n      swap10\n      swap1\n      swap10\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3978:4135  (selectorSlot &... */\n      or\n      swap8\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4218:4247  selectorInSlotPosition == 224 */\n      dup2\n      swap1\n      sub\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4214:4378  if (selectorInSlotPosition == 224) {... */\n      tag_320\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4304:4305  3 */\n      0x03\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4287:4305  selectorCount >> 3 */\n      dup10\n      swap1\n      shr\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4271:4306  l.selectorSlots[selectorCount >> 3] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4271:4286  l.selectorSlots */\n      0x02\n      dup12\n      add\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4271:4306  l.selectorSlots[selectorCount >> 3] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4271:4321  l.selectorSlots[selectorCount >> 3] = selectorSlot */\n      swap9\n      swap1\n      swap9\n      sstore\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4214:4378  if (selectorInSlotPosition == 224) {... */\n    tag_320:\n      pop\n      pop\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4396:4411  selectorCount++ */\n      0x01\n      swap6\n      dup7\n      add\n      swap6\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3362:3365  i++ */\n      add\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":3315:4426  for (uint256 i; i < facetCut.selectors.length; i++) {... */\n      jump(tag_314)\n    tag_315:\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4448:4461  selectorCount */\n      swap4\n      swap6\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4463:4475  selectorSlot */\n      swap3\n      swap5\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":2898:4493  function _addFacetSelectors(... */\n      swap2\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8179:9259  function _replaceFacetSelectors(... */\n    tag_277:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8344:8359  facetCut.target */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8344:8370  facetCut.target.isContract */\n      and\n        /* \"imports/solidstate/contracts/utils/AddressUtils.sol\":568:588  extcodesize(account) */\n      extcodesize\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8339:8431  if (!facetCut.target.isContract())... */\n      tag_323\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8397:8431  DiamondWritable__TargetHasNoCode() */\n      mload(0x40)\n      shl(0xe2, 0x3ddc5cab)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8339:8431  if (!facetCut.target.isContract())... */\n    tag_323:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8451:8460  uint256 i */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8446:9243  for (uint256 i; i < facetCut.selectors.length; i++) {... */\n    tag_324:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8466:8474  facetCut */\n      dup2\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8466:8484  facetCut.selectors */\n      0x40\n      add\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8466:8491  facetCut.selectors.length */\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8462:8463  i */\n      dup2\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8462:8491  i < facetCut.selectors.length */\n      lt\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8446:9243  for (uint256 i; i < facetCut.selectors.length; i++) {... */\n      iszero\n      tag_325\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8516:8531  bytes4 selector */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8534:8542  facetCut */\n      dup3\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8534:8552  facetCut.selectors */\n      0x40\n      add\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8553:8554  i */\n      dup3\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8534:8555  facetCut.selectors[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_328\n      jumpi\n      tag_328\n      tag_125\n      jump\t// in\n    tag_328:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8592:8610  l.facets[selector] */\n      dup2\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8573:8589  bytes32 oldFacet */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8592:8610  l.facets[selector] */\n      swap1\n      dup2\n      mstore\n      swap2\n      dup7\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8534:8555  facetCut.selectors[i] */\n      swap1\n      swap2\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8654:8680  address(bytes20(oldFacet)) */\n      0x60\n      dup2\n      swap1\n      shr\n      dup1\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8699:8796  if (oldFacetAddress == address(0))... */\n      tag_329\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8761:8796  DiamondWritable__SelectorNotFound() */\n      mload(0x40)\n      shl(0xe1, 0x37e25a97)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8699:8796  if (oldFacetAddress == address(0))... */\n    tag_329:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8845:8849  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8818:8850  oldFacetAddress == address(this) */\n      dup3\n      and\n      sub\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8814:8917  if (oldFacetAddress == address(this))... */\n      tag_330\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8879:8917  DiamondWritable__SelectorIsImmutable() */\n      mload(0x40)\n      shl(0xe0, 0xe9835731)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8814:8917  if (oldFacetAddress == address(this))... */\n    tag_330:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8958:8966  facetCut */\n      dup5\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8958:8973  facetCut.target */\n      0x00\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8939:8973  oldFacetAddress == facetCut.target */\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8939:8954  oldFacetAddress */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8939:8973  oldFacetAddress == facetCut.target */\n      and\n      sub\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8935:9045  if (oldFacetAddress == facetCut.target)... */\n      tag_331\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9002:9045  DiamondWritable__ReplaceTargetIsIdentical() */\n      mload(0x40)\n      shl(0xe1, 0x30baabf3)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8935:9045  if (oldFacetAddress == facetCut.target)... */\n    tag_331:\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9212:9227  facetCut.target */\n      dup4\n      mload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9109:9127  l.facets[selector] */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9212:9227  facetCut.target */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9109:9127  l.facets[selector] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup7\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9204:9228  bytes20(facetCut.target) */\n      0x60\n      swap3\n      swap1\n      swap3\n      shl\n      not(sub(shl(0x60, 0x01), 0x01))\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9150:9228  (oldFacet & CLEAR_ADDRESS_MASK) |... */\n      and\n      0xffffffffffffffffffffffff\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9151:9180  oldFacet & CLEAR_ADDRESS_MASK */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9150:9228  (oldFacet & CLEAR_ADDRESS_MASK) |... */\n      or\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9109:9228  l.facets[selector] =... */\n      swap1\n      sstore\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8493:8496  i++ */\n      0x01\n      add\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8446:9243  for (uint256 i; i < facetCut.selectors.length; i++) {... */\n      jump(tag_324)\n    tag_325:\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8179:9259  function _replaceFacetSelectors(... */\n      pop\n      pop\n      jump\t// out\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4499:8173  function _removeFacetSelectors(... */\n    tag_285:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4750:4765  facetCut.target */\n      dup1\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4694:4701  uint256 */\n      0x00\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4750:4779  facetCut.target != address(0) */\n      and\n      iszero\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4746:4849  if (facetCut.target != address(0))... */\n      tag_333\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4804:4849  DiamondWritable__RemoveTargetNotZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x3ab34909)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4746:4849  if (facetCut.target != address(0))... */\n    tag_333:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4909:4910  3 */\n      0x03\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4892:4910  selectorCount >> 3 */\n      dup6\n      swap1\n      shr\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4970:4971  7 */\n      0x07\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4954:4971  selectorCount & 7 */\n      dup7\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4864:4889  uint256 selectorSlotCount */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4986:8029  for (uint256 i; i < facetCut.selectors.length; i++) {... */\n    tag_334:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5006:5014  facetCut */\n      dup6\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5006:5024  facetCut.selectors */\n      0x40\n      add\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5006:5031  facetCut.selectors.length */\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5002:5003  i */\n      dup2\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5002:5031  i < facetCut.selectors.length */\n      lt\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4986:8029  for (uint256 i; i < facetCut.selectors.length; i++) {... */\n      iszero\n      tag_335\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5056:5071  bytes4 selector */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5074:5082  facetCut */\n      dup7\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5074:5092  facetCut.selectors */\n      0x40\n      add\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5093:5094  i */\n      dup3\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5074:5095  facetCut.selectors[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_338\n      jumpi\n      tag_338\n      tag_125\n      jump\t// in\n    tag_338:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5132:5150  l.facets[selector] */\n      dup2\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5113:5129  bytes32 oldFacet */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5132:5150  l.facets[selector] */\n      swap1\n      dup2\n      mstore\n      swap2\n      dup13\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5074:5095  facetCut.selectors[i] */\n      swap1\n      swap2\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5173:5199  address(bytes20(oldFacet)) */\n      0x60\n      dup2\n      swap1\n      shr\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5169:5277  if (address(bytes20(oldFacet)) == address(0))... */\n      tag_339\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5242:5277  DiamondWritable__SelectorNotFound() */\n      mload(0x40)\n      shl(0xe1, 0x37e25a97)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5169:5277  if (address(bytes20(oldFacet)) == address(0))... */\n    tag_339:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5338:5342  this */\n      address\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5300:5326  address(bytes20(oldFacet)) */\n      0x60\n      dup3\n      swap1\n      shr\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5300:5343  address(bytes20(oldFacet)) == address(this) */\n      sub\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5296:5410  if (address(bytes20(oldFacet)) == address(this))... */\n      tag_340\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5372:5410  DiamondWritable__SelectorIsImmutable() */\n      mload(0x40)\n      shl(0xe0, 0xe9835731)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5296:5410  if (address(bytes20(oldFacet)) == address(this))... */\n    tag_340:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5449:5450  0 */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5433:5450  selectorSlot == 0 */\n      dup10\n      swap1\n      sub\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5429:5696  if (selectorSlot == 0) {... */\n      tag_341\n      jumpi\n      not(0x00)\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5474:5493  selectorSlotCount-- */\n      swap1\n      swap5\n      add\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5530:5564  l.selectorSlots[selectorSlotCount] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5530:5545  l.selectorSlots */\n      0x02\n      dup13\n      add\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5530:5564  l.selectorSlots[selectorSlotCount] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap9\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5474:5493  selectorSlotCount-- */\n      swap4\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5608:5609  7 */\n      0x07\n      swap4\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5429:5696  if (selectorSlot == 0) {... */\n      jump(tag_342)\n    tag_341:\n      not(0x00)\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5656:5677  selectorInSlotIndex-- */\n      swap1\n      swap4\n      add\n      swap3\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5429:5696  if (selectorSlot == 0) {... */\n    tag_342:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6099:6100  5 */\n      0x05\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6076:6100  selectorInSlotIndex << 5 */\n      dup5\n      swap1\n      shl\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6059:6101  selectorSlot << (selectorInSlotIndex << 5) */\n      dup10\n      swap1\n      shl\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5714:5733  bytes4 lastSelector */\n      0x00\n      dup1\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6150:6174  lastSelector != selector */\n      dup1\n      dup5\n      and\n      swap1\n      dup7\n      and\n      eq\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6146:6438  if (lastSelector != selector) {... */\n      tag_343\n      jumpi\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6392:6414  l.facets[lastSelector] */\n      dup4\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6392:6400  l.facets */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6392:6414  l.facets[lastSelector] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup16\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      not(sub(shl(0x60, 0x01), 0x01))\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6322:6415  (oldFacet & CLEAR_ADDRESS_MASK) |... */\n      and\n      0xffffffffffffffffffffffff\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6323:6352  oldFacet & CLEAR_ADDRESS_MASK */\n      dup7\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6322:6415  (oldFacet & CLEAR_ADDRESS_MASK) |... */\n      or\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6269:6415  l.facets[lastSelector] =... */\n      swap1\n      sstore\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6146:6438  if (lastSelector != selector) {... */\n    tag_343:\n      pop\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6467:6485  l.facets[selector] */\n      dup4\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6467:6475  l.facets */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6467:6485  l.facets[selector] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup14\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6460:6485  delete l.facets[selector] */\n      sstore\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6605:6626  oldSelectorCount >> 3 */\n      0x1fff\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6625:6626  3 */\n      0x03\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6605:6626  oldSelectorCount >> 3 */\n      dup4\n      swap1\n      shr\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6676:6703  (oldSelectorCount & 7) << 5 */\n      0xe0\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6702:6703  5 */\n      0x05\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6676:6703  (oldSelectorCount & 7) << 5 */\n      dup5\n      swap1\n      shl\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6744:6786  oldSelectorsSlotCount != selectorSlotCount */\n      dup8\n      dup3\n      eq\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6740:7847  if (oldSelectorsSlotCount != selectorSlotCount) {... */\n      tag_344\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6810:6833  bytes32 oldSelectorSlot */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6836:6920  l.selectorSlots[... */\n      dup3\n      dup2\n      mstore\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6836:6851  l.selectorSlots */\n      0x02\n      dup16\n      add\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6836:6920  l.selectorSlots[... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7134:7214  CLEAR_SELECTOR_MASK >>... */\n      dup1\n      dup5\n      shr\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7132:7215  ~(CLEAR_SELECTOR_MASK >>... */\n      not\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7086:7215  oldSelectorSlot &... */\n      swap1\n      swap2\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7244:7265  bytes32(lastSelector) */\n      swap1\n      dup6\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7244:7294  bytes32(lastSelector) >> oldSelectorInSlotPosition */\n      dup4\n      shr\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7085:7295  (oldSelectorSlot &... */\n      or\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7379:7435  l.selectorSlots[oldSelectorsSlotCount] = oldSelectorSlot */\n      swap1\n      sstore\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6740:7847  if (oldSelectorsSlotCount != selectorSlotCount) {... */\n      jump(tag_345)\n    tag_344:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7802:7827  oldSelectorInSlotPosition */\n      dup1\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7785:7797  lastSelector */\n      dup4\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7777:7798  bytes32(lastSelector) */\n      not\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7777:7827  bytes32(lastSelector) >> oldSelectorInSlotPosition */\n      swap1\n      shr\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7722:7747  oldSelectorInSlotPosition */\n      dup2\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":539:574  bytes32(uint256(0xffffffff << 224)) */\n      0x00\n      shl\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7667:7747  CLEAR_SELECTOR_MASK >>... */\n      swap1\n      shr\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7665:7748  ~(CLEAR_SELECTOR_MASK >>... */\n      not\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7622:7634  selectorSlot */\n      dup14\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7622:7748  selectorSlot &... */\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7621:7828  (selectorSlot &... */\n      or\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7582:7828  selectorSlot =... */\n      swap12\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":6740:7847  if (oldSelectorsSlotCount != selectorSlotCount) {... */\n    tag_345:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7869:7888  selectorInSlotIndex */\n      dup7\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7892:7893  0 */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7869:7893  selectorInSlotIndex == 0 */\n      sub\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7865:8015  if (selectorInSlotIndex == 0) {... */\n      tag_346\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7924:7958  l.selectorSlots[selectorSlotCount] */\n      0x00\n      dup9\n      dup2\n      mstore\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7924:7939  l.selectorSlots */\n      0x02\n      dup16\n      add\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7924:7958  l.selectorSlots[selectorSlotCount] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7917:7958  delete l.selectorSlots[selectorSlotCount] */\n      dup2\n      swap1\n      sstore\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7924:7958  l.selectorSlots[selectorSlotCount] */\n      swap12\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":7865:8015  if (selectorInSlotIndex == 0) {... */\n    tag_346:\n      pop\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":5033:5036  i++ */\n      0x01\n      swap1\n      swap4\n      add\n      swap3\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4986:8029  for (uint256 i; i < facetCut.selectors.length; i++) {... */\n      tag_334\n      swap2\n      pop\n      pop\n      jump\n    tag_335:\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8081:8082  3 */\n      0x03\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8060:8082  selectorSlotCount << 3 */\n      swap2\n      swap1\n      swap2\n      shl\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8059:8105  (selectorSlotCount << 3) | selectorInSlotIndex */\n      or\n      swap7\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":8143:8155  selectorSlot */\n      swap4\n      swap6\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":4499:8173  function _removeFacetSelectors(... */\n      swap3\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9265:9928  function _initialize(address target, bytes memory data) private {... */\n    tag_291:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9370:9381  data.length */\n      dup1\n      mload\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9370:9386  data.length == 0 */\n      iszero\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9344:9364  target == address(0) */\n      dup4\n      and\n      iszero\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9343:9387  (target == address(0)) != (data.length == 0) */\n      eq\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9339:9458  if ((target == address(0)) != (data.length == 0))... */\n      tag_348\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9408:9458  DiamondWritable__InvalidInitializationParameters() */\n      mload(0x40)\n      shl(0xe0, 0x26df4ccd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9339:9458  if ((target == address(0)) != (data.length == 0))... */\n    tag_348:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9473:9493  target != address(0) */\n      dup3\n      and\n      iszero\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9469:9922  if (target != address(0)) {... */\n      tag_349\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9513:9536  target != address(this) */\n      dup3\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9531:9535  this */\n      address\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9513:9536  target != address(this) */\n      eq\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9509:9658  if (target != address(this)) {... */\n      tag_352\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9561:9578  target.isContract */\n      dup3\n      and\n        /* \"imports/solidstate/contracts/utils/AddressUtils.sol\":568:588  extcodesize(account) */\n      extcodesize\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9556:9643  if (!target.isContract())... */\n      tag_352\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9609:9643  DiamondWritable__TargetHasNoCode() */\n      mload(0x40)\n      shl(0xe2, 0x3ddc5cab)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9556:9643  if (!target.isContract())... */\n    tag_352:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9673:9685  bool success */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9691:9697  target */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9691:9710  target.delegatecall */\n      and\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9711:9715  data */\n      dup3\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9691:9716  target.delegatecall(data) */\n      mload(0x40)\n      tag_353\n      swap2\n      swap1\n      tag_354\n      jump\t// in\n    tag_353:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_357\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_356)\n    tag_357:\n      0x60\n      swap2\n      pop\n    tag_356:\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9672:9716  (bool success, ) = target.delegatecall(data) */\n      pop\n      swap1\n      pop\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9736:9743  success */\n      dup1\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9731:9912  if (!success) {... */\n      tag_325\n      jumpi\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9815:9831  returndatasize() */\n      returndatasize\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9812:9813  0 */\n      0x00\n      dup1\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9794:9832  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9863:9879  returndatasize() */\n      returndatasize\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9812:9813  0 */\n      0x00\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9853:9880  revert(0, returndatasize()) */\n      revert\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9469:9922  if (target != address(0)) {... */\n    tag_349:\n        /* \"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":9265:9928  function _initialize(address target, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":1203:1410  function _setOwner(address account) internal virtual {... */\n    tag_300:\n        /* \"imports/solidstate/contracts/access/ownable/OwnableStorage.sol\":186:235  keccak256('solidstate.contracts.storage.Ownable') */\n      0x8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":1359:1366  l.owner */\n      dup1\n      sload\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":1338:1376  OwnershipTransferred(l.owner, account) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap3\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":1359:1366  l.owner */\n      and\n      swap1\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":1338:1376  OwnershipTransferred(l.owner, account) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":1266:1297  OwnableStorage.Layout storage l */\n      0x00\n      swap1\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":1338:1376  OwnershipTransferred(l.owner, account) */\n      log3\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":1386:1403  l.owner = account */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":1203:1410  function _setOwner(address account) internal virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_370:\n        /* \"#utility.yul\":81:101   */\n      dup1\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":130:162   */\n      dup2\n      and\n        /* \"#utility.yul\":120:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":110:181   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":110:181   */\n    tag_383:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:376   */\n    tag_30:\n        /* \"#utility.yul\":250:256   */\n      0x00\n        /* \"#utility.yul\":303:305   */\n      0x20\n        /* \"#utility.yul\":291:300   */\n      dup3\n        /* \"#utility.yul\":282:289   */\n      dup5\n        /* \"#utility.yul\":278:301   */\n      sub\n        /* \"#utility.yul\":274:306   */\n      slt\n        /* \"#utility.yul\":271:323   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":319:320   */\n      0x00\n        /* \"#utility.yul\":316:317   */\n      dup1\n        /* \"#utility.yul\":309:321   */\n      revert\n        /* \"#utility.yul\":271:323   */\n    tag_385:\n        /* \"#utility.yul\":342:370   */\n      tag_386\n        /* \"#utility.yul\":360:369   */\n      dup3\n        /* \"#utility.yul\":342:370   */\n      tag_370\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":332:370   */\n      swap4\n        /* \"#utility.yul\":192:376   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":573:746   */\n    tag_371:\n        /* \"#utility.yul\":641:661   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":690:721   */\n      dup2\n      and\n        /* \"#utility.yul\":680:722   */\n      dup2\n      eq\n        /* \"#utility.yul\":670:740   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":736:737   */\n      0x00\n        /* \"#utility.yul\":733:734   */\n      dup1\n        /* \"#utility.yul\":726:738   */\n      revert\n        /* \"#utility.yul\":751:1098   */\n    tag_372:\n        /* \"#utility.yul\":802:810   */\n      0x00\n        /* \"#utility.yul\":812:818   */\n      dup1\n        /* \"#utility.yul\":866:869   */\n      dup4\n        /* \"#utility.yul\":859:863   */\n      0x1f\n        /* \"#utility.yul\":851:857   */\n      dup5\n        /* \"#utility.yul\":847:864   */\n      add\n        /* \"#utility.yul\":843:870   */\n      slt\n        /* \"#utility.yul\":833:888   */\n      tag_391\n      jumpi\n        /* \"#utility.yul\":884:885   */\n      0x00\n        /* \"#utility.yul\":881:882   */\n      dup1\n        /* \"#utility.yul\":874:886   */\n      revert\n        /* \"#utility.yul\":833:888   */\n    tag_391:\n      pop\n        /* \"#utility.yul\":907:927   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":950:968   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":939:969   */\n      dup2\n      gt\n        /* \"#utility.yul\":936:986   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":982:983   */\n      0x00\n        /* \"#utility.yul\":979:980   */\n      dup1\n        /* \"#utility.yul\":972:984   */\n      revert\n        /* \"#utility.yul\":936:986   */\n    tag_392:\n        /* \"#utility.yul\":1019:1023   */\n      0x20\n        /* \"#utility.yul\":1011:1017   */\n      dup4\n        /* \"#utility.yul\":1007:1024   */\n      add\n        /* \"#utility.yul\":995:1024   */\n      swap2\n      pop\n        /* \"#utility.yul\":1071:1074   */\n      dup4\n        /* \"#utility.yul\":1064:1068   */\n      0x20\n        /* \"#utility.yul\":1055:1061   */\n      dup3\n        /* \"#utility.yul\":1047:1053   */\n      dup6\n        /* \"#utility.yul\":1043:1062   */\n      add\n        /* \"#utility.yul\":1039:1069   */\n      add\n        /* \"#utility.yul\":1036:1075   */\n      gt\n        /* \"#utility.yul\":1033:1092   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":1088:1089   */\n      0x00\n        /* \"#utility.yul\":1085:1086   */\n      dup1\n        /* \"#utility.yul\":1078:1090   */\n      revert\n        /* \"#utility.yul\":1033:1092   */\n    tag_393:\n        /* \"#utility.yul\":751:1098   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1103:2113   */\n    tag_37:\n        /* \"#utility.yul\":1246:1252   */\n      0x00\n        /* \"#utility.yul\":1254:1260   */\n      dup1\n        /* \"#utility.yul\":1262:1268   */\n      0x00\n        /* \"#utility.yul\":1270:1276   */\n      dup1\n        /* \"#utility.yul\":1278:1284   */\n      0x00\n        /* \"#utility.yul\":1331:1333   */\n      0x60\n        /* \"#utility.yul\":1319:1328   */\n      dup7\n        /* \"#utility.yul\":1310:1317   */\n      dup9\n        /* \"#utility.yul\":1306:1329   */\n      sub\n        /* \"#utility.yul\":1302:1334   */\n      slt\n        /* \"#utility.yul\":1299:1351   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":1347:1348   */\n      0x00\n        /* \"#utility.yul\":1344:1345   */\n      dup1\n        /* \"#utility.yul\":1337:1349   */\n      revert\n        /* \"#utility.yul\":1299:1351   */\n    tag_395:\n        /* \"#utility.yul\":1387:1396   */\n      dup6\n        /* \"#utility.yul\":1374:1397   */\n      calldataload\n        /* \"#utility.yul\":1416:1434   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1457:1459   */\n      dup1\n        /* \"#utility.yul\":1449:1455   */\n      dup3\n        /* \"#utility.yul\":1446:1460   */\n      gt\n        /* \"#utility.yul\":1443:1477   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":1473:1474   */\n      0x00\n        /* \"#utility.yul\":1470:1471   */\n      dup1\n        /* \"#utility.yul\":1463:1475   */\n      revert\n        /* \"#utility.yul\":1443:1477   */\n    tag_396:\n        /* \"#utility.yul\":1511:1517   */\n      dup2\n        /* \"#utility.yul\":1500:1509   */\n      dup9\n        /* \"#utility.yul\":1496:1518   */\n      add\n        /* \"#utility.yul\":1486:1518   */\n      swap2\n      pop\n        /* \"#utility.yul\":1556:1563   */\n      dup9\n        /* \"#utility.yul\":1549:1553   */\n      0x1f\n        /* \"#utility.yul\":1545:1547   */\n      dup4\n        /* \"#utility.yul\":1541:1554   */\n      add\n        /* \"#utility.yul\":1537:1564   */\n      slt\n        /* \"#utility.yul\":1527:1582   */\n      tag_397\n      jumpi\n        /* \"#utility.yul\":1578:1579   */\n      0x00\n        /* \"#utility.yul\":1575:1576   */\n      dup1\n        /* \"#utility.yul\":1568:1580   */\n      revert\n        /* \"#utility.yul\":1527:1582   */\n    tag_397:\n        /* \"#utility.yul\":1618:1620   */\n      dup2\n        /* \"#utility.yul\":1605:1621   */\n      calldataload\n        /* \"#utility.yul\":1644:1646   */\n      dup2\n        /* \"#utility.yul\":1636:1642   */\n      dup2\n        /* \"#utility.yul\":1633:1647   */\n      gt\n        /* \"#utility.yul\":1630:1664   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":1660:1661   */\n      0x00\n        /* \"#utility.yul\":1657:1658   */\n      dup1\n        /* \"#utility.yul\":1650:1662   */\n      revert\n        /* \"#utility.yul\":1630:1664   */\n    tag_398:\n        /* \"#utility.yul\":1715:1722   */\n      dup10\n        /* \"#utility.yul\":1708:1712   */\n      0x20\n        /* \"#utility.yul\":1698:1704   */\n      dup3\n        /* \"#utility.yul\":1695:1696   */\n      0x05\n        /* \"#utility.yul\":1691:1705   */\n      shl\n        /* \"#utility.yul\":1687:1689   */\n      dup6\n        /* \"#utility.yul\":1683:1706   */\n      add\n        /* \"#utility.yul\":1679:1713   */\n      add\n        /* \"#utility.yul\":1676:1723   */\n      gt\n        /* \"#utility.yul\":1673:1740   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":1736:1737   */\n      0x00\n        /* \"#utility.yul\":1733:1734   */\n      dup1\n        /* \"#utility.yul\":1726:1738   */\n      revert\n        /* \"#utility.yul\":1673:1740   */\n    tag_399:\n        /* \"#utility.yul\":1767:1771   */\n      0x20\n        /* \"#utility.yul\":1763:1765   */\n      dup4\n        /* \"#utility.yul\":1759:1772   */\n      add\n        /* \"#utility.yul\":1749:1772   */\n      swap8\n      pop\n        /* \"#utility.yul\":1791:1797   */\n      dup1\n        /* \"#utility.yul\":1781:1797   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":1816:1856   */\n      tag_400\n        /* \"#utility.yul\":1850:1854   */\n      0x20\n        /* \"#utility.yul\":1839:1848   */\n      dup10\n        /* \"#utility.yul\":1835:1855   */\n      add\n        /* \"#utility.yul\":1816:1856   */\n      tag_371\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":1806:1856   */\n      swap5\n      pop\n        /* \"#utility.yul\":1909:1911   */\n      0x40\n        /* \"#utility.yul\":1898:1907   */\n      dup9\n        /* \"#utility.yul\":1894:1912   */\n      add\n        /* \"#utility.yul\":1881:1913   */\n      calldataload\n        /* \"#utility.yul\":1865:1913   */\n      swap2\n      pop\n        /* \"#utility.yul\":1938:1940   */\n      dup1\n        /* \"#utility.yul\":1928:1936   */\n      dup3\n        /* \"#utility.yul\":1925:1941   */\n      gt\n        /* \"#utility.yul\":1922:1958   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":1954:1955   */\n      0x00\n        /* \"#utility.yul\":1951:1952   */\n      dup1\n        /* \"#utility.yul\":1944:1956   */\n      revert\n        /* \"#utility.yul\":1922:1958   */\n    tag_401:\n      pop\n        /* \"#utility.yul\":1993:2053   */\n      tag_402\n        /* \"#utility.yul\":2045:2052   */\n      dup9\n        /* \"#utility.yul\":2034:2042   */\n      dup3\n        /* \"#utility.yul\":2023:2032   */\n      dup10\n        /* \"#utility.yul\":2019:2043   */\n      add\n        /* \"#utility.yul\":1993:2053   */\n      tag_372\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":1103:2113   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      pop\n        /* \"#utility.yul\":2072:2080   */\n      swap3\n      swap5\n        /* \"#utility.yul\":1967:2053   */\n      swap4\n        /* \"#utility.yul\":1103:2113   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2435:3093   */\n    tag_48:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2658:2679   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2728:2741   */\n      dup3\n      mload\n        /* \"#utility.yul\":2631:2649   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":2750:2772   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2577:2581   */\n      0x00\n      swap2\n        /* \"#utility.yul\":2606:2608   */\n      swap1\n        /* \"#utility.yul\":2829:2844   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":2803:2805   */\n      0x40\n        /* \"#utility.yul\":2788:2806   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":2577:2581   */\n      dup5\n        /* \"#utility.yul\":2872:3067   */\n    tag_406:\n        /* \"#utility.yul\":2886:2892   */\n      dup2\n        /* \"#utility.yul\":2883:2884   */\n      dup2\n        /* \"#utility.yul\":2880:2893   */\n      lt\n        /* \"#utility.yul\":2872:3067   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":2951:2964   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2947:2986   */\n      and\n        /* \"#utility.yul\":2935:2987   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3042:3057   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":3007:3019   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":2983:2984   */\n      0x01\n        /* \"#utility.yul\":2901:2910   */\n      add\n        /* \"#utility.yul\":2872:3067   */\n      jump(tag_406)\n    tag_408:\n      pop\n        /* \"#utility.yul\":3084:3087   */\n      swap1\n      swap7\n        /* \"#utility.yul\":2435:3093   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3098:3559   */\n    tag_374:\n        /* \"#utility.yul\":3150:3153   */\n      0x00\n        /* \"#utility.yul\":3188:3193   */\n      dup2\n        /* \"#utility.yul\":3182:3194   */\n      mload\n        /* \"#utility.yul\":3215:3221   */\n      dup1\n        /* \"#utility.yul\":3210:3213   */\n      dup5\n        /* \"#utility.yul\":3203:3222   */\n      mstore\n        /* \"#utility.yul\":3241:3245   */\n      0x20\n        /* \"#utility.yul\":3270:3272   */\n      dup1\n        /* \"#utility.yul\":3265:3268   */\n      dup6\n        /* \"#utility.yul\":3261:3273   */\n      add\n        /* \"#utility.yul\":3254:3273   */\n      swap5\n      pop\n        /* \"#utility.yul\":3307:3309   */\n      dup1\n        /* \"#utility.yul\":3300:3305   */\n      dup5\n        /* \"#utility.yul\":3296:3310   */\n      add\n        /* \"#utility.yul\":3328:3329   */\n      0x00\n        /* \"#utility.yul\":3338:3534   */\n    tag_410:\n        /* \"#utility.yul\":3352:3358   */\n      dup4\n        /* \"#utility.yul\":3349:3350   */\n      dup2\n        /* \"#utility.yul\":3346:3359   */\n      lt\n        /* \"#utility.yul\":3338:3534   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":3417:3430   */\n      dup2\n      mload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":3413:3453   */\n      and\n        /* \"#utility.yul\":3401:3454   */\n      dup8\n      mstore\n        /* \"#utility.yul\":3474:3486   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":3509:3524   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":3374:3375   */\n      0x01\n        /* \"#utility.yul\":3367:3376   */\n      add\n        /* \"#utility.yul\":3338:3534   */\n      jump(tag_410)\n    tag_412:\n      pop\n        /* \"#utility.yul\":3550:3553   */\n      swap5\n      swap6\n        /* \"#utility.yul\":3098:3559   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3564:4623   */\n    tag_56:\n        /* \"#utility.yul\":3752:3756   */\n      0x00\n        /* \"#utility.yul\":3781:3783   */\n      0x20\n        /* \"#utility.yul\":3821:3823   */\n      dup1\n        /* \"#utility.yul\":3810:3819   */\n      dup4\n        /* \"#utility.yul\":3806:3824   */\n      add\n        /* \"#utility.yul\":3851:3853   */\n      dup2\n        /* \"#utility.yul\":3840:3849   */\n      dup5\n        /* \"#utility.yul\":3833:3854   */\n      mstore\n        /* \"#utility.yul\":3874:3880   */\n      dup1\n        /* \"#utility.yul\":3909:3915   */\n      dup6\n        /* \"#utility.yul\":3903:3916   */\n      mload\n        /* \"#utility.yul\":3940:3946   */\n      dup1\n        /* \"#utility.yul\":3932:3938   */\n      dup4\n        /* \"#utility.yul\":3925:3947   */\n      mstore\n        /* \"#utility.yul\":3966:3968   */\n      0x40\n        /* \"#utility.yul\":3956:3968   */\n      swap3\n      pop\n        /* \"#utility.yul\":3999:4001   */\n      dup3\n        /* \"#utility.yul\":3988:3997   */\n      dup7\n        /* \"#utility.yul\":3984:4002   */\n      add\n        /* \"#utility.yul\":3977:4002   */\n      swap2\n      pop\n        /* \"#utility.yul\":4061:4063   */\n      dup3\n        /* \"#utility.yul\":4051:4057   */\n      dup2\n        /* \"#utility.yul\":4048:4049   */\n      0x05\n        /* \"#utility.yul\":4044:4058   */\n      shl\n        /* \"#utility.yul\":4033:4042   */\n      dup8\n        /* \"#utility.yul\":4029:4059   */\n      add\n        /* \"#utility.yul\":4025:4064   */\n      add\n        /* \"#utility.yul\":4099:4101   */\n      dup5\n        /* \"#utility.yul\":4091:4097   */\n      dup9\n        /* \"#utility.yul\":4087:4102   */\n      add\n        /* \"#utility.yul\":4120:4121   */\n      0x00\n        /* \"#utility.yul\":4130:4594   */\n    tag_414:\n        /* \"#utility.yul\":4144:4150   */\n      dup4\n        /* \"#utility.yul\":4141:4142   */\n      dup2\n        /* \"#utility.yul\":4138:4151   */\n      lt\n        /* \"#utility.yul\":4130:4594   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":4209:4231   */\n      dup9\n      dup4\n      sub\n      not(0x3f)\n        /* \"#utility.yul\":4205:4241   */\n      add\n        /* \"#utility.yul\":4193:4242   */\n      dup6\n      mstore\n        /* \"#utility.yul\":4265:4278   */\n      dup2\n      mload\n        /* \"#utility.yul\":4310:4319   */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4306:4341   */\n      and\n        /* \"#utility.yul\":4291:4342   */\n      dup5\n      mstore\n        /* \"#utility.yul\":4381:4392   */\n      dup8\n      add\n        /* \"#utility.yul\":4375:4393   */\n      mload\n        /* \"#utility.yul\":4413:4428   */\n      dup8\n      dup5\n      add\n        /* \"#utility.yul\":4406:4433   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":4456:4514   */\n      tag_417\n        /* \"#utility.yul\":4498:4513   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":4375:4393   */\n      dup3\n        /* \"#utility.yul\":4456:4514   */\n      tag_374\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":4572:4584   */\n      swap6\n      dup9\n      add\n      swap6\n        /* \"#utility.yul\":4446:4514   */\n      swap4\n      pop\n      pop\n        /* \"#utility.yul\":4537:4552   */\n      swap1\n      dup7\n      add\n      swap1\n        /* \"#utility.yul\":4166:4167   */\n      0x01\n        /* \"#utility.yul\":4159:4168   */\n      add\n        /* \"#utility.yul\":4130:4594   */\n      jump(tag_414)\n    tag_416:\n      pop\n        /* \"#utility.yul\":4611:4617   */\n      swap1\n      swap9\n        /* \"#utility.yul\":3564:4623   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4628:4814   */\n    tag_68:\n        /* \"#utility.yul\":4687:4693   */\n      0x00\n        /* \"#utility.yul\":4740:4742   */\n      0x20\n        /* \"#utility.yul\":4728:4737   */\n      dup3\n        /* \"#utility.yul\":4719:4726   */\n      dup5\n        /* \"#utility.yul\":4715:4738   */\n      sub\n        /* \"#utility.yul\":4711:4743   */\n      slt\n        /* \"#utility.yul\":4708:4760   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":4756:4757   */\n      0x00\n        /* \"#utility.yul\":4753:4754   */\n      dup1\n        /* \"#utility.yul\":4746:4758   */\n      revert\n        /* \"#utility.yul\":4708:4760   */\n    tag_419:\n        /* \"#utility.yul\":4779:4808   */\n      tag_386\n        /* \"#utility.yul\":4798:4807   */\n      dup3\n        /* \"#utility.yul\":4779:4808   */\n      tag_371\n      jump\t// in\n        /* \"#utility.yul\":4819:5476   */\n    tag_75:\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":5040:5061   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5110:5123   */\n      dup3\n      mload\n        /* \"#utility.yul\":5013:5031   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":5132:5154   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4959:4963   */\n      0x00\n      swap2\n        /* \"#utility.yul\":4988:4990   */\n      swap1\n        /* \"#utility.yul\":5211:5226   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":5185:5187   */\n      0x40\n        /* \"#utility.yul\":5170:5188   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":4959:4963   */\n      dup5\n        /* \"#utility.yul\":5254:5450   */\n    tag_422:\n        /* \"#utility.yul\":5268:5274   */\n      dup2\n        /* \"#utility.yul\":5265:5266   */\n      dup2\n        /* \"#utility.yul\":5262:5275   */\n      lt\n        /* \"#utility.yul\":5254:5450   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":5333:5346   */\n      dup4\n      mload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":5329:5369   */\n      and\n        /* \"#utility.yul\":5317:5370   */\n      dup4\n      mstore\n        /* \"#utility.yul\":5425:5440   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":5390:5402   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":5290:5291   */\n      0x01\n        /* \"#utility.yul\":5283:5292   */\n      add\n        /* \"#utility.yul\":5254:5450   */\n      jump(tag_422)\n        /* \"#utility.yul\":5481:5608   */\n    tag_109:\n        /* \"#utility.yul\":5542:5552   */\n      0x4e487b71\n        /* \"#utility.yul\":5537:5540   */\n      0xe0\n        /* \"#utility.yul\":5533:5553   */\n      shl\n        /* \"#utility.yul\":5530:5531   */\n      0x00\n        /* \"#utility.yul\":5523:5554   */\n      mstore\n        /* \"#utility.yul\":5573:5577   */\n      0x41\n        /* \"#utility.yul\":5570:5571   */\n      0x04\n        /* \"#utility.yul\":5563:5578   */\n      mstore\n        /* \"#utility.yul\":5597:5601   */\n      0x24\n        /* \"#utility.yul\":5594:5595   */\n      0x00\n        /* \"#utility.yul\":5587:5602   */\n      revert\n        /* \"#utility.yul\":5613:5866   */\n    tag_375:\n        /* \"#utility.yul\":5685:5687   */\n      0x40\n        /* \"#utility.yul\":5679:5688   */\n      mload\n        /* \"#utility.yul\":5727:5731   */\n      0x60\n        /* \"#utility.yul\":5715:5732   */\n      dup2\n      add\n        /* \"#utility.yul\":5762:5780   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5747:5781   */\n      dup2\n      gt\n        /* \"#utility.yul\":5783:5805   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":5744:5806   */\n      or\n        /* \"#utility.yul\":5741:5829   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":5809:5827   */\n      tag_428\n      tag_109\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":5845:5847   */\n      0x40\n        /* \"#utility.yul\":5838:5860   */\n      mstore\n        /* \"#utility.yul\":5613:5866   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":5871:6146   */\n    tag_376:\n        /* \"#utility.yul\":5942:5944   */\n      0x40\n        /* \"#utility.yul\":5936:5945   */\n      mload\n        /* \"#utility.yul\":6007:6009   */\n      0x1f\n        /* \"#utility.yul\":5988:6001   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":5984:6011   */\n      and\n        /* \"#utility.yul\":5972:6012   */\n      dup2\n      add\n        /* \"#utility.yul\":6042:6060   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6027:6061   */\n      dup2\n      gt\n        /* \"#utility.yul\":6063:6085   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":6024:6086   */\n      or\n        /* \"#utility.yul\":6021:6109   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":6089:6107   */\n      tag_431\n      tag_109\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":6125:6127   */\n      0x40\n        /* \"#utility.yul\":6118:6140   */\n      mstore\n        /* \"#utility.yul\":5871:6146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6151:6342   */\n    tag_377:\n        /* \"#utility.yul\":6219:6223   */\n      0x00\n        /* \"#utility.yul\":6252:6270   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6244:6250   */\n      dup3\n        /* \"#utility.yul\":6241:6271   */\n      gt\n        /* \"#utility.yul\":6238:6294   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":6274:6292   */\n      tag_434\n      tag_109\n      jump\t// in\n    tag_434:\n      pop\n        /* \"#utility.yul\":6319:6320   */\n      0x05\n        /* \"#utility.yul\":6315:6329   */\n      shl\n        /* \"#utility.yul\":6331:6335   */\n      0x20\n        /* \"#utility.yul\":6311:6336   */\n      add\n      swap1\n        /* \"#utility.yul\":6151:6342   */\n      jump\t// out\n        /* \"#utility.yul\":6347:8857   */\n    tag_99:\n        /* \"#utility.yul\":6517:6526   */\n      0x00\n        /* \"#utility.yul\":6552:6624   */\n      tag_436\n        /* \"#utility.yul\":6568:6623   */\n      tag_437\n        /* \"#utility.yul\":6616:6622   */\n      dup5\n        /* \"#utility.yul\":6568:6623   */\n      tag_377\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":6552:6624   */\n      tag_376\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":6658:6677   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":6696:6700   */\n      0x20\n        /* \"#utility.yul\":6716:6728   */\n      dup1\n      dup3\n      add\n      swap2\n        /* \"#utility.yul\":6646:6649   */\n      swap1\n        /* \"#utility.yul\":6747:6748   */\n      0x05\n        /* \"#utility.yul\":6782:6797   */\n      dup7\n      dup2\n      shl\n        /* \"#utility.yul\":6771:6798   */\n      dup7\n      add\n        /* \"#utility.yul\":6821:6835   */\n      calldatasize\n        /* \"#utility.yul\":6810:6836   */\n      dup2\n      gt\n        /* \"#utility.yul\":6807:6853   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":6849:6850   */\n      0x00\n        /* \"#utility.yul\":6846:6847   */\n      dup1\n        /* \"#utility.yul\":6839:6851   */\n      revert\n        /* \"#utility.yul\":6807:6853   */\n    tag_438:\n        /* \"#utility.yul\":6873:6878   */\n      dup7\n        /* \"#utility.yul\":6887:8824   */\n    tag_439:\n        /* \"#utility.yul\":6903:6909   */\n      dup2\n        /* \"#utility.yul\":6898:6901   */\n      dup2\n        /* \"#utility.yul\":6895:6910   */\n      lt\n        /* \"#utility.yul\":6887:8824   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":6989:6992   */\n      dup1\n        /* \"#utility.yul\":6976:6993   */\n      calldataload\n        /* \"#utility.yul\":7016:7034   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7066:7068   */\n      dup1\n        /* \"#utility.yul\":7053:7064   */\n      dup3\n        /* \"#utility.yul\":7050:7069   */\n      gt\n        /* \"#utility.yul\":7047:7156   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":7110:7111   */\n      0x00\n        /* \"#utility.yul\":7139:7141   */\n      dup1\n        /* \"#utility.yul\":7135:7137   */\n      dup2\n        /* \"#utility.yul\":7128:7142   */\n      revert\n        /* \"#utility.yul\":7047:7156   */\n    tag_442:\n        /* \"#utility.yul\":7190:7201   */\n      dup2\n        /* \"#utility.yul\":7183:7188   */\n      dup11\n        /* \"#utility.yul\":7179:7202   */\n      add\n        /* \"#utility.yul\":7169:7202   */\n      swap2\n      pop\n        /* \"#utility.yul\":7247:7251   */\n      0x60\n        /* \"#utility.yul\":7242:7244   */\n      dup3\n        /* \"#utility.yul\":7226:7240   */\n      calldatasize\n        /* \"#utility.yul\":7222:7245   */\n      sub\n        /* \"#utility.yul\":7218:7252   */\n      slt\n        /* \"#utility.yul\":7215:7339   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":7293:7294   */\n      0x00\n        /* \"#utility.yul\":7322:7324   */\n      dup1\n        /* \"#utility.yul\":7318:7320   */\n      dup2\n        /* \"#utility.yul\":7311:7325   */\n      revert\n        /* \"#utility.yul\":7215:7339   */\n    tag_443:\n        /* \"#utility.yul\":7367:7389   */\n      tag_444\n      tag_375\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":7418:7440   */\n      tag_445\n        /* \"#utility.yul\":7437:7439   */\n      dup4\n        /* \"#utility.yul\":7418:7440   */\n      tag_371\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":7409:7416   */\n      dup2\n        /* \"#utility.yul\":7402:7441   */\n      mstore\n        /* \"#utility.yul\":7490:7492   */\n      dup7\n        /* \"#utility.yul\":7486:7488   */\n      dup4\n        /* \"#utility.yul\":7482:7493   */\n      add\n        /* \"#utility.yul\":7469:7494   */\n      calldataload\n        /* \"#utility.yul\":7529:7530   */\n      0x03\n        /* \"#utility.yul\":7520:7527   */\n      dup2\n        /* \"#utility.yul\":7517:7531   */\n      lt\n        /* \"#utility.yul\":7507:7619   */\n      tag_446\n      jumpi\n        /* \"#utility.yul\":7573:7574   */\n      0x00\n        /* \"#utility.yul\":7602:7604   */\n      dup1\n        /* \"#utility.yul\":7598:7600   */\n      dup2\n        /* \"#utility.yul\":7591:7605   */\n      revert\n        /* \"#utility.yul\":7507:7619   */\n    tag_446:\n        /* \"#utility.yul\":7639:7655   */\n      dup2\n      dup9\n      add\n        /* \"#utility.yul\":7632:7665   */\n      mstore\n        /* \"#utility.yul\":7688:7690   */\n      0x40\n        /* \"#utility.yul\":7730:7741   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":7717:7742   */\n      calldataload\n        /* \"#utility.yul\":7758:7772   */\n      dup4\n      dup2\n      gt\n        /* \"#utility.yul\":7755:7859   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":7813:7814   */\n      0x00\n        /* \"#utility.yul\":7842:7844   */\n      dup1\n        /* \"#utility.yul\":7838:7840   */\n      dup2\n        /* \"#utility.yul\":7831:7845   */\n      revert\n        /* \"#utility.yul\":7755:7859   */\n    tag_447:\n        /* \"#utility.yul\":7883:7898   */\n      swap4\n      swap1\n      swap4\n      add\n      swap3\n        /* \"#utility.yul\":7941:7955   */\n      calldatasize\n        /* \"#utility.yul\":7934:7938   */\n      0x1f\n        /* \"#utility.yul\":7925:7939   */\n      dup6\n      add\n        /* \"#utility.yul\":7921:7956   */\n      slt\n        /* \"#utility.yul\":7911:8047   */\n      tag_448\n      jumpi\n        /* \"#utility.yul\":7999:8000   */\n      0x00\n        /* \"#utility.yul\":7988:8000   */\n      swap3\n      pop\n        /* \"#utility.yul\":8029:8032   */\n      dup3\n        /* \"#utility.yul\":8024:8027   */\n      dup4\n        /* \"#utility.yul\":8017:8033   */\n      revert\n        /* \"#utility.yul\":7911:8047   */\n    tag_448:\n        /* \"#utility.yul\":8084:8087   */\n      dup4\n        /* \"#utility.yul\":8071:8088   */\n      calldataload\n        /* \"#utility.yul\":8060:8088   */\n      swap3\n      pop\n        /* \"#utility.yul\":8114:8183   */\n      tag_449\n        /* \"#utility.yul\":8130:8182   */\n      tag_437\n        /* \"#utility.yul\":8178:8181   */\n      dup5\n        /* \"#utility.yul\":8130:8182   */\n      tag_377\n      jump\t// in\n        /* \"#utility.yul\":8114:8183   */\n    tag_449:\n        /* \"#utility.yul\":8227:8245   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":8323:8335   */\n      swap3\n      dup8\n      shl\n        /* \"#utility.yul\":8314:8336   */\n      dup5\n      add\n        /* \"#utility.yul\":8310:8341   */\n      dup9\n      add\n      swap3\n        /* \"#utility.yul\":8267:8281   */\n      dup9\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":8370:8384   */\n      calldatasize\n        /* \"#utility.yul\":8357:8385   */\n      dup6\n      gt\n        /* \"#utility.yul\":8354:8475   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":8427:8428   */\n      0x00\n        /* \"#utility.yul\":8457:8460   */\n      dup1\n        /* \"#utility.yul\":8452:8455   */\n      dup2\n        /* \"#utility.yul\":8445:8461   */\n      revert\n        /* \"#utility.yul\":8354:8475   */\n    tag_451:\n        /* \"#utility.yul\":8501:8513   */\n      swap5\n      dup10\n      add\n      swap5\n        /* \"#utility.yul\":8526:8705   */\n    tag_452:\n        /* \"#utility.yul\":8544:8552   */\n      dup5\n        /* \"#utility.yul\":8537:8542   */\n      dup7\n        /* \"#utility.yul\":8534:8553   */\n      lt\n        /* \"#utility.yul\":8526:8705   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":8626:8650   */\n      tag_455\n        /* \"#utility.yul\":8644:8649   */\n      dup7\n        /* \"#utility.yul\":8626:8650   */\n      tag_370\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":8612:8651   */\n      dup3\n      mstore\n        /* \"#utility.yul\":8565:8579   */\n      swap5\n      dup10\n      add\n      swap5\n        /* \"#utility.yul\":8677:8691   */\n      swap1\n      dup10\n      add\n      swap1\n        /* \"#utility.yul\":8526:8705   */\n      jump(tag_452)\n    tag_454:\n        /* \"#utility.yul\":8725:8741   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":8718:8749   */\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"#utility.yul\":8762:8782   */\n      dup9\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":8802:8814   */\n      swap5\n      dup4\n      add\n      swap5\n        /* \"#utility.yul\":6920:6932   */\n      dup4\n      add\n        /* \"#utility.yul\":6887:8824   */\n      jump(tag_439)\n    tag_441:\n      pop\n        /* \"#utility.yul\":8846:8851   */\n      swap3\n      swap8\n        /* \"#utility.yul\":6347:8857   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8862:8989   */\n    tag_378:\n        /* \"#utility.yul\":8923:8933   */\n      0x4e487b71\n        /* \"#utility.yul\":8918:8921   */\n      0xe0\n        /* \"#utility.yul\":8914:8934   */\n      shl\n        /* \"#utility.yul\":8911:8912   */\n      0x00\n        /* \"#utility.yul\":8904:8935   */\n      mstore\n        /* \"#utility.yul\":8954:8958   */\n      0x11\n        /* \"#utility.yul\":8951:8952   */\n      0x04\n        /* \"#utility.yul\":8944:8959   */\n      mstore\n        /* \"#utility.yul\":8978:8982   */\n      0x24\n        /* \"#utility.yul\":8975:8976   */\n      0x00\n        /* \"#utility.yul\":8968:8983   */\n      revert\n        /* \"#utility.yul\":8994:9129   */\n    tag_118:\n        /* \"#utility.yul\":9033:9036   */\n      0x00\n        /* \"#utility.yul\":9054:9071   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":9051:9094   */\n      tag_459\n      jumpi\n        /* \"#utility.yul\":9074:9092   */\n      tag_459\n      tag_378\n      jump\t// in\n    tag_459:\n      pop\n        /* \"#utility.yul\":9121:9122   */\n      0x01\n        /* \"#utility.yul\":9110:9123   */\n      add\n      swap1\n        /* \"#utility.yul\":8994:9129   */\n      jump\t// out\n        /* \"#utility.yul\":9134:9261   */\n    tag_125:\n        /* \"#utility.yul\":9195:9205   */\n      0x4e487b71\n        /* \"#utility.yul\":9190:9193   */\n      0xe0\n        /* \"#utility.yul\":9186:9206   */\n      shl\n        /* \"#utility.yul\":9183:9184   */\n      0x00\n        /* \"#utility.yul\":9176:9207   */\n      mstore\n        /* \"#utility.yul\":9226:9230   */\n      0x32\n        /* \"#utility.yul\":9223:9224   */\n      0x04\n        /* \"#utility.yul\":9216:9231   */\n      mstore\n        /* \"#utility.yul\":9250:9254   */\n      0x24\n        /* \"#utility.yul\":9247:9248   */\n      0x00\n        /* \"#utility.yul\":9240:9255   */\n      revert\n        /* \"#utility.yul\":9266:9441   */\n    tag_178:\n        /* \"#utility.yul\":9303:9306   */\n      0x00\n        /* \"#utility.yul\":9347:9351   */\n      0xff\n        /* \"#utility.yul\":9340:9345   */\n      dup3\n        /* \"#utility.yul\":9336:9352   */\n      and\n        /* \"#utility.yul\":9376:9380   */\n      0xff\n        /* \"#utility.yul\":9367:9374   */\n      dup2\n        /* \"#utility.yul\":9364:9381   */\n      sub\n        /* \"#utility.yul\":9361:9404   */\n      tag_463\n      jumpi\n        /* \"#utility.yul\":9384:9402   */\n      tag_463\n      tag_378\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":9433:9434   */\n      0x01\n        /* \"#utility.yul\":9420:9435   */\n      add\n      swap3\n        /* \"#utility.yul\":9266:9441   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9446:9573   */\n    tag_264:\n        /* \"#utility.yul\":9507:9517   */\n      0x4e487b71\n        /* \"#utility.yul\":9502:9505   */\n      0xe0\n        /* \"#utility.yul\":9498:9518   */\n      shl\n        /* \"#utility.yul\":9495:9496   */\n      0x00\n        /* \"#utility.yul\":9488:9519   */\n      mstore\n        /* \"#utility.yul\":9538:9542   */\n      0x21\n        /* \"#utility.yul\":9535:9536   */\n      0x04\n        /* \"#utility.yul\":9528:9543   */\n      mstore\n        /* \"#utility.yul\":9562:9566   */\n      0x24\n        /* \"#utility.yul\":9559:9560   */\n      0x00\n        /* \"#utility.yul\":9552:9567   */\n      revert\n        /* \"#utility.yul\":9578:9828   */\n    tag_379:\n        /* \"#utility.yul\":9663:9664   */\n      0x00\n        /* \"#utility.yul\":9673:9786   */\n    tag_466:\n        /* \"#utility.yul\":9687:9693   */\n      dup4\n        /* \"#utility.yul\":9684:9685   */\n      dup2\n        /* \"#utility.yul\":9681:9694   */\n      lt\n        /* \"#utility.yul\":9673:9786   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":9763:9774   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":9757:9775   */\n      mload\n        /* \"#utility.yul\":9744:9755   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":9737:9776   */\n      mstore\n        /* \"#utility.yul\":9709:9711   */\n      0x20\n        /* \"#utility.yul\":9702:9712   */\n      add\n        /* \"#utility.yul\":9673:9786   */\n      jump(tag_466)\n    tag_468:\n      pop\n      pop\n        /* \"#utility.yul\":9820:9821   */\n      0x00\n        /* \"#utility.yul\":9802:9818   */\n      swap2\n      add\n        /* \"#utility.yul\":9795:9822   */\n      mstore\n        /* \"#utility.yul\":9578:9828   */\n      jump\t// out\n        /* \"#utility.yul\":9833:10103   */\n    tag_380:\n        /* \"#utility.yul\":9874:9877   */\n      0x00\n        /* \"#utility.yul\":9912:9917   */\n      dup2\n        /* \"#utility.yul\":9906:9918   */\n      mload\n        /* \"#utility.yul\":9939:9945   */\n      dup1\n        /* \"#utility.yul\":9934:9937   */\n      dup5\n        /* \"#utility.yul\":9927:9946   */\n      mstore\n        /* \"#utility.yul\":9955:10031   */\n      tag_470\n        /* \"#utility.yul\":10024:10030   */\n      dup2\n        /* \"#utility.yul\":10017:10021   */\n      0x20\n        /* \"#utility.yul\":10012:10015   */\n      dup7\n        /* \"#utility.yul\":10008:10022   */\n      add\n        /* \"#utility.yul\":10001:10005   */\n      0x20\n        /* \"#utility.yul\":9994:9999   */\n      dup7\n        /* \"#utility.yul\":9990:10006   */\n      add\n        /* \"#utility.yul\":9955:10031   */\n      tag_379\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":10085:10087   */\n      0x1f\n        /* \"#utility.yul\":10064:10079   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":10060:10089   */\n      and\n        /* \"#utility.yul\":10051:10090   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":10092:10096   */\n      0x20\n        /* \"#utility.yul\":10047:10097   */\n      add\n      swap3\n        /* \"#utility.yul\":9833:10103   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10108:11736   */\n    tag_289:\n        /* \"#utility.yul\":10376:10380   */\n      0x00\n        /* \"#utility.yul\":10405:10407   */\n      0x60\n        /* \"#utility.yul\":10445:10447   */\n      dup1\n        /* \"#utility.yul\":10434:10443   */\n      dup4\n        /* \"#utility.yul\":10430:10448   */\n      add\n        /* \"#utility.yul\":10475:10477   */\n      dup2\n        /* \"#utility.yul\":10464:10473   */\n      dup5\n        /* \"#utility.yul\":10457:10478   */\n      mstore\n        /* \"#utility.yul\":10498:10504   */\n      dup1\n        /* \"#utility.yul\":10533:10539   */\n      dup8\n        /* \"#utility.yul\":10527:10540   */\n      mload\n        /* \"#utility.yul\":10564:10570   */\n      dup1\n        /* \"#utility.yul\":10556:10562   */\n      dup4\n        /* \"#utility.yul\":10549:10571   */\n      mstore\n        /* \"#utility.yul\":10602:10605   */\n      0x80\n        /* \"#utility.yul\":10591:10600   */\n      dup7\n        /* \"#utility.yul\":10587:10606   */\n      add\n        /* \"#utility.yul\":10580:10606   */\n      swap2\n      pop\n        /* \"#utility.yul\":10665:10668   */\n      0x80\n        /* \"#utility.yul\":10655:10661   */\n      dup2\n        /* \"#utility.yul\":10652:10653   */\n      0x05\n        /* \"#utility.yul\":10648:10662   */\n      shl\n        /* \"#utility.yul\":10637:10646   */\n      dup8\n        /* \"#utility.yul\":10633:10663   */\n      add\n        /* \"#utility.yul\":10629:10669   */\n      add\n        /* \"#utility.yul\":10615:10669   */\n      swap3\n      pop\n        /* \"#utility.yul\":10688:10692   */\n      0x20\n        /* \"#utility.yul\":10727:10729   */\n      dup1\n        /* \"#utility.yul\":10719:10725   */\n      dup11\n        /* \"#utility.yul\":10715:10730   */\n      add\n        /* \"#utility.yul\":10748:10749   */\n      0x00\n        /* \"#utility.yul\":10769:10770   */\n      dup1\n        /* \"#utility.yul\":10779:11565   */\n    tag_472:\n        /* \"#utility.yul\":10795:10801   */\n      dup5\n        /* \"#utility.yul\":10790:10793   */\n      dup2\n        /* \"#utility.yul\":10787:10802   */\n      lt\n        /* \"#utility.yul\":10779:11565   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":10864:10886   */\n      dup10\n      dup8\n      sub\n      not(0x7f)\n        /* \"#utility.yul\":10860:10897   */\n      add\n        /* \"#utility.yul\":10848:10898   */\n      dup7\n      mstore\n        /* \"#utility.yul\":10921:10934   */\n      dup3\n      mload\n        /* \"#utility.yul\":10966:10975   */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10962:10997   */\n      and\n        /* \"#utility.yul\":10947:10998   */\n      dup9\n      mstore\n        /* \"#utility.yul\":11037:11048   */\n      dup5\n      dup2\n      add\n        /* \"#utility.yul\":11031:11049   */\n      mload\n        /* \"#utility.yul\":11089:11090   */\n      0x03\n        /* \"#utility.yul\":11072:11091   */\n      dup2\n      lt\n        /* \"#utility.yul\":11062:11232   */\n      tag_475\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":11123:11154   */\n      dup5\n      mstore\n        /* \"#utility.yul\":11181:11185   */\n      0x21\n        /* \"#utility.yul\":11178:11179   */\n      0x04\n        /* \"#utility.yul\":11171:11186   */\n      mstore\n        /* \"#utility.yul\":11213:11217   */\n      0x24\n        /* \"#utility.yul\":11130:11131   */\n      dup5\n        /* \"#utility.yul\":11203:11218   */\n      revert\n        /* \"#utility.yul\":11062:11232   */\n    tag_475:\n        /* \"#utility.yul\":11252:11267   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":11245:11282   */\n      mstore\n        /* \"#utility.yul\":11305:11309   */\n      0x40\n        /* \"#utility.yul\":11350:11361   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":11344:11362   */\n      mload\n        /* \"#utility.yul\":11382:11397   */\n      swap1\n      dup9\n      add\n        /* \"#utility.yul\":11375:11402   */\n      dup10\n      swap1\n      mstore\n        /* \"#utility.yul\":11425:11485   */\n      tag_476\n        /* \"#utility.yul\":11469:11484   */\n      dup10\n      dup10\n      add\n        /* \"#utility.yul\":11344:11362   */\n      dup3\n        /* \"#utility.yul\":11425:11485   */\n      tag_374\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":11415:11485   */\n      swap8\n      pop\n      pop\n        /* \"#utility.yul\":11543:11555   */\n      swap5\n      dup4\n      add\n      swap5\n        /* \"#utility.yul\":11508:11523   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":10821:10822   */\n      0x01\n        /* \"#utility.yul\":10812:10823   */\n      add\n        /* \"#utility.yul\":10779:11565   */\n      jump(tag_472)\n    tag_474:\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2184:2215   */\n      dup10\n      and\n        /* \"#utility.yul\":11601:11619   */\n      swap1\n      dup8\n      add\n        /* \"#utility.yul\":2172:2216   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":11658:11680   */\n      dup4\n      dup2\n      sub\n        /* \"#utility.yul\":11651:11655   */\n      0x40\n        /* \"#utility.yul\":11636:11656   */\n      dup6\n      add\n        /* \"#utility.yul\":11629:11681   */\n      mstore\n        /* \"#utility.yul\":11698:11730   */\n      tag_478\n        /* \"#utility.yul\":11662:11668   */\n      dup2\n        /* \"#utility.yul\":11715:11721   */\n      dup7\n        /* \"#utility.yul\":11698:11730   */\n      tag_380\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":11690:11730   */\n      swap8\n        /* \"#utility.yul\":10108:11736   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11741:12028   */\n    tag_354:\n        /* \"#utility.yul\":11870:11873   */\n      0x00\n        /* \"#utility.yul\":11908:11914   */\n      dup3\n        /* \"#utility.yul\":11902:11915   */\n      mload\n        /* \"#utility.yul\":11924:11990   */\n      tag_480\n        /* \"#utility.yul\":11983:11989   */\n      dup2\n        /* \"#utility.yul\":11978:11981   */\n      dup5\n        /* \"#utility.yul\":11971:11975   */\n      0x20\n        /* \"#utility.yul\":11963:11969   */\n      dup8\n        /* \"#utility.yul\":11959:11976   */\n      add\n        /* \"#utility.yul\":11924:11990   */\n      tag_379\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":12006:12022   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":11741:12028   */\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_a5e74bf718c7d6929bf8f422c8be92118782759abac1bf7601c5a938d6f306a1 177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc94\n    data_b4a3f1194ff204df3421c76163ff361a7821792777bfc1dcb14fa8d3eb97e7f5 177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc93\n\n    auxdata: 0xa26469706673582212204fd3e61e32cabd24239218d2a5618d6811f3c53d9103eb5dd773aa327300861664736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_907": {
									"entryPoint": null,
									"id": 907,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_addFacetSelectors_2097": {
									"entryPoint": 1906,
									"id": 2097,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"@_diamondCut_1947": {
									"entryPoint": 1271,
									"id": 1947,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_initialize_2548": {
									"entryPoint": 3125,
									"id": 2548,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_removeFacetSelectors_2385": {
									"entryPoint": 2569,
									"id": 2385,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"@_replaceFacetSelectors_2487": {
									"entryPoint": 2234,
									"id": 2487,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setOwner_224": {
									"entryPoint": 1784,
									"id": 224,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setSupportsInterface_535": {
									"entryPoint": 1152,
									"id": 535,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@isContract_2659": {
									"entryPoint": null,
									"id": 2659,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@layout_1024": {
									"entryPoint": null,
									"id": 1024,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@layout_247": {
									"entryPoint": null,
									"id": 247,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@layout_560": {
									"entryPoint": null,
									"id": 560,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_bytes": {
									"entryPoint": 3484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__to_t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 3530,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3446,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 3362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 3424,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3402,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3670:38",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:38",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:38",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:38",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:38",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:38",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:38",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:38"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "193:185:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "232:111:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "253:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "260:3:38",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "265:10:38",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "256:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "256:20:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "246:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "246:31:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "246:31:38"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "297:1:38",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "300:4:38",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "290:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "290:15:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "290:15:38"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "325:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "328:4:38",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "318:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "318:15:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "318:15:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "209:5:38"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "220:1:38",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "216:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "216:6:38"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "206:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "206:17:38"
															},
															"nodeType": "YulIf",
															"src": "203:140:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "352:20:38",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "363:5:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "370:1:38",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "359:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "359:13:38"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "352:3:38"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "175:5:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "185:3:38",
														"type": ""
													}
												],
												"src": "146:232:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "415:95:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "432:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "439:3:38",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "444:10:38",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "435:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "435:20:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "425:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "425:31:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "425:31:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "472:1:38",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "475:4:38",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "465:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "465:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "465:15:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "499:4:38",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "489:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "489:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "489:15:38"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "383:127:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "547:95:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "564:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "571:3:38",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "576:10:38",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "567:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "567:20:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "557:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "557:31:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "557:31:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:38",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "607:4:38",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:15:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "628:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "631:4:38",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "621:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "621:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "621:15:38"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "515:127:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "691:60:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "717:5:38"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "732:3:38",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "737:1:38",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "728:3:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "728:11:38"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "741:1:38",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "724:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "724:19:38"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "713:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "713:31:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "701:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:44:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "701:44:38"
														}
													]
												},
												"name": "abi_encode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "675:5:38",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "682:3:38",
														"type": ""
													}
												],
												"src": "647:104:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "822:184:38",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "832:10:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "841:1:38",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "836:1:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "901:63:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "926:3:38"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "931:1:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "922:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "922:11:38"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "945:3:38"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "950:1:38"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "941:3:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "941:11:38"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "935:5:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "935:18:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "915:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "915:39:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "915:39:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "862:1:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "865:6:38"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "859:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "859:13:38"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "873:19:38",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "875:15:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "884:1:38"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:2:38",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "880:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:10:38"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "875:1:38"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "855:3:38",
																"statements": []
															},
															"src": "851:113:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "984:3:38"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "989:6:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "980:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "980:16:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "998:1:38",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "973:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "973:27:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "973:27:38"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "800:3:38",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "805:3:38",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "810:6:38",
														"type": ""
													}
												],
												"src": "756:250:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1060:221:38",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1070:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1090:5:38"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1084:5:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1084:12:38"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1074:6:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1112:3:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1117:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1105:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1105:19:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1105:19:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1172:5:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1179:4:38",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1168:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1168:16:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1190:3:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1195:4:38",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1186:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1186:14:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1202:6:38"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1133:34:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1133:76:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1133:76:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1218:57:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1233:3:38"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1246:6:38"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1254:2:38",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1242:3:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1242:15:38"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1263:2:38",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1259:3:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1259:7:38"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1238:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1238:29:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1229:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1229:39:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1270:4:38",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1225:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1225:50:38"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1218:3:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1037:5:38",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1044:3:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1052:3:38",
														"type": ""
													}
												],
												"src": "1011:270:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1563:1813:38",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1573:12:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1583:2:38",
																"type": "",
																"value": "96"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1577:2:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1594:32:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1612:9:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1623:2:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1608:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1608:18:38"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "1598:6:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1642:9:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1653:2:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1635:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1635:21:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1635:21:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1665:17:38",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "1676:6:38"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "1669:3:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1691:27:38",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1711:6:38"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1705:5:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1705:13:38"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1695:6:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "1734:6:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1742:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1727:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1727:22:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1727:22:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1758:13:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1768:3:38",
																"type": "",
																"value": "128"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1762:2:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1780:25:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1791:9:38"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1802:2:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1787:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:18:38"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1780:3:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1814:53:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1836:9:38"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1851:1:38",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1854:6:38"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1847:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1847:14:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1832:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1832:30:38"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1864:2:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1828:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1828:39:38"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "1818:6:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1876:14:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1886:4:38",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1880:2:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1899:29:38",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1917:6:38"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1925:2:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1913:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1913:15:38"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "1903:6:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1937:10:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1946:1:38",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1941:1:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2005:1200:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2026:3:38"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tail_2",
																									"nodeType": "YulIdentifier",
																									"src": "2039:6:38"
																								},
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2047:9:38"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "2035:3:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2035:22:38"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2063:3:38",
																									"type": "",
																									"value": "127"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "2059:3:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2059:8:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2031:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2031:37:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2019:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2019:50:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2019:50:38"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2082:23:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2098:6:38"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2092:5:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2092:13:38"
																		},
																		"variables": [
																			{
																				"name": "_4",
																				"nodeType": "YulTypedName",
																				"src": "2086:2:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2118:29:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "tail_2",
																					"nodeType": "YulIdentifier",
																					"src": "2136:6:38"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2144:2:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2132:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2132:15:38"
																		},
																		"variables": [
																			{
																				"name": "tail_3",
																				"nodeType": "YulTypedName",
																				"src": "2122:6:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "tail_2",
																					"nodeType": "YulIdentifier",
																					"src": "2167:6:38"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "2185:2:38"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "2179:5:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2179:9:38"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2198:3:38",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2203:1:38",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2194:3:38"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2194:11:38"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2207:1:38",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "2190:3:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2190:19:38"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2175:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2175:35:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2160:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2160:51:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2160:51:38"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2224:38:38",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "2254:2:38"
																						},
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "2258:2:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2250:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2250:11:38"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2244:5:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2244:18:38"
																		},
																		"variables": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulTypedName",
																				"src": "2228:12:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2318:127:38",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2343:1:38",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2350:3:38",
																										"type": "",
																										"value": "224"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2355:10:38",
																										"type": "",
																										"value": "0x4e487b71"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2346:3:38"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2346:20:38"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "2336:6:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2336:31:38"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2336:31:38"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2391:1:38",
																								"type": "",
																								"value": "4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2394:4:38",
																								"type": "",
																								"value": "0x21"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "2384:6:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2384:15:38"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2384:15:38"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2423:1:38",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2426:4:38",
																								"type": "",
																								"value": "0x24"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "2416:6:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2416:15:38"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2416:15:38"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "memberValue0",
																							"nodeType": "YulIdentifier",
																							"src": "2288:12:38"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2302:1:38",
																							"type": "",
																							"value": "3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2285:2:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2285:19:38"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "2278:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2278:27:38"
																		},
																		"nodeType": "YulIf",
																		"src": "2275:170:38"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nodeType": "YulIdentifier",
																							"src": "2469:6:38"
																						},
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "2477:2:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2465:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2465:15:38"
																				},
																				{
																					"name": "memberValue0",
																					"nodeType": "YulIdentifier",
																					"src": "2482:12:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2458:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2458:37:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2458:37:38"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2508:14:38",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2518:4:38",
																			"type": "",
																			"value": "0x40"
																		},
																		"variables": [
																			{
																				"name": "_5",
																				"nodeType": "YulTypedName",
																				"src": "2512:2:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2535:40:38",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "2567:2:38"
																						},
																						{
																							"name": "_5",
																							"nodeType": "YulIdentifier",
																							"src": "2571:2:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2563:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2563:11:38"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2557:5:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2557:18:38"
																		},
																		"variables": [
																			{
																				"name": "memberValue0_1",
																				"nodeType": "YulTypedName",
																				"src": "2539:14:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nodeType": "YulIdentifier",
																							"src": "2599:6:38"
																						},
																						{
																							"name": "_5",
																							"nodeType": "YulIdentifier",
																							"src": "2607:2:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2595:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2595:15:38"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2612:2:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2588:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2588:27:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2588:27:38"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2628:19:38",
																		"value": {
																			"name": "tail_3",
																			"nodeType": "YulIdentifier",
																			"src": "2641:6:38"
																		},
																		"variables": [
																			{
																				"name": "pos_1",
																				"nodeType": "YulTypedName",
																				"src": "2632:5:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2660:37:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "memberValue0_1",
																					"nodeType": "YulIdentifier",
																					"src": "2682:14:38"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2676:5:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2676:21:38"
																		},
																		"variables": [
																			{
																				"name": "length_1",
																				"nodeType": "YulTypedName",
																				"src": "2664:8:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "tail_3",
																					"nodeType": "YulIdentifier",
																					"src": "2717:6:38"
																				},
																				{
																					"name": "length_1",
																					"nodeType": "YulIdentifier",
																					"src": "2725:8:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2710:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2710:24:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2710:24:38"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2747:24:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "tail_2",
																					"nodeType": "YulIdentifier",
																					"src": "2760:6:38"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2768:2:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2756:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2756:15:38"
																		},
																		"variableNames": [
																			{
																				"name": "pos_1",
																				"nodeType": "YulIdentifier",
																				"src": "2747:5:38"
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2784:39:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "memberValue0_1",
																					"nodeType": "YulIdentifier",
																					"src": "2804:14:38"
																				},
																				{
																					"name": "_3",
																					"nodeType": "YulIdentifier",
																					"src": "2820:2:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2800:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2800:23:38"
																		},
																		"variables": [
																			{
																				"name": "srcPtr_1",
																				"nodeType": "YulTypedName",
																				"src": "2788:8:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2836:12:38",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2847:1:38",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i_1",
																				"nodeType": "YulTypedName",
																				"src": "2840:3:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2922:175:38",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "pos_1",
																								"nodeType": "YulIdentifier",
																								"src": "2947:5:38"
																							},
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "srcPtr_1",
																												"nodeType": "YulIdentifier",
																												"src": "2964:8:38"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2958:5:38"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2958:15:38"
																									},
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "2979:3:38",
																												"type": "",
																												"value": "224"
																											},
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "2984:10:38",
																												"type": "",
																												"value": "0xffffffff"
																											}
																										],
																										"functionName": {
																											"name": "shl",
																											"nodeType": "YulIdentifier",
																											"src": "2975:3:38"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2975:20:38"
																									}
																								],
																								"functionName": {
																									"name": "and",
																									"nodeType": "YulIdentifier",
																									"src": "2954:3:38"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2954:42:38"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "2940:6:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2940:57:38"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2940:57:38"
																				},
																				{
																					"nodeType": "YulAssignment",
																					"src": "3014:23:38",
																					"value": {
																						"arguments": [
																							{
																								"name": "pos_1",
																								"nodeType": "YulIdentifier",
																								"src": "3027:5:38"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "3034:2:38"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3023:3:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3023:14:38"
																					},
																					"variableNames": [
																						{
																							"name": "pos_1",
																							"nodeType": "YulIdentifier",
																							"src": "3014:5:38"
																						}
																					]
																				},
																				{
																					"nodeType": "YulAssignment",
																					"src": "3054:29:38",
																					"value": {
																						"arguments": [
																							{
																								"name": "srcPtr_1",
																								"nodeType": "YulIdentifier",
																								"src": "3070:8:38"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "3080:2:38"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3066:3:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3066:17:38"
																					},
																					"variableNames": [
																						{
																							"name": "srcPtr_1",
																							"nodeType": "YulIdentifier",
																							"src": "3054:8:38"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "i_1",
																					"nodeType": "YulIdentifier",
																					"src": "2872:3:38"
																				},
																				{
																					"name": "length_1",
																					"nodeType": "YulIdentifier",
																					"src": "2877:8:38"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2869:2:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2869:17:38"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2887:22:38",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2889:18:38",
																					"value": {
																						"arguments": [
																							{
																								"name": "i_1",
																								"nodeType": "YulIdentifier",
																								"src": "2900:3:38"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2905:1:38",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2896:3:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2896:11:38"
																					},
																					"variableNames": [
																						{
																							"name": "i_1",
																							"nodeType": "YulIdentifier",
																							"src": "2889:3:38"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2865:3:38",
																			"statements": []
																		},
																		"src": "2861:236:38"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3110:15:38",
																		"value": {
																			"name": "pos_1",
																			"nodeType": "YulIdentifier",
																			"src": "3120:5:38"
																		},
																		"variableNames": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "3110:6:38"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3138:25:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3152:6:38"
																				},
																				{
																					"name": "_3",
																					"nodeType": "YulIdentifier",
																					"src": "3160:2:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3148:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3148:15:38"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3138:6:38"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3176:19:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3187:3:38"
																				},
																				{
																					"name": "_3",
																					"nodeType": "YulIdentifier",
																					"src": "3192:2:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3183:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3183:12:38"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3176:3:38"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1967:1:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1970:6:38"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1964:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1964:13:38"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1978:18:38",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1980:14:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1989:1:38"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1992:1:38",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1985:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1985:9:38"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1980:1:38"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1960:3:38",
																"statements": []
															},
															"src": "1956:1249:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3233:6:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:38"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "3256:2:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3241:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3241:18:38"
																	}
																],
																"functionName": {
																	"name": "abi_encode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3214:18:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3214:46:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3214:46:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3291:4:38",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3276:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3276:20:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "3302:6:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3310:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3298:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3298:22:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3269:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3269:52:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3269:52:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3330:40:38",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3355:6:38"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "3363:6:38"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3338:16:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3338:32:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3330:4:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__to_t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1516:9:38",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1527:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1535:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1543:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1554:4:38",
														"type": ""
													}
												],
												"src": "1286:2090:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3518:150:38",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3528:27:38",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3548:6:38"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3542:5:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3542:13:38"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3532:6:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3603:6:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3611:4:38",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3599:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3599:17:38"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3618:3:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3623:6:38"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "3564:34:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3564:66:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3564:66:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3639:23:38",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3650:3:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3655:6:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3646:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3646:16:38"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3639:3:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3494:3:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3499:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3510:3:38",
														"type": ""
													}
												],
												"src": "3381:287:38"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__to_t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let _1 := 96\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 128\n        pos := add(headStart, _2)\n        let tail_2 := add(add(headStart, shl(5, length)), _2)\n        let _3 := 0x20\n        let srcPtr := add(value0, _3)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(127)))\n            let _4 := mload(srcPtr)\n            let tail_3 := add(tail_2, _1)\n            mstore(tail_2, and(mload(_4), sub(shl(160, 1), 1)))\n            let memberValue0 := mload(add(_4, _3))\n            if iszero(lt(memberValue0, 3))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x21)\n                revert(0, 0x24)\n            }\n            mstore(add(tail_2, _3), memberValue0)\n            let _5 := 0x40\n            let memberValue0_1 := mload(add(_4, _5))\n            mstore(add(tail_2, _5), _1)\n            let pos_1 := tail_3\n            let length_1 := mload(memberValue0_1)\n            mstore(tail_3, length_1)\n            pos_1 := add(tail_2, _2)\n            let srcPtr_1 := add(memberValue0_1, _3)\n            let i_1 := 0\n            for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n            {\n                mstore(pos_1, and(mload(srcPtr_1), shl(224, 0xffffffff)))\n                pos_1 := add(pos_1, _3)\n                srcPtr_1 := add(srcPtr_1, _3)\n            }\n            tail_2 := pos_1\n            srcPtr := add(srcPtr, _3)\n            pos := add(pos, _3)\n        }\n        abi_encode_address(value1, add(headStart, _3))\n        mstore(add(headStart, 0x40), sub(tail_2, headStart))\n        tail := abi_encode_bytes(value2, tail_2)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
									"id": 38,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060408051600c8082526101a0820190925260009160208201610180803683370190505090506000632c40805960e01b82826200004e8162000d22565b93508151811062000063576200006362000d4a565b6001600160e01b031990921660209283029190910190910152639142376560e01b8282620000918162000d22565b935081518110620000a657620000a662000d4a565b6001600160e01b031990921660209283029190910190910152620000d3632f40adcf60e21b600162000480565b6307e4c70760e21b8282620000e88162000d22565b935081518110620000fd57620000fd62000d4a565b6001600160e01b0319909216602092830291909101909101526200012a6307e4c70760e21b600162000480565b637a0ed62760e01b82826200013f8162000d22565b93508151811062000154576200015462000d4a565b6001600160e01b0319909216602092830291909101909101526356fe50af60e11b8282620001828162000d22565b93508151811062000197576200019762000d4a565b6001600160e01b0319909216602092830291909101909101526314bbdacb60e21b8282620001c58162000d22565b935081518110620001da57620001da62000d4a565b6001600160e01b0319909216602092830291909101909101526366ffd66360e11b8282620002088162000d22565b9350815181106200021d576200021d62000d4a565b6001600160e01b0319909216602092830291909101909101526200024a6348e2b09360e01b600162000480565b6301ffc9a760e01b82826200025f8162000d22565b93508151811062000274576200027462000d4a565b6001600160e01b031990921660209283029190910190910152620002a16301ffc9a760e01b600162000480565b638da5cb5b60e01b8282620002b68162000d22565b935081518110620002cb57620002cb62000d4a565b6001600160e01b03199092166020928302919091019091015263455a8a8560e11b8282620002f98162000d22565b9350815181106200030e576200030e62000d4a565b6001600160e01b03199092166020928302919091019091015263f2fde38b60e01b82826200033c8162000d22565b93508151811062000351576200035162000d4a565b6001600160e01b0319909216602092830291909101909101526379ba509760e01b82826200037f8162000d22565b93508151811062000394576200039462000d4a565b6001600160e01b031990921660209283029190910190910152620003c16307f5828d60e41b600162000480565b604080516001808252818301909252600091816020015b60408051606080820183526000808352602083015291810191909152815260200190600190039081620003d8579050506040805160608101909152308152909150602081016000815260200184815250816000815181106200043e576200043e62000d4a565b60200260200101819052506200046c81600060405180602001604052806000815250620004f760201b60201c565b6200047733620006f8565b50505062000eef565b6001600160e01b03198083169003620004ac5760405163b0a19dd560e01b815260040160405180910390fd5b6001600160e01b03199190911660009081527ffc606c433378e3a7e0a6a531deac289b66caa1b4aa8554fd4ab2c6f1570f92d860205260409020805460ff1916911515919091179055565b7f177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc94547f177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc939061ffff811690819060009060071615620005675750600381901c60009081526002840160205260409020545b60005b8751811015620006665760008882815181106200058b576200058b62000d4a565b60200260200101519050600081602001519050816040015151600003620005c55760405163eb6c3aeb60e01b815260040160405180910390fd5b6000816002811115620005dc57620005dc62000d60565b03620005fb57620005f08786868562000772565b90955093506200065b565b600181600281111562000612576200061262000d60565b036200062a57620006248783620008ba565b6200065b565b600281600281111562000641576200064162000d60565b036200065b57620006558786868562000a09565b90955093505b50506001016200056a565b50828214620006835760018401805461ffff191661ffff84161790555b6007821615620006a657600382901c600090815260028501602052604090208190555b7f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673878787604051620006db9392919062000dca565b60405180910390a1620006ef868662000c35565b50505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b805160009081906001600160a01b031630148015906200079b575082516001600160a01b03163b155b15620007ba57604051633ddc5cab60e21b815260040160405180910390fd5b60005b836040015151811015620008ad57600084604001518281518110620007e657620007e662000d4a565b6020908102919091018101516001600160e01b031981166000908152918a9052604090912054909150606081901c156200083357604051634923a77160e11b815260040160405180910390fd5b85516001600160e01b0319838116600081815260208d90526040902060609390931b6001600160601b0319168b1790925560058a901b60e090811692831c91831c199990991617978190036200089d57600389901c600090815260028b0160205260408120989098555b50505060019586019501620007bd565b5093959294509192505050565b80516001600160a01b03163b620008e457604051633ddc5cab60e21b815260040160405180910390fd5b60005b81604001515181101562000a045760008260400151828151811062000910576200091062000d4a565b6020908102919091018101516001600160e01b03198116600090815291869052604090912054909150606081901c806200095d576040516337e25a9760e11b815260040160405180910390fd5b306001600160a01b03821603620009875760405163e983573160e01b815260040160405180910390fd5b84600001516001600160a01b0316816001600160a01b031603620009be576040516330baabf360e11b815260040160405180910390fd5b5083516001600160e01b031992909216600090815260208690526040902060609290921b6001600160601b0319166001600160601b0391909116179055600101620008e7565b505050565b805160009081906001600160a01b03161562000a3857604051633ab3490960e21b815260040160405180910390fd5b600385901c6007861660005b85604001515181101562000c215760008660400151828151811062000a6d5762000a6d62000d4a565b6020908102919091018101516001600160e01b031981166000908152918c9052604090912054909150606081901c62000ab9576040516337e25a9760e11b815260040160405180910390fd5b30606082901c0362000ade5760405163e983573160e01b815260040160405180910390fd5b600089900362000b0c57600019909401600081815260028c0160205260409020549850936007935062000b14565b600019909301925b600584901b89901b6000806001600160e01b03198084169086161462000b67576001600160e01b03198316600090815260208f90526040902080546001600160601b0319166001600160601b0386161790555b50506001600160e01b03198316600090815260208d90526040812055611fff600383901c1660e0600584901b1687821462000bcc57600082815260028f016020526040902080546001600160e01b031980841c19909116908516831c17905562000bf0565b80836001600160e01b031916901c816001600160e01b031960001b901c198d16179b505b8660000362000c0f57600088815260028f01602052604081208190559b505b50506001909301925062000a44915050565b5060039190911b1796939550929350505050565b8051156001600160a01b038316151462000c62576040516326df4ccd60e01b815260040160405180910390fd5b6001600160a01b0382161562000d1e576001600160a01b038216301462000cac576001600160a01b0382163b62000cac57604051633ddc5cab60e21b815260040160405180910390fd5b6000826001600160a01b03168260405162000cc8919062000ed1565b600060405180830381855af49150503d806000811462000d05576040519150601f19603f3d011682016040523d82523d6000602084013e62000d0a565b606091505b505090508062000a04573d6000803e3d6000fd5b5050565b60006001820162000d4357634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b60005b8381101562000d9357818101518382015260200162000d79565b50506000910152565b6000815180845262000db681602086016020860162000d76565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b8481101562000e9f57898403607f19018652815180516001600160a01b0316855283810151898601906003811062000e3b57634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b8083101562000e895783516001600160e01b031916825292860192600192909201919086019062000e5d565b5097850197955050509082019060010162000df3565b50506001600160a01b038a1690880152868103604088015262000ec3818962000d9c565b9a9950505050505050505050565b6000825162000ee581846020870162000d76565b9190910192915050565b611bca8062000eff6000396000f3fe6080604052600436106100ab5760003560e01c80638ab5150a116100645780638ab5150a146102205780638da5cb5b14610235578063914237651461024a578063adfca15e1461026a578063cdffacc614610297578063f2fde38b146102de576100b2565b806301ffc9a71461010c5780631f931c1c1461017a5780632c4080591461019a57806352ef6b2c146101c757806379ba5097146101e95780637a0ed627146101fe576100b2565b366100b257005b60006100bc6102fe565b90506001600160a01b0381163b6100e6576040516321f27f0d60e21b815260040160405180910390fd5b3660008037600080366000845af43d6000803e808015610105573d6000f35b3d6000fd5b005b34801561011857600080fd5b5061016561012736600461153d565b6001600160e01b03191660009081527ffc606c433378e3a7e0a6a531deac289b66caa1b4aa8554fd4ab2c6f1570f92d8602052604090205460ff1690565b60405190151581526020015b60405180910390f35b34801561018657600080fd5b5061010a6101953660046115bf565b61030d565b3480156101a657600080fd5b506101af610397565b6040516001600160a01b039091168152602001610171565b3480156101d357600080fd5b506101dc6103ca565b6040516101719190611671565b3480156101f557600080fd5b5061010a61057c565b34801561020a57600080fd5b506102136105bf565b6040516101719190611703565b34801561022c57600080fd5b506101af6109f6565b34801561024157600080fd5b506101af610a00565b34801561025657600080fd5b5061010a610265366004611780565b610a0a565b34801561027657600080fd5b5061028a610285366004611780565b610a83565b604051610171919061179b565b3480156102a357600080fd5b506101af6102b236600461153d565b6001600160e01b0319166000908152600080516020611b75833981519152602052604090205460601c90565b3480156102ea57600080fd5b5061010a6102f9366004611780565b610bde565b6000610308610c20565b905090565b610315610c81565b6001600160a01b0316336001600160a01b03161461034657604051632f7a8ee160e01b815260040160405180910390fd5b6103906103538587611871565b8484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610cb492505050565b5050505050565b60006103087f177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc96546001600160a01b031690565b600080516020611b5583398151915254606090600080516020611b758339815191529061ffff1667ffffffffffffffff811115610409576104096117dd565b604051908082528060200260200182016040528015610432578160200160208202803683370190505b50915060008060005b600184015461ffff16821015610574576000818152600285016020526040812054905b600881101561055f5783610471816119bb565b600188015490955061ffff168511905061055f57600581901b82901b6001600160e01b0319811660009081526020889052604081205460601c90805b88811015610502578a81815181106104c7576104c76119d4565b60200260200101516001600160a01b0316836001600160a01b0316036104f05760019150610502565b806104fa816119bb565b9150506104ad565b5080156105115750505061054d565b818a8981518110610524576105246119d4565b6001600160a01b039092166020928302919091019091015287610546816119bb565b9850505050505b80610557816119bb565b91505061045e565b5050808061056c906119bb565b91505061043b565b505082525090565b610584610e70565b6001600160a01b0316336001600160a01b0316146105b55760405163efd1052d60e01b815260040160405180910390fd5b6105bd610e98565b565b600080516020611b5583398151915254606090600080516020611b758339815191529061ffff1667ffffffffffffffff8111156105fe576105fe6117dd565b60405190808252806020026020018201604052801561064457816020015b60408051808201909152600081526060602082015281526020019060019003908161061c5790505b50600182015490925060009061ffff1667ffffffffffffffff81111561066c5761066c6117dd565b604051908082528060200260200182016040528015610695578160200160208202803683370190505b50905060008060005b600185015461ffff16821015610984576000818152600286016020526040812054905b600881101561096f57836106d4816119bb565b600189015490955061ffff168511905061096f57600581901b82901b6001600160e01b0319811660009081526020899052604081205460601c90805b8881101561082d57826001600160a01b03168c8281518110610734576107346119d4565b6020026020010151600001516001600160a01b03160361081b57838c8281518110610761576107616119d4565b6020026020010151602001518b838151811061077f5761077f6119d4565b602002602001015160ff168151811061079a5761079a6119d4565b60200260200101906001600160e01b03191690816001600160e01b0319168152505060ff8a82815181106107d0576107d06119d4565b602002602001015160ff16106107e557600080fd5b8981815181106107f7576107f76119d4565b60200260200101805180919061080c906119ea565b60ff169052506001915061082d565b80610825816119bb565b915050610710565b50801561083c5750505061095d565b818b898151811061084f5761084f6119d4565b60209081029190910101516001600160a01b03909116905260018a015461ffff1667ffffffffffffffff811115610888576108886117dd565b6040519080825280602002602001820160405280156108b1578160200160208202803683370190505b508b89815181106108c4576108c46119d4565b602002602001015160200181905250828b89815181106108e6576108e66119d4565b602002602001015160200151600081518110610904576109046119d4565b60200260200101906001600160e01b03191690816001600160e01b03191681525050600189898151811061093a5761093a6119d4565b60ff9092166020928302919091019091015287610956816119bb565b9850505050505b80610967816119bb565b9150506106c1565b5050808061097c906119bb565b91505061069e565b5060005b828110156109eb5760008482815181106109a4576109a46119d4565b602002602001015160ff16905060008783815181106109c5576109c56119d4565b6020026020010151602001519050818152505080806109e3906119bb565b915050610988565b508185525050505090565b6000610308610e70565b6000610308610c81565b610a12610c81565b6001600160a01b0316336001600160a01b031614610a4357604051632f7a8ee160e01b815260040160405180910390fd5b7f177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc9680546001600160a01b0319166001600160a01b03831617905550565b50565b600080516020611b5583398151915254606090600080516020611b758339815191529061ffff1667ffffffffffffffff811115610ac257610ac26117dd565b604051908082528060200260200182016040528015610aeb578160200160208202803683370190505b50915060008060005b600184015461ffff16821015610bd4576000818152600285016020526040812054905b6008811015610bbf5783610b2a816119bb565b600188015490955061ffff1685119050610bbf57600581901b82901b6001600160e01b0319811660009081526020889052604090205460601c6001600160a01b038a1603610bac5780888781518110610b8557610b856119d4565b6001600160e01b03199092166020928302919091019091015285610ba8816119bb565b9650505b5080610bb7816119bb565b915050610b17565b50508080610bcc906119bb565b915050610af4565b5050825250919050565b610be6610c81565b6001600160a01b0316336001600160a01b031614610c1757604051632f7a8ee160e01b815260040160405180910390fd5b610a8081610ed2565b600080356001600160e01b0319168152600080516020611b75833981519152602052604090205460601c80610c7e57507f177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc96546001600160a01b031690565b90565b60007f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605b546001600160a01b0316919050565b600080516020611b5583398151915254600080516020611b758339815191529061ffff811690819060009060071615610cff5750600381901c60009081526002840160205260409020545b60005b8751811015610de4576000888281518110610d1f57610d1f6119d4565b60200260200101519050600081602001519050816040015151600003610d585760405163eb6c3aeb60e01b815260040160405180910390fd5b6000816002811115610d6c57610d6c611a09565b03610d8757610d7d87868685610f15565b9095509350610dda565b6001816002811115610d9b57610d9b611a09565b03610daf57610daa8783611054565b610dda565b6002816002811115610dc357610dc3611a09565b03610dda57610dd48786868561119f565b90955093505b5050600101610d02565b50828214610e005760018401805461ffff191661ffff84161790555b6007821615610e2257600382901c600090815260028501602052604090208190555b7f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673878787604051610e5593929190611a6f565b60405180910390a1610e6786866113c2565b50505050505050565b60007f24aa1f7b31fd188a8d3ecfb06bc55c806040e59b03bd4396283442fce6617890610ca5565b610ea1336114a6565b7f24aa1f7b31fd188a8d3ecfb06bc55c806040e59b03bd4396283442fce661789080546001600160a01b0319169055565b7f24aa1f7b31fd188a8d3ecfb06bc55c806040e59b03bd4396283442fce661789080546001600160a01b0319166001600160a01b038316179055610a8081818181565b805160009081906001600160a01b03163014801590610f3d575082516001600160a01b03163b155b15610f5b57604051633ddc5cab60e21b815260040160405180910390fd5b60005b83604001515181101561104757600084604001518281518110610f8357610f836119d4565b6020908102919091018101516001600160e01b031981166000908152918a9052604090912054909150606081901c15610fcf57604051634923a77160e11b815260040160405180910390fd5b85516001600160e01b0319838116600081815260208d90526040902060609390931b6001600160601b0319168b1790925560058a901b60e090811692831c91831c1999909916179781900361103857600389901c600090815260028b0160205260408120989098555b50505060019586019501610f5e565b5093959294509192505050565b80516001600160a01b03163b61107d57604051633ddc5cab60e21b815260040160405180910390fd5b60005b81604001515181101561119a576000826040015182815181106110a5576110a56119d4565b6020908102919091018101516001600160e01b03198116600090815291869052604090912054909150606081901c806110f1576040516337e25a9760e11b815260040160405180910390fd5b306001600160a01b0382160361111a5760405163e983573160e01b815260040160405180910390fd5b84600001516001600160a01b0316816001600160a01b031603611150576040516330baabf360e11b815260040160405180910390fd5b5083516001600160e01b031992909216600090815260208690526040902060609290921b6001600160601b0319166bffffffffffffffffffffffff91909116179055600101611080565b505050565b805160009081906001600160a01b0316156111cd57604051633ab3490960e21b815260040160405180910390fd5b600385901c6007861660005b8560400151518110156113ae576000866040015182815181106111fe576111fe6119d4565b6020908102919091018101516001600160e01b031981166000908152918c9052604090912054909150606081901c611249576040516337e25a9760e11b815260040160405180910390fd5b30606082901c0361126d5760405163e983573160e01b815260040160405180910390fd5b600089900361129957600019909401600081815260028c016020526040902054985093600793506112a1565b600019909301925b600584901b89901b6000806001600160e01b0319808416908616146112f8576001600160e01b03198316600090815260208f90526040902080546001600160601b0319166bffffffffffffffffffffffff86161790555b50506001600160e01b03198316600090815260208d90526040812055611fff600383901c1660e0600584901b1687821461135b57600082815260028f016020526040902080546001600160e01b031980841c19909116908516831c17905561137f565b80836001600160e01b031916901c816001600160e01b031960001b901c198d16179b505b8660000361139d57600088815260028f01602052604081208190559b505b5050600190930192506111d9915050565b5060039190911b1796939550929350505050565b8051156001600160a01b03831615146113ee576040516326df4ccd60e01b815260040160405180910390fd5b6001600160a01b038216156114a2576001600160a01b0382163014611435576001600160a01b0382163b61143557604051633ddc5cab60e21b815260040160405180910390fd5b6000826001600160a01b03168260405161144f9190611b38565b600060405180830381855af49150503d806000811461148a576040519150601f19603f3d011682016040523d82523d6000602084013e61148f565b606091505b505090508061119a573d6000803e3d6000fd5b5050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160e01b03198116811461153857600080fd5b919050565b60006020828403121561154f57600080fd5b61155882611520565b9392505050565b80356001600160a01b038116811461153857600080fd5b60008083601f84011261158857600080fd5b50813567ffffffffffffffff8111156115a057600080fd5b6020830191508360208285010111156115b857600080fd5b9250929050565b6000806000806000606086880312156115d757600080fd5b853567ffffffffffffffff808211156115ef57600080fd5b818801915088601f83011261160357600080fd5b81358181111561161257600080fd5b8960208260051b850101111561162757600080fd5b6020830197508096505061163d6020890161155f565b9450604088013591508082111561165357600080fd5b5061166088828901611576565b969995985093965092949392505050565b6020808252825182820181905260009190848201906040850190845b818110156116b25783516001600160a01b03168352928401929184019160010161168d565b50909695505050505050565b600081518084526020808501945080840160005b838110156116f85781516001600160e01b031916875295820195908201906001016116d2565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561177257888303603f19018552815180516001600160a01b0316845287015187840187905261175f878501826116be565b958801959350509086019060010161172a565b509098975050505050505050565b60006020828403121561179257600080fd5b6115588261155f565b6020808252825182820181905260009190848201906040850190845b818110156116b25783516001600160e01b031916835292840192918401916001016117b7565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611816576118166117dd565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611845576118456117dd565b604052919050565b600067ffffffffffffffff821115611867576118676117dd565b5060051b60200190565b600061188461187f8461184d565b61181c565b83815260208082019190600586811b8601368111156118a257600080fd5b865b8181101561199857803567ffffffffffffffff808211156118c55760008081fd5b818a019150606082360312156118db5760008081fd5b6118e36117f3565b6118ec8361155f565b815286830135600381106119005760008081fd5b81880152604083810135838111156119185760008081fd5b939093019236601f85011261192f57600092508283fd5b8335925061193f61187f8461184d565b83815292871b8401880192888101903685111561195c5760008081fd5b948901945b848610156119815761197286611520565b82529489019490890190611961565b9183019190915250885250509483019483016118a4565b5092979650505050505050565b634e487b7160e01b600052601160045260246000fd5b6000600182016119cd576119cd6119a5565b5060010190565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff8103611a0057611a006119a5565b60010192915050565b634e487b7160e01b600052602160045260246000fd5b60005b83811015611a3a578181015183820152602001611a22565b50506000910152565b60008151808452611a5b816020860160208601611a1f565b601f01601f19169290920160200192915050565b6000606080830181845280875180835260808601915060808160051b87010192506020808a016000805b84811015611b0857898703607f19018652825180516001600160a01b031688528481015160038110611ad957634e487b7160e01b84526021600452602484fd5b88860152604090810151908801899052611af5898901826116be565b9750509483019491830191600101611a99565b5050506001600160a01b0389169087015250508381036040850152611b2d8186611a43565b979650505050505050565b60008251611b4a818460208701611a1f565b919091019291505056fe177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc94177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc93a26469706673582212204fd3e61e32cabd24239218d2a5618d6811f3c53d9103eb5dd773aa327300861664736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xC DUP1 DUP3 MSTORE PUSH2 0x1A0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x20 DUP3 ADD PUSH2 0x180 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 PUSH4 0x2C408059 PUSH1 0xE0 SHL DUP3 DUP3 PUSH3 0x4E DUP2 PUSH3 0xD22 JUMP JUMPDEST SWAP4 POP DUP2 MLOAD DUP2 LT PUSH3 0x63 JUMPI PUSH3 0x63 PUSH3 0xD4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH4 0x91423765 PUSH1 0xE0 SHL DUP3 DUP3 PUSH3 0x91 DUP2 PUSH3 0xD22 JUMP JUMPDEST SWAP4 POP DUP2 MLOAD DUP2 LT PUSH3 0xA6 JUMPI PUSH3 0xA6 PUSH3 0xD4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH3 0xD3 PUSH4 0x2F40ADCF PUSH1 0xE2 SHL PUSH1 0x1 PUSH3 0x480 JUMP JUMPDEST PUSH4 0x7E4C707 PUSH1 0xE2 SHL DUP3 DUP3 PUSH3 0xE8 DUP2 PUSH3 0xD22 JUMP JUMPDEST SWAP4 POP DUP2 MLOAD DUP2 LT PUSH3 0xFD JUMPI PUSH3 0xFD PUSH3 0xD4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH3 0x12A PUSH4 0x7E4C707 PUSH1 0xE2 SHL PUSH1 0x1 PUSH3 0x480 JUMP JUMPDEST PUSH4 0x7A0ED627 PUSH1 0xE0 SHL DUP3 DUP3 PUSH3 0x13F DUP2 PUSH3 0xD22 JUMP JUMPDEST SWAP4 POP DUP2 MLOAD DUP2 LT PUSH3 0x154 JUMPI PUSH3 0x154 PUSH3 0xD4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH4 0x56FE50AF PUSH1 0xE1 SHL DUP3 DUP3 PUSH3 0x182 DUP2 PUSH3 0xD22 JUMP JUMPDEST SWAP4 POP DUP2 MLOAD DUP2 LT PUSH3 0x197 JUMPI PUSH3 0x197 PUSH3 0xD4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH4 0x14BBDACB PUSH1 0xE2 SHL DUP3 DUP3 PUSH3 0x1C5 DUP2 PUSH3 0xD22 JUMP JUMPDEST SWAP4 POP DUP2 MLOAD DUP2 LT PUSH3 0x1DA JUMPI PUSH3 0x1DA PUSH3 0xD4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH4 0x66FFD663 PUSH1 0xE1 SHL DUP3 DUP3 PUSH3 0x208 DUP2 PUSH3 0xD22 JUMP JUMPDEST SWAP4 POP DUP2 MLOAD DUP2 LT PUSH3 0x21D JUMPI PUSH3 0x21D PUSH3 0xD4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH3 0x24A PUSH4 0x48E2B093 PUSH1 0xE0 SHL PUSH1 0x1 PUSH3 0x480 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 DUP3 PUSH3 0x25F DUP2 PUSH3 0xD22 JUMP JUMPDEST SWAP4 POP DUP2 MLOAD DUP2 LT PUSH3 0x274 JUMPI PUSH3 0x274 PUSH3 0xD4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH3 0x2A1 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH3 0x480 JUMP JUMPDEST PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL DUP3 DUP3 PUSH3 0x2B6 DUP2 PUSH3 0xD22 JUMP JUMPDEST SWAP4 POP DUP2 MLOAD DUP2 LT PUSH3 0x2CB JUMPI PUSH3 0x2CB PUSH3 0xD4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH4 0x455A8A85 PUSH1 0xE1 SHL DUP3 DUP3 PUSH3 0x2F9 DUP2 PUSH3 0xD22 JUMP JUMPDEST SWAP4 POP DUP2 MLOAD DUP2 LT PUSH3 0x30E JUMPI PUSH3 0x30E PUSH3 0xD4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH4 0xF2FDE38B PUSH1 0xE0 SHL DUP3 DUP3 PUSH3 0x33C DUP2 PUSH3 0xD22 JUMP JUMPDEST SWAP4 POP DUP2 MLOAD DUP2 LT PUSH3 0x351 JUMPI PUSH3 0x351 PUSH3 0xD4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH4 0x79BA5097 PUSH1 0xE0 SHL DUP3 DUP3 PUSH3 0x37F DUP2 PUSH3 0xD22 JUMP JUMPDEST SWAP4 POP DUP2 MLOAD DUP2 LT PUSH3 0x394 JUMPI PUSH3 0x394 PUSH3 0xD4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH3 0x3C1 PUSH4 0x7F5828D PUSH1 0xE4 SHL PUSH1 0x1 PUSH3 0x480 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH3 0x3D8 JUMPI SWAP1 POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE ADDRESS DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x20 DUP2 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH3 0x43E JUMPI PUSH3 0x43E PUSH3 0xD4A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH3 0x46C DUP2 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x4F7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x477 CALLER PUSH3 0x6F8 JUMP JUMPDEST POP POP POP PUSH3 0xEEF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP1 DUP4 AND SWAP1 SUB PUSH3 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH4 0xB0A19DD5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xFC606C433378E3A7E0A6A531DEAC289B66CAA1B4AA8554FD4AB2C6F1570F92D8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x177481AC65E4292921C69F62D1CC7F57541261E5D61C8175CF4E36A01C9BFC94 SLOAD PUSH32 0x177481AC65E4292921C69F62D1CC7F57541261E5D61C8175CF4E36A01C9BFC93 SWAP1 PUSH2 0xFFFF DUP2 AND SWAP1 DUP2 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x7 AND ISZERO PUSH3 0x567 JUMPI POP PUSH1 0x3 DUP2 SWAP1 SHR PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST PUSH1 0x0 JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH3 0x666 JUMPI PUSH1 0x0 DUP9 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x58B JUMPI PUSH3 0x58B PUSH3 0xD4A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP2 PUSH1 0x40 ADD MLOAD MLOAD PUSH1 0x0 SUB PUSH3 0x5C5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEB6C3AEB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x5DC JUMPI PUSH3 0x5DC PUSH3 0xD60 JUMP JUMPDEST SUB PUSH3 0x5FB JUMPI PUSH3 0x5F0 DUP8 DUP7 DUP7 DUP6 PUSH3 0x772 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH3 0x65B JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x612 JUMPI PUSH3 0x612 PUSH3 0xD60 JUMP JUMPDEST SUB PUSH3 0x62A JUMPI PUSH3 0x624 DUP8 DUP4 PUSH3 0x8BA JUMP JUMPDEST PUSH3 0x65B JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x641 JUMPI PUSH3 0x641 PUSH3 0xD60 JUMP JUMPDEST SUB PUSH3 0x65B JUMPI PUSH3 0x655 DUP8 DUP7 DUP7 DUP6 PUSH3 0xA09 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH3 0x56A JUMP JUMPDEST POP DUP3 DUP3 EQ PUSH3 0x683 JUMPI PUSH1 0x1 DUP5 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF DUP5 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x7 DUP3 AND ISZERO PUSH3 0x6A6 JUMPI PUSH1 0x3 DUP3 SWAP1 SHR PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST PUSH32 0x8FAA70878671CCD212D20771B795C50AF8FD3FF6CF27F4BDE57E5D4DE0AEB673 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH3 0x6DB SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xDCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH3 0x6EF DUP7 DUP7 PUSH3 0xC35 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x8A22373512790C48B83A1FE2EFDD2888D4A917BCDC24D0ADF63E60F671680460 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ DUP1 ISZERO SWAP1 PUSH3 0x79B JUMPI POP DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH3 0x7BA JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DDC5CAB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH3 0x8AD JUMPI PUSH1 0x0 DUP5 PUSH1 0x40 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x7E6 JUMPI PUSH3 0x7E6 PUSH3 0xD4A JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP11 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x60 DUP2 SWAP1 SHR ISZERO PUSH3 0x833 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4923A771 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP14 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND DUP12 OR SWAP1 SWAP3 SSTORE PUSH1 0x5 DUP11 SWAP1 SHL PUSH1 0xE0 SWAP1 DUP2 AND SWAP3 DUP4 SHR SWAP2 DUP4 SHR NOT SWAP10 SWAP1 SWAP10 AND OR SWAP8 DUP2 SWAP1 SUB PUSH3 0x89D JUMPI PUSH1 0x3 DUP10 SWAP1 SHR PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP12 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP9 SWAP1 SWAP9 SSTORE JUMPDEST POP POP POP PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 ADD PUSH3 0x7BD JUMP JUMPDEST POP SWAP4 SWAP6 SWAP3 SWAP5 POP SWAP2 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH3 0x8E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DDC5CAB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH3 0xA04 JUMPI PUSH1 0x0 DUP3 PUSH1 0x40 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x910 JUMPI PUSH3 0x910 PUSH3 0xD4A JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x60 DUP2 SWAP1 SHR DUP1 PUSH3 0x95D JUMPI PUSH1 0x40 MLOAD PUSH4 0x37E25A97 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH3 0x987 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE9835731 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH3 0x9BE JUMPI PUSH1 0x40 MLOAD PUSH4 0x30BAABF3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP3 SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x60 SWAP3 SWAP1 SWAP3 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP2 SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH3 0x8E7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH3 0xA38 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3AB34909 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP6 SWAP1 SHR PUSH1 0x7 DUP7 AND PUSH1 0x0 JUMPDEST DUP6 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH3 0xC21 JUMPI PUSH1 0x0 DUP7 PUSH1 0x40 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH3 0xA6D JUMPI PUSH3 0xA6D PUSH3 0xD4A JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP13 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x60 DUP2 SWAP1 SHR PUSH3 0xAB9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x37E25A97 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH1 0x60 DUP3 SWAP1 SHR SUB PUSH3 0xADE JUMPI PUSH1 0x40 MLOAD PUSH4 0xE9835731 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP10 SWAP1 SUB PUSH3 0xB0C JUMPI PUSH1 0x0 NOT SWAP1 SWAP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP13 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP9 POP SWAP4 PUSH1 0x7 SWAP4 POP PUSH3 0xB14 JUMP JUMPDEST PUSH1 0x0 NOT SWAP1 SWAP4 ADD SWAP3 JUMPDEST PUSH1 0x5 DUP5 SWAP1 SHL DUP10 SWAP1 SHL PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP1 DUP5 AND SWAP1 DUP7 AND EQ PUSH3 0xB67 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP16 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP14 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x1FFF PUSH1 0x3 DUP4 SWAP1 SHR AND PUSH1 0xE0 PUSH1 0x5 DUP5 SWAP1 SHL AND DUP8 DUP3 EQ PUSH3 0xBCC JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP16 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP1 DUP5 SHR NOT SWAP1 SWAP2 AND SWAP1 DUP6 AND DUP4 SHR OR SWAP1 SSTORE PUSH3 0xBF0 JUMP JUMPDEST DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 SHR DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 SHL SWAP1 SHR NOT DUP14 AND OR SWAP12 POP JUMPDEST DUP7 PUSH1 0x0 SUB PUSH3 0xC0F JUMPI PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x2 DUP16 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE SWAP12 POP JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 POP PUSH3 0xA44 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL OR SWAP7 SWAP4 SWAP6 POP SWAP3 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO EQ PUSH3 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH4 0x26DF4CCD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH3 0xD1E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ PUSH3 0xCAC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EXTCODESIZE PUSH3 0xCAC JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DDC5CAB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH3 0xCC8 SWAP2 SWAP1 PUSH3 0xED1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0xD05 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0xD0A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH3 0xA04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH3 0xD43 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xD93 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xD79 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH3 0xDB6 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH3 0xD76 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP8 MLOAD DUP1 DUP4 MSTORE PUSH1 0x80 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD PUSH1 0x20 DUP1 DUP12 ADD PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH3 0xE9F JUMPI DUP10 DUP5 SUB PUSH1 0x7F NOT ADD DUP7 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP4 DUP2 ADD MLOAD DUP10 DUP7 ADD SWAP1 PUSH1 0x3 DUP2 LT PUSH3 0xE3B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP7 DUP7 ADD MSTORE PUSH1 0x40 SWAP2 DUP3 ADD MLOAD SWAP2 DUP7 ADD DUP11 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 MSTORE SWAP1 DUP5 ADD SWAP1 PUSH1 0x0 SWAP1 DUP10 DUP8 ADD SWAP1 JUMPDEST DUP1 DUP4 LT ISZERO PUSH3 0xE89 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP3 MSTORE SWAP3 DUP7 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 SWAP1 DUP7 ADD SWAP1 PUSH3 0xE5D JUMP JUMPDEST POP SWAP8 DUP6 ADD SWAP8 SWAP6 POP POP POP SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH3 0xDF3 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 DUP9 ADD MSTORE DUP7 DUP2 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH3 0xEC3 DUP2 DUP10 PUSH3 0xD9C JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH3 0xEE5 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH3 0xD76 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BCA DUP1 PUSH3 0xEFF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AB5150A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8AB5150A EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x91423765 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xADFCA15E EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xCDFFACC6 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2DE JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x1F931C1C EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x2C408059 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x52EF6B2C EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x7A0ED627 EQ PUSH2 0x1FE JUMPI PUSH2 0xB2 JUMP JUMPDEST CALLDATASIZE PUSH2 0xB2 JUMPI STOP JUMPDEST PUSH1 0x0 PUSH2 0xBC PUSH2 0x2FE JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0xE6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x21F27F0D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x105 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH2 0x127 CALLDATASIZE PUSH1 0x4 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xFC606C433378E3A7E0A6A531DEAC289B66CAA1B4AA8554FD4AB2C6F1570F92D8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x15BF JUMP JUMPDEST PUSH2 0x30D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF PUSH2 0x397 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x1671 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x57C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x1703 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF PUSH2 0x9F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF PUSH2 0xA00 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0xA0A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1B75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SHR SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x2F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x308 PUSH2 0xC20 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x315 PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x346 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2F7A8EE1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x390 PUSH2 0x353 DUP6 DUP8 PUSH2 0x1871 JUMP JUMPDEST DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0xCB4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x308 PUSH32 0x177481AC65E4292921C69F62D1CC7F57541261E5D61C8175CF4E36A01C9BFC96 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1B55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1B75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x409 JUMPI PUSH2 0x409 PUSH2 0x17DD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x432 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP5 ADD SLOAD PUSH2 0xFFFF AND DUP3 LT ISZERO PUSH2 0x574 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x55F JUMPI DUP4 PUSH2 0x471 DUP2 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x1 DUP9 ADD SLOAD SWAP1 SWAP6 POP PUSH2 0xFFFF AND DUP6 GT SWAP1 POP PUSH2 0x55F JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP3 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP9 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 SHR SWAP1 DUP1 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0x502 JUMPI DUP11 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x4C7 JUMPI PUSH2 0x4C7 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x4F0 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x502 JUMP JUMPDEST DUP1 PUSH2 0x4FA DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4AD JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x511 JUMPI POP POP POP PUSH2 0x54D JUMP JUMPDEST DUP2 DUP11 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x524 JUMPI PUSH2 0x524 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP8 PUSH2 0x546 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP9 POP POP POP POP POP JUMPDEST DUP1 PUSH2 0x557 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x45E JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x56C SWAP1 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x43B JUMP JUMPDEST POP POP DUP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x584 PUSH2 0xE70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5B5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEFD1052D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5BD PUSH2 0xE98 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1B55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1B75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5FE JUMPI PUSH2 0x5FE PUSH2 0x17DD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x644 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x61C JUMPI SWAP1 POP JUMPDEST POP PUSH1 0x1 DUP3 ADD SLOAD SWAP1 SWAP3 POP PUSH1 0x0 SWAP1 PUSH2 0xFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x66C JUMPI PUSH2 0x66C PUSH2 0x17DD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x695 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP6 ADD SLOAD PUSH2 0xFFFF AND DUP3 LT ISZERO PUSH2 0x984 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x96F JUMPI DUP4 PUSH2 0x6D4 DUP2 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x1 DUP10 ADD SLOAD SWAP1 SWAP6 POP PUSH2 0xFFFF AND DUP6 GT SWAP1 POP PUSH2 0x96F JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP3 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP10 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 SHR SWAP1 DUP1 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0x82D JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP13 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x734 JUMPI PUSH2 0x734 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x81B JUMPI DUP4 DUP13 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x761 JUMPI PUSH2 0x761 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP12 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x77F JUMPI PUSH2 0x77F PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x79A JUMPI PUSH2 0x79A PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE POP POP PUSH1 0xFF DUP11 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7D0 JUMPI PUSH2 0x7D0 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND LT PUSH2 0x7E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x7F7 JUMPI PUSH2 0x7F7 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP1 MLOAD DUP1 SWAP2 SWAP1 PUSH2 0x80C SWAP1 PUSH2 0x19EA JUMP JUMPDEST PUSH1 0xFF AND SWAP1 MSTORE POP PUSH1 0x1 SWAP2 POP PUSH2 0x82D JUMP JUMPDEST DUP1 PUSH2 0x825 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x710 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x83C JUMPI POP POP POP PUSH2 0x95D JUMP JUMPDEST DUP2 DUP12 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x84F JUMPI PUSH2 0x84F PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 MSTORE PUSH1 0x1 DUP11 ADD SLOAD PUSH2 0xFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x888 JUMPI PUSH2 0x888 PUSH2 0x17DD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8B1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP12 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x8C4 JUMPI PUSH2 0x8C4 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 SWAP1 MSTORE POP DUP3 DUP12 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x8E6 JUMPI PUSH2 0x8E6 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x904 JUMPI PUSH2 0x904 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE POP POP PUSH1 0x1 DUP10 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x93A JUMPI PUSH2 0x93A PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0xFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP8 PUSH2 0x956 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP9 POP POP POP POP POP JUMPDEST DUP1 PUSH2 0x967 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6C1 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x97C SWAP1 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x69E JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9EB JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9A4 JUMPI PUSH2 0x9A4 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x9C5 JUMPI PUSH2 0x9C5 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP1 POP DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x9E3 SWAP1 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x988 JUMP JUMPDEST POP DUP2 DUP6 MSTORE POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x308 PUSH2 0xE70 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x308 PUSH2 0xC81 JUMP JUMPDEST PUSH2 0xA12 PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA43 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2F7A8EE1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x177481AC65E4292921C69F62D1CC7F57541261E5D61C8175CF4E36A01C9BFC96 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1B55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1B75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAC2 JUMPI PUSH2 0xAC2 PUSH2 0x17DD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAEB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP5 ADD SLOAD PUSH2 0xFFFF AND DUP3 LT ISZERO PUSH2 0xBD4 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0xBBF JUMPI DUP4 PUSH2 0xB2A DUP2 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x1 DUP9 ADD SLOAD SWAP1 SWAP6 POP PUSH2 0xFFFF AND DUP6 GT SWAP1 POP PUSH2 0xBBF JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP3 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP9 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SUB PUSH2 0xBAC JUMPI DUP1 DUP9 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0xB85 JUMPI PUSH2 0xB85 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP6 PUSH2 0xBA8 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP7 POP POP JUMPDEST POP DUP1 PUSH2 0xBB7 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB17 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0xBCC SWAP1 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAF4 JUMP JUMPDEST POP POP DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBE6 PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC17 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2F7A8EE1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA80 DUP2 PUSH2 0xED2 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1B75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SHR DUP1 PUSH2 0xC7E JUMPI POP PUSH32 0x177481AC65E4292921C69F62D1CC7F57541261E5D61C8175CF4E36A01C9BFC96 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8A22373512790C48B83A1FE2EFDD2888D4A917BCDC24D0ADF63E60F671680460 JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1B55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1B75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xFFFF DUP2 AND SWAP1 DUP2 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x7 AND ISZERO PUSH2 0xCFF JUMPI POP PUSH1 0x3 DUP2 SWAP1 SHR PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST PUSH1 0x0 JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0xDE4 JUMPI PUSH1 0x0 DUP9 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD1F JUMPI PUSH2 0xD1F PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP2 PUSH1 0x40 ADD MLOAD MLOAD PUSH1 0x0 SUB PUSH2 0xD58 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEB6C3AEB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD6C JUMPI PUSH2 0xD6C PUSH2 0x1A09 JUMP JUMPDEST SUB PUSH2 0xD87 JUMPI PUSH2 0xD7D DUP8 DUP7 DUP7 DUP6 PUSH2 0xF15 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD9B JUMPI PUSH2 0xD9B PUSH2 0x1A09 JUMP JUMPDEST SUB PUSH2 0xDAF JUMPI PUSH2 0xDAA DUP8 DUP4 PUSH2 0x1054 JUMP JUMPDEST PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDC3 JUMPI PUSH2 0xDC3 PUSH2 0x1A09 JUMP JUMPDEST SUB PUSH2 0xDDA JUMPI PUSH2 0xDD4 DUP8 DUP7 DUP7 DUP6 PUSH2 0x119F JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xD02 JUMP JUMPDEST POP DUP3 DUP3 EQ PUSH2 0xE00 JUMPI PUSH1 0x1 DUP5 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF DUP5 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x7 DUP3 AND ISZERO PUSH2 0xE22 JUMPI PUSH1 0x3 DUP3 SWAP1 SHR PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST PUSH32 0x8FAA70878671CCD212D20771B795C50AF8FD3FF6CF27F4BDE57E5D4DE0AEB673 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xE55 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xE67 DUP7 DUP7 PUSH2 0x13C2 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x24AA1F7B31FD188A8D3ECFB06BC55C806040E59B03BD4396283442FCE6617890 PUSH2 0xCA5 JUMP JUMPDEST PUSH2 0xEA1 CALLER PUSH2 0x14A6 JUMP JUMPDEST PUSH32 0x24AA1F7B31FD188A8D3ECFB06BC55C806040E59B03BD4396283442FCE6617890 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x24AA1F7B31FD188A8D3ECFB06BC55C806040E59B03BD4396283442FCE6617890 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH2 0xA80 DUP2 DUP2 DUP2 DUP2 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ DUP1 ISZERO SWAP1 PUSH2 0xF3D JUMPI POP DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xF5B JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DDC5CAB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x1047 JUMPI PUSH1 0x0 DUP5 PUSH1 0x40 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF83 JUMPI PUSH2 0xF83 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP11 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x60 DUP2 SWAP1 SHR ISZERO PUSH2 0xFCF JUMPI PUSH1 0x40 MLOAD PUSH4 0x4923A771 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP14 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND DUP12 OR SWAP1 SWAP3 SSTORE PUSH1 0x5 DUP11 SWAP1 SHL PUSH1 0xE0 SWAP1 DUP2 AND SWAP3 DUP4 SHR SWAP2 DUP4 SHR NOT SWAP10 SWAP1 SWAP10 AND OR SWAP8 DUP2 SWAP1 SUB PUSH2 0x1038 JUMPI PUSH1 0x3 DUP10 SWAP1 SHR PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP12 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP9 SWAP1 SWAP9 SSTORE JUMPDEST POP POP POP PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 ADD PUSH2 0xF5E JUMP JUMPDEST POP SWAP4 SWAP6 SWAP3 SWAP5 POP SWAP2 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH2 0x107D JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DDC5CAB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x119A JUMPI PUSH1 0x0 DUP3 PUSH1 0x40 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x10A5 JUMPI PUSH2 0x10A5 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x60 DUP2 SWAP1 SHR DUP1 PUSH2 0x10F1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x37E25A97 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x111A JUMPI PUSH1 0x40 MLOAD PUSH4 0xE9835731 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1150 JUMPI PUSH1 0x40 MLOAD PUSH4 0x30BAABF3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP3 SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x60 SWAP3 SWAP1 SWAP3 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x1080 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x11CD JUMPI PUSH1 0x40 MLOAD PUSH4 0x3AB34909 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP6 SWAP1 SHR PUSH1 0x7 DUP7 AND PUSH1 0x0 JUMPDEST DUP6 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x13AE JUMPI PUSH1 0x0 DUP7 PUSH1 0x40 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x11FE JUMPI PUSH2 0x11FE PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP13 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x60 DUP2 SWAP1 SHR PUSH2 0x1249 JUMPI PUSH1 0x40 MLOAD PUSH4 0x37E25A97 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH1 0x60 DUP3 SWAP1 SHR SUB PUSH2 0x126D JUMPI PUSH1 0x40 MLOAD PUSH4 0xE9835731 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP10 SWAP1 SUB PUSH2 0x1299 JUMPI PUSH1 0x0 NOT SWAP1 SWAP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP13 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP9 POP SWAP4 PUSH1 0x7 SWAP4 POP PUSH2 0x12A1 JUMP JUMPDEST PUSH1 0x0 NOT SWAP1 SWAP4 ADD SWAP3 JUMPDEST PUSH1 0x5 DUP5 SWAP1 SHL DUP10 SWAP1 SHL PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP1 DUP5 AND SWAP1 DUP7 AND EQ PUSH2 0x12F8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP16 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND OR SWAP1 SSTORE JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP14 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x1FFF PUSH1 0x3 DUP4 SWAP1 SHR AND PUSH1 0xE0 PUSH1 0x5 DUP5 SWAP1 SHL AND DUP8 DUP3 EQ PUSH2 0x135B JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP16 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP1 DUP5 SHR NOT SWAP1 SWAP2 AND SWAP1 DUP6 AND DUP4 SHR OR SWAP1 SSTORE PUSH2 0x137F JUMP JUMPDEST DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 SHR DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 SHL SWAP1 SHR NOT DUP14 AND OR SWAP12 POP JUMPDEST DUP7 PUSH1 0x0 SUB PUSH2 0x139D JUMPI PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x2 DUP16 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE SWAP12 POP JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 POP PUSH2 0x11D9 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL OR SWAP7 SWAP4 SWAP6 POP SWAP3 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO EQ PUSH2 0x13EE JUMPI PUSH1 0x40 MLOAD PUSH4 0x26DF4CCD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x14A2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ PUSH2 0x1435 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EXTCODESIZE PUSH2 0x1435 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DDC5CAB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x144F SWAP2 SWAP1 PUSH2 0x1B38 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x148A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x148F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x119A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x8A22373512790C48B83A1FE2EFDD2888D4A917BCDC24D0ADF63E60F671680460 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x154F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1558 DUP3 PUSH2 0x1520 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1588 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x15B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x15D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x15EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1603 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1612 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP8 POP DUP1 SWAP7 POP POP PUSH2 0x163D PUSH1 0x20 DUP10 ADD PUSH2 0x155F JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1653 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1660 DUP9 DUP3 DUP10 ADD PUSH2 0x1576 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16B2 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x168D JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16F8 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x16D2 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1772 JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP8 ADD MLOAD DUP8 DUP5 ADD DUP8 SWAP1 MSTORE PUSH2 0x175F DUP8 DUP6 ADD DUP3 PUSH2 0x16BE JUMP JUMPDEST SWAP6 DUP9 ADD SWAP6 SWAP4 POP POP SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x172A JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1558 DUP3 PUSH2 0x155F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16B2 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x17B7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1816 JUMPI PUSH2 0x1816 PUSH2 0x17DD JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1845 JUMPI PUSH2 0x1845 PUSH2 0x17DD JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1867 JUMPI PUSH2 0x1867 PUSH2 0x17DD JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1884 PUSH2 0x187F DUP5 PUSH2 0x184D JUMP JUMPDEST PUSH2 0x181C JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP2 SWAP1 PUSH1 0x5 DUP7 DUP2 SHL DUP7 ADD CALLDATASIZE DUP2 GT ISZERO PUSH2 0x18A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1998 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x18C5 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP2 DUP11 ADD SWAP2 POP PUSH1 0x60 DUP3 CALLDATASIZE SUB SLT ISZERO PUSH2 0x18DB JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x18E3 PUSH2 0x17F3 JUMP JUMPDEST PUSH2 0x18EC DUP4 PUSH2 0x155F JUMP JUMPDEST DUP2 MSTORE DUP7 DUP4 ADD CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x1900 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP2 DUP9 ADD MSTORE PUSH1 0x40 DUP4 DUP2 ADD CALLDATALOAD DUP4 DUP2 GT ISZERO PUSH2 0x1918 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST SWAP4 SWAP1 SWAP4 ADD SWAP3 CALLDATASIZE PUSH1 0x1F DUP6 ADD SLT PUSH2 0x192F JUMPI PUSH1 0x0 SWAP3 POP DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x193F PUSH2 0x187F DUP5 PUSH2 0x184D JUMP JUMPDEST DUP4 DUP2 MSTORE SWAP3 DUP8 SHL DUP5 ADD DUP9 ADD SWAP3 DUP9 DUP2 ADD SWAP1 CALLDATASIZE DUP6 GT ISZERO PUSH2 0x195C JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST SWAP5 DUP10 ADD SWAP5 JUMPDEST DUP5 DUP7 LT ISZERO PUSH2 0x1981 JUMPI PUSH2 0x1972 DUP7 PUSH2 0x1520 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP10 ADD SWAP5 SWAP1 DUP10 ADD SWAP1 PUSH2 0x1961 JUMP JUMPDEST SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP9 MSTORE POP POP SWAP5 DUP4 ADD SWAP5 DUP4 ADD PUSH2 0x18A4 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x19CD JUMPI PUSH2 0x19CD PUSH2 0x19A5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0x1A00 JUMPI PUSH2 0x1A00 PUSH2 0x19A5 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A3A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A22 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1A5B DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1A1F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP8 MLOAD DUP1 DUP4 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 POP PUSH1 0x80 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP PUSH1 0x20 DUP1 DUP11 ADD PUSH1 0x0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1B08 JUMPI DUP10 DUP8 SUB PUSH1 0x7F NOT ADD DUP7 MSTORE DUP3 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 MSTORE DUP5 DUP2 ADD MLOAD PUSH1 0x3 DUP2 LT PUSH2 0x1AD9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST DUP9 DUP7 ADD MSTORE PUSH1 0x40 SWAP1 DUP2 ADD MLOAD SWAP1 DUP9 ADD DUP10 SWAP1 MSTORE PUSH2 0x1AF5 DUP10 DUP10 ADD DUP3 PUSH2 0x16BE JUMP JUMPDEST SWAP8 POP POP SWAP5 DUP4 ADD SWAP5 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1A99 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 DUP8 ADD MSTORE POP POP DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x1B2D DUP2 DUP7 PUSH2 0x1A43 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1B4A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1A1F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID OR PUSH21 0x81AC65E4292921C69F62D1CC7F57541261E5D61C81 PUSH22 0xCF4E36A01C9BFC94177481AC65E4292921C69F62D1CC PUSH32 0x57541261E5D61C8175CF4E36A01C9BFC93A26469706673582212204FD3E61E32 0xCA 0xBD 0x24 0x23 SWAP3 XOR 0xD2 0xA5 PUSH2 0x8D68 GT RETURN 0xC5 RETURNDATASIZE SWAP2 SUB 0xEB 0x5D 0xD7 PUSH20 0xAA327300861664736F6C63430008130033000000 ",
							"sourceMap": "152:30:1:-:0;;;;;;;;;;;;-1:-1:-1;1108:16:24;;;1121:2;1108:16;;;;;;;;;1080:25;;1108:16;;;;;;;;;;-1:-1:-1;;1080:44:24;-1:-1:-1;1134:21:24;-1:-1:-1;;;1080:44:24;1134:21;1213:15;1134:21;1213:15;:::i;:::-;;;1203:26;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1203:99:24;;;:26;;;;;;;;;;;:99;-1:-1:-1;;;1312:9:24;1322:15;;;;:::i;:::-;;;1312:26;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1312:99:24;;;:26;;;;;;;;;;;:99;1422:63;-1:-1:-1;;;1480:4:24;1422:21;:63::i;:::-;-1:-1:-1;;;1533:9:24;1543:15;;;;:::i;:::-;;;1533:26;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1533:65:24;;;:26;;;;;;;;;;;:65;1609:63;-1:-1:-1;;;1667:4:24;1609:21;:63::i;:::-;-1:-1:-1;;;1720:9:24;1730:15;;;;:::i;:::-;;;1720:26;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1720:61:24;;;:26;;;;;;;;;;;:61;-1:-1:-1;;;1791:9:24;1801:15;;;;:::i;:::-;;;1791:26;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1791:103:24;;;:26;;;;;;;;;;;:103;-1:-1:-1;;;1904:9:24;1914:15;;;;:::i;:::-;;;1904:26;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1904:69:24;;;:26;;;;;;;;;;;:69;-1:-1:-1;;;1983:9:24;1993:15;;;;:::i;:::-;;;1983:26;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1983:67:24;;;:26;;;;;;;;;;;:67;2061:63;-1:-1:-1;;;2119:4:24;2061:21;:63::i;:::-;-1:-1:-1;;;2163:9:24;2173:15;;;;:::i;:::-;;;2163:26;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2163:63:24;;;:26;;;;;;;;;;;:63;2237:54;-1:-1:-1;;;2286:4:24;2237:21;:54::i;:::-;-1:-1:-1;;;2335:9:24;2345:15;;;;:::i;:::-;;;2335:26;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2335:51:24;;;:26;;;;;;;;;;;:51;-1:-1:-1;;;2396:9:24;2406:15;;;;:::i;:::-;;;2396:26;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2396:62:24;;;:26;;;;;;;;;;;:62;-1:-1:-1;;;2468:9:24;2478:15;;;;:::i;:::-;;;2468:26;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2468:63:24;;;:26;;;;;;;;;;;:63;-1:-1:-1;;;2541:9:24;2551:15;;;;:::i;:::-;;;2541:26;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2541:65:24;;;:26;;;;;;;;;;;:65;2617:54;-1:-1:-1;;;2666:4:24;2617:21;:54::i;:::-;2736:17;;;2751:1;2736:17;;;;;;;;;2706:27;;2736:17;;;;152:30:1;;;;;;;;;-1:-1:-1;152:30:1;;;;;;;;;;;;;;2736:17:24;;;;;;;;;;;;;;-1:-1:-1;2779:129:24;;;;;;;;;2818:4;2779:129;;2706:47;;-1:-1:-1;2779:129:24;;;-1:-1:-1;2779:129:24;;;;2888:9;2779:129;;;2764:9;2774:1;2764:12;;;;;;;;:::i;:::-;;;;;;:144;;;;2919:38;2931:9;2950:1;2919:38;;;;;;;;;;;;:11;;;:38;;:::i;:::-;2990:21;3000:10;2990:9;:21::i;:::-;1070:1948;;;152:30:1;;907:268:17;-1:-1:-1;;;;;;1024:25:17;;;;;1020:70;;1058:32;;-1:-1:-1;;;1058:32:17;;;;;;;;;;;1020:70;-1:-1:-1;;;;;;1100:59:17;;;;:46;:59;;;219:52:18;1100:59:17;;;;;:68;;-1:-1:-1;;1100:68:17;;;;;;;;;;907:268::o;849:2043:33:-;1123:15;;584:53:26;;1123:15:33;;;;;;991:35;;1321:1;1305:17;:21;1301:151;;-1:-1:-1;1435:1:33;1418:18;;;1402:35;;;;:15;;;:35;;;;;;1301:151;1471:9;1466:1013;1486:9;:16;1482:1;:20;1466:1013;;;1527:24;1554:9;1564:1;1554:12;;;;;;;;:::i;:::-;;;;;;;1527:39;;1584:21;1608:8;:15;;;1584:39;;1646:8;:18;;;:25;1675:1;1646:30;1642:102;;1705:39;;-1:-1:-1;;;1705:39:33;;;;;;;;;;;1642:102;1777:18;1767:6;:28;;;;;;;;:::i;:::-;;1763:702;;1851:178;1895:1;1922:13;1961:12;1999:8;1851:18;:178::i;:::-;1819:210;;-1:-1:-1;1819:210:33;-1:-1:-1;1763:702:33;;;2068:22;2058:6;:32;;;;;;;;:::i;:::-;;2054:411;;2114:35;2137:1;2140:8;2114:22;:35::i;:::-;2054:411;;;2188:21;2178:6;:31;;;;;;;;:::i;:::-;;2174:291;;2265:181;2312:1;2339:13;2378:12;2416:8;2265:21;:181::i;:::-;2233:213;;-1:-1:-1;2233:213:33;-1:-1:-1;2174:291:33;-1:-1:-1;;1504:3:33;;1466:1013;;;;2514:21;2497:13;:38;2493:116;;2555:15;;;:39;;-1:-1:-1;;2555:39:33;;;;;;;2493:116;2692:1;2676:17;;:21;2672:110;;2750:1;2733:18;;;2717:35;;;;:15;;;:35;;;;;:50;;;2672:110;2801:35;2812:9;2823:6;2831:4;2801:35;;;;;;;;:::i;:::-;;;;;;;;2850:25;2862:6;2870:4;2850:11;:25::i;:::-;1067:1819;;;981:1911;849:2043;;;:::o;1203:207:7:-;186:49:8;1359:7:7;;1338:38;;-1:-1:-1;;;;;1338:38:7;;;;1359:7;;1338:38;;1266:31;;1338:38;1386:17;;-1:-1:-1;;;;;;1386:17:7;-1:-1:-1;;;;;1386:17:7;;;;;;;;;;1203:207::o;2898:1595:33:-;3163:15;;3090:7;;;;-1:-1:-1;;;;;3163:32:33;3190:4;3163:32;;;;:81;;-1:-1:-1;3216:15:33;;-1:-1:-1;;;;;3216:26:33;568:20:36;614:8;3163:81:33;3142:158;;;3266:34;;-1:-1:-1;;;3266:34:33;;;;;;;;;;;3142:158;3320:9;3315:1111;3335:8;:18;;;:25;3331:1;:29;3315:1111;;;3385:15;3403:8;:18;;;3422:1;3403:21;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;3461:18:33;;3442:16;3461:18;;;;;;;;;;;;3403:21;;-1:-1:-1;3502:26:33;;;;:40;3498:112;;3571:39;;-1:-1:-1;;;3571:39:33;;;;;;;;;;;3498:112;3720:15;;-1:-1:-1;;;;;;3671:18:33;;;3759:22;3671:18;;;;;;;;;;3712:24;;;;;-1:-1:-1;;;;;;3712:69:33;;;3671:110;;;3855:1;3832:24;;;;;;;4091:43;;;4020:45;;;4018:48;3979:87;;;;3978:157;;4218:29;;;4214:164;;4304:1;4287:18;;;4271:35;;;;:15;;;:35;;;;;:50;;;;4214:164;-1:-1:-1;;;4396:15:33;;;;;3362:3;3315:1111;;;-1:-1:-1;4448:13:33;;4463:12;;-1:-1:-1;2898:1595:33;;-1:-1:-1;;;2898:1595:33:o;8179:1080::-;8344:15;;-1:-1:-1;;;;;8344:26:33;568:20:36;8339:92:33;;8397:34;;-1:-1:-1;;;8397:34:33;;;;;;;;;;;8339:92;8451:9;8446:797;8466:8;:18;;;:25;8462:1;:29;8446:797;;;8516:15;8534:8;:18;;;8553:1;8534:21;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;8592:18:33;;8573:16;8592:18;;;;;;;;;;;;8534:21;;-1:-1:-1;8654:26:33;;;;;8699:97;;8761:35;;-1:-1:-1;;;8761:35:33;;;;;;;;;;;8699:97;8845:4;-1:-1:-1;;;;;8818:32:33;;;8814:103;;8879:38;;-1:-1:-1;;;8879:38:33;;;;;;;;;;;8814:103;8958:8;:15;;;-1:-1:-1;;;;;8939:34:33;:15;-1:-1:-1;;;;;8939:34:33;;8935:110;;9002:43;;-1:-1:-1;;;9002:43:33;;;;;;;;;;;8935:110;-1:-1:-1;9212:15:33;;-1:-1:-1;;;;;;9109:18:33;;;;9212:15;9109:18;;;;;;;;;;9204:24;;;;;-1:-1:-1;;;;;;9150:78:33;-1:-1:-1;;;;;9151:29:33;;;;9150:78;9109:119;;8493:3;;8446:797;;;;8179:1080;;:::o;4499:3674::-;4750:15;;4694:7;;;;-1:-1:-1;;;;;4750:29:33;;4746:103;;4804:45;;-1:-1:-1;;;4804:45:33;;;;;;;;;;;4746:103;4909:1;4892:18;;;4970:1;4954:17;;4864:25;4986:3043;5006:8;:18;;;:25;5002:1;:29;4986:3043;;;5056:15;5074:8;:18;;;5093:1;5074:21;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;5132:18:33;;5113:16;5132:18;;;;;;;;;;;;5074:21;;-1:-1:-1;5173:26:33;;;;5169:108;;5242:35;;-1:-1:-1;;;5242:35:33;;;;;;;;;;;5169:108;5338:4;5300:26;;;;:43;5296:114;;5372:38;;-1:-1:-1;;;5372:38:33;;;;;;;;;;;5296:114;5449:1;5433:17;;;5429:267;;-1:-1:-1;;5474:19:33;;;5530:34;;;;:15;;;:34;;;;;;;-1:-1:-1;5474:19:33;5608:1;;-1:-1:-1;5429:267:33;;;-1:-1:-1;;5656:21:33;;;;5429:267;6099:1;6076:24;;;6059:42;;;5714:19;;-1:-1:-1;;;;;;6150:24:33;;;;;;;6146:292;;-1:-1:-1;;;;;;6392:22:33;;:8;:22;;;;;;;;;;;;-1:-1:-1;;;;;;6322:93:33;-1:-1:-1;;;;;6323:29:33;;6322:93;6269:146;;6146:292;-1:-1:-1;;;;;;;;6467:18:33;;:8;:18;;;;;;;;;;6460:25;6605:21;6625:1;6605:21;;;;6676:27;6702:1;6676:27;;;;6744:42;;;6740:1107;;6810:23;6836:84;;;:15;;;:84;;;;;;;-1:-1:-1;;;;;;7134:80:33;;;7132:83;7086:129;;;7244:21;;;:50;;7085:210;7379:56;;6740:1107;;;7802:25;7785:12;-1:-1:-1;;;;;7777:21:33;;:50;;7722:25;-1:-1:-1;;;;;;539:35:33;;7667:80;;7665:83;7622:12;:126;7621:207;7582:246;;6740:1107;7869:19;7892:1;7869:24;7865:150;;7924:34;;;;:15;;;:34;;;;;7917:41;;;7924:34;-1:-1:-1;7865:150:33;-1:-1:-1;;5033:3:33;;;;;-1:-1:-1;4986:3043:33;;-1:-1:-1;;4986:3043:33;;-1:-1:-1;8081:1:33;8060:22;;;;8059:46;;8143:12;;-1:-1:-1;4499:3674:33;;-1:-1:-1;;;;4499:3674:33:o;9265:663::-;9370:11;;:16;-1:-1:-1;;;;;9344:20:33;;;9343:44;9339:119;;9408:50;;-1:-1:-1;;;9408:50:33;;;;;;;;;;;9339:119;-1:-1:-1;;;;;9473:20:33;;;9469:453;;-1:-1:-1;;;;;9513:23:33;;9531:4;9513:23;9509:149;;-1:-1:-1;;;;;9561:17:33;;568:20:36;9556:87:33;;9609:34;;-1:-1:-1;;;9609:34:33;;;;;;;;;;;9556:87;9673:12;9691:6;-1:-1:-1;;;;;9691:19:33;9711:4;9691:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9672:44;;;9736:7;9731:181;;9815:16;9812:1;;9794:38;9863:16;9812:1;9853:27;9469:453;9265:663;;:::o;146:232:38:-;185:3;206:17;;;203:140;;265:10;260:3;256:20;253:1;246:31;300:4;297:1;290:15;328:4;325:1;318:15;203:140;-1:-1:-1;370:1:38;359:13;;146:232::o;383:127::-;444:10;439:3;435:20;432:1;425:31;475:4;472:1;465:15;499:4;496:1;489:15;515:127;576:10;571:3;567:20;564:1;557:31;607:4;604:1;597:15;631:4;628:1;621:15;756:250;841:1;851:113;865:6;862:1;859:13;851:113;;;941:11;;;935:18;922:11;;;915:39;887:2;880:10;851:113;;;-1:-1:-1;;998:1:38;980:16;;973:27;756:250::o;1011:270::-;1052:3;1090:5;1084:12;1117:6;1112:3;1105:19;1133:76;1202:6;1195:4;1190:3;1186:14;1179:4;1172:5;1168:16;1133:76;:::i;:::-;1263:2;1242:15;-1:-1:-1;;1238:29:38;1229:39;;;;1270:4;1225:50;;1011:270;-1:-1:-1;;1011:270:38:o;1286:2090::-;1554:4;1583:2;1623;1612:9;1608:18;1653:2;1642:9;1635:21;1676:6;1711;1705:13;1742:6;1734;1727:22;1768:3;1758:13;;1802:2;1791:9;1787:18;1780:25;;1864:2;1854:6;1851:1;1847:14;1836:9;1832:30;1828:39;1886:4;1925:2;1917:6;1913:15;1946:1;1956:1249;1970:6;1967:1;1964:13;1956:1249;;;2035:22;;;-1:-1:-1;;2031:37:38;2019:50;;2092:13;;2179:9;;-1:-1:-1;;;;;2175:35:38;2160:51;;2250:11;;;2244:18;2132:15;;;;2302:1;2285:19;;2275:170;;2355:10;2350:3;2346:20;2343:1;2336:31;2394:4;2391:1;2384:15;2426:4;2423:1;2416:15;2275:170;2465:15;;;2458:37;2518:4;2563:11;;;2557:18;2595:15;;;2588:27;;;2676:21;;2710:24;;;;2800:23;;;;-1:-1:-1;;2756:15:38;;;;2861:236;2877:8;2872:3;2869:17;2861:236;;;2958:15;;-1:-1:-1;;;;;;2954:42:38;2940:57;;3066:17;;;;2905:1;2896:11;;;;;3023:14;;;;2861:236;;;-1:-1:-1;3183:12:38;;;;3120:5;-1:-1:-1;;;3148:15:38;;;;1992:1;1985:9;1956:1249;;;-1:-1:-1;;;;;;;713:31:38;;3241:18;;;701:44;3298:22;;;3291:4;3276:20;;3269:52;3338:32;3302:6;3355;3338:32;:::i;:::-;3330:40;1286:2090;-1:-1:-1;;;;;;;;;;1286:2090:38:o;3381:287::-;3510:3;3548:6;3542:13;3564:66;3623:6;3618:3;3611:4;3603:6;3599:17;3564:66;:::i;:::-;3646:16;;;;;3381:287;-1:-1:-1;;3381:287:38:o;:::-;152:30:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_620": {
									"entryPoint": null,
									"id": 620,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_911": {
									"entryPoint": null,
									"id": 911,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_acceptOwnership_354": {
									"entryPoint": 3736,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_addFacetSelectors_2097": {
									"entryPoint": 3861,
									"id": 2097,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"@_diamondCut_1947": {
									"entryPoint": 3252,
									"id": 1947,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_getFallbackAddress_1115": {
									"entryPoint": null,
									"id": 1115,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getImplementation_1101": {
									"entryPoint": 3104,
									"id": 1101,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getImplementation_942": {
									"entryPoint": 766,
									"id": 942,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getImplementation_990": {
									"entryPoint": null,
									"id": 990,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_initialize_2548": {
									"entryPoint": 5058,
									"id": 2548,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_nomineeOwner_338": {
									"entryPoint": 3696,
									"id": 338,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_owner_153": {
									"entryPoint": 3201,
									"id": 153,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_removeFacetSelectors_2385": {
									"entryPoint": 4511,
									"id": 2385,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"@_replaceFacetSelectors_2487": {
									"entryPoint": 4180,
									"id": 2487,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setFallbackAddress_1130": {
									"entryPoint": null,
									"id": 1130,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setNomineeOwner_381": {
									"entryPoint": null,
									"id": 381,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setOwner_224": {
									"entryPoint": 5286,
									"id": 224,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_supportsInterface_509": {
									"entryPoint": null,
									"id": 509,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_transferOwnership_300": {
									"entryPoint": null,
									"id": 300,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_366": {
									"entryPoint": null,
									"id": 366,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_926": {
									"entryPoint": 3794,
									"id": 926,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@acceptOwnership_285": {
									"entryPoint": 1404,
									"id": 285,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@diamondCut_1741": {
									"entryPoint": 781,
									"id": 1741,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@facetAddress_1662": {
									"entryPoint": null,
									"id": 1662,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@facetAddresses_1638": {
									"entryPoint": 970,
									"id": 1638,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@facetFunctionSelectors_1501": {
									"entryPoint": 2691,
									"id": 1501,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@facets_1391": {
									"entryPoint": 1471,
									"id": 1391,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getFallbackAddress_1061": {
									"entryPoint": 919,
									"id": 1061,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isContract_2659": {
									"entryPoint": null,
									"id": 2659,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@layout_1024": {
									"entryPoint": null,
									"id": 1024,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@layout_247": {
									"entryPoint": null,
									"id": 247,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@layout_404": {
									"entryPoint": null,
									"id": 404,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@layout_560": {
									"entryPoint": null,
									"id": 560,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nomineeOwner_275": {
									"entryPoint": 2550,
									"id": 275,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_87": {
									"entryPoint": 2560,
									"id": 87,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setFallbackAddress_1074": {
									"entryPoint": 2570,
									"id": 1074,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_483": {
									"entryPoint": null,
									"id": 483,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_100": {
									"entryPoint": 3038,
									"id": 100,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bytes4": {
									"entryPoint": 5408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bytes_calldata": {
									"entryPoint": 5494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_struct$_FacetCut_$2610_calldata_ptr_$dyn_calldata_ptrt_addresst_bytes_calldata_ptr": {
									"entryPoint": 5567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_array_bytes4_dyn": {
									"entryPoint": 5822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 6723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_bytes4_$dyn_memory_ptr__to_t_array$_t_bytes4_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__to_t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6767,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_Facet_$1672_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Facet_$1672_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory_2453": {
									"entryPoint": 6131,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_array_struct_FacetCut_dyn": {
									"entryPoint": 6221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_array_t_array$_t_struct$_FacetCut_$2610_calldata_ptr_$dyn_calldata_ptr_to_t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 6257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6687,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 6587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 6634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6565,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 6665,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6612,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6109,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12030:38",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:38",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "62:125:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "72:29:38",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "94:6:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "81:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "81:20:38"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "72:5:38"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "123:5:38"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "134:5:38"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "145:3:38",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "150:10:38",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "141:3:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "141:20:38"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "130:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "130:32:38"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "120:2:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "120:43:38"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "113:51:38"
															},
															"nodeType": "YulIf",
															"src": "110:71:38"
														}
													]
												},
												"name": "abi_decode_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "41:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "52:5:38",
														"type": ""
													}
												],
												"src": "14:173:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "261:115:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "307:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "316:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "319:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "309:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "309:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "309:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "282:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "291:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "278:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "278:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "303:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "274:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "274:32:38"
															},
															"nodeType": "YulIf",
															"src": "271:52:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "332:38:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "360:9:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "342:17:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:28:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "332:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "227:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "238:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "250:6:38",
														"type": ""
													}
												],
												"src": "192:184:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "476:92:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "486:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "498:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "509:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "494:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "486:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "528:9:38"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "553:6:38"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "546:6:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "546:14:38"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "539:6:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "539:22:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "521:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:41:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "521:41:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "445:9:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "456:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "467:4:38",
														"type": ""
													}
												],
												"src": "381:187:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "622:124:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "632:29:38",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "654:6:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "641:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "641:20:38"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "632:5:38"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "724:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "733:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "736:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "726:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "726:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "726:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "683:5:38"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "694:5:38"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "709:3:38",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "714:1:38",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "705:3:38"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "705:11:38"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "718:1:38",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "701:3:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "701:19:38"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "690:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "690:31:38"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "680:2:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "680:42:38"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "673:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "673:50:38"
															},
															"nodeType": "YulIf",
															"src": "670:70:38"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "601:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "612:5:38",
														"type": ""
													}
												],
												"src": "573:173:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:275:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "872:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "881:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "884:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "874:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "874:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "874:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "851:6:38"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "859:4:38",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "847:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "847:17:38"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "866:3:38"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "843:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "843:27:38"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "836:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:35:38"
															},
															"nodeType": "YulIf",
															"src": "833:55:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "897:30:38",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "920:6:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "907:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "907:20:38"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "897:6:38"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "970:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "979:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "982:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "972:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "972:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "972:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "950:18:38",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "939:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "939:30:38"
															},
															"nodeType": "YulIf",
															"src": "936:50:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "995:29:38",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1011:6:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1019:4:38",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1007:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1007:17:38"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "995:8:38"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1076:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1085:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1088:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1078:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1078:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1078:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1047:6:38"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1055:6:38"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1043:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1043:19:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1064:4:38",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:30:38"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1071:3:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1036:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1036:39:38"
															},
															"nodeType": "YulIf",
															"src": "1033:59:38"
														}
													]
												},
												"name": "abi_decode_bytes_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "786:6:38",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "794:3:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "802:8:38",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "812:6:38",
														"type": ""
													}
												],
												"src": "751:347:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1289:824:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1335:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1344:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1347:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1337:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1337:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1337:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1310:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1319:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1306:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1306:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1331:2:38",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1302:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1302:32:38"
															},
															"nodeType": "YulIf",
															"src": "1299:52:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1360:37:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1387:9:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1374:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1374:23:38"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1364:6:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1406:28:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1416:18:38",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1410:2:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1461:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1470:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1463:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1463:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1463:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1449:6:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1457:2:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1446:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1446:14:38"
															},
															"nodeType": "YulIf",
															"src": "1443:34:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1486:32:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1500:9:38"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1511:6:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1496:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1496:22:38"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1490:2:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1566:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1575:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1578:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1568:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1568:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1568:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1545:2:38"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1549:4:38",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1541:13:38"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1556:7:38"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1537:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1537:27:38"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1530:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1530:35:38"
															},
															"nodeType": "YulIf",
															"src": "1527:55:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1591:30:38",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1618:2:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1605:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1605:16:38"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1595:6:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1648:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1657:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1660:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1650:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1650:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1650:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1636:6:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1644:2:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1633:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:14:38"
															},
															"nodeType": "YulIf",
															"src": "1630:34:38"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1724:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1733:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1736:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1726:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1726:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1726:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1687:2:38"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1695:1:38",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1698:6:38"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1691:3:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1691:14:38"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1683:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1683:23:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1708:4:38",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:34:38"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1715:7:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1676:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1676:47:38"
															},
															"nodeType": "YulIf",
															"src": "1673:67:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1749:23:38",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1763:2:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1767:4:38",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1759:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1759:13:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1781:16:38",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "1791:6:38"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1781:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1806:50:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1839:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1850:4:38",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1835:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1835:20:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1816:18:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1816:40:38"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1806:6:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1865:48:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1898:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1909:2:38",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1894:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1894:18:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1881:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1881:32:38"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1869:8:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1942:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1951:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1954:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1944:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1944:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1944:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1928:8:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1938:2:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1925:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1925:16:38"
															},
															"nodeType": "YulIf",
															"src": "1922:36:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1967:86:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2023:9:38"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "2034:8:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2019:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2019:24:38"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2045:7:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "1993:25:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1993:60:38"
															},
															"variables": [
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "1971:8:38",
																	"type": ""
																},
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "1981:8:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2062:18:38",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "2072:8:38"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2062:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2089:18:38",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "2099:8:38"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2089:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_FacetCut_$2610_calldata_ptr_$dyn_calldata_ptrt_addresst_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1223:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1234:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1246:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1254:6:38",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1262:6:38",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1270:6:38",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1278:6:38",
														"type": ""
													}
												],
												"src": "1103:1010:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2162:60:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2179:3:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2188:5:38"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2203:3:38",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2208:1:38",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2199:3:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2199:11:38"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2212:1:38",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2195:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2195:19:38"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2184:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2184:31:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2172:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2172:44:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2172:44:38"
														}
													]
												},
												"name": "abi_encode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2146:5:38",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2153:3:38",
														"type": ""
													}
												],
												"src": "2118:104:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2328:102:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2338:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2350:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2361:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2346:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2346:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2338:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2380:9:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2395:6:38"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2411:3:38",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2416:1:38",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2407:3:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2407:11:38"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2420:1:38",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2403:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2403:19:38"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2391:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2391:32:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2373:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2373:51:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2373:51:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2297:9:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2308:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2319:4:38",
														"type": ""
													}
												],
												"src": "2227:203:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2586:507:38",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2596:12:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2606:2:38",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2600:2:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2617:32:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2635:9:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2646:2:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2631:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2631:18:38"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "2621:6:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2665:9:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2676:2:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2658:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2658:21:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2658:21:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2688:17:38",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "2699:6:38"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "2692:3:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2714:27:38",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2734:6:38"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2728:5:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2728:13:38"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2718:6:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "2757:6:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2765:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2750:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2750:22:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2750:22:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2781:25:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2792:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2803:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2788:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2788:18:38"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2781:3:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2815:29:38",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2841:2:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2829:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2829:15:38"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "2819:6:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2853:10:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2862:1:38",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2857:1:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2921:146:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2942:3:38"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2957:6:38"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "2951:5:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2951:13:38"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2974:3:38",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2979:1:38",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2970:3:38"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2970:11:38"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2983:1:38",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "2966:3:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2966:19:38"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2947:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2947:39:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2935:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2935:52:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2935:52:38"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3000:19:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3011:3:38"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3016:2:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3007:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3007:12:38"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3000:3:38"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3032:25:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3046:6:38"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3054:2:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3042:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3042:15:38"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3032:6:38"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2883:1:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2886:6:38"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2880:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2880:13:38"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2894:18:38",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2896:14:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2905:1:38"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2908:1:38",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2901:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2901:9:38"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2896:1:38"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2876:3:38",
																"statements": []
															},
															"src": "2872:195:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3076:11:38",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3084:3:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3076:4:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2555:9:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2566:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2577:4:38",
														"type": ""
													}
												],
												"src": "2435:658:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3158:401:38",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3168:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3188:5:38"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3182:5:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:12:38"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3172:6:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3210:3:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3215:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3203:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3203:19:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3203:19:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3231:14:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3241:4:38",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3235:2:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3254:19:38",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3265:3:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3270:2:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3261:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3261:12:38"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3254:3:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3282:28:38",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3300:5:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3307:2:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3296:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3296:14:38"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "3286:6:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3319:10:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3328:1:38",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3323:1:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3387:147:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3408:3:38"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3423:6:38"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "3417:5:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3417:13:38"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3436:3:38",
																									"type": "",
																									"value": "224"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3441:10:38",
																									"type": "",
																									"value": "0xffffffff"
																								}
																							],
																							"functionName": {
																								"name": "shl",
																								"nodeType": "YulIdentifier",
																								"src": "3432:3:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3432:20:38"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3413:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3413:40:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3401:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3401:53:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3401:53:38"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3467:19:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3478:3:38"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3483:2:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3474:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3474:12:38"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3467:3:38"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3499:25:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3513:6:38"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3521:2:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3509:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3509:15:38"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3499:6:38"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3349:1:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3352:6:38"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3346:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3346:13:38"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3360:18:38",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3362:14:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3371:1:38"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3374:1:38",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3367:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3367:9:38"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3362:1:38"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3342:3:38",
																"statements": []
															},
															"src": "3338:196:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3543:10:38",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3550:3:38"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3543:3:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_bytes4_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3135:5:38",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3142:3:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3150:3:38",
														"type": ""
													}
												],
												"src": "3098:461:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3761:862:38",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3771:12:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3781:2:38",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3775:2:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3792:32:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3810:9:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3821:2:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3806:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3806:18:38"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "3796:6:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3840:9:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3851:2:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3833:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3833:21:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3833:21:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3863:17:38",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "3874:6:38"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "3867:3:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3889:27:38",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3909:6:38"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3903:5:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3903:13:38"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3893:6:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "3932:6:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3940:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3925:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3925:22:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3925:22:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3956:12:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3966:2:38",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3960:2:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3977:25:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3988:9:38"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3999:2:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3984:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3984:18:38"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3977:3:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4011:53:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4033:9:38"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4048:1:38",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "4051:6:38"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "4044:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4044:14:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4029:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4029:30:38"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4061:2:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:39:38"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "4015:6:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4073:29:38",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4091:6:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4099:2:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4087:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4087:15:38"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4077:6:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4111:10:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4120:1:38",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4115:1:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4179:415:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4200:3:38"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tail_2",
																									"nodeType": "YulIdentifier",
																									"src": "4213:6:38"
																								},
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "4221:9:38"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "4209:3:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4209:22:38"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4237:2:38",
																									"type": "",
																									"value": "63"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4233:3:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4233:7:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4205:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4205:36:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4193:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4193:49:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4193:49:38"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4255:23:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4271:6:38"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "4265:5:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4265:13:38"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "4259:2:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "tail_2",
																					"nodeType": "YulIdentifier",
																					"src": "4298:6:38"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "4316:2:38"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "4310:5:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4310:9:38"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4329:3:38",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4334:1:38",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "4325:3:38"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4325:11:38"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4338:1:38",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "4321:3:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4321:19:38"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4306:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4306:35:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4291:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4291:51:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4291:51:38"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4355:38:38",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "4385:2:38"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "4389:2:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4381:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4381:11:38"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "4375:5:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4375:18:38"
																		},
																		"variables": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulTypedName",
																				"src": "4359:12:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nodeType": "YulIdentifier",
																							"src": "4417:6:38"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "4425:2:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4413:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4413:15:38"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "4430:2:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4406:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4406:27:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4406:27:38"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4446:68:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "memberValue0",
																					"nodeType": "YulIdentifier",
																					"src": "4484:12:38"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nodeType": "YulIdentifier",
																							"src": "4502:6:38"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "4510:2:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4498:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4498:15:38"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_array_bytes4_dyn",
																				"nodeType": "YulIdentifier",
																				"src": "4456:27:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4456:58:38"
																		},
																		"variableNames": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "4446:6:38"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4527:25:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4541:6:38"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4549:2:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4537:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4537:15:38"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4527:6:38"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4565:19:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4576:3:38"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4581:2:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4572:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4572:12:38"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4565:3:38"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4141:1:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4144:6:38"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4138:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4138:13:38"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4152:18:38",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4154:14:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4163:1:38"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4166:1:38",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4159:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4159:9:38"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4154:1:38"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4134:3:38",
																"statements": []
															},
															"src": "4130:464:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4603:14:38",
															"value": {
																"name": "tail_2",
																"nodeType": "YulIdentifier",
																"src": "4611:6:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4603:4:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Facet_$1672_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Facet_$1672_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3730:9:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3741:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3752:4:38",
														"type": ""
													}
												],
												"src": "3564:1059:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4698:116:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4744:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4753:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4756:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4746:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4746:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4746:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4719:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4728:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4715:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4740:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4711:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4711:32:38"
															},
															"nodeType": "YulIf",
															"src": "4708:52:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4769:39:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4798:9:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4779:18:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4779:29:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4769:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4664:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4675:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4687:6:38",
														"type": ""
													}
												],
												"src": "4628:186:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4968:508:38",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4978:12:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4988:2:38",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4982:2:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4999:32:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5017:9:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5028:2:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5013:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5013:18:38"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "5003:6:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5047:9:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5058:2:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5040:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5040:21:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5040:21:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5070:17:38",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "5081:6:38"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "5074:3:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5096:27:38",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5116:6:38"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5110:5:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5110:13:38"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5100:6:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "5139:6:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5147:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5132:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5132:22:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5132:22:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5163:25:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5174:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5185:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5170:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5170:18:38"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5163:3:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5197:29:38",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5215:6:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5223:2:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5211:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5211:15:38"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "5201:6:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5235:10:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5244:1:38",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5239:1:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5303:147:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5324:3:38"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "5339:6:38"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "5333:5:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5333:13:38"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5352:3:38",
																									"type": "",
																									"value": "224"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5357:10:38",
																									"type": "",
																									"value": "0xffffffff"
																								}
																							],
																							"functionName": {
																								"name": "shl",
																								"nodeType": "YulIdentifier",
																								"src": "5348:3:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5348:20:38"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "5329:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5329:40:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5317:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5317:53:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5317:53:38"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5383:19:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5394:3:38"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5399:2:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5390:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5390:12:38"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5383:3:38"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5415:25:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5429:6:38"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5437:2:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5425:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5425:15:38"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5415:6:38"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5265:1:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5268:6:38"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5262:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5262:13:38"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5276:18:38",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5278:14:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5287:1:38"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5290:1:38",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5283:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5283:9:38"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5278:1:38"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5258:3:38",
																"statements": []
															},
															"src": "5254:196:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5459:11:38",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5467:3:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5459:4:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_bytes4_$dyn_memory_ptr__to_t_array$_t_bytes4_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4937:9:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4948:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4959:4:38",
														"type": ""
													}
												],
												"src": "4819:657:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5513:95:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5530:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5537:3:38",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5542:10:38",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5533:20:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5523:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5523:31:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5523:31:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5570:1:38",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5573:4:38",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5563:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5563:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5563:15:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5594:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5597:4:38",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5587:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5587:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5587:15:38"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5481:127:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5659:207:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5669:19:38",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5685:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5679:5:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5679:9:38"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5669:6:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5697:35:38",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5719:6:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5727:4:38",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5715:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5715:17:38"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "5701:10:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5807:22:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5809:16:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5809:18:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5809:18:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5750:10:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5762:18:38",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5747:2:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5747:34:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5786:10:38"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5798:6:38"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5783:2:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5783:22:38"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5744:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5744:62:38"
															},
															"nodeType": "YulIf",
															"src": "5741:88:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5845:2:38",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "5849:10:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5838:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5838:22:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5838:22:38"
														}
													]
												},
												"name": "allocate_memory_2453",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5648:6:38",
														"type": ""
													}
												],
												"src": "5613:253:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5916:230:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5926:19:38",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5942:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5936:5:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5936:9:38"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5926:6:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5954:58:38",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5976:6:38"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "5992:4:38"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5998:2:38",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5988:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5988:13:38"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6007:2:38",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6003:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6003:7:38"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5984:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5984:27:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5972:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5972:40:38"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "5958:10:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6087:22:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6089:16:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6089:18:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6089:18:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6030:10:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6042:18:38",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6027:2:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6027:34:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6066:10:38"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6078:6:38"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6063:2:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6063:22:38"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6024:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "6024:62:38"
															},
															"nodeType": "YulIf",
															"src": "6021:88:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6125:2:38",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "6129:10:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6118:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "6118:22:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6118:22:38"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5896:4:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5905:6:38",
														"type": ""
													}
												],
												"src": "5871:275:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6228:114:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6272:22:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6274:16:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6274:18:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6274:18:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6244:6:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6252:18:38",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6241:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "6241:30:38"
															},
															"nodeType": "YulIf",
															"src": "6238:56:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6303:33:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6319:1:38",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6322:6:38"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6315:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6315:14:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6331:4:38",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6311:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "6311:25:38"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6303:4:38"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_struct_FacetCut_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6208:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6219:4:38",
														"type": ""
													}
												],
												"src": "6151:191:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6531:2326:38",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6541:83:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6616:6:38"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_struct_FacetCut_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "6568:47:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6568:55:38"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6552:15:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "6552:72:38"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6545:3:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6633:16:38",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "6646:3:38"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "6637:5:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "6665:3:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6670:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6658:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "6658:19:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6658:19:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6686:14:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6696:4:38",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6690:2:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6709:19:38",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "6720:3:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6725:2:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6716:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "6716:12:38"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "6709:3:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6737:11:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6747:1:38",
																"type": "",
																"value": "5"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "6741:2:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6757:41:38",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6775:5:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "6786:2:38"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6790:6:38"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6782:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6782:15:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6771:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "6771:27:38"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "6761:6:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6837:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6846:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6849:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6839:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6839:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6839:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6813:6:38"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "6821:12:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6821:14:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6810:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "6810:26:38"
															},
															"nodeType": "YulIf",
															"src": "6807:46:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6862:16:38",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6873:5:38"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "6866:3:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6943:1881:38",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6957:36:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6989:3:38"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "6976:12:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6976:17:38"
																		},
																		"variables": [
																			{
																				"name": "innerOffset",
																				"nodeType": "YulTypedName",
																				"src": "6961:11:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7006:28:38",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7016:18:38",
																			"type": "",
																			"value": "0xffffffffffffffff"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "7010:2:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7082:74:38",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7100:11:38",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7110:1:38",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_4",
																							"nodeType": "YulTypedName",
																							"src": "7104:2:38",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "7135:2:38"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "7139:2:38"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7128:6:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7128:14:38"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7128:14:38"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "innerOffset",
																					"nodeType": "YulIdentifier",
																					"src": "7053:11:38"
																				},
																				{
																					"name": "_3",
																					"nodeType": "YulIdentifier",
																					"src": "7066:2:38"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "7050:2:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7050:19:38"
																		},
																		"nodeType": "YulIf",
																		"src": "7047:109:38"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7169:33:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "7183:5:38"
																				},
																				{
																					"name": "innerOffset",
																					"nodeType": "YulIdentifier",
																					"src": "7190:11:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7179:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7179:23:38"
																		},
																		"variables": [
																			{
																				"name": "_5",
																				"nodeType": "YulTypedName",
																				"src": "7173:2:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7265:74:38",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7283:11:38",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7293:1:38",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_6",
																							"nodeType": "YulTypedName",
																							"src": "7287:2:38",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_6",
																								"nodeType": "YulIdentifier",
																								"src": "7318:2:38"
																							},
																							{
																								"name": "_6",
																								"nodeType": "YulIdentifier",
																								"src": "7322:2:38"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7311:6:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7311:14:38"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7311:14:38"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "calldatasize",
																								"nodeType": "YulIdentifier",
																								"src": "7226:12:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7226:14:38"
																						},
																						{
																							"name": "_5",
																							"nodeType": "YulIdentifier",
																							"src": "7242:2:38"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "7222:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7222:23:38"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7247:4:38",
																					"type": "",
																					"value": "0x60"
																				}
																			],
																			"functionName": {
																				"name": "slt",
																				"nodeType": "YulIdentifier",
																				"src": "7218:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7218:34:38"
																		},
																		"nodeType": "YulIf",
																		"src": "7215:124:38"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7352:37:38",
																		"value": {
																			"arguments": [],
																			"functionName": {
																				"name": "allocate_memory_2453",
																				"nodeType": "YulIdentifier",
																				"src": "7367:20:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7367:22:38"
																		},
																		"variables": [
																			{
																				"name": "value_1",
																				"nodeType": "YulTypedName",
																				"src": "7356:7:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value_1",
																					"nodeType": "YulIdentifier",
																					"src": "7409:7:38"
																				},
																				{
																					"arguments": [
																						{
																							"name": "_5",
																							"nodeType": "YulIdentifier",
																							"src": "7437:2:38"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "7418:18:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7418:22:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7402:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7402:39:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7402:39:38"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7454:40:38",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_5",
																							"nodeType": "YulIdentifier",
																							"src": "7486:2:38"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "7490:2:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7482:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7482:11:38"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "7469:12:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7469:25:38"
																		},
																		"variables": [
																			{
																				"name": "value_2",
																				"nodeType": "YulTypedName",
																				"src": "7458:7:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7545:74:38",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7563:11:38",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7573:1:38",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_7",
																							"nodeType": "YulTypedName",
																							"src": "7567:2:38",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_7",
																								"nodeType": "YulIdentifier",
																								"src": "7598:2:38"
																							},
																							{
																								"name": "_7",
																								"nodeType": "YulIdentifier",
																								"src": "7602:2:38"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7591:6:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7591:14:38"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7591:14:38"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value_2",
																							"nodeType": "YulIdentifier",
																							"src": "7520:7:38"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7529:1:38",
																							"type": "",
																							"value": "3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7517:2:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7517:14:38"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "7510:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7510:22:38"
																		},
																		"nodeType": "YulIf",
																		"src": "7507:112:38"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value_1",
																							"nodeType": "YulIdentifier",
																							"src": "7643:7:38"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "7652:2:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7639:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7639:16:38"
																				},
																				{
																					"name": "value_2",
																					"nodeType": "YulIdentifier",
																					"src": "7657:7:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7632:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7632:33:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7632:33:38"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7678:12:38",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7688:2:38",
																			"type": "",
																			"value": "64"
																		},
																		"variables": [
																			{
																				"name": "_8",
																				"nodeType": "YulTypedName",
																				"src": "7682:2:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7703:39:38",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_5",
																							"nodeType": "YulIdentifier",
																							"src": "7734:2:38"
																						},
																						{
																							"name": "_8",
																							"nodeType": "YulIdentifier",
																							"src": "7738:2:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7730:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7730:11:38"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "7717:12:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7717:25:38"
																		},
																		"variables": [
																			{
																				"name": "offset",
																				"nodeType": "YulTypedName",
																				"src": "7707:6:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7785:74:38",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7803:11:38",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7813:1:38",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_9",
																							"nodeType": "YulTypedName",
																							"src": "7807:2:38",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_9",
																								"nodeType": "YulIdentifier",
																								"src": "7838:2:38"
																							},
																							{
																								"name": "_9",
																								"nodeType": "YulIdentifier",
																								"src": "7842:2:38"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7831:6:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7831:14:38"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7831:14:38"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "offset",
																					"nodeType": "YulIdentifier",
																					"src": "7761:6:38"
																				},
																				{
																					"name": "_3",
																					"nodeType": "YulIdentifier",
																					"src": "7769:2:38"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "7758:2:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7758:14:38"
																		},
																		"nodeType": "YulIf",
																		"src": "7755:104:38"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7872:26:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "_5",
																					"nodeType": "YulIdentifier",
																					"src": "7887:2:38"
																				},
																				{
																					"name": "offset",
																					"nodeType": "YulIdentifier",
																					"src": "7891:6:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7883:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7883:15:38"
																		},
																		"variables": [
																			{
																				"name": "_10",
																				"nodeType": "YulTypedName",
																				"src": "7876:3:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7970:77:38",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7988:12:38",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7999:1:38",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_11",
																							"nodeType": "YulTypedName",
																							"src": "7992:3:38",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_11",
																								"nodeType": "YulIdentifier",
																								"src": "8024:3:38"
																							},
																							{
																								"name": "_11",
																								"nodeType": "YulIdentifier",
																								"src": "8029:3:38"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8017:6:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8017:16:38"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8017:16:38"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_10",
																									"nodeType": "YulIdentifier",
																									"src": "7929:3:38"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7934:4:38",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7925:3:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7925:14:38"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "calldatasize",
																								"nodeType": "YulIdentifier",
																								"src": "7941:12:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7941:14:38"
																						}
																					],
																					"functionName": {
																						"name": "slt",
																						"nodeType": "YulIdentifier",
																						"src": "7921:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7921:35:38"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "7914:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7914:43:38"
																		},
																		"nodeType": "YulIf",
																		"src": "7911:136:38"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8060:28:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "_10",
																					"nodeType": "YulIdentifier",
																					"src": "8084:3:38"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "8071:12:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8071:17:38"
																		},
																		"variables": [
																			{
																				"name": "_12",
																				"nodeType": "YulTypedName",
																				"src": "8064:3:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8101:82:38",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_12",
																							"nodeType": "YulIdentifier",
																							"src": "8178:3:38"
																						}
																					],
																					"functionName": {
																						"name": "array_allocation_size_array_struct_FacetCut_dyn",
																						"nodeType": "YulIdentifier",
																						"src": "8130:47:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8130:52:38"
																				}
																			],
																			"functionName": {
																				"name": "allocate_memory",
																				"nodeType": "YulIdentifier",
																				"src": "8114:15:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8114:69:38"
																		},
																		"variables": [
																			{
																				"name": "dst_2",
																				"nodeType": "YulTypedName",
																				"src": "8105:5:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8196:18:38",
																		"value": {
																			"name": "dst_2",
																			"nodeType": "YulIdentifier",
																			"src": "8209:5:38"
																		},
																		"variables": [
																			{
																				"name": "dst_3",
																				"nodeType": "YulTypedName",
																				"src": "8200:5:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst_2",
																					"nodeType": "YulIdentifier",
																					"src": "8234:5:38"
																				},
																				{
																					"name": "_12",
																					"nodeType": "YulIdentifier",
																					"src": "8241:3:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8227:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8227:18:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8227:18:38"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8258:23:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst_2",
																					"nodeType": "YulIdentifier",
																					"src": "8271:5:38"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8278:2:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8267:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8267:14:38"
																		},
																		"variableNames": [
																			{
																				"name": "dst_2",
																				"nodeType": "YulIdentifier",
																				"src": "8258:5:38"
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8294:47:38",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_10",
																							"nodeType": "YulIdentifier",
																							"src": "8318:3:38"
																						},
																						{
																							"arguments": [
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "8327:2:38"
																								},
																								{
																									"name": "_12",
																									"nodeType": "YulIdentifier",
																									"src": "8331:3:38"
																								}
																							],
																							"functionName": {
																								"name": "shl",
																								"nodeType": "YulIdentifier",
																								"src": "8323:3:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8323:12:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8314:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8314:22:38"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8338:2:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8310:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8310:31:38"
																		},
																		"variables": [
																			{
																				"name": "srcEnd_1",
																				"nodeType": "YulTypedName",
																				"src": "8298:8:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "8398:77:38",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8416:12:38",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8427:1:38",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_13",
																							"nodeType": "YulTypedName",
																							"src": "8420:3:38",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_13",
																								"nodeType": "YulIdentifier",
																								"src": "8452:3:38"
																							},
																							{
																								"name": "_13",
																								"nodeType": "YulIdentifier",
																								"src": "8457:3:38"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8445:6:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8445:16:38"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8445:16:38"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "srcEnd_1",
																					"nodeType": "YulIdentifier",
																					"src": "8360:8:38"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "calldatasize",
																						"nodeType": "YulIdentifier",
																						"src": "8370:12:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8370:14:38"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "8357:2:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8357:28:38"
																		},
																		"nodeType": "YulIf",
																		"src": "8354:121:38"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8488:25:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "_10",
																					"nodeType": "YulIdentifier",
																					"src": "8505:3:38"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8510:2:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8501:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8501:12:38"
																		},
																		"variables": [
																			{
																				"name": "src_1",
																				"nodeType": "YulTypedName",
																				"src": "8492:5:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "8594:111:38",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "dst_2",
																								"nodeType": "YulIdentifier",
																								"src": "8619:5:38"
																							},
																							{
																								"arguments": [
																									{
																										"name": "src_1",
																										"nodeType": "YulIdentifier",
																										"src": "8644:5:38"
																									}
																								],
																								"functionName": {
																									"name": "abi_decode_bytes4",
																									"nodeType": "YulIdentifier",
																									"src": "8626:17:38"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8626:24:38"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "8612:6:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8612:39:38"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8612:39:38"
																				},
																				{
																					"nodeType": "YulAssignment",
																					"src": "8668:23:38",
																					"value": {
																						"arguments": [
																							{
																								"name": "dst_2",
																								"nodeType": "YulIdentifier",
																								"src": "8681:5:38"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "8688:2:38"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "8677:3:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8677:14:38"
																					},
																					"variableNames": [
																						{
																							"name": "dst_2",
																							"nodeType": "YulIdentifier",
																							"src": "8668:5:38"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "src_1",
																					"nodeType": "YulIdentifier",
																					"src": "8537:5:38"
																				},
																				{
																					"name": "srcEnd_1",
																					"nodeType": "YulIdentifier",
																					"src": "8544:8:38"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "8534:2:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8534:19:38"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "8554:27:38",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "8556:23:38",
																					"value": {
																						"arguments": [
																							{
																								"name": "src_1",
																								"nodeType": "YulIdentifier",
																								"src": "8569:5:38"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "8576:2:38"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "8565:3:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8565:14:38"
																					},
																					"variableNames": [
																						{
																							"name": "src_1",
																							"nodeType": "YulIdentifier",
																							"src": "8556:5:38"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "8530:3:38",
																			"statements": []
																		},
																		"src": "8526:179:38"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value_1",
																							"nodeType": "YulIdentifier",
																							"src": "8729:7:38"
																						},
																						{
																							"name": "_8",
																							"nodeType": "YulIdentifier",
																							"src": "8738:2:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8725:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8725:16:38"
																				},
																				{
																					"name": "dst_3",
																					"nodeType": "YulIdentifier",
																					"src": "8743:5:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8718:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8718:31:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8718:31:38"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "8769:3:38"
																				},
																				{
																					"name": "value_1",
																					"nodeType": "YulIdentifier",
																					"src": "8774:7:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8762:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8762:20:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8762:20:38"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8795:19:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "8806:3:38"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8811:2:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8802:12:38"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8795:3:38"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6898:3:38"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6903:6:38"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6895:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "6895:15:38"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6911:23:38",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6913:19:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6924:3:38"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6929:2:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6920:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6920:12:38"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6913:3:38"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6891:3:38",
																"statements": []
															},
															"src": "6887:1937:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8833:18:38",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "8846:5:38"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "8833:9:38"
																}
															]
														}
													]
												},
												"name": "convert_array_t_array$_t_struct$_FacetCut_$2610_calldata_ptr_$dyn_calldata_ptr_to_t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6499:5:38",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6506:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6517:9:38",
														"type": ""
													}
												],
												"src": "6347:2510:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8894:95:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8911:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8918:3:38",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8923:10:38",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8914:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8914:20:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8904:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "8904:31:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8904:31:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8951:1:38",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8954:4:38",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8944:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "8944:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8944:15:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8975:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8978:4:38",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8968:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "8968:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8968:15:38"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8862:127:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9041:88:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9072:22:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9074:16:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9074:18:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9074:18:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9057:5:38"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9068:1:38",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9064:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9064:6:38"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9054:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "9054:17:38"
															},
															"nodeType": "YulIf",
															"src": "9051:43:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9103:20:38",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9114:5:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9121:1:38",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9110:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "9110:13:38"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "9103:3:38"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9023:5:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9033:3:38",
														"type": ""
													}
												],
												"src": "8994:135:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9166:95:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9183:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9190:3:38",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9195:10:38",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9186:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9186:20:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9176:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "9176:31:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9176:31:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9223:1:38",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9226:4:38",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9216:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "9216:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9216:15:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9247:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9250:4:38",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9240:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "9240:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9240:15:38"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "9134:127:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9311:130:38",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9321:31:38",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9340:5:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9347:4:38",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9336:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "9336:16:38"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "9325:7:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9382:22:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9384:16:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9384:18:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9384:18:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "9367:7:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9376:4:38",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9364:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "9364:17:38"
															},
															"nodeType": "YulIf",
															"src": "9361:43:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9413:22:38",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "9424:7:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9433:1:38",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9420:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "9420:15:38"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "9413:3:38"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9293:5:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9303:3:38",
														"type": ""
													}
												],
												"src": "9266:175:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9478:95:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9495:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9502:3:38",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9507:10:38",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9498:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9498:20:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9488:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "9488:31:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9488:31:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9535:1:38",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9538:4:38",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9528:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "9528:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9528:15:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9559:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9562:4:38",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9552:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "9552:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9552:15:38"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "9446:127:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9644:184:38",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9654:10:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9663:1:38",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "9658:1:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9723:63:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "9748:3:38"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "9753:1:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9744:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9744:11:38"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "9767:3:38"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "9772:1:38"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9763:3:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9763:11:38"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "9757:5:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9757:18:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9737:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9737:39:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9737:39:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9684:1:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9687:6:38"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9681:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "9681:13:38"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9695:19:38",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9697:15:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "9706:1:38"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9709:2:38",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9702:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9702:10:38"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "9697:1:38"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9677:3:38",
																"statements": []
															},
															"src": "9673:113:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "9806:3:38"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9811:6:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9802:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9802:16:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9820:1:38",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9795:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "9795:27:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9795:27:38"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "9622:3:38",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "9627:3:38",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9632:6:38",
														"type": ""
													}
												],
												"src": "9578:250:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9882:221:38",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9892:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9912:5:38"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9906:5:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "9906:12:38"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9896:6:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9934:3:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9939:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9927:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "9927:19:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9927:19:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9994:5:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10001:4:38",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9990:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9990:16:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10012:3:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10017:4:38",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10008:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10008:14:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10024:6:38"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "9955:34:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "9955:76:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9955:76:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10040:57:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10055:3:38"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "10068:6:38"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10076:2:38",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "10064:3:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10064:15:38"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10085:2:38",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "10081:3:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10081:7:38"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "10060:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10060:29:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10051:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10051:39:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10092:4:38",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10047:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "10047:50:38"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10040:3:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9859:5:38",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9866:3:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9874:3:38",
														"type": ""
													}
												],
												"src": "9833:270:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10385:1351:38",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10395:12:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10405:2:38",
																"type": "",
																"value": "96"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10399:2:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10416:32:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10434:9:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "10445:2:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10430:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "10430:18:38"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "10420:6:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10464:9:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "10475:2:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10457:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "10457:21:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10457:21:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10487:17:38",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "10498:6:38"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "10491:3:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10513:27:38",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10533:6:38"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10527:5:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "10527:13:38"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10517:6:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "10556:6:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10564:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10549:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "10549:22:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10549:22:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10580:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10591:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10602:3:38",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10587:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "10587:19:38"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10580:3:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10615:54:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10637:9:38"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10652:1:38",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "10655:6:38"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "10648:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10648:14:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10633:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10633:30:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10665:3:38",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10629:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "10629:40:38"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "10619:6:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10678:14:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10688:4:38",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "10682:2:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10701:29:38",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10719:6:38"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "10727:2:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10715:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "10715:15:38"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "10705:6:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10739:10:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10748:1:38",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10743:1:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10758:12:38",
															"value": {
																"name": "i",
																"nodeType": "YulIdentifier",
																"src": "10769:1:38"
															},
															"variables": [
																{
																	"name": "i_1",
																	"nodeType": "YulTypedName",
																	"src": "10762:3:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10834:731:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "10855:3:38"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tail_2",
																									"nodeType": "YulIdentifier",
																									"src": "10868:6:38"
																								},
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "10876:9:38"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "10864:3:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10864:22:38"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "10892:3:38",
																									"type": "",
																									"value": "127"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "10888:3:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10888:8:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10860:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10860:37:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10848:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10848:50:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10848:50:38"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10911:23:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "10927:6:38"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "10921:5:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10921:13:38"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "10915:2:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "tail_2",
																					"nodeType": "YulIdentifier",
																					"src": "10954:6:38"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "10972:2:38"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "10966:5:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10966:9:38"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "10985:3:38",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "10990:1:38",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "10981:3:38"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "10981:11:38"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "10994:1:38",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "10977:3:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10977:19:38"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "10962:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10962:35:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10947:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10947:51:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10947:51:38"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11011:38:38",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "11041:2:38"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "11045:2:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11037:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11037:11:38"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "11031:5:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11031:18:38"
																		},
																		"variables": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulTypedName",
																				"src": "11015:12:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "11105:127:38",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "i",
																								"nodeType": "YulIdentifier",
																								"src": "11130:1:38"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "11137:3:38",
																										"type": "",
																										"value": "224"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "11142:10:38",
																										"type": "",
																										"value": "0x4e487b71"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "11133:3:38"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11133:20:38"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "11123:6:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11123:31:38"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "11123:31:38"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11178:1:38",
																								"type": "",
																								"value": "4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11181:4:38",
																								"type": "",
																								"value": "0x21"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "11171:6:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11171:15:38"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "11171:15:38"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "i",
																								"nodeType": "YulIdentifier",
																								"src": "11210:1:38"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11213:4:38",
																								"type": "",
																								"value": "0x24"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "11203:6:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11203:15:38"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "11203:15:38"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "memberValue0",
																							"nodeType": "YulIdentifier",
																							"src": "11075:12:38"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11089:1:38",
																							"type": "",
																							"value": "3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "11072:2:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11072:19:38"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "11065:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11065:27:38"
																		},
																		"nodeType": "YulIf",
																		"src": "11062:170:38"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nodeType": "YulIdentifier",
																							"src": "11256:6:38"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "11264:2:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11252:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11252:15:38"
																				},
																				{
																					"name": "memberValue0",
																					"nodeType": "YulIdentifier",
																					"src": "11269:12:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11245:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11245:37:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11245:37:38"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11295:14:38",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "11305:4:38",
																			"type": "",
																			"value": "0x40"
																		},
																		"variables": [
																			{
																				"name": "_4",
																				"nodeType": "YulTypedName",
																				"src": "11299:2:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11322:40:38",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "11354:2:38"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "11358:2:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11350:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11350:11:38"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "11344:5:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11344:18:38"
																		},
																		"variables": [
																			{
																				"name": "memberValue0_1",
																				"nodeType": "YulTypedName",
																				"src": "11326:14:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nodeType": "YulIdentifier",
																							"src": "11386:6:38"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "11394:2:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11382:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11382:15:38"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "11399:2:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11375:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11375:27:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11375:27:38"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11415:70:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "memberValue0_1",
																					"nodeType": "YulIdentifier",
																					"src": "11453:14:38"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail_2",
																							"nodeType": "YulIdentifier",
																							"src": "11473:6:38"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "11481:2:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11469:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11469:15:38"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_array_bytes4_dyn",
																				"nodeType": "YulIdentifier",
																				"src": "11425:27:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11425:60:38"
																		},
																		"variableNames": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "11415:6:38"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11498:25:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "11512:6:38"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "11520:2:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11508:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11508:15:38"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11498:6:38"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11536:19:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "11547:3:38"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "11552:2:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11543:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11543:12:38"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "11536:3:38"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i_1",
																		"nodeType": "YulIdentifier",
																		"src": "10790:3:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10795:6:38"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10787:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "10787:15:38"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10803:22:38",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10805:18:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "i_1",
																					"nodeType": "YulIdentifier",
																					"src": "10816:3:38"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10821:1:38",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10812:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10812:11:38"
																		},
																		"variableNames": [
																			{
																				"name": "i_1",
																				"nodeType": "YulIdentifier",
																				"src": "10805:3:38"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10783:3:38",
																"statements": []
															},
															"src": "10779:786:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11593:6:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11605:9:38"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "11616:2:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11601:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11601:18:38"
																	}
																],
																"functionName": {
																	"name": "abi_encode_address",
																	"nodeType": "YulIdentifier",
																	"src": "11574:18:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "11574:46:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11574:46:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11640:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11651:4:38",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11636:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11636:20:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "11662:6:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11670:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11658:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11658:22:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11629:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "11629:52:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11629:52:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11690:40:38",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11715:6:38"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "11723:6:38"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "11698:16:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "11698:32:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11690:4:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__to_t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10338:9:38",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10349:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10357:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10365:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10376:4:38",
														"type": ""
													}
												],
												"src": "10108:1628:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11878:150:38",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11888:27:38",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11908:6:38"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11902:5:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "11902:13:38"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11892:6:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11963:6:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11971:4:38",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11959:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11959:17:38"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11978:3:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11983:6:38"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "11924:34:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "11924:66:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11924:66:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11999:23:38",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12010:3:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12015:6:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12006:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "12006:16:38"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11999:3:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11854:3:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11859:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11870:3:38",
														"type": ""
													}
												],
												"src": "11741:287:38"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_bytes4(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bytes4(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_struct$_FacetCut_$2610_calldata_ptr_$dyn_calldata_ptrt_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 0x20), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 0x20)\n        value1 := length\n        value2 := abi_decode_address(add(headStart, 0x20))\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_array_bytes4_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), shl(224, 0xffffffff)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Facet_$1672_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Facet_$1672_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let tail_2 := add(add(headStart, shl(5, length)), _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            let _3 := mload(srcPtr)\n            mstore(tail_2, and(mload(_3), sub(shl(160, 1), 1)))\n            let memberValue0 := mload(add(_3, _1))\n            mstore(add(tail_2, _1), _2)\n            tail_2 := abi_encode_array_bytes4_dyn(memberValue0, add(tail_2, _2))\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_array$_t_bytes4_$dyn_memory_ptr__to_t_array$_t_bytes4_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), shl(224, 0xffffffff)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory_2453() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x60)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_struct_FacetCut_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function convert_array_t_array$_t_struct$_FacetCut_$2610_calldata_ptr_$dyn_calldata_ptr_to_t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr(value, length) -> converted\n    {\n        let dst := allocate_memory(array_allocation_size_array_struct_FacetCut_dyn(length))\n        let dst_1 := dst\n        mstore(dst, length)\n        let _1 := 0x20\n        dst := add(dst, _1)\n        let _2 := 5\n        let srcEnd := add(value, shl(_2, length))\n        if gt(srcEnd, calldatasize()) { revert(0, 0) }\n        let src := value\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            let innerOffset := calldataload(src)\n            let _3 := 0xffffffffffffffff\n            if gt(innerOffset, _3)\n            {\n                let _4 := 0\n                revert(_4, _4)\n            }\n            let _5 := add(value, innerOffset)\n            if slt(sub(calldatasize(), _5), 0x60)\n            {\n                let _6 := 0\n                revert(_6, _6)\n            }\n            let value_1 := allocate_memory_2453()\n            mstore(value_1, abi_decode_address(_5))\n            let value_2 := calldataload(add(_5, _1))\n            if iszero(lt(value_2, 3))\n            {\n                let _7 := 0\n                revert(_7, _7)\n            }\n            mstore(add(value_1, _1), value_2)\n            let _8 := 64\n            let offset := calldataload(add(_5, _8))\n            if gt(offset, _3)\n            {\n                let _9 := 0\n                revert(_9, _9)\n            }\n            let _10 := add(_5, offset)\n            if iszero(slt(add(_10, 0x1f), calldatasize()))\n            {\n                let _11 := 0\n                revert(_11, _11)\n            }\n            let _12 := calldataload(_10)\n            let dst_2 := allocate_memory(array_allocation_size_array_struct_FacetCut_dyn(_12))\n            let dst_3 := dst_2\n            mstore(dst_2, _12)\n            dst_2 := add(dst_2, _1)\n            let srcEnd_1 := add(add(_10, shl(_2, _12)), _1)\n            if gt(srcEnd_1, calldatasize())\n            {\n                let _13 := 0\n                revert(_13, _13)\n            }\n            let src_1 := add(_10, _1)\n            for { } lt(src_1, srcEnd_1) { src_1 := add(src_1, _1) }\n            {\n                mstore(dst_2, abi_decode_bytes4(src_1))\n                dst_2 := add(dst_2, _1)\n            }\n            mstore(add(value_1, _8), dst_3)\n            mstore(dst, value_1)\n            dst := add(dst, _1)\n        }\n        converted := dst_1\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__to_t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let _1 := 96\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 128)\n        let tail_2 := add(add(headStart, shl(5, length)), 128)\n        let _2 := 0x20\n        let srcPtr := add(value0, _2)\n        let i := 0\n        let i_1 := i\n        for { } lt(i_1, length) { i_1 := add(i_1, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(127)))\n            let _3 := mload(srcPtr)\n            mstore(tail_2, and(mload(_3), sub(shl(160, 1), 1)))\n            let memberValue0 := mload(add(_3, _2))\n            if iszero(lt(memberValue0, 3))\n            {\n                mstore(i, shl(224, 0x4e487b71))\n                mstore(4, 0x21)\n                revert(i, 0x24)\n            }\n            mstore(add(tail_2, _2), memberValue0)\n            let _4 := 0x40\n            let memberValue0_1 := mload(add(_3, _4))\n            mstore(add(tail_2, _4), _1)\n            tail_2 := abi_encode_array_bytes4_dyn(memberValue0_1, add(tail_2, _1))\n            srcPtr := add(srcPtr, _2)\n            pos := add(pos, _2)\n        }\n        abi_encode_address(value1, add(headStart, _2))\n        mstore(add(headStart, 0x40), sub(tail_2, headStart))\n        tail := abi_encode_bytes(value2, tail_2)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
									"id": 38,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100ab5760003560e01c80638ab5150a116100645780638ab5150a146102205780638da5cb5b14610235578063914237651461024a578063adfca15e1461026a578063cdffacc614610297578063f2fde38b146102de576100b2565b806301ffc9a71461010c5780631f931c1c1461017a5780632c4080591461019a57806352ef6b2c146101c757806379ba5097146101e95780637a0ed627146101fe576100b2565b366100b257005b60006100bc6102fe565b90506001600160a01b0381163b6100e6576040516321f27f0d60e21b815260040160405180910390fd5b3660008037600080366000845af43d6000803e808015610105573d6000f35b3d6000fd5b005b34801561011857600080fd5b5061016561012736600461153d565b6001600160e01b03191660009081527ffc606c433378e3a7e0a6a531deac289b66caa1b4aa8554fd4ab2c6f1570f92d8602052604090205460ff1690565b60405190151581526020015b60405180910390f35b34801561018657600080fd5b5061010a6101953660046115bf565b61030d565b3480156101a657600080fd5b506101af610397565b6040516001600160a01b039091168152602001610171565b3480156101d357600080fd5b506101dc6103ca565b6040516101719190611671565b3480156101f557600080fd5b5061010a61057c565b34801561020a57600080fd5b506102136105bf565b6040516101719190611703565b34801561022c57600080fd5b506101af6109f6565b34801561024157600080fd5b506101af610a00565b34801561025657600080fd5b5061010a610265366004611780565b610a0a565b34801561027657600080fd5b5061028a610285366004611780565b610a83565b604051610171919061179b565b3480156102a357600080fd5b506101af6102b236600461153d565b6001600160e01b0319166000908152600080516020611b75833981519152602052604090205460601c90565b3480156102ea57600080fd5b5061010a6102f9366004611780565b610bde565b6000610308610c20565b905090565b610315610c81565b6001600160a01b0316336001600160a01b03161461034657604051632f7a8ee160e01b815260040160405180910390fd5b6103906103538587611871565b8484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610cb492505050565b5050505050565b60006103087f177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc96546001600160a01b031690565b600080516020611b5583398151915254606090600080516020611b758339815191529061ffff1667ffffffffffffffff811115610409576104096117dd565b604051908082528060200260200182016040528015610432578160200160208202803683370190505b50915060008060005b600184015461ffff16821015610574576000818152600285016020526040812054905b600881101561055f5783610471816119bb565b600188015490955061ffff168511905061055f57600581901b82901b6001600160e01b0319811660009081526020889052604081205460601c90805b88811015610502578a81815181106104c7576104c76119d4565b60200260200101516001600160a01b0316836001600160a01b0316036104f05760019150610502565b806104fa816119bb565b9150506104ad565b5080156105115750505061054d565b818a8981518110610524576105246119d4565b6001600160a01b039092166020928302919091019091015287610546816119bb565b9850505050505b80610557816119bb565b91505061045e565b5050808061056c906119bb565b91505061043b565b505082525090565b610584610e70565b6001600160a01b0316336001600160a01b0316146105b55760405163efd1052d60e01b815260040160405180910390fd5b6105bd610e98565b565b600080516020611b5583398151915254606090600080516020611b758339815191529061ffff1667ffffffffffffffff8111156105fe576105fe6117dd565b60405190808252806020026020018201604052801561064457816020015b60408051808201909152600081526060602082015281526020019060019003908161061c5790505b50600182015490925060009061ffff1667ffffffffffffffff81111561066c5761066c6117dd565b604051908082528060200260200182016040528015610695578160200160208202803683370190505b50905060008060005b600185015461ffff16821015610984576000818152600286016020526040812054905b600881101561096f57836106d4816119bb565b600189015490955061ffff168511905061096f57600581901b82901b6001600160e01b0319811660009081526020899052604081205460601c90805b8881101561082d57826001600160a01b03168c8281518110610734576107346119d4565b6020026020010151600001516001600160a01b03160361081b57838c8281518110610761576107616119d4565b6020026020010151602001518b838151811061077f5761077f6119d4565b602002602001015160ff168151811061079a5761079a6119d4565b60200260200101906001600160e01b03191690816001600160e01b0319168152505060ff8a82815181106107d0576107d06119d4565b602002602001015160ff16106107e557600080fd5b8981815181106107f7576107f76119d4565b60200260200101805180919061080c906119ea565b60ff169052506001915061082d565b80610825816119bb565b915050610710565b50801561083c5750505061095d565b818b898151811061084f5761084f6119d4565b60209081029190910101516001600160a01b03909116905260018a015461ffff1667ffffffffffffffff811115610888576108886117dd565b6040519080825280602002602001820160405280156108b1578160200160208202803683370190505b508b89815181106108c4576108c46119d4565b602002602001015160200181905250828b89815181106108e6576108e66119d4565b602002602001015160200151600081518110610904576109046119d4565b60200260200101906001600160e01b03191690816001600160e01b03191681525050600189898151811061093a5761093a6119d4565b60ff9092166020928302919091019091015287610956816119bb565b9850505050505b80610967816119bb565b9150506106c1565b5050808061097c906119bb565b91505061069e565b5060005b828110156109eb5760008482815181106109a4576109a46119d4565b602002602001015160ff16905060008783815181106109c5576109c56119d4565b6020026020010151602001519050818152505080806109e3906119bb565b915050610988565b508185525050505090565b6000610308610e70565b6000610308610c81565b610a12610c81565b6001600160a01b0316336001600160a01b031614610a4357604051632f7a8ee160e01b815260040160405180910390fd5b7f177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc9680546001600160a01b0319166001600160a01b03831617905550565b50565b600080516020611b5583398151915254606090600080516020611b758339815191529061ffff1667ffffffffffffffff811115610ac257610ac26117dd565b604051908082528060200260200182016040528015610aeb578160200160208202803683370190505b50915060008060005b600184015461ffff16821015610bd4576000818152600285016020526040812054905b6008811015610bbf5783610b2a816119bb565b600188015490955061ffff1685119050610bbf57600581901b82901b6001600160e01b0319811660009081526020889052604090205460601c6001600160a01b038a1603610bac5780888781518110610b8557610b856119d4565b6001600160e01b03199092166020928302919091019091015285610ba8816119bb565b9650505b5080610bb7816119bb565b915050610b17565b50508080610bcc906119bb565b915050610af4565b5050825250919050565b610be6610c81565b6001600160a01b0316336001600160a01b031614610c1757604051632f7a8ee160e01b815260040160405180910390fd5b610a8081610ed2565b600080356001600160e01b0319168152600080516020611b75833981519152602052604090205460601c80610c7e57507f177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc96546001600160a01b031690565b90565b60007f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605b546001600160a01b0316919050565b600080516020611b5583398151915254600080516020611b758339815191529061ffff811690819060009060071615610cff5750600381901c60009081526002840160205260409020545b60005b8751811015610de4576000888281518110610d1f57610d1f6119d4565b60200260200101519050600081602001519050816040015151600003610d585760405163eb6c3aeb60e01b815260040160405180910390fd5b6000816002811115610d6c57610d6c611a09565b03610d8757610d7d87868685610f15565b9095509350610dda565b6001816002811115610d9b57610d9b611a09565b03610daf57610daa8783611054565b610dda565b6002816002811115610dc357610dc3611a09565b03610dda57610dd48786868561119f565b90955093505b5050600101610d02565b50828214610e005760018401805461ffff191661ffff84161790555b6007821615610e2257600382901c600090815260028501602052604090208190555b7f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673878787604051610e5593929190611a6f565b60405180910390a1610e6786866113c2565b50505050505050565b60007f24aa1f7b31fd188a8d3ecfb06bc55c806040e59b03bd4396283442fce6617890610ca5565b610ea1336114a6565b7f24aa1f7b31fd188a8d3ecfb06bc55c806040e59b03bd4396283442fce661789080546001600160a01b0319169055565b7f24aa1f7b31fd188a8d3ecfb06bc55c806040e59b03bd4396283442fce661789080546001600160a01b0319166001600160a01b038316179055610a8081818181565b805160009081906001600160a01b03163014801590610f3d575082516001600160a01b03163b155b15610f5b57604051633ddc5cab60e21b815260040160405180910390fd5b60005b83604001515181101561104757600084604001518281518110610f8357610f836119d4565b6020908102919091018101516001600160e01b031981166000908152918a9052604090912054909150606081901c15610fcf57604051634923a77160e11b815260040160405180910390fd5b85516001600160e01b0319838116600081815260208d90526040902060609390931b6001600160601b0319168b1790925560058a901b60e090811692831c91831c1999909916179781900361103857600389901c600090815260028b0160205260408120989098555b50505060019586019501610f5e565b5093959294509192505050565b80516001600160a01b03163b61107d57604051633ddc5cab60e21b815260040160405180910390fd5b60005b81604001515181101561119a576000826040015182815181106110a5576110a56119d4565b6020908102919091018101516001600160e01b03198116600090815291869052604090912054909150606081901c806110f1576040516337e25a9760e11b815260040160405180910390fd5b306001600160a01b0382160361111a5760405163e983573160e01b815260040160405180910390fd5b84600001516001600160a01b0316816001600160a01b031603611150576040516330baabf360e11b815260040160405180910390fd5b5083516001600160e01b031992909216600090815260208690526040902060609290921b6001600160601b0319166bffffffffffffffffffffffff91909116179055600101611080565b505050565b805160009081906001600160a01b0316156111cd57604051633ab3490960e21b815260040160405180910390fd5b600385901c6007861660005b8560400151518110156113ae576000866040015182815181106111fe576111fe6119d4565b6020908102919091018101516001600160e01b031981166000908152918c9052604090912054909150606081901c611249576040516337e25a9760e11b815260040160405180910390fd5b30606082901c0361126d5760405163e983573160e01b815260040160405180910390fd5b600089900361129957600019909401600081815260028c016020526040902054985093600793506112a1565b600019909301925b600584901b89901b6000806001600160e01b0319808416908616146112f8576001600160e01b03198316600090815260208f90526040902080546001600160601b0319166bffffffffffffffffffffffff86161790555b50506001600160e01b03198316600090815260208d90526040812055611fff600383901c1660e0600584901b1687821461135b57600082815260028f016020526040902080546001600160e01b031980841c19909116908516831c17905561137f565b80836001600160e01b031916901c816001600160e01b031960001b901c198d16179b505b8660000361139d57600088815260028f01602052604081208190559b505b5050600190930192506111d9915050565b5060039190911b1796939550929350505050565b8051156001600160a01b03831615146113ee576040516326df4ccd60e01b815260040160405180910390fd5b6001600160a01b038216156114a2576001600160a01b0382163014611435576001600160a01b0382163b61143557604051633ddc5cab60e21b815260040160405180910390fd5b6000826001600160a01b03168260405161144f9190611b38565b600060405180830381855af49150503d806000811461148a576040519150601f19603f3d011682016040523d82523d6000602084013e61148f565b606091505b505090508061119a573d6000803e3d6000fd5b5050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160e01b03198116811461153857600080fd5b919050565b60006020828403121561154f57600080fd5b61155882611520565b9392505050565b80356001600160a01b038116811461153857600080fd5b60008083601f84011261158857600080fd5b50813567ffffffffffffffff8111156115a057600080fd5b6020830191508360208285010111156115b857600080fd5b9250929050565b6000806000806000606086880312156115d757600080fd5b853567ffffffffffffffff808211156115ef57600080fd5b818801915088601f83011261160357600080fd5b81358181111561161257600080fd5b8960208260051b850101111561162757600080fd5b6020830197508096505061163d6020890161155f565b9450604088013591508082111561165357600080fd5b5061166088828901611576565b969995985093965092949392505050565b6020808252825182820181905260009190848201906040850190845b818110156116b25783516001600160a01b03168352928401929184019160010161168d565b50909695505050505050565b600081518084526020808501945080840160005b838110156116f85781516001600160e01b031916875295820195908201906001016116d2565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561177257888303603f19018552815180516001600160a01b0316845287015187840187905261175f878501826116be565b958801959350509086019060010161172a565b509098975050505050505050565b60006020828403121561179257600080fd5b6115588261155f565b6020808252825182820181905260009190848201906040850190845b818110156116b25783516001600160e01b031916835292840192918401916001016117b7565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611816576118166117dd565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611845576118456117dd565b604052919050565b600067ffffffffffffffff821115611867576118676117dd565b5060051b60200190565b600061188461187f8461184d565b61181c565b83815260208082019190600586811b8601368111156118a257600080fd5b865b8181101561199857803567ffffffffffffffff808211156118c55760008081fd5b818a019150606082360312156118db5760008081fd5b6118e36117f3565b6118ec8361155f565b815286830135600381106119005760008081fd5b81880152604083810135838111156119185760008081fd5b939093019236601f85011261192f57600092508283fd5b8335925061193f61187f8461184d565b83815292871b8401880192888101903685111561195c5760008081fd5b948901945b848610156119815761197286611520565b82529489019490890190611961565b9183019190915250885250509483019483016118a4565b5092979650505050505050565b634e487b7160e01b600052601160045260246000fd5b6000600182016119cd576119cd6119a5565b5060010190565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff8103611a0057611a006119a5565b60010192915050565b634e487b7160e01b600052602160045260246000fd5b60005b83811015611a3a578181015183820152602001611a22565b50506000910152565b60008151808452611a5b816020860160208601611a1f565b601f01601f19169290920160200192915050565b6000606080830181845280875180835260808601915060808160051b87010192506020808a016000805b84811015611b0857898703607f19018652825180516001600160a01b031688528481015160038110611ad957634e487b7160e01b84526021600452602484fd5b88860152604090810151908801899052611af5898901826116be565b9750509483019491830191600101611a99565b5050506001600160a01b0389169087015250508381036040850152611b2d8186611a43565b979650505050505050565b60008251611b4a818460208701611a1f565b919091019291505056fe177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc94177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc93a26469706673582212204fd3e61e32cabd24239218d2a5618d6811f3c53d9103eb5dd773aa327300861664736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AB5150A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8AB5150A EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x91423765 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xADFCA15E EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xCDFFACC6 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2DE JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x1F931C1C EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x2C408059 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x52EF6B2C EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x7A0ED627 EQ PUSH2 0x1FE JUMPI PUSH2 0xB2 JUMP JUMPDEST CALLDATASIZE PUSH2 0xB2 JUMPI STOP JUMPDEST PUSH1 0x0 PUSH2 0xBC PUSH2 0x2FE JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0xE6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x21F27F0D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x105 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH2 0x127 CALLDATASIZE PUSH1 0x4 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xFC606C433378E3A7E0A6A531DEAC289B66CAA1B4AA8554FD4AB2C6F1570F92D8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x15BF JUMP JUMPDEST PUSH2 0x30D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF PUSH2 0x397 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x1671 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x57C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x1703 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF PUSH2 0x9F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF PUSH2 0xA00 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0xA0A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x179B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1B75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SHR SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x2F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x308 PUSH2 0xC20 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x315 PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x346 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2F7A8EE1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x390 PUSH2 0x353 DUP6 DUP8 PUSH2 0x1871 JUMP JUMPDEST DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0xCB4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x308 PUSH32 0x177481AC65E4292921C69F62D1CC7F57541261E5D61C8175CF4E36A01C9BFC96 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1B55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1B75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x409 JUMPI PUSH2 0x409 PUSH2 0x17DD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x432 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP5 ADD SLOAD PUSH2 0xFFFF AND DUP3 LT ISZERO PUSH2 0x574 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x55F JUMPI DUP4 PUSH2 0x471 DUP2 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x1 DUP9 ADD SLOAD SWAP1 SWAP6 POP PUSH2 0xFFFF AND DUP6 GT SWAP1 POP PUSH2 0x55F JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP3 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP9 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 SHR SWAP1 DUP1 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0x502 JUMPI DUP11 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x4C7 JUMPI PUSH2 0x4C7 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x4F0 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x502 JUMP JUMPDEST DUP1 PUSH2 0x4FA DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4AD JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x511 JUMPI POP POP POP PUSH2 0x54D JUMP JUMPDEST DUP2 DUP11 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x524 JUMPI PUSH2 0x524 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP8 PUSH2 0x546 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP9 POP POP POP POP POP JUMPDEST DUP1 PUSH2 0x557 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x45E JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x56C SWAP1 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x43B JUMP JUMPDEST POP POP DUP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x584 PUSH2 0xE70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5B5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEFD1052D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5BD PUSH2 0xE98 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1B55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1B75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5FE JUMPI PUSH2 0x5FE PUSH2 0x17DD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x644 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x61C JUMPI SWAP1 POP JUMPDEST POP PUSH1 0x1 DUP3 ADD SLOAD SWAP1 SWAP3 POP PUSH1 0x0 SWAP1 PUSH2 0xFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x66C JUMPI PUSH2 0x66C PUSH2 0x17DD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x695 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP6 ADD SLOAD PUSH2 0xFFFF AND DUP3 LT ISZERO PUSH2 0x984 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0x96F JUMPI DUP4 PUSH2 0x6D4 DUP2 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x1 DUP10 ADD SLOAD SWAP1 SWAP6 POP PUSH2 0xFFFF AND DUP6 GT SWAP1 POP PUSH2 0x96F JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP3 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP10 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 SHR SWAP1 DUP1 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0x82D JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP13 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x734 JUMPI PUSH2 0x734 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x81B JUMPI DUP4 DUP13 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x761 JUMPI PUSH2 0x761 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP12 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x77F JUMPI PUSH2 0x77F PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x79A JUMPI PUSH2 0x79A PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE POP POP PUSH1 0xFF DUP11 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7D0 JUMPI PUSH2 0x7D0 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND LT PUSH2 0x7E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x7F7 JUMPI PUSH2 0x7F7 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP1 MLOAD DUP1 SWAP2 SWAP1 PUSH2 0x80C SWAP1 PUSH2 0x19EA JUMP JUMPDEST PUSH1 0xFF AND SWAP1 MSTORE POP PUSH1 0x1 SWAP2 POP PUSH2 0x82D JUMP JUMPDEST DUP1 PUSH2 0x825 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x710 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x83C JUMPI POP POP POP PUSH2 0x95D JUMP JUMPDEST DUP2 DUP12 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x84F JUMPI PUSH2 0x84F PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 MSTORE PUSH1 0x1 DUP11 ADD SLOAD PUSH2 0xFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x888 JUMPI PUSH2 0x888 PUSH2 0x17DD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8B1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP12 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x8C4 JUMPI PUSH2 0x8C4 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 SWAP1 MSTORE POP DUP3 DUP12 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x8E6 JUMPI PUSH2 0x8E6 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x904 JUMPI PUSH2 0x904 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE POP POP PUSH1 0x1 DUP10 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x93A JUMPI PUSH2 0x93A PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0xFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP8 PUSH2 0x956 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP9 POP POP POP POP POP JUMPDEST DUP1 PUSH2 0x967 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6C1 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x97C SWAP1 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x69E JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9EB JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9A4 JUMPI PUSH2 0x9A4 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x9C5 JUMPI PUSH2 0x9C5 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP1 POP DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x9E3 SWAP1 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x988 JUMP JUMPDEST POP DUP2 DUP6 MSTORE POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x308 PUSH2 0xE70 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x308 PUSH2 0xC81 JUMP JUMPDEST PUSH2 0xA12 PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA43 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2F7A8EE1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x177481AC65E4292921C69F62D1CC7F57541261E5D61C8175CF4E36A01C9BFC96 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1B55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1B75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAC2 JUMPI PUSH2 0xAC2 PUSH2 0x17DD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAEB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP5 ADD SLOAD PUSH2 0xFFFF AND DUP3 LT ISZERO PUSH2 0xBD4 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 JUMPDEST PUSH1 0x8 DUP2 LT ISZERO PUSH2 0xBBF JUMPI DUP4 PUSH2 0xB2A DUP2 PUSH2 0x19BB JUMP JUMPDEST PUSH1 0x1 DUP9 ADD SLOAD SWAP1 SWAP6 POP PUSH2 0xFFFF AND DUP6 GT SWAP1 POP PUSH2 0xBBF JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP3 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP9 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SUB PUSH2 0xBAC JUMPI DUP1 DUP9 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0xB85 JUMPI PUSH2 0xB85 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP6 PUSH2 0xBA8 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP7 POP POP JUMPDEST POP DUP1 PUSH2 0xBB7 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB17 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0xBCC SWAP1 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAF4 JUMP JUMPDEST POP POP DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBE6 PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC17 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2F7A8EE1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA80 DUP2 PUSH2 0xED2 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1B75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SHR DUP1 PUSH2 0xC7E JUMPI POP PUSH32 0x177481AC65E4292921C69F62D1CC7F57541261E5D61C8175CF4E36A01C9BFC96 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8A22373512790C48B83A1FE2EFDD2888D4A917BCDC24D0ADF63E60F671680460 JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1B55 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1B75 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xFFFF DUP2 AND SWAP1 DUP2 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x7 AND ISZERO PUSH2 0xCFF JUMPI POP PUSH1 0x3 DUP2 SWAP1 SHR PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST PUSH1 0x0 JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0xDE4 JUMPI PUSH1 0x0 DUP9 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD1F JUMPI PUSH2 0xD1F PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP2 PUSH1 0x40 ADD MLOAD MLOAD PUSH1 0x0 SUB PUSH2 0xD58 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEB6C3AEB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD6C JUMPI PUSH2 0xD6C PUSH2 0x1A09 JUMP JUMPDEST SUB PUSH2 0xD87 JUMPI PUSH2 0xD7D DUP8 DUP7 DUP7 DUP6 PUSH2 0xF15 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD9B JUMPI PUSH2 0xD9B PUSH2 0x1A09 JUMP JUMPDEST SUB PUSH2 0xDAF JUMPI PUSH2 0xDAA DUP8 DUP4 PUSH2 0x1054 JUMP JUMPDEST PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDC3 JUMPI PUSH2 0xDC3 PUSH2 0x1A09 JUMP JUMPDEST SUB PUSH2 0xDDA JUMPI PUSH2 0xDD4 DUP8 DUP7 DUP7 DUP6 PUSH2 0x119F JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0xD02 JUMP JUMPDEST POP DUP3 DUP3 EQ PUSH2 0xE00 JUMPI PUSH1 0x1 DUP5 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF DUP5 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x7 DUP3 AND ISZERO PUSH2 0xE22 JUMPI PUSH1 0x3 DUP3 SWAP1 SHR PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST PUSH32 0x8FAA70878671CCD212D20771B795C50AF8FD3FF6CF27F4BDE57E5D4DE0AEB673 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xE55 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xE67 DUP7 DUP7 PUSH2 0x13C2 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x24AA1F7B31FD188A8D3ECFB06BC55C806040E59B03BD4396283442FCE6617890 PUSH2 0xCA5 JUMP JUMPDEST PUSH2 0xEA1 CALLER PUSH2 0x14A6 JUMP JUMPDEST PUSH32 0x24AA1F7B31FD188A8D3ECFB06BC55C806040E59B03BD4396283442FCE6617890 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x24AA1F7B31FD188A8D3ECFB06BC55C806040E59B03BD4396283442FCE6617890 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH2 0xA80 DUP2 DUP2 DUP2 DUP2 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ DUP1 ISZERO SWAP1 PUSH2 0xF3D JUMPI POP DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xF5B JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DDC5CAB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x1047 JUMPI PUSH1 0x0 DUP5 PUSH1 0x40 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF83 JUMPI PUSH2 0xF83 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP11 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x60 DUP2 SWAP1 SHR ISZERO PUSH2 0xFCF JUMPI PUSH1 0x40 MLOAD PUSH4 0x4923A771 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP14 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND DUP12 OR SWAP1 SWAP3 SSTORE PUSH1 0x5 DUP11 SWAP1 SHL PUSH1 0xE0 SWAP1 DUP2 AND SWAP3 DUP4 SHR SWAP2 DUP4 SHR NOT SWAP10 SWAP1 SWAP10 AND OR SWAP8 DUP2 SWAP1 SUB PUSH2 0x1038 JUMPI PUSH1 0x3 DUP10 SWAP1 SHR PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP12 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP9 SWAP1 SWAP9 SSTORE JUMPDEST POP POP POP PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 ADD PUSH2 0xF5E JUMP JUMPDEST POP SWAP4 SWAP6 SWAP3 SWAP5 POP SWAP2 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH2 0x107D JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DDC5CAB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x119A JUMPI PUSH1 0x0 DUP3 PUSH1 0x40 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x10A5 JUMPI PUSH2 0x10A5 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x60 DUP2 SWAP1 SHR DUP1 PUSH2 0x10F1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x37E25A97 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x111A JUMPI PUSH1 0x40 MLOAD PUSH4 0xE9835731 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1150 JUMPI PUSH1 0x40 MLOAD PUSH4 0x30BAABF3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP3 SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x60 SWAP3 SWAP1 SWAP3 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x1080 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x11CD JUMPI PUSH1 0x40 MLOAD PUSH4 0x3AB34909 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP6 SWAP1 SHR PUSH1 0x7 DUP7 AND PUSH1 0x0 JUMPDEST DUP6 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x13AE JUMPI PUSH1 0x0 DUP7 PUSH1 0x40 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x11FE JUMPI PUSH2 0x11FE PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP13 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x60 DUP2 SWAP1 SHR PUSH2 0x1249 JUMPI PUSH1 0x40 MLOAD PUSH4 0x37E25A97 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH1 0x60 DUP3 SWAP1 SHR SUB PUSH2 0x126D JUMPI PUSH1 0x40 MLOAD PUSH4 0xE9835731 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP10 SWAP1 SUB PUSH2 0x1299 JUMPI PUSH1 0x0 NOT SWAP1 SWAP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP13 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP9 POP SWAP4 PUSH1 0x7 SWAP4 POP PUSH2 0x12A1 JUMP JUMPDEST PUSH1 0x0 NOT SWAP1 SWAP4 ADD SWAP3 JUMPDEST PUSH1 0x5 DUP5 SWAP1 SHL DUP10 SWAP1 SHL PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP1 DUP5 AND SWAP1 DUP7 AND EQ PUSH2 0x12F8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP16 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND OR SWAP1 SSTORE JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP14 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x1FFF PUSH1 0x3 DUP4 SWAP1 SHR AND PUSH1 0xE0 PUSH1 0x5 DUP5 SWAP1 SHL AND DUP8 DUP3 EQ PUSH2 0x135B JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP16 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP1 DUP5 SHR NOT SWAP1 SWAP2 AND SWAP1 DUP6 AND DUP4 SHR OR SWAP1 SSTORE PUSH2 0x137F JUMP JUMPDEST DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 SHR DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0x0 SHL SWAP1 SHR NOT DUP14 AND OR SWAP12 POP JUMPDEST DUP7 PUSH1 0x0 SUB PUSH2 0x139D JUMPI PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x2 DUP16 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE SWAP12 POP JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 POP PUSH2 0x11D9 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL OR SWAP7 SWAP4 SWAP6 POP SWAP3 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO EQ PUSH2 0x13EE JUMPI PUSH1 0x40 MLOAD PUSH4 0x26DF4CCD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x14A2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ PUSH2 0x1435 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EXTCODESIZE PUSH2 0x1435 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DDC5CAB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x144F SWAP2 SWAP1 PUSH2 0x1B38 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x148A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x148F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x119A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x8A22373512790C48B83A1FE2EFDD2888D4A917BCDC24D0ADF63E60F671680460 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x154F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1558 DUP3 PUSH2 0x1520 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1588 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x15B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x15D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x15EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1603 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1612 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP8 POP DUP1 SWAP7 POP POP PUSH2 0x163D PUSH1 0x20 DUP10 ADD PUSH2 0x155F JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1653 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1660 DUP9 DUP3 DUP10 ADD PUSH2 0x1576 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16B2 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x168D JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16F8 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x16D2 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1772 JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP8 ADD MLOAD DUP8 DUP5 ADD DUP8 SWAP1 MSTORE PUSH2 0x175F DUP8 DUP6 ADD DUP3 PUSH2 0x16BE JUMP JUMPDEST SWAP6 DUP9 ADD SWAP6 SWAP4 POP POP SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x172A JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1558 DUP3 PUSH2 0x155F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16B2 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x17B7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1816 JUMPI PUSH2 0x1816 PUSH2 0x17DD JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1845 JUMPI PUSH2 0x1845 PUSH2 0x17DD JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1867 JUMPI PUSH2 0x1867 PUSH2 0x17DD JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1884 PUSH2 0x187F DUP5 PUSH2 0x184D JUMP JUMPDEST PUSH2 0x181C JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP2 SWAP1 PUSH1 0x5 DUP7 DUP2 SHL DUP7 ADD CALLDATASIZE DUP2 GT ISZERO PUSH2 0x18A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1998 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x18C5 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP2 DUP11 ADD SWAP2 POP PUSH1 0x60 DUP3 CALLDATASIZE SUB SLT ISZERO PUSH2 0x18DB JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x18E3 PUSH2 0x17F3 JUMP JUMPDEST PUSH2 0x18EC DUP4 PUSH2 0x155F JUMP JUMPDEST DUP2 MSTORE DUP7 DUP4 ADD CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x1900 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP2 DUP9 ADD MSTORE PUSH1 0x40 DUP4 DUP2 ADD CALLDATALOAD DUP4 DUP2 GT ISZERO PUSH2 0x1918 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST SWAP4 SWAP1 SWAP4 ADD SWAP3 CALLDATASIZE PUSH1 0x1F DUP6 ADD SLT PUSH2 0x192F JUMPI PUSH1 0x0 SWAP3 POP DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x193F PUSH2 0x187F DUP5 PUSH2 0x184D JUMP JUMPDEST DUP4 DUP2 MSTORE SWAP3 DUP8 SHL DUP5 ADD DUP9 ADD SWAP3 DUP9 DUP2 ADD SWAP1 CALLDATASIZE DUP6 GT ISZERO PUSH2 0x195C JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST SWAP5 DUP10 ADD SWAP5 JUMPDEST DUP5 DUP7 LT ISZERO PUSH2 0x1981 JUMPI PUSH2 0x1972 DUP7 PUSH2 0x1520 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP10 ADD SWAP5 SWAP1 DUP10 ADD SWAP1 PUSH2 0x1961 JUMP JUMPDEST SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP9 MSTORE POP POP SWAP5 DUP4 ADD SWAP5 DUP4 ADD PUSH2 0x18A4 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x19CD JUMPI PUSH2 0x19CD PUSH2 0x19A5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0x1A00 JUMPI PUSH2 0x1A00 PUSH2 0x19A5 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A3A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A22 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1A5B DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1A1F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP8 MLOAD DUP1 DUP4 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 POP PUSH1 0x80 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP PUSH1 0x20 DUP1 DUP11 ADD PUSH1 0x0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1B08 JUMPI DUP10 DUP8 SUB PUSH1 0x7F NOT ADD DUP7 MSTORE DUP3 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 MSTORE DUP5 DUP2 ADD MLOAD PUSH1 0x3 DUP2 LT PUSH2 0x1AD9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST DUP9 DUP7 ADD MSTORE PUSH1 0x40 SWAP1 DUP2 ADD MLOAD SWAP1 DUP9 ADD DUP10 SWAP1 MSTORE PUSH2 0x1AF5 DUP10 DUP10 ADD DUP3 PUSH2 0x16BE JUMP JUMPDEST SWAP8 POP POP SWAP5 DUP4 ADD SWAP5 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1A99 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 DUP8 ADD MSTORE POP POP DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x1B2D DUP2 DUP7 PUSH2 0x1A43 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1B4A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1A1F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID OR PUSH21 0x81AC65E4292921C69F62D1CC7F57541261E5D61C81 PUSH22 0xCF4E36A01C9BFC94177481AC65E4292921C69F62D1CC PUSH32 0x57541261E5D61C8175CF4E36A01C9BFC93A26469706673582212204FD3E61E32 0xCA 0xBD 0x24 0x23 SWAP3 XOR 0xD2 0xA5 PUSH2 0x8D68 GT RETURN 0xC5 RETURNDATASIZE SWAP2 SUB 0xEB 0x5D 0xD7 PUSH20 0xAA327300861664736F6C63430008130033000000 ",
							"sourceMap": "152:30:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;582:22:22;607:20;:18;:20::i;:::-;582:45;-1:-1:-1;;;;;;643:25:22;;568:20:36;638:89:22;;691:36;;-1:-1:-1;;;691:36:22;;;;;;;;;;;638:89;780:14;777:1;774;761:34;977:1;958;926:14;907:1;875:14;852:5;822:170;1026:16;1023:1;1020;1005:38;1064:6;1083:66;;;;1198:16;1195:1;1188:27;1083:66;1118:16;1115:1;1108:27;1057:172;;444:129:16;;;;;;;;;;-1:-1:-1;444:129:16;;;;;:::i;:::-;-1:-1:-1;;;;;;628:59:17;512:4:16;628:59:17;;;219:52:18;628:59:17;;;;;;;;;444:129:16;;;;546:14:38;;539:22;521:41;;509:2;494:18;444:129:16;;;;;;;;495:190:32;;;;;;;;;;-1:-1:-1;495:190:32;;;;;:::i;:::-;;:::i;539:162:28:-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;2391:32:38;;;2373:51;;2361:2;2346:18;539:162:28;2227:203:38;4281:1474:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;654:94:9:-;;;;;;;;;;;;;:::i;436:2549:30:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;499:101:9:-;;;;;;;;;;;;;:::i;378:87:6:-;;;;;;;;;;;;;:::i;759:125:28:-;;;;;;;;;;-1:-1:-1;759:125:28;;;;;:::i;:::-;;:::i;3043:1180:30:-;;;;;;;;;;-1:-1:-1;3043:1180:30;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5813:178::-;;;;;;;;;;-1:-1:-1;5813:178:30;;;;;:::i;:::-;-1:-1:-1;;;;;;5938:44:30;5889:13;5938:44;;;-1:-1:-1;;;;;;;;;;;5938:44:30;;;;;;5922:62;;;5813:178;514:113:6;;;;;;;;;;-1:-1:-1;514:113:6;;;;;:::i;:::-;;:::i;3281:212:24:-;3405:22;3460:26;:24;:26::i;:::-;3443:43;;3281:212;:::o;495:190:32:-;436:8:7;:6;:8::i;:::-;-1:-1:-1;;;;;422:22:7;:10;-1:-1:-1;;;;;422:22:7;;418:54;;453:19;;-1:-1:-1;;;453:19:7;;;;;;;;;;;418:54;642:36:32::1;;654:9:::0;;642:36:::1;:::i;:::-;665:6;673:4;;642:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;642:11:32::1;::::0;-1:-1:-1;;;642:36:32:i:1;:::-;495:190:::0;;;;;:::o;539:162:28:-;616:23;673:21;1620:43;;-1:-1:-1;;;;;1620:43:28;;1469:201;4281:1474:30;-1:-1:-1;;;;;;;;;;;4498:15:30;4354:26;;-1:-1:-1;;;;;;;;;;;584:53:26;4498:15:30;;4484:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4484:30:30;;4472:42;;4524:17;4551:21;4588:17;4583:1037;4623:15;;;;;;4607:31;;4583:1037;;;4667:12;4682:26;;;:15;;;:26;;;;;;;4723:887;4808:1;4788:17;:21;4723:887;;;4879:15;;;;:::i;:::-;4933;;;;4879;;-1:-1:-1;4933:15:30;;4917:31;;;-1:-1:-1;4972:5:30;4913:83;5069:1;5048:22;;;5039:32;;;-1:-1:-1;;;;;;5122:18:30;;5014:15;5122:18;;;;;;;;;;;5106:36;;;5014:15;5197:238;5235:9;5222:10;:22;5197:238;;;5295:9;5305:10;5295:21;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5286:30:30;:5;-1:-1:-1;;;;;5286:30:30;;5282:135;;5359:4;5344:19;;5389:5;;5282:135;5246:12;;;;:::i;:::-;;;;5197:238;;;;5457:12;5453:67;;;5493:8;;;;;5453:67;5561:5;5538:9;5548;5538:20;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5538:28:30;;;:20;;;;;;;;;;;:28;5584:11;;;;:::i;:::-;;;;4861:749;;;4723:887;4827:19;;;;:::i;:::-;;;;4723:887;;;;4653:967;4640:11;;;;;:::i;:::-;;;;4583:1037;;;-1:-1:-1;;5711:28:30;;-1:-1:-1;5718:9:30;4281:1474::o;654:94:9:-;387:15:10;:13;:15::i;:::-;-1:-1:-1;;;;;373:29:10;:10;-1:-1:-1;;;;;373:29:10;;369:84;;423:30;;-1:-1:-1;;;423:30:10;;;;;;;;;;;369:84;723:18:9::1;:16;:18::i;:::-;654:94::o:0;436:2549:30:-;-1:-1:-1;;;;;;;;;;;621:15:30;477:28;;-1:-1:-1;;;;;;;;;;;584:53:26;621:15:30;;609:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;609:28:30;;;;;;;;;;;;;;;-1:-1:-1;695:15:30;;;;593:44;;-1:-1:-1;648:32:30;;695:15;;683:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;683:28:30;;648:63;;721:17;748:21;828:17;823:1681;863:15;;;;;;847:31;;823:1681;;;907:12;922:26;;;:15;;;:26;;;;;;;963:1531;1048:1;1028:17;:21;963:1531;;;1119:15;;;;:::i;:::-;1173;;;;1119;;-1:-1:-1;1173:15:30;;1157:31;;;-1:-1:-1;1212:5:30;1153:83;1309:1;1288:22;;;1279:32;;;-1:-1:-1;;;;;;1362:18:30;;1254:15;1362:18;;;;;;;;;;;1346:36;;;1254:15;1437:633;1475:9;1462:10;:22;1437:633;;;1562:5;-1:-1:-1;;;;;1526:41:30;:13;1540:10;1526:25;;;;;;;;:::i;:::-;;;;;;;:32;;;-1:-1:-1;;;;;1526:41:30;;1522:530;;1718:8;1595:13;1609:10;1595:25;;;;;;;;:::i;:::-;;;;;;;:35;;;1660:17;1678:10;1660:29;;;;;;;;:::i;:::-;;;;;;;1595:120;;;;;;;;;;:::i;:::-;;;;;;:131;-1:-1:-1;;;;;1595:131:30;;;;-1:-1:-1;;;;;1595:131:30;;;;;;1892:3;1860:17;1878:10;1860:29;;;;;;;;:::i;:::-;;;;;;;:35;;;1852:44;;;;;;1922:17;1940:10;1922:29;;;;;;;;:::i;:::-;;;;;;:31;;;;;;;;:::i;:::-;;;;;-1:-1:-1;1994:4:30;;-1:-1:-1;2024:5:30;;1522:530;1486:12;;;;:::i;:::-;;;;1437:633;;;;2092:12;2088:67;;;2128:8;;;;;2088:67;2207:5;2173:13;2187:9;2173:24;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2173:39:30;;;;;2301:15;;;;;;2267:67;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2267:67:30;;2230:13;2244:9;2230:24;;;;;;;;:::i;:::-;;;;;;;:34;;:104;;;;2392:8;2352:13;2366:9;2352:24;;;;;;;;:::i;:::-;;;;;;;:34;;;2387:1;2352:37;;;;;;;;:::i;:::-;;;;;;:48;-1:-1:-1;;;;;2352:48:30;;;;-1:-1:-1;;;;;2352:48:30;;;;;;2449:1;2418:17;2436:9;2418:28;;;;;;;;:::i;:::-;:32;;;;:28;;;;;;;;;;;:32;2468:11;;;;:::i;:::-;;;;1101:1393;;;963:1531;1067:19;;;;:::i;:::-;;;;963:1531;;;;893:1611;880:11;;;;;:::i;:::-;;;;823:1681;;;;2519:18;2514:350;2552:9;2539:10;:22;2514:350;;;2591:20;2614:17;2632:10;2614:29;;;;;;;;:::i;:::-;;;;;;;2591:52;;;;2657:25;2685:13;2699:10;2685:25;;;;;;;;:::i;:::-;;;;;;;:35;;;2657:63;;2827:12;2816:9;2809:31;2791:63;;2563:12;;;;;:::i;:::-;;;;2514:350;;;;2959:9;2944:13;2937:32;2923:56;;;;436:2549;:::o;499:101:9:-;552:7;578:15;:13;:15::i;378:87:6:-;424:7;450:8;:6;:8::i;759:125:28:-;436:8:7;:6;:8::i;:::-;-1:-1:-1;;;;;422:22:7;:10;-1:-1:-1;;;;;422:22:7;;418:54;;453:19;;-1:-1:-1;;;453:19:7;;;;;;;;;;;418:54;1900:43:28;:61;;-1:-1:-1;;;;;;1900:61:28;-1:-1:-1;;;;;1900:61:28;;;;;759:125;:::o;841:36::-:1;759:125:::0;:::o;3043:1180:30:-;-1:-1:-1;;;;;;;;;;;3265:15:30;3127:25;;-1:-1:-1;;;;;;;;;;;584:53:26;3265:15:30;;3252:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3252:29:30;;3240:41;;3292:20;3322:21;3402:17;3397:694;3437:15;;;;;;3421:31;;3397:694;;;3481:12;3496:26;;;:15;;;:26;;;;;;;3537:544;3622:1;3602:17;:21;3537:544;;;3693:15;;;;:::i;:::-;3747;;;;3693;;-1:-1:-1;3747:15:30;;3731:31;;;-1:-1:-1;3786:5:30;3727:83;3883:1;3862:22;;;3853:32;;;-1:-1:-1;;;;;;3934:18:30;;3828:15;3934:18;;;;;;;;;;;3918:36;;-1:-1:-1;;;;;3909:45:30;;;3905:162;;4004:8;3978:9;3988:12;3978:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3978:34:30;;;:23;;;;;;;;;;;:34;4034:14;;;;:::i;:::-;;;;3905:162;-1:-1:-1;3641:19:30;;;;:::i;:::-;;;;3537:544;;;;3467:624;3454:11;;;;;:::i;:::-;;;;3397:694;;;-1:-1:-1;;4176:31:30;;-1:-1:-1;4183:9:30;3043:1180;-1:-1:-1;3043:1180:30:o;514:113:6:-;436:8:7;:6;:8::i;:::-;-1:-1:-1;;;;;422:22:7;:10;-1:-1:-1;;;;;422:22:7;;418:54;;453:19;;-1:-1:-1;;;453:19:7;;;;;;;;;;;418:54;593:27:6::1;612:7;593:18;:27::i;1012:305:28:-:0;1122:22;828:7:25;;-1:-1:-1;;;;;;828:7:25;819:17;;-1:-1:-1;;;;;;;;;;;819:17:25;;;;;;803:35;;;1214:97:28;;-1:-1:-1;1620:43:28;;-1:-1:-1;;;;;1620:43:28;;3281:212:24:o;1214:97:28:-;1012:305;:::o;647:111:7:-;696:7;186:49:8;722:23:7;:29;-1:-1:-1;;;;;722:29:7;;647:111;-1:-1:-1;647:111:7:o;849:2043:33:-;-1:-1:-1;;;;;;;;;;;1123:15:33;-1:-1:-1;;;;;;;;;;;584:53:26;1123:15:33;;;;;;991:35;;1321:1;1305:17;:21;1301:151;;-1:-1:-1;1435:1:33;1418:18;;;1402:35;;;;:15;;;:35;;;;;;1301:151;1471:9;1466:1013;1486:9;:16;1482:1;:20;1466:1013;;;1527:24;1554:9;1564:1;1554:12;;;;;;;;:::i;:::-;;;;;;;1527:39;;1584:21;1608:8;:15;;;1584:39;;1646:8;:18;;;:25;1675:1;1646:30;1642:102;;1705:39;;-1:-1:-1;;;1705:39:33;;;;;;;;;;;1642:102;1777:18;1767:6;:28;;;;;;;;:::i;:::-;;1763:702;;1851:178;1895:1;1922:13;1961:12;1999:8;1851:18;:178::i;:::-;1819:210;;-1:-1:-1;1819:210:33;-1:-1:-1;1763:702:33;;;2068:22;2058:6;:32;;;;;;;;:::i;:::-;;2054:411;;2114:35;2137:1;2140:8;2114:22;:35::i;:::-;2054:411;;;2188:21;2178:6;:31;;;;;;;;:::i;:::-;;2174:291;;2265:181;2312:1;2339:13;2378:12;2416:8;2265:21;:181::i;:::-;2233:213;;-1:-1:-1;2233:213:33;-1:-1:-1;2174:291:33;-1:-1:-1;;1504:3:33;;1466:1013;;;;2514:21;2497:13;:38;2493:116;;2555:15;;;:39;;-1:-1:-1;;2555:39:33;;;;;;;2493:116;2692:1;2676:17;;:21;2672:110;;2750:1;2733:18;;;2717:35;;;;:15;;;:35;;;;;:50;;;2672:110;2801:35;2812:9;2823:6;2831:4;2801:35;;;;;;;;:::i;:::-;;;;;;;;2850:25;2862:6;2870:4;2850:11;:25::i;:::-;1067:1819;;;981:1911;849:2043;;;:::o;575:129:10:-;631:7;197:53:11;657:27:10;257:159:11;779:140:10;834:21;844:10;834:9;:21::i;:::-;197:53:11;865:47:10;;-1:-1:-1;;;;;;865:47:10;;;779:140::o;3059:165:24:-;197:53:11;1256:50:10;;-1:-1:-1;;;;;;1256:50:10;-1:-1:-1;;;;;1256:50:10;;;;;3184:33:24;3209:7;3184:33;3209:7;3184:33;1186:127:10;2898:1595:33;3163:15;;3090:7;;;;-1:-1:-1;;;;;3163:32:33;3190:4;3163:32;;;;:81;;-1:-1:-1;3216:15:33;;-1:-1:-1;;;;;3216:26:33;568:20:36;614:8;3163:81:33;3142:158;;;3266:34;;-1:-1:-1;;;3266:34:33;;;;;;;;;;;3142:158;3320:9;3315:1111;3335:8;:18;;;:25;3331:1;:29;3315:1111;;;3385:15;3403:8;:18;;;3422:1;3403:21;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;3461:18:33;;3442:16;3461:18;;;;;;;;;;;;3403:21;;-1:-1:-1;3502:26:33;;;;:40;3498:112;;3571:39;;-1:-1:-1;;;3571:39:33;;;;;;;;;;;3498:112;3720:15;;-1:-1:-1;;;;;;3671:18:33;;;3759:22;3671:18;;;;;;;;;;3712:24;;;;;-1:-1:-1;;;;;;3712:69:33;;;3671:110;;;3855:1;3832:24;;;;;;;4091:43;;;4020:45;;;4018:48;3979:87;;;;3978:157;;4218:29;;;4214:164;;4304:1;4287:18;;;4271:35;;;;:15;;;:35;;;;;:50;;;;4214:164;-1:-1:-1;;;4396:15:33;;;;;3362:3;3315:1111;;;-1:-1:-1;4448:13:33;;4463:12;;-1:-1:-1;2898:1595:33;;-1:-1:-1;;;2898:1595:33:o;8179:1080::-;8344:15;;-1:-1:-1;;;;;8344:26:33;568:20:36;8339:92:33;;8397:34;;-1:-1:-1;;;8397:34:33;;;;;;;;;;;8339:92;8451:9;8446:797;8466:8;:18;;;:25;8462:1;:29;8446:797;;;8516:15;8534:8;:18;;;8553:1;8534:21;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;8592:18:33;;8573:16;8592:18;;;;;;;;;;;;8534:21;;-1:-1:-1;8654:26:33;;;;;8699:97;;8761:35;;-1:-1:-1;;;8761:35:33;;;;;;;;;;;8699:97;8845:4;-1:-1:-1;;;;;8818:32:33;;;8814:103;;8879:38;;-1:-1:-1;;;8879:38:33;;;;;;;;;;;8814:103;8958:8;:15;;;-1:-1:-1;;;;;8939:34:33;:15;-1:-1:-1;;;;;8939:34:33;;8935:110;;9002:43;;-1:-1:-1;;;9002:43:33;;;;;;;;;;;8935:110;-1:-1:-1;9212:15:33;;-1:-1:-1;;;;;;9109:18:33;;;;9212:15;9109:18;;;;;;;;;;9204:24;;;;;-1:-1:-1;;;;;;9150:78:33;;9151:29;;;;9150:78;9109:119;;8493:3;;8446:797;;;;8179:1080;;:::o;4499:3674::-;4750:15;;4694:7;;;;-1:-1:-1;;;;;4750:29:33;;4746:103;;4804:45;;-1:-1:-1;;;4804:45:33;;;;;;;;;;;4746:103;4909:1;4892:18;;;4970:1;4954:17;;4864:25;4986:3043;5006:8;:18;;;:25;5002:1;:29;4986:3043;;;5056:15;5074:8;:18;;;5093:1;5074:21;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;5132:18:33;;5113:16;5132:18;;;;;;;;;;;;5074:21;;-1:-1:-1;5173:26:33;;;;5169:108;;5242:35;;-1:-1:-1;;;5242:35:33;;;;;;;;;;;5169:108;5338:4;5300:26;;;;:43;5296:114;;5372:38;;-1:-1:-1;;;5372:38:33;;;;;;;;;;;5296:114;5449:1;5433:17;;;5429:267;;-1:-1:-1;;5474:19:33;;;5530:34;;;;:15;;;:34;;;;;;;-1:-1:-1;5474:19:33;5608:1;;-1:-1:-1;5429:267:33;;;-1:-1:-1;;5656:21:33;;;;5429:267;6099:1;6076:24;;;6059:42;;;5714:19;;-1:-1:-1;;;;;;6150:24:33;;;;;;;6146:292;;-1:-1:-1;;;;;;6392:22:33;;:8;:22;;;;;;;;;;;;-1:-1:-1;;;;;;6322:93:33;;6323:29;;6322:93;6269:146;;6146:292;-1:-1:-1;;;;;;;;6467:18:33;;:8;:18;;;;;;;;;;6460:25;6605:21;6625:1;6605:21;;;;6676:27;6702:1;6676:27;;;;6744:42;;;6740:1107;;6810:23;6836:84;;;:15;;;:84;;;;;;;-1:-1:-1;;;;;;7134:80:33;;;7132:83;7086:129;;;7244:21;;;:50;;7085:210;7379:56;;6740:1107;;;7802:25;7785:12;-1:-1:-1;;;;;7777:21:33;;:50;;7722:25;-1:-1:-1;;;;;;539:35:33;;7667:80;;7665:83;7622:12;:126;7621:207;7582:246;;6740:1107;7869:19;7892:1;7869:24;7865:150;;7924:34;;;;:15;;;:34;;;;;7917:41;;;7924:34;-1:-1:-1;7865:150:33;-1:-1:-1;;5033:3:33;;;;;-1:-1:-1;4986:3043:33;;-1:-1:-1;;4986:3043:33;;-1:-1:-1;8081:1:33;8060:22;;;;8059:46;;8143:12;;-1:-1:-1;4499:3674:33;;-1:-1:-1;;;;4499:3674:33:o;9265:663::-;9370:11;;:16;-1:-1:-1;;;;;9344:20:33;;;9343:44;9339:119;;9408:50;;-1:-1:-1;;;9408:50:33;;;;;;;;;;;9339:119;-1:-1:-1;;;;;9473:20:33;;;9469:453;;-1:-1:-1;;;;;9513:23:33;;9531:4;9513:23;9509:149;;-1:-1:-1;;;;;9561:17:33;;568:20:36;9556:87:33;;9609:34;;-1:-1:-1;;;9609:34:33;;;;;;;;;;;9556:87;9673:12;9691:6;-1:-1:-1;;;;;9691:19:33;9711:4;9691:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9672:44;;;9736:7;9731:181;;9815:16;9812:1;;9794:38;9863:16;9812:1;9853:27;9469:453;9265:663;;:::o;1203:207:7:-;186:49:8;1359:7:7;;1338:38;;-1:-1:-1;;;;;1338:38:7;;;;1359:7;;1338:38;;1266:31;;1338:38;1386:17;;-1:-1:-1;;;;;;1386:17:7;-1:-1:-1;;;;;1386:17:7;;;;;;;;;;1203:207::o;14:173:38:-;81:20;;-1:-1:-1;;;;;;130:32:38;;120:43;;110:71;;177:1;174;167:12;110:71;14:173;;;:::o;192:184::-;250:6;303:2;291:9;282:7;278:23;274:32;271:52;;;319:1;316;309:12;271:52;342:28;360:9;342:28;:::i;:::-;332:38;192:184;-1:-1:-1;;;192:184:38:o;573:173::-;641:20;;-1:-1:-1;;;;;690:31:38;;680:42;;670:70;;736:1;733;726:12;751:347;802:8;812:6;866:3;859:4;851:6;847:17;843:27;833:55;;884:1;881;874:12;833:55;-1:-1:-1;907:20:38;;950:18;939:30;;936:50;;;982:1;979;972:12;936:50;1019:4;1011:6;1007:17;995:29;;1071:3;1064:4;1055:6;1047;1043:19;1039:30;1036:39;1033:59;;;1088:1;1085;1078:12;1033:59;751:347;;;;;:::o;1103:1010::-;1246:6;1254;1262;1270;1278;1331:2;1319:9;1310:7;1306:23;1302:32;1299:52;;;1347:1;1344;1337:12;1299:52;1387:9;1374:23;1416:18;1457:2;1449:6;1446:14;1443:34;;;1473:1;1470;1463:12;1443:34;1511:6;1500:9;1496:22;1486:32;;1556:7;1549:4;1545:2;1541:13;1537:27;1527:55;;1578:1;1575;1568:12;1527:55;1618:2;1605:16;1644:2;1636:6;1633:14;1630:34;;;1660:1;1657;1650:12;1630:34;1715:7;1708:4;1698:6;1695:1;1691:14;1687:2;1683:23;1679:34;1676:47;1673:67;;;1736:1;1733;1726:12;1673:67;1767:4;1763:2;1759:13;1749:23;;1791:6;1781:16;;;1816:40;1850:4;1839:9;1835:20;1816:40;:::i;:::-;1806:50;;1909:2;1898:9;1894:18;1881:32;1865:48;;1938:2;1928:8;1925:16;1922:36;;;1954:1;1951;1944:12;1922:36;;1993:60;2045:7;2034:8;2023:9;2019:24;1993:60;:::i;:::-;1103:1010;;;;-1:-1:-1;1103:1010:38;;-1:-1:-1;2072:8:38;;1967:86;1103:1010;-1:-1:-1;;;1103:1010:38:o;2435:658::-;2606:2;2658:21;;;2728:13;;2631:18;;;2750:22;;;2577:4;;2606:2;2829:15;;;;2803:2;2788:18;;;2577:4;2872:195;2886:6;2883:1;2880:13;2872:195;;;2951:13;;-1:-1:-1;;;;;2947:39:38;2935:52;;3042:15;;;;3007:12;;;;2983:1;2901:9;2872:195;;;-1:-1:-1;3084:3:38;;2435:658;-1:-1:-1;;;;;;2435:658:38:o;3098:461::-;3150:3;3188:5;3182:12;3215:6;3210:3;3203:19;3241:4;3270:2;3265:3;3261:12;3254:19;;3307:2;3300:5;3296:14;3328:1;3338:196;3352:6;3349:1;3346:13;3338:196;;;3417:13;;-1:-1:-1;;;;;;3413:40:38;3401:53;;3474:12;;;;3509:15;;;;3374:1;3367:9;3338:196;;;-1:-1:-1;3550:3:38;;3098:461;-1:-1:-1;;;;;3098:461:38:o;3564:1059::-;3752:4;3781:2;3821;3810:9;3806:18;3851:2;3840:9;3833:21;3874:6;3909;3903:13;3940:6;3932;3925:22;3966:2;3956:12;;3999:2;3988:9;3984:18;3977:25;;4061:2;4051:6;4048:1;4044:14;4033:9;4029:30;4025:39;4099:2;4091:6;4087:15;4120:1;4130:464;4144:6;4141:1;4138:13;4130:464;;;4209:22;;;-1:-1:-1;;4205:36:38;4193:49;;4265:13;;4310:9;;-1:-1:-1;;;;;4306:35:38;4291:51;;4381:11;;4375:18;4413:15;;;4406:27;;;4456:58;4498:15;;;4375:18;4456:58;:::i;:::-;4572:12;;;;4446:68;-1:-1:-1;;4537:15:38;;;;4166:1;4159:9;4130:464;;;-1:-1:-1;4611:6:38;;3564:1059;-1:-1:-1;;;;;;;;3564:1059:38:o;4628:186::-;4687:6;4740:2;4728:9;4719:7;4715:23;4711:32;4708:52;;;4756:1;4753;4746:12;4708:52;4779:29;4798:9;4779:29;:::i;4819:657::-;4988:2;5040:21;;;5110:13;;5013:18;;;5132:22;;;4959:4;;4988:2;5211:15;;;;5185:2;5170:18;;;4959:4;5254:196;5268:6;5265:1;5262:13;5254:196;;;5333:13;;-1:-1:-1;;;;;;5329:40:38;5317:53;;5425:15;;;;5390:12;;;;5290:1;5283:9;5254:196;;5481:127;5542:10;5537:3;5533:20;5530:1;5523:31;5573:4;5570:1;5563:15;5597:4;5594:1;5587:15;5613:253;5685:2;5679:9;5727:4;5715:17;;5762:18;5747:34;;5783:22;;;5744:62;5741:88;;;5809:18;;:::i;:::-;5845:2;5838:22;5613:253;:::o;5871:275::-;5942:2;5936:9;6007:2;5988:13;;-1:-1:-1;;5984:27:38;5972:40;;6042:18;6027:34;;6063:22;;;6024:62;6021:88;;;6089:18;;:::i;:::-;6125:2;6118:22;5871:275;;-1:-1:-1;5871:275:38:o;6151:191::-;6219:4;6252:18;6244:6;6241:30;6238:56;;;6274:18;;:::i;:::-;-1:-1:-1;6319:1:38;6315:14;6331:4;6311:25;;6151:191::o;6347:2510::-;6517:9;6552:72;6568:55;6616:6;6568:55;:::i;:::-;6552:72;:::i;:::-;6658:19;;;6696:4;6716:12;;;;6646:3;6747:1;6782:15;;;6771:27;;6821:14;6810:26;;6807:46;;;6849:1;6846;6839:12;6807:46;6873:5;6887:1937;6903:6;6898:3;6895:15;6887:1937;;;6989:3;6976:17;7016:18;7066:2;7053:11;7050:19;7047:109;;;7110:1;7139:2;7135;7128:14;7047:109;7190:11;7183:5;7179:23;7169:33;;7247:4;7242:2;7226:14;7222:23;7218:34;7215:124;;;7293:1;7322:2;7318;7311:14;7215:124;7367:22;;:::i;:::-;7418;7437:2;7418:22;:::i;:::-;7409:7;7402:39;7490:2;7486;7482:11;7469:25;7529:1;7520:7;7517:14;7507:112;;7573:1;7602:2;7598;7591:14;7507:112;7639:16;;;7632:33;7688:2;7730:11;;;7717:25;7758:14;;;7755:104;;;7813:1;7842:2;7838;7831:14;7755:104;7883:15;;;;;7941:14;7934:4;7925:14;;7921:35;7911:136;;7999:1;7988:12;;8029:3;8024;8017:16;7911:136;8084:3;8071:17;8060:28;;8114:69;8130:52;8178:3;8130:52;:::i;8114:69::-;8227:18;;;8323:12;;;8314:22;;8310:31;;;8267:14;;;;8370;8357:28;;8354:121;;;8427:1;8457:3;8452;8445:16;8354:121;8501:12;;;;8526:179;8544:8;8537:5;8534:19;8526:179;;;8626:24;8644:5;8626:24;:::i;:::-;8612:39;;8565:14;;;;8677;;;;8526:179;;;8725:16;;;8718:31;;;;-1:-1:-1;8762:20:38;;-1:-1:-1;;8802:12:38;;;;6920;;6887:1937;;;-1:-1:-1;8846:5:38;;6347:2510;-1:-1:-1;;;;;;;6347:2510:38:o;8862:127::-;8923:10;8918:3;8914:20;8911:1;8904:31;8954:4;8951:1;8944:15;8978:4;8975:1;8968:15;8994:135;9033:3;9054:17;;;9051:43;;9074:18;;:::i;:::-;-1:-1:-1;9121:1:38;9110:13;;8994:135::o;9134:127::-;9195:10;9190:3;9186:20;9183:1;9176:31;9226:4;9223:1;9216:15;9250:4;9247:1;9240:15;9266:175;9303:3;9347:4;9340:5;9336:16;9376:4;9367:7;9364:17;9361:43;;9384:18;;:::i;:::-;9433:1;9420:15;;9266:175;-1:-1:-1;;9266:175:38:o;9446:127::-;9507:10;9502:3;9498:20;9495:1;9488:31;9538:4;9535:1;9528:15;9562:4;9559:1;9552:15;9578:250;9663:1;9673:113;9687:6;9684:1;9681:13;9673:113;;;9763:11;;;9757:18;9744:11;;;9737:39;9709:2;9702:10;9673:113;;;-1:-1:-1;;9820:1:38;9802:16;;9795:27;9578:250::o;9833:270::-;9874:3;9912:5;9906:12;9939:6;9934:3;9927:19;9955:76;10024:6;10017:4;10012:3;10008:14;10001:4;9994:5;9990:16;9955:76;:::i;:::-;10085:2;10064:15;-1:-1:-1;;10060:29:38;10051:39;;;;10092:4;10047:50;;9833:270;-1:-1:-1;;9833:270:38:o;10108:1628::-;10376:4;10405:2;10445;10434:9;10430:18;10475:2;10464:9;10457:21;10498:6;10533;10527:13;10564:6;10556;10549:22;10602:3;10591:9;10587:19;10580:26;;10665:3;10655:6;10652:1;10648:14;10637:9;10633:30;10629:40;10615:54;;10688:4;10727:2;10719:6;10715:15;10748:1;10769;10779:786;10795:6;10790:3;10787:15;10779:786;;;10864:22;;;-1:-1:-1;;10860:37:38;10848:50;;10921:13;;10966:9;;-1:-1:-1;;;;;10962:35:38;10947:51;;11037:11;;;11031:18;11089:1;11072:19;;11062:170;;-1:-1:-1;;;11123:31:38;;11181:4;11178:1;11171:15;11213:4;11130:1;11203:15;11062:170;11252:15;;;11245:37;11305:4;11350:11;;;11344:18;11382:15;;;11375:27;;;11425:60;11469:15;;;11344:18;11425:60;:::i;:::-;11415:70;-1:-1:-1;;11543:12:38;;;;11508:15;;;;10821:1;10812:11;10779:786;;;-1:-1:-1;;;;;;;;2184:31:38;;11601:18;;;2172:44;-1:-1:-1;;11658:22:38;;;11651:4;11636:20;;11629:52;11698:32;11662:6;11715;11698:32;:::i;:::-;11690:40;10108:1628;-1:-1:-1;;;;;;;10108:1628:38:o;11741:287::-;11870:3;11908:6;11902:13;11924:66;11983:6;11978:3;11971:4;11963:6;11959:17;11924:66;:::i;:::-;12006:16;;;;;11741:287;-1:-1:-1;;11741:287:38:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1422800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"acceptOwnership()": "54659",
								"diamondCut((address,uint8,bytes4[])[],address,bytes)": "infinite",
								"facetAddress(bytes4)": "infinite",
								"facetAddresses()": "infinite",
								"facetFunctionSelectors(address)": "infinite",
								"facets()": "infinite",
								"getFallbackAddress()": "2414",
								"nomineeOwner()": "2401",
								"owner()": "2412",
								"setFallbackAddress(address)": "26814",
								"supportsInterface(bytes4)": "2545",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 152,
									"end": 182,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 152,
									"end": 182,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 152,
									"end": 182,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 152,
									"end": 182,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 152,
									"end": 182,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 152,
									"end": 182,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 152,
									"end": 182,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 152,
									"end": 182,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 152,
									"end": 182,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 152,
									"end": 182,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 152,
									"end": 182,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 152,
									"end": 182,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 152,
									"end": 182,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1108,
									"end": 1124,
									"name": "PUSH",
									"source": 24,
									"value": "40"
								},
								{
									"begin": 1108,
									"end": 1124,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 1108,
									"end": 1124,
									"name": "MLOAD",
									"source": 24
								},
								{
									"begin": 1121,
									"end": 1123,
									"name": "PUSH",
									"source": 24,
									"value": "C"
								},
								{
									"begin": 1108,
									"end": 1124,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 1108,
									"end": 1124,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 1108,
									"end": 1124,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 1108,
									"end": 1124,
									"name": "PUSH",
									"source": 24,
									"value": "1A0"
								},
								{
									"begin": 1108,
									"end": 1124,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 1108,
									"end": 1124,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 1108,
									"end": 1124,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 1108,
									"end": 1124,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 1108,
									"end": 1124,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 1080,
									"end": 1105,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 1080,
									"end": 1105,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 1108,
									"end": 1124,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 1108,
									"end": 1124,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 1108,
									"end": 1124,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 1108,
									"end": 1124,
									"name": "PUSH",
									"source": 24,
									"value": "180"
								},
								{
									"begin": 1108,
									"end": 1124,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 1108,
									"end": 1124,
									"name": "CALLDATASIZE",
									"source": 24
								},
								{
									"begin": 1108,
									"end": 1124,
									"name": "DUP4",
									"source": 24
								},
								{
									"begin": 1108,
									"end": 1124,
									"name": "CALLDATACOPY",
									"source": 24
								},
								{
									"begin": 1108,
									"end": 1124,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 1108,
									"end": 1124,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1080,
									"end": 1124,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1134,
									"end": 1155,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2C408059"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1080,
									"end": 1124,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 1134,
									"end": 1155,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 1213,
									"end": 1228,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "8"
								},
								{
									"begin": 1134,
									"end": 1155,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1213,
									"end": 1228,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "9"
								},
								{
									"begin": 1213,
									"end": 1228,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 1213,
									"end": 1228,
									"name": "tag",
									"source": 24,
									"value": "8"
								},
								{
									"begin": 1213,
									"end": 1228,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 1213,
									"end": 1228,
									"name": "SWAP4",
									"source": 24
								},
								{
									"begin": 1213,
									"end": 1228,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 1203,
									"end": 1229,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1203,
									"end": 1229,
									"name": "MLOAD",
									"source": 24
								},
								{
									"begin": 1203,
									"end": 1229,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1203,
									"end": 1229,
									"name": "LT",
									"source": 24
								},
								{
									"begin": 1203,
									"end": 1229,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "11"
								},
								{
									"begin": 1203,
									"end": 1229,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 1203,
									"end": 1229,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "11"
								},
								{
									"begin": 1203,
									"end": 1229,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "12"
								},
								{
									"begin": 1203,
									"end": 1229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 1203,
									"end": 1229,
									"name": "tag",
									"source": 24,
									"value": "11"
								},
								{
									"begin": 1203,
									"end": 1229,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1203,
									"end": 1302,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 1203,
									"end": 1302,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 1203,
									"end": 1302,
									"name": "AND",
									"source": 24
								},
								{
									"begin": 1203,
									"end": 1229,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 1203,
									"end": 1229,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 1203,
									"end": 1229,
									"name": "DUP4",
									"source": 24
								},
								{
									"begin": 1203,
									"end": 1229,
									"name": "MUL",
									"source": 24
								},
								{
									"begin": 1203,
									"end": 1229,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 1203,
									"end": 1229,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 1203,
									"end": 1229,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 1203,
									"end": 1229,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 1203,
									"end": 1229,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 1203,
									"end": 1229,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 1203,
									"end": 1229,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 1203,
									"end": 1302,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "91423765"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1312,
									"end": 1321,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 1322,
									"end": 1337,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 1322,
									"end": 1337,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1337,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1322,
									"end": 1337,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1337,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 1322,
									"end": 1337,
									"name": "tag",
									"source": 24,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1337,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 1322,
									"end": 1337,
									"name": "SWAP4",
									"source": 24
								},
								{
									"begin": 1322,
									"end": 1337,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 1312,
									"end": 1338,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1312,
									"end": 1338,
									"name": "MLOAD",
									"source": 24
								},
								{
									"begin": 1312,
									"end": 1338,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1312,
									"end": 1338,
									"name": "LT",
									"source": 24
								},
								{
									"begin": 1312,
									"end": 1338,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "15"
								},
								{
									"begin": 1312,
									"end": 1338,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 1312,
									"end": 1338,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "15"
								},
								{
									"begin": 1312,
									"end": 1338,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "12"
								},
								{
									"begin": 1312,
									"end": 1338,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 1312,
									"end": 1338,
									"name": "tag",
									"source": 24,
									"value": "15"
								},
								{
									"begin": 1312,
									"end": 1338,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1312,
									"end": 1411,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 1312,
									"end": 1411,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 1312,
									"end": 1411,
									"name": "AND",
									"source": 24
								},
								{
									"begin": 1312,
									"end": 1338,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 1312,
									"end": 1338,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 1312,
									"end": 1338,
									"name": "DUP4",
									"source": 24
								},
								{
									"begin": 1312,
									"end": 1338,
									"name": "MUL",
									"source": 24
								},
								{
									"begin": 1312,
									"end": 1338,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 1312,
									"end": 1338,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 1312,
									"end": 1338,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 1312,
									"end": 1338,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 1312,
									"end": 1338,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 1312,
									"end": 1338,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 1312,
									"end": 1338,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 1312,
									"end": 1411,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 1422,
									"end": 1485,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "16"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2F40ADCF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1480,
									"end": 1484,
									"name": "PUSH",
									"source": 24,
									"value": "1"
								},
								{
									"begin": 1422,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "17"
								},
								{
									"begin": 1422,
									"end": 1485,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 1422,
									"end": 1485,
									"name": "tag",
									"source": 24,
									"value": "16"
								},
								{
									"begin": 1422,
									"end": 1485,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "7E4C707"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1533,
									"end": 1542,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 1543,
									"end": 1558,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 1543,
									"end": 1558,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "18"
								},
								{
									"begin": 1543,
									"end": 1558,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1543,
									"end": 1558,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "9"
								},
								{
									"begin": 1543,
									"end": 1558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 1543,
									"end": 1558,
									"name": "tag",
									"source": 24,
									"value": "18"
								},
								{
									"begin": 1543,
									"end": 1558,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 1543,
									"end": 1558,
									"name": "SWAP4",
									"source": 24
								},
								{
									"begin": 1543,
									"end": 1558,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 1533,
									"end": 1559,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1533,
									"end": 1559,
									"name": "MLOAD",
									"source": 24
								},
								{
									"begin": 1533,
									"end": 1559,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1533,
									"end": 1559,
									"name": "LT",
									"source": 24
								},
								{
									"begin": 1533,
									"end": 1559,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 1533,
									"end": 1559,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 1533,
									"end": 1559,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 1533,
									"end": 1559,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "12"
								},
								{
									"begin": 1533,
									"end": 1559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 1533,
									"end": 1559,
									"name": "tag",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 1533,
									"end": 1559,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1533,
									"end": 1598,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 1533,
									"end": 1598,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 1533,
									"end": 1598,
									"name": "AND",
									"source": 24
								},
								{
									"begin": 1533,
									"end": 1559,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 1533,
									"end": 1559,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 1533,
									"end": 1559,
									"name": "DUP4",
									"source": 24
								},
								{
									"begin": 1533,
									"end": 1559,
									"name": "MUL",
									"source": 24
								},
								{
									"begin": 1533,
									"end": 1559,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 1533,
									"end": 1559,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 1533,
									"end": 1559,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 1533,
									"end": 1559,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 1533,
									"end": 1559,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 1533,
									"end": 1559,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 1533,
									"end": 1559,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 1533,
									"end": 1598,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 1609,
									"end": 1672,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "21"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "7E4C707"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1667,
									"end": 1671,
									"name": "PUSH",
									"source": 24,
									"value": "1"
								},
								{
									"begin": 1609,
									"end": 1630,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "17"
								},
								{
									"begin": 1609,
									"end": 1672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 1609,
									"end": 1672,
									"name": "tag",
									"source": 24,
									"value": "21"
								},
								{
									"begin": 1609,
									"end": 1672,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "7A0ED627"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1720,
									"end": 1729,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 1730,
									"end": 1745,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 1730,
									"end": 1745,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "22"
								},
								{
									"begin": 1730,
									"end": 1745,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1730,
									"end": 1745,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "9"
								},
								{
									"begin": 1730,
									"end": 1745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 1730,
									"end": 1745,
									"name": "tag",
									"source": 24,
									"value": "22"
								},
								{
									"begin": 1730,
									"end": 1745,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 1730,
									"end": 1745,
									"name": "SWAP4",
									"source": 24
								},
								{
									"begin": 1730,
									"end": 1745,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 1720,
									"end": 1746,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1720,
									"end": 1746,
									"name": "MLOAD",
									"source": 24
								},
								{
									"begin": 1720,
									"end": 1746,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1720,
									"end": 1746,
									"name": "LT",
									"source": 24
								},
								{
									"begin": 1720,
									"end": 1746,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "24"
								},
								{
									"begin": 1720,
									"end": 1746,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 1720,
									"end": 1746,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "24"
								},
								{
									"begin": 1720,
									"end": 1746,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "12"
								},
								{
									"begin": 1720,
									"end": 1746,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 1720,
									"end": 1746,
									"name": "tag",
									"source": 24,
									"value": "24"
								},
								{
									"begin": 1720,
									"end": 1746,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1720,
									"end": 1781,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 1720,
									"end": 1781,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 1720,
									"end": 1781,
									"name": "AND",
									"source": 24
								},
								{
									"begin": 1720,
									"end": 1746,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 1720,
									"end": 1746,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 1720,
									"end": 1746,
									"name": "DUP4",
									"source": 24
								},
								{
									"begin": 1720,
									"end": 1746,
									"name": "MUL",
									"source": 24
								},
								{
									"begin": 1720,
									"end": 1746,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 1720,
									"end": 1746,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 1720,
									"end": 1746,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 1720,
									"end": 1746,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 1720,
									"end": 1746,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 1720,
									"end": 1746,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 1720,
									"end": 1746,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 1720,
									"end": 1781,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "56FE50AF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1791,
									"end": 1800,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 1801,
									"end": 1816,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 1801,
									"end": 1816,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "25"
								},
								{
									"begin": 1801,
									"end": 1816,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1801,
									"end": 1816,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "9"
								},
								{
									"begin": 1801,
									"end": 1816,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 1801,
									"end": 1816,
									"name": "tag",
									"source": 24,
									"value": "25"
								},
								{
									"begin": 1801,
									"end": 1816,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 1801,
									"end": 1816,
									"name": "SWAP4",
									"source": 24
								},
								{
									"begin": 1801,
									"end": 1816,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 1791,
									"end": 1817,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1791,
									"end": 1817,
									"name": "MLOAD",
									"source": 24
								},
								{
									"begin": 1791,
									"end": 1817,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1791,
									"end": 1817,
									"name": "LT",
									"source": 24
								},
								{
									"begin": 1791,
									"end": 1817,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "27"
								},
								{
									"begin": 1791,
									"end": 1817,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 1791,
									"end": 1817,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "27"
								},
								{
									"begin": 1791,
									"end": 1817,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "12"
								},
								{
									"begin": 1791,
									"end": 1817,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 1791,
									"end": 1817,
									"name": "tag",
									"source": 24,
									"value": "27"
								},
								{
									"begin": 1791,
									"end": 1817,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1791,
									"end": 1894,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 1791,
									"end": 1894,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 1791,
									"end": 1894,
									"name": "AND",
									"source": 24
								},
								{
									"begin": 1791,
									"end": 1817,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 1791,
									"end": 1817,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 1791,
									"end": 1817,
									"name": "DUP4",
									"source": 24
								},
								{
									"begin": 1791,
									"end": 1817,
									"name": "MUL",
									"source": 24
								},
								{
									"begin": 1791,
									"end": 1817,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 1791,
									"end": 1817,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 1791,
									"end": 1817,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 1791,
									"end": 1817,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 1791,
									"end": 1817,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 1791,
									"end": 1817,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 1791,
									"end": 1817,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 1791,
									"end": 1894,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "14BBDACB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1904,
									"end": 1913,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 1914,
									"end": 1929,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 1914,
									"end": 1929,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "28"
								},
								{
									"begin": 1914,
									"end": 1929,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1914,
									"end": 1929,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "9"
								},
								{
									"begin": 1914,
									"end": 1929,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 1914,
									"end": 1929,
									"name": "tag",
									"source": 24,
									"value": "28"
								},
								{
									"begin": 1914,
									"end": 1929,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 1914,
									"end": 1929,
									"name": "SWAP4",
									"source": 24
								},
								{
									"begin": 1914,
									"end": 1929,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 1904,
									"end": 1930,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1904,
									"end": 1930,
									"name": "MLOAD",
									"source": 24
								},
								{
									"begin": 1904,
									"end": 1930,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1904,
									"end": 1930,
									"name": "LT",
									"source": 24
								},
								{
									"begin": 1904,
									"end": 1930,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "30"
								},
								{
									"begin": 1904,
									"end": 1930,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 1904,
									"end": 1930,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "30"
								},
								{
									"begin": 1904,
									"end": 1930,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "12"
								},
								{
									"begin": 1904,
									"end": 1930,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 1904,
									"end": 1930,
									"name": "tag",
									"source": 24,
									"value": "30"
								},
								{
									"begin": 1904,
									"end": 1930,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1904,
									"end": 1973,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 1904,
									"end": 1973,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 1904,
									"end": 1973,
									"name": "AND",
									"source": 24
								},
								{
									"begin": 1904,
									"end": 1930,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 1904,
									"end": 1930,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 1904,
									"end": 1930,
									"name": "DUP4",
									"source": 24
								},
								{
									"begin": 1904,
									"end": 1930,
									"name": "MUL",
									"source": 24
								},
								{
									"begin": 1904,
									"end": 1930,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 1904,
									"end": 1930,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 1904,
									"end": 1930,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 1904,
									"end": 1930,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 1904,
									"end": 1930,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 1904,
									"end": 1930,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 1904,
									"end": 1930,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 1904,
									"end": 1973,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "66FFD663"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1983,
									"end": 1992,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 1993,
									"end": 2008,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 1993,
									"end": 2008,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "31"
								},
								{
									"begin": 1993,
									"end": 2008,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1993,
									"end": 2008,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "9"
								},
								{
									"begin": 1993,
									"end": 2008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 1993,
									"end": 2008,
									"name": "tag",
									"source": 24,
									"value": "31"
								},
								{
									"begin": 1993,
									"end": 2008,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 1993,
									"end": 2008,
									"name": "SWAP4",
									"source": 24
								},
								{
									"begin": 1993,
									"end": 2008,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 1983,
									"end": 2009,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1983,
									"end": 2009,
									"name": "MLOAD",
									"source": 24
								},
								{
									"begin": 1983,
									"end": 2009,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 1983,
									"end": 2009,
									"name": "LT",
									"source": 24
								},
								{
									"begin": 1983,
									"end": 2009,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "33"
								},
								{
									"begin": 1983,
									"end": 2009,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 1983,
									"end": 2009,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "33"
								},
								{
									"begin": 1983,
									"end": 2009,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "12"
								},
								{
									"begin": 1983,
									"end": 2009,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 1983,
									"end": 2009,
									"name": "tag",
									"source": 24,
									"value": "33"
								},
								{
									"begin": 1983,
									"end": 2009,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1983,
									"end": 2050,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 1983,
									"end": 2050,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 1983,
									"end": 2050,
									"name": "AND",
									"source": 24
								},
								{
									"begin": 1983,
									"end": 2009,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 1983,
									"end": 2009,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 1983,
									"end": 2009,
									"name": "DUP4",
									"source": 24
								},
								{
									"begin": 1983,
									"end": 2009,
									"name": "MUL",
									"source": 24
								},
								{
									"begin": 1983,
									"end": 2009,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 1983,
									"end": 2009,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 1983,
									"end": 2009,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 1983,
									"end": 2009,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 1983,
									"end": 2009,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 1983,
									"end": 2009,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 1983,
									"end": 2009,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 1983,
									"end": 2050,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 2061,
									"end": 2124,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "34"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "48E2B093"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2119,
									"end": 2123,
									"name": "PUSH",
									"source": 24,
									"value": "1"
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "17"
								},
								{
									"begin": 2061,
									"end": 2124,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 2061,
									"end": 2124,
									"name": "tag",
									"source": 24,
									"value": "34"
								},
								{
									"begin": 2061,
									"end": 2124,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1FFC9A7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2163,
									"end": 2172,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 2173,
									"end": 2188,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 2173,
									"end": 2188,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "35"
								},
								{
									"begin": 2173,
									"end": 2188,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2173,
									"end": 2188,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "9"
								},
								{
									"begin": 2173,
									"end": 2188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 2173,
									"end": 2188,
									"name": "tag",
									"source": 24,
									"value": "35"
								},
								{
									"begin": 2173,
									"end": 2188,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 2173,
									"end": 2188,
									"name": "SWAP4",
									"source": 24
								},
								{
									"begin": 2173,
									"end": 2188,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "MLOAD",
									"source": 24
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "LT",
									"source": 24
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "37"
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "37"
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "12"
								},
								{
									"begin": 2163,
									"end": 2189,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "tag",
									"source": 24,
									"value": "37"
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2163,
									"end": 2226,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2163,
									"end": 2226,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 2163,
									"end": 2226,
									"name": "AND",
									"source": 24
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "DUP4",
									"source": 24
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "MUL",
									"source": 24
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 2163,
									"end": 2189,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 2163,
									"end": 2226,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 2237,
									"end": 2291,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "38"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1FFC9A7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2286,
									"end": 2290,
									"name": "PUSH",
									"source": 24,
									"value": "1"
								},
								{
									"begin": 2237,
									"end": 2258,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "17"
								},
								{
									"begin": 2237,
									"end": 2291,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 2237,
									"end": 2291,
									"name": "tag",
									"source": 24,
									"value": "38"
								},
								{
									"begin": 2237,
									"end": 2291,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "8DA5CB5B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2335,
									"end": 2344,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 2345,
									"end": 2360,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 2345,
									"end": 2360,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "39"
								},
								{
									"begin": 2345,
									"end": 2360,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2345,
									"end": 2360,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "9"
								},
								{
									"begin": 2345,
									"end": 2360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 2345,
									"end": 2360,
									"name": "tag",
									"source": 24,
									"value": "39"
								},
								{
									"begin": 2345,
									"end": 2360,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 2345,
									"end": 2360,
									"name": "SWAP4",
									"source": 24
								},
								{
									"begin": 2345,
									"end": 2360,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 2335,
									"end": 2361,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2335,
									"end": 2361,
									"name": "MLOAD",
									"source": 24
								},
								{
									"begin": 2335,
									"end": 2361,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2335,
									"end": 2361,
									"name": "LT",
									"source": 24
								},
								{
									"begin": 2335,
									"end": 2361,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "41"
								},
								{
									"begin": 2335,
									"end": 2361,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 2335,
									"end": 2361,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "41"
								},
								{
									"begin": 2335,
									"end": 2361,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "12"
								},
								{
									"begin": 2335,
									"end": 2361,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 2335,
									"end": 2361,
									"name": "tag",
									"source": 24,
									"value": "41"
								},
								{
									"begin": 2335,
									"end": 2361,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2335,
									"end": 2386,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2335,
									"end": 2386,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 2335,
									"end": 2386,
									"name": "AND",
									"source": 24
								},
								{
									"begin": 2335,
									"end": 2361,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 2335,
									"end": 2361,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 2335,
									"end": 2361,
									"name": "DUP4",
									"source": 24
								},
								{
									"begin": 2335,
									"end": 2361,
									"name": "MUL",
									"source": 24
								},
								{
									"begin": 2335,
									"end": 2361,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 2335,
									"end": 2361,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2335,
									"end": 2361,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 2335,
									"end": 2361,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 2335,
									"end": 2361,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2335,
									"end": 2361,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 2335,
									"end": 2361,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 2335,
									"end": 2386,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "455A8A85"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2396,
									"end": 2405,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 2406,
									"end": 2421,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 2406,
									"end": 2421,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "42"
								},
								{
									"begin": 2406,
									"end": 2421,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2406,
									"end": 2421,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "9"
								},
								{
									"begin": 2406,
									"end": 2421,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 2406,
									"end": 2421,
									"name": "tag",
									"source": 24,
									"value": "42"
								},
								{
									"begin": 2406,
									"end": 2421,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 2406,
									"end": 2421,
									"name": "SWAP4",
									"source": 24
								},
								{
									"begin": 2406,
									"end": 2421,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 2396,
									"end": 2422,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2396,
									"end": 2422,
									"name": "MLOAD",
									"source": 24
								},
								{
									"begin": 2396,
									"end": 2422,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2396,
									"end": 2422,
									"name": "LT",
									"source": 24
								},
								{
									"begin": 2396,
									"end": 2422,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "44"
								},
								{
									"begin": 2396,
									"end": 2422,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 2396,
									"end": 2422,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "44"
								},
								{
									"begin": 2396,
									"end": 2422,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "12"
								},
								{
									"begin": 2396,
									"end": 2422,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 2396,
									"end": 2422,
									"name": "tag",
									"source": 24,
									"value": "44"
								},
								{
									"begin": 2396,
									"end": 2422,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2396,
									"end": 2458,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2396,
									"end": 2458,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 2396,
									"end": 2458,
									"name": "AND",
									"source": 24
								},
								{
									"begin": 2396,
									"end": 2422,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 2396,
									"end": 2422,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 2396,
									"end": 2422,
									"name": "DUP4",
									"source": 24
								},
								{
									"begin": 2396,
									"end": 2422,
									"name": "MUL",
									"source": 24
								},
								{
									"begin": 2396,
									"end": 2422,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 2396,
									"end": 2422,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2396,
									"end": 2422,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 2396,
									"end": 2422,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 2396,
									"end": 2422,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2396,
									"end": 2422,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 2396,
									"end": 2422,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 2396,
									"end": 2458,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F2FDE38B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2468,
									"end": 2477,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 2478,
									"end": 2493,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 2478,
									"end": 2493,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "45"
								},
								{
									"begin": 2478,
									"end": 2493,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2478,
									"end": 2493,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "9"
								},
								{
									"begin": 2478,
									"end": 2493,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 2478,
									"end": 2493,
									"name": "tag",
									"source": 24,
									"value": "45"
								},
								{
									"begin": 2478,
									"end": 2493,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 2478,
									"end": 2493,
									"name": "SWAP4",
									"source": 24
								},
								{
									"begin": 2478,
									"end": 2493,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "MLOAD",
									"source": 24
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "LT",
									"source": 24
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "47"
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "47"
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "12"
								},
								{
									"begin": 2468,
									"end": 2494,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "tag",
									"source": 24,
									"value": "47"
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2468,
									"end": 2531,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2468,
									"end": 2531,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 2468,
									"end": 2531,
									"name": "AND",
									"source": 24
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "DUP4",
									"source": 24
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "MUL",
									"source": 24
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 2468,
									"end": 2531,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "79BA5097"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2550,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 2551,
									"end": 2566,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 2551,
									"end": 2566,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "48"
								},
								{
									"begin": 2551,
									"end": 2566,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2551,
									"end": 2566,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "9"
								},
								{
									"begin": 2551,
									"end": 2566,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 2551,
									"end": 2566,
									"name": "tag",
									"source": 24,
									"value": "48"
								},
								{
									"begin": 2551,
									"end": 2566,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 2551,
									"end": 2566,
									"name": "SWAP4",
									"source": 24
								},
								{
									"begin": 2551,
									"end": 2566,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 2541,
									"end": 2567,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2541,
									"end": 2567,
									"name": "MLOAD",
									"source": 24
								},
								{
									"begin": 2541,
									"end": 2567,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2541,
									"end": 2567,
									"name": "LT",
									"source": 24
								},
								{
									"begin": 2541,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "50"
								},
								{
									"begin": 2541,
									"end": 2567,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 2541,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "50"
								},
								{
									"begin": 2541,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "12"
								},
								{
									"begin": 2541,
									"end": 2567,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 2541,
									"end": 2567,
									"name": "tag",
									"source": 24,
									"value": "50"
								},
								{
									"begin": 2541,
									"end": 2567,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2606,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2541,
									"end": 2606,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 2541,
									"end": 2606,
									"name": "AND",
									"source": 24
								},
								{
									"begin": 2541,
									"end": 2567,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 2541,
									"end": 2567,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 2541,
									"end": 2567,
									"name": "DUP4",
									"source": 24
								},
								{
									"begin": 2541,
									"end": 2567,
									"name": "MUL",
									"source": 24
								},
								{
									"begin": 2541,
									"end": 2567,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 2541,
									"end": 2567,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2541,
									"end": 2567,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 2541,
									"end": 2567,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 2541,
									"end": 2567,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2541,
									"end": 2567,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 2541,
									"end": 2567,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 2541,
									"end": 2606,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 2617,
									"end": 2671,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "51"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "7F5828D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2666,
									"end": 2670,
									"name": "PUSH",
									"source": 24,
									"value": "1"
								},
								{
									"begin": 2617,
									"end": 2638,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "17"
								},
								{
									"begin": 2617,
									"end": 2671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 2617,
									"end": 2671,
									"name": "tag",
									"source": 24,
									"value": "51"
								},
								{
									"begin": 2617,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "PUSH",
									"source": 24,
									"value": "40"
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "MLOAD",
									"source": 24
								},
								{
									"begin": 2751,
									"end": 2752,
									"name": "PUSH",
									"source": 24,
									"value": "1"
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "DUP4",
									"source": 24
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "SWAP3",
									"source": 24
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 2706,
									"end": 2733,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 2706,
									"end": 2733,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "tag",
									"source": 24,
									"value": "55"
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 152,
									"end": 182,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 152,
									"end": 182,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 152,
									"end": 182,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 152,
									"end": 182,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 152,
									"end": 182,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 152,
									"end": 182,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 152,
									"end": 182,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 152,
									"end": 182,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 152,
									"end": 182,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 152,
									"end": 182,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 152,
									"end": 182,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 152,
									"end": 182,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 152,
									"end": 182,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 152,
									"end": 182,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 152,
									"end": 182,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 152,
									"end": 182,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 152,
									"end": 182,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 152,
									"end": 182,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 152,
									"end": 182,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 152,
									"end": 182,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 152,
									"end": 182,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 152,
									"end": 182,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 152,
									"end": 182,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "PUSH",
									"source": 24,
									"value": "1"
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "SUB",
									"source": 24
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "55"
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2736,
									"end": 2753,
									"name": "POP",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2779,
									"end": 2908,
									"name": "PUSH",
									"source": 24,
									"value": "40"
								},
								{
									"begin": 2779,
									"end": 2908,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 2779,
									"end": 2908,
									"name": "MLOAD",
									"source": 24
								},
								{
									"begin": 2779,
									"end": 2908,
									"name": "PUSH",
									"source": 24,
									"value": "60"
								},
								{
									"begin": 2779,
									"end": 2908,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2779,
									"end": 2908,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 2779,
									"end": 2908,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2779,
									"end": 2908,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": 2779,
									"end": 2908,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 2818,
									"end": 2822,
									"name": "ADDRESS",
									"source": 24
								},
								{
									"begin": 2779,
									"end": 2908,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2779,
									"end": 2908,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 2706,
									"end": 2753,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2706,
									"end": 2753,
									"name": "SWAP2",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2779,
									"end": 2908,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 2779,
									"end": 2908,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2779,
									"end": 2908,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2779,
									"end": 2908,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2779,
									"end": 2908,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 2779,
									"end": 2908,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 2779,
									"end": 2908,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 2888,
									"end": 2897,
									"name": "DUP5",
									"source": 24
								},
								{
									"begin": 2779,
									"end": 2908,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2779,
									"end": 2908,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 2779,
									"end": 2908,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 2764,
									"end": 2773,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2774,
									"end": 2775,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 2764,
									"end": 2776,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2764,
									"end": 2776,
									"name": "MLOAD",
									"source": 24
								},
								{
									"begin": 2764,
									"end": 2776,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2764,
									"end": 2776,
									"name": "LT",
									"source": 24
								},
								{
									"begin": 2764,
									"end": 2776,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "62"
								},
								{
									"begin": 2764,
									"end": 2776,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 2764,
									"end": 2776,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "62"
								},
								{
									"begin": 2764,
									"end": 2776,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "12"
								},
								{
									"begin": 2764,
									"end": 2776,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 2764,
									"end": 2776,
									"name": "tag",
									"source": 24,
									"value": "62"
								},
								{
									"begin": 2764,
									"end": 2776,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 2764,
									"end": 2776,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 2764,
									"end": 2776,
									"name": "MUL",
									"source": 24
								},
								{
									"begin": 2764,
									"end": 2776,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 2764,
									"end": 2776,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 2764,
									"end": 2776,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 2764,
									"end": 2908,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2764,
									"end": 2908,
									"name": "SWAP1",
									"source": 24
								},
								{
									"begin": 2764,
									"end": 2908,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 2764,
									"end": 2908,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 2919,
									"end": 2957,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "63"
								},
								{
									"begin": 2931,
									"end": 2940,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2950,
									"end": 2951,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 2919,
									"end": 2957,
									"name": "PUSH",
									"source": 24,
									"value": "40"
								},
								{
									"begin": 2919,
									"end": 2957,
									"name": "MLOAD",
									"source": 24
								},
								{
									"begin": 2919,
									"end": 2957,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 2919,
									"end": 2957,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 2919,
									"end": 2957,
									"name": "ADD",
									"source": 24
								},
								{
									"begin": 2919,
									"end": 2957,
									"name": "PUSH",
									"source": 24,
									"value": "40"
								},
								{
									"begin": 2919,
									"end": 2957,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 2919,
									"end": 2957,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 2919,
									"end": 2957,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 2919,
									"end": 2957,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 2919,
									"end": 2957,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 2919,
									"end": 2957,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 2919,
									"end": 2930,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "64"
								},
								{
									"begin": 2919,
									"end": 2930,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 2919,
									"end": 2930,
									"name": "SHL",
									"source": 24
								},
								{
									"begin": 2919,
									"end": 2957,
									"name": "PUSH",
									"source": 24,
									"value": "20"
								},
								{
									"begin": 2919,
									"end": 2957,
									"name": "SHR",
									"source": 24
								},
								{
									"begin": 2919,
									"end": 2957,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 2919,
									"end": 2957,
									"name": "tag",
									"source": 24,
									"value": "63"
								},
								{
									"begin": 2919,
									"end": 2957,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 2990,
									"end": 3011,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "65"
								},
								{
									"begin": 3000,
									"end": 3010,
									"name": "CALLER",
									"source": 24
								},
								{
									"begin": 2990,
									"end": 2999,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "66"
								},
								{
									"begin": 2990,
									"end": 3011,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 24
								},
								{
									"begin": 2990,
									"end": 3011,
									"name": "tag",
									"source": 24,
									"value": "65"
								},
								{
									"begin": 2990,
									"end": 3011,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 1070,
									"end": 3018,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 1070,
									"end": 3018,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 1070,
									"end": 3018,
									"name": "POP",
									"source": 24
								},
								{
									"begin": 152,
									"end": 182,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "173"
								},
								{
									"begin": 152,
									"end": 182,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 907,
									"end": 1175,
									"name": "tag",
									"source": 17,
									"value": "17"
								},
								{
									"begin": 907,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1024,
									"end": 1049,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1024,
									"end": 1049,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 1024,
									"end": 1049,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1024,
									"end": 1049,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1024,
									"end": 1049,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 1020,
									"end": 1090,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "69"
								},
								{
									"begin": 1020,
									"end": 1090,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1058,
									"end": 1090,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1090,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B0A19DD5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1058,
									"end": 1090,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1058,
									"end": 1090,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1058,
									"end": 1090,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 1058,
									"end": 1090,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1058,
									"end": 1090,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1090,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 1058,
									"end": 1090,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1058,
									"end": 1090,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1058,
									"end": 1090,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 1058,
									"end": 1090,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1058,
									"end": 1090,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1020,
									"end": 1090,
									"name": "tag",
									"source": 17,
									"value": "69"
								},
								{
									"begin": 1020,
									"end": 1090,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1100,
									"end": 1159,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1100,
									"end": 1159,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1100,
									"end": 1159,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1100,
									"end": 1159,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1100,
									"end": 1146,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1100,
									"end": 1159,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1100,
									"end": 1159,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1100,
									"end": 1159,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 219,
									"end": 271,
									"name": "PUSH",
									"source": 18,
									"value": "FC606C433378E3A7E0A6A531DEAC289B66CAA1B4AA8554FD4AB2C6F1570F92D8"
								},
								{
									"begin": 1100,
									"end": 1159,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1100,
									"end": 1159,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1100,
									"end": 1159,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1100,
									"end": 1159,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1100,
									"end": 1159,
									"name": "KECCAK256",
									"source": 17
								},
								{
									"begin": 1100,
									"end": 1168,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1100,
									"end": 1168,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1100,
									"end": 1168,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1100,
									"end": 1168,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1100,
									"end": 1168,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1100,
									"end": 1168,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1100,
									"end": 1168,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1100,
									"end": 1168,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1100,
									"end": 1168,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1100,
									"end": 1168,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 1100,
									"end": 1168,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1100,
									"end": 1168,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 907,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 849,
									"end": 2892,
									"name": "tag",
									"source": 33,
									"value": "64"
								},
								{
									"begin": 849,
									"end": 2892,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 1123,
									"end": 1138,
									"name": "PUSH",
									"source": 33,
									"value": "177481AC65E4292921C69F62D1CC7F57541261E5D61C8175CF4E36A01C9BFC94"
								},
								{
									"begin": 1123,
									"end": 1138,
									"name": "SLOAD",
									"source": 33
								},
								{
									"begin": 584,
									"end": 637,
									"name": "PUSH",
									"source": 26,
									"value": "177481AC65E4292921C69F62D1CC7F57541261E5D61C8175CF4E36A01C9BFC93"
								},
								{
									"begin": 584,
									"end": 637,
									"name": "SWAP1",
									"source": 26
								},
								{
									"begin": 1123,
									"end": 1138,
									"name": "PUSH",
									"source": 33,
									"value": "FFFF"
								},
								{
									"begin": 1123,
									"end": 1138,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 1123,
									"end": 1138,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 1123,
									"end": 1138,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 1123,
									"end": 1138,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 1123,
									"end": 1138,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 1321,
									"end": 1322,
									"name": "PUSH",
									"source": 33,
									"value": "7"
								},
								{
									"begin": 1305,
									"end": 1322,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 1305,
									"end": 1326,
									"name": "ISZERO",
									"source": 33
								},
								{
									"begin": 1301,
									"end": 1452,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "75"
								},
								{
									"begin": 1301,
									"end": 1452,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1435,
									"end": 1436,
									"name": "PUSH",
									"source": 33,
									"value": "3"
								},
								{
									"begin": 1418,
									"end": 1436,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 1418,
									"end": 1436,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 1418,
									"end": 1436,
									"name": "SHR",
									"source": 33
								},
								{
									"begin": 1402,
									"end": 1437,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 1402,
									"end": 1437,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 1402,
									"end": 1437,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 1402,
									"end": 1437,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 1402,
									"end": 1417,
									"name": "PUSH",
									"source": 33,
									"value": "2"
								},
								{
									"begin": 1402,
									"end": 1417,
									"name": "DUP5",
									"source": 33
								},
								{
									"begin": 1402,
									"end": 1417,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 1402,
									"end": 1437,
									"name": "PUSH",
									"source": 33,
									"value": "20"
								},
								{
									"begin": 1402,
									"end": 1437,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 1402,
									"end": 1437,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 1402,
									"end": 1437,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 1402,
									"end": 1437,
									"name": "KECCAK256",
									"source": 33
								},
								{
									"begin": 1402,
									"end": 1437,
									"name": "SLOAD",
									"source": 33
								},
								{
									"begin": 1301,
									"end": 1452,
									"name": "tag",
									"source": 33,
									"value": "75"
								},
								{
									"begin": 1301,
									"end": 1452,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 1471,
									"end": 1480,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 2479,
									"name": "tag",
									"source": 33,
									"value": "76"
								},
								{
									"begin": 1466,
									"end": 2479,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 1486,
									"end": 1495,
									"name": "DUP8",
									"source": 33
								},
								{
									"begin": 1486,
									"end": 1502,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 1482,
									"end": 1483,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 1482,
									"end": 1502,
									"name": "LT",
									"source": 33
								},
								{
									"begin": 1466,
									"end": 2479,
									"name": "ISZERO",
									"source": 33
								},
								{
									"begin": 1466,
									"end": 2479,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "77"
								},
								{
									"begin": 1466,
									"end": 2479,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 1527,
									"end": 1551,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 1554,
									"end": 1563,
									"name": "DUP9",
									"source": 33
								},
								{
									"begin": 1564,
									"end": 1565,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 1554,
									"end": 1566,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 1554,
									"end": 1566,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 1554,
									"end": 1566,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 1554,
									"end": 1566,
									"name": "LT",
									"source": 33
								},
								{
									"begin": 1554,
									"end": 1566,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "80"
								},
								{
									"begin": 1554,
									"end": 1566,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 1554,
									"end": 1566,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "80"
								},
								{
									"begin": 1554,
									"end": 1566,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "12"
								},
								{
									"begin": 1554,
									"end": 1566,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 33
								},
								{
									"begin": 1554,
									"end": 1566,
									"name": "tag",
									"source": 33,
									"value": "80"
								},
								{
									"begin": 1554,
									"end": 1566,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 1554,
									"end": 1566,
									"name": "PUSH",
									"source": 33,
									"value": "20"
								},
								{
									"begin": 1554,
									"end": 1566,
									"name": "MUL",
									"source": 33
								},
								{
									"begin": 1554,
									"end": 1566,
									"name": "PUSH",
									"source": 33,
									"value": "20"
								},
								{
									"begin": 1554,
									"end": 1566,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 1554,
									"end": 1566,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 1554,
									"end": 1566,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 1527,
									"end": 1566,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 1527,
									"end": 1566,
									"name": "POP",
									"source": 33
								},
								{
									"begin": 1584,
									"end": 1605,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 1608,
									"end": 1616,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 1608,
									"end": 1623,
									"name": "PUSH",
									"source": 33,
									"value": "20"
								},
								{
									"begin": 1608,
									"end": 1623,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 1608,
									"end": 1623,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 1584,
									"end": 1623,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 1584,
									"end": 1623,
									"name": "POP",
									"source": 33
								},
								{
									"begin": 1646,
									"end": 1654,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 1646,
									"end": 1664,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 1646,
									"end": 1664,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 1646,
									"end": 1664,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 1646,
									"end": 1671,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 1675,
									"end": 1676,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 1646,
									"end": 1676,
									"name": "SUB",
									"source": 33
								},
								{
									"begin": 1642,
									"end": 1744,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "81"
								},
								{
									"begin": 1642,
									"end": 1744,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 1705,
									"end": 1744,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 1705,
									"end": 1744,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EB6C3AEB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1705,
									"end": 1744,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 1705,
									"end": 1744,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 1705,
									"end": 1744,
									"name": "PUSH",
									"source": 33,
									"value": "4"
								},
								{
									"begin": 1705,
									"end": 1744,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 1705,
									"end": 1744,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 1705,
									"end": 1744,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 1705,
									"end": 1744,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 1705,
									"end": 1744,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 1705,
									"end": 1744,
									"name": "SUB",
									"source": 33
								},
								{
									"begin": 1705,
									"end": 1744,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 1705,
									"end": 1744,
									"name": "REVERT",
									"source": 33
								},
								{
									"begin": 1642,
									"end": 1744,
									"name": "tag",
									"source": 33,
									"value": "81"
								},
								{
									"begin": 1642,
									"end": 1744,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 1767,
									"end": 1773,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 1767,
									"end": 1795,
									"name": "PUSH",
									"source": 33,
									"value": "2"
								},
								{
									"begin": 1767,
									"end": 1795,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 1767,
									"end": 1795,
									"name": "GT",
									"source": 33
								},
								{
									"begin": 1767,
									"end": 1795,
									"name": "ISZERO",
									"source": 33
								},
								{
									"begin": 1767,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "85"
								},
								{
									"begin": 1767,
									"end": 1795,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 1767,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "85"
								},
								{
									"begin": 1767,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "60"
								},
								{
									"begin": 1767,
									"end": 1795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 33
								},
								{
									"begin": 1767,
									"end": 1795,
									"name": "tag",
									"source": 33,
									"value": "85"
								},
								{
									"begin": 1767,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 1767,
									"end": 1795,
									"name": "SUB",
									"source": 33
								},
								{
									"begin": 1763,
									"end": 2465,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "86"
								},
								{
									"begin": 1763,
									"end": 2465,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 1851,
									"end": 2029,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "87"
								},
								{
									"begin": 1895,
									"end": 1896,
									"name": "DUP8",
									"source": 33
								},
								{
									"begin": 1922,
									"end": 1935,
									"name": "DUP7",
									"source": 33
								},
								{
									"begin": 1961,
									"end": 1973,
									"name": "DUP7",
									"source": 33
								},
								{
									"begin": 1999,
									"end": 2007,
									"name": "DUP6",
									"source": 33
								},
								{
									"begin": 1851,
									"end": 1869,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "88"
								},
								{
									"begin": 1851,
									"end": 2029,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 33
								},
								{
									"begin": 1851,
									"end": 2029,
									"name": "tag",
									"source": 33,
									"value": "87"
								},
								{
									"begin": 1851,
									"end": 2029,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 1819,
									"end": 2029,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 1819,
									"end": 2029,
									"name": "SWAP6",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1819,
									"end": 2029,
									"name": "SWAP4",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1763,
									"end": 2465,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "102"
								},
								{
									"begin": 1763,
									"end": 2465,
									"name": "JUMP",
									"source": 33
								},
								{
									"begin": 1763,
									"end": 2465,
									"name": "tag",
									"source": 33,
									"value": "86"
								},
								{
									"begin": 1763,
									"end": 2465,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 2068,
									"end": 2090,
									"name": "PUSH",
									"source": 33,
									"value": "1"
								},
								{
									"begin": 2058,
									"end": 2064,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 2058,
									"end": 2090,
									"name": "PUSH",
									"source": 33,
									"value": "2"
								},
								{
									"begin": 2058,
									"end": 2090,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 2058,
									"end": 2090,
									"name": "GT",
									"source": 33
								},
								{
									"begin": 2058,
									"end": 2090,
									"name": "ISZERO",
									"source": 33
								},
								{
									"begin": 2058,
									"end": 2090,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "93"
								},
								{
									"begin": 2058,
									"end": 2090,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 2058,
									"end": 2090,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "93"
								},
								{
									"begin": 2058,
									"end": 2090,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "60"
								},
								{
									"begin": 2058,
									"end": 2090,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 33
								},
								{
									"begin": 2058,
									"end": 2090,
									"name": "tag",
									"source": 33,
									"value": "93"
								},
								{
									"begin": 2058,
									"end": 2090,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 2058,
									"end": 2090,
									"name": "SUB",
									"source": 33
								},
								{
									"begin": 2054,
									"end": 2465,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "94"
								},
								{
									"begin": 2054,
									"end": 2465,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 2114,
									"end": 2149,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "95"
								},
								{
									"begin": 2137,
									"end": 2138,
									"name": "DUP8",
									"source": 33
								},
								{
									"begin": 2140,
									"end": 2148,
									"name": "DUP4",
									"source": 33
								},
								{
									"begin": 2114,
									"end": 2136,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "96"
								},
								{
									"begin": 2114,
									"end": 2149,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 33
								},
								{
									"begin": 2114,
									"end": 2149,
									"name": "tag",
									"source": 33,
									"value": "95"
								},
								{
									"begin": 2114,
									"end": 2149,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 2054,
									"end": 2465,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "102"
								},
								{
									"begin": 2054,
									"end": 2465,
									"name": "JUMP",
									"source": 33
								},
								{
									"begin": 2054,
									"end": 2465,
									"name": "tag",
									"source": 33,
									"value": "94"
								},
								{
									"begin": 2054,
									"end": 2465,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 2188,
									"end": 2209,
									"name": "PUSH",
									"source": 33,
									"value": "2"
								},
								{
									"begin": 2178,
									"end": 2184,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 2178,
									"end": 2209,
									"name": "PUSH",
									"source": 33,
									"value": "2"
								},
								{
									"begin": 2178,
									"end": 2209,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 2178,
									"end": 2209,
									"name": "GT",
									"source": 33
								},
								{
									"begin": 2178,
									"end": 2209,
									"name": "ISZERO",
									"source": 33
								},
								{
									"begin": 2178,
									"end": 2209,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "101"
								},
								{
									"begin": 2178,
									"end": 2209,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 2178,
									"end": 2209,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "101"
								},
								{
									"begin": 2178,
									"end": 2209,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "60"
								},
								{
									"begin": 2178,
									"end": 2209,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 33
								},
								{
									"begin": 2178,
									"end": 2209,
									"name": "tag",
									"source": 33,
									"value": "101"
								},
								{
									"begin": 2178,
									"end": 2209,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 2178,
									"end": 2209,
									"name": "SUB",
									"source": 33
								},
								{
									"begin": 2174,
									"end": 2465,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "102"
								},
								{
									"begin": 2174,
									"end": 2465,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 2265,
									"end": 2446,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "103"
								},
								{
									"begin": 2312,
									"end": 2313,
									"name": "DUP8",
									"source": 33
								},
								{
									"begin": 2339,
									"end": 2352,
									"name": "DUP7",
									"source": 33
								},
								{
									"begin": 2378,
									"end": 2390,
									"name": "DUP7",
									"source": 33
								},
								{
									"begin": 2416,
									"end": 2424,
									"name": "DUP6",
									"source": 33
								},
								{
									"begin": 2265,
									"end": 2286,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "104"
								},
								{
									"begin": 2265,
									"end": 2446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 33
								},
								{
									"begin": 2265,
									"end": 2446,
									"name": "tag",
									"source": 33,
									"value": "103"
								},
								{
									"begin": 2265,
									"end": 2446,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 2233,
									"end": 2446,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 2233,
									"end": 2446,
									"name": "SWAP6",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2233,
									"end": 2446,
									"name": "SWAP4",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2174,
									"end": 2465,
									"name": "tag",
									"source": 33,
									"value": "102"
								},
								{
									"begin": 2174,
									"end": 2465,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1504,
									"end": 1507,
									"name": "PUSH",
									"source": 33,
									"value": "1"
								},
								{
									"begin": 1504,
									"end": 1507,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 1466,
									"end": 2479,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "76"
								},
								{
									"begin": 1466,
									"end": 2479,
									"name": "JUMP",
									"source": 33
								},
								{
									"begin": 1466,
									"end": 2479,
									"name": "tag",
									"source": 33,
									"value": "77"
								},
								{
									"begin": 1466,
									"end": 2479,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 1466,
									"end": 2479,
									"name": "POP",
									"source": 33
								},
								{
									"begin": 2514,
									"end": 2535,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 2497,
									"end": 2510,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 2497,
									"end": 2535,
									"name": "EQ",
									"source": 33
								},
								{
									"begin": 2493,
									"end": 2609,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "105"
								},
								{
									"begin": 2493,
									"end": 2609,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 2555,
									"end": 2570,
									"name": "PUSH",
									"source": 33,
									"value": "1"
								},
								{
									"begin": 2555,
									"end": 2570,
									"name": "DUP5",
									"source": 33
								},
								{
									"begin": 2555,
									"end": 2570,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 2555,
									"end": 2594,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 2555,
									"end": 2594,
									"name": "SLOAD",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2555,
									"end": 2594,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 2555,
									"end": 2594,
									"name": "PUSH",
									"source": 33,
									"value": "FFFF"
								},
								{
									"begin": 2555,
									"end": 2594,
									"name": "DUP5",
									"source": 33
								},
								{
									"begin": 2555,
									"end": 2594,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 2555,
									"end": 2594,
									"name": "OR",
									"source": 33
								},
								{
									"begin": 2555,
									"end": 2594,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 2555,
									"end": 2594,
									"name": "SSTORE",
									"source": 33
								},
								{
									"begin": 2493,
									"end": 2609,
									"name": "tag",
									"source": 33,
									"value": "105"
								},
								{
									"begin": 2493,
									"end": 2609,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 2692,
									"end": 2693,
									"name": "PUSH",
									"source": 33,
									"value": "7"
								},
								{
									"begin": 2676,
									"end": 2693,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 2676,
									"end": 2693,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 2676,
									"end": 2697,
									"name": "ISZERO",
									"source": 33
								},
								{
									"begin": 2672,
									"end": 2782,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "106"
								},
								{
									"begin": 2672,
									"end": 2782,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 2750,
									"end": 2751,
									"name": "PUSH",
									"source": 33,
									"value": "3"
								},
								{
									"begin": 2733,
									"end": 2751,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 2733,
									"end": 2751,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 2733,
									"end": 2751,
									"name": "SHR",
									"source": 33
								},
								{
									"begin": 2717,
									"end": 2752,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 2717,
									"end": 2752,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 2717,
									"end": 2752,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 2717,
									"end": 2752,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 2717,
									"end": 2732,
									"name": "PUSH",
									"source": 33,
									"value": "2"
								},
								{
									"begin": 2717,
									"end": 2732,
									"name": "DUP6",
									"source": 33
								},
								{
									"begin": 2717,
									"end": 2732,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 2717,
									"end": 2752,
									"name": "PUSH",
									"source": 33,
									"value": "20"
								},
								{
									"begin": 2717,
									"end": 2752,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 2717,
									"end": 2752,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 2717,
									"end": 2752,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 2717,
									"end": 2752,
									"name": "KECCAK256",
									"source": 33
								},
								{
									"begin": 2717,
									"end": 2767,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 2717,
									"end": 2767,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 2717,
									"end": 2767,
									"name": "SSTORE",
									"source": 33
								},
								{
									"begin": 2672,
									"end": 2782,
									"name": "tag",
									"source": 33,
									"value": "106"
								},
								{
									"begin": 2672,
									"end": 2782,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 2801,
									"end": 2836,
									"name": "PUSH",
									"source": 33,
									"value": "8FAA70878671CCD212D20771B795C50AF8FD3FF6CF27F4BDE57E5D4DE0AEB673"
								},
								{
									"begin": 2812,
									"end": 2821,
									"name": "DUP8",
									"source": 33
								},
								{
									"begin": 2823,
									"end": 2829,
									"name": "DUP8",
									"source": 33
								},
								{
									"begin": 2831,
									"end": 2835,
									"name": "DUP8",
									"source": 33
								},
								{
									"begin": 2801,
									"end": 2836,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 2801,
									"end": 2836,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 2801,
									"end": 2836,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "107"
								},
								{
									"begin": 2801,
									"end": 2836,
									"name": "SWAP4",
									"source": 33
								},
								{
									"begin": 2801,
									"end": 2836,
									"name": "SWAP3",
									"source": 33
								},
								{
									"begin": 2801,
									"end": 2836,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 2801,
									"end": 2836,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 2801,
									"end": 2836,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "108"
								},
								{
									"begin": 2801,
									"end": 2836,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 33
								},
								{
									"begin": 2801,
									"end": 2836,
									"name": "tag",
									"source": 33,
									"value": "107"
								},
								{
									"begin": 2801,
									"end": 2836,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 2801,
									"end": 2836,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 2801,
									"end": 2836,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 2801,
									"end": 2836,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 2801,
									"end": 2836,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 2801,
									"end": 2836,
									"name": "SUB",
									"source": 33
								},
								{
									"begin": 2801,
									"end": 2836,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 2801,
									"end": 2836,
									"name": "LOG1",
									"source": 33
								},
								{
									"begin": 2850,
									"end": 2875,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "109"
								},
								{
									"begin": 2862,
									"end": 2868,
									"name": "DUP7",
									"source": 33
								},
								{
									"begin": 2870,
									"end": 2874,
									"name": "DUP7",
									"source": 33
								},
								{
									"begin": 2850,
									"end": 2861,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "110"
								},
								{
									"begin": 2850,
									"end": 2875,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 33
								},
								{
									"begin": 2850,
									"end": 2875,
									"name": "tag",
									"source": 33,
									"value": "109"
								},
								{
									"begin": 2850,
									"end": 2875,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 1067,
									"end": 2886,
									"name": "POP",
									"source": 33
								},
								{
									"begin": 1067,
									"end": 2886,
									"name": "POP",
									"source": 33
								},
								{
									"begin": 1067,
									"end": 2886,
									"name": "POP",
									"source": 33
								},
								{
									"begin": 981,
									"end": 2892,
									"name": "POP",
									"source": 33
								},
								{
									"begin": 849,
									"end": 2892,
									"name": "POP",
									"source": 33
								},
								{
									"begin": 849,
									"end": 2892,
									"name": "POP",
									"source": 33
								},
								{
									"begin": 849,
									"end": 2892,
									"name": "POP",
									"source": 33
								},
								{
									"begin": 849,
									"end": 2892,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 33
								},
								{
									"begin": 1203,
									"end": 1410,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1203,
									"end": 1410,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 186,
									"end": 235,
									"name": "PUSH",
									"source": 8,
									"value": "8A22373512790C48B83A1FE2EFDD2888D4A917BCDC24D0ADF63E60F671680460"
								},
								{
									"begin": 1359,
									"end": 1366,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1366,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1338,
									"end": 1376,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1338,
									"end": 1376,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1338,
									"end": 1376,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1338,
									"end": 1376,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1338,
									"end": 1376,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1338,
									"end": 1376,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1366,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1366,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1338,
									"end": 1376,
									"name": "PUSH",
									"source": 7,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 1338,
									"end": 1376,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1266,
									"end": 1297,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1266,
									"end": 1297,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1338,
									"end": 1376,
									"name": "LOG3",
									"source": 7
								},
								{
									"begin": 1386,
									"end": 1403,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1386,
									"end": 1403,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1386,
									"end": 1403,
									"name": "AND",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1386,
									"end": 1403,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1386,
									"end": 1403,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1386,
									"end": 1403,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1386,
									"end": 1403,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1386,
									"end": 1403,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1386,
									"end": 1403,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1386,
									"end": 1403,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1386,
									"end": 1403,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1386,
									"end": 1403,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1386,
									"end": 1403,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1203,
									"end": 1410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2898,
									"end": 4493,
									"name": "tag",
									"source": 33,
									"value": "88"
								},
								{
									"begin": 2898,
									"end": 4493,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 3163,
									"end": 3178,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 3163,
									"end": 3178,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 3090,
									"end": 3097,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 3090,
									"end": 3097,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 3090,
									"end": 3097,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 3090,
									"end": 3097,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3163,
									"end": 3195,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 3190,
									"end": 3194,
									"name": "ADDRESS",
									"source": 33
								},
								{
									"begin": 3163,
									"end": 3195,
									"name": "EQ",
									"source": 33
								},
								{
									"begin": 3163,
									"end": 3195,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 3163,
									"end": 3195,
									"name": "ISZERO",
									"source": 33
								},
								{
									"begin": 3163,
									"end": 3195,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 3163,
									"end": 3244,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "117"
								},
								{
									"begin": 3163,
									"end": 3244,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3216,
									"end": 3231,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 3216,
									"end": 3231,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3216,
									"end": 3242,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 568,
									"end": 588,
									"name": "EXTCODESIZE",
									"source": 36
								},
								{
									"begin": 614,
									"end": 622,
									"name": "ISZERO",
									"source": 36
								},
								{
									"begin": 3163,
									"end": 3244,
									"name": "tag",
									"source": 33,
									"value": "117"
								},
								{
									"begin": 3163,
									"end": 3244,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 3142,
									"end": 3300,
									"name": "ISZERO",
									"source": 33
								},
								{
									"begin": 3142,
									"end": 3300,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "120"
								},
								{
									"begin": 3142,
									"end": 3300,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 3266,
									"end": 3300,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 3266,
									"end": 3300,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "3DDC5CAB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3266,
									"end": 3300,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 3266,
									"end": 3300,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 3266,
									"end": 3300,
									"name": "PUSH",
									"source": 33,
									"value": "4"
								},
								{
									"begin": 3266,
									"end": 3300,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 3266,
									"end": 3300,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 3266,
									"end": 3300,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 3266,
									"end": 3300,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 3266,
									"end": 3300,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 3266,
									"end": 3300,
									"name": "SUB",
									"source": 33
								},
								{
									"begin": 3266,
									"end": 3300,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 3266,
									"end": 3300,
									"name": "REVERT",
									"source": 33
								},
								{
									"begin": 3142,
									"end": 3300,
									"name": "tag",
									"source": 33,
									"value": "120"
								},
								{
									"begin": 3142,
									"end": 3300,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 3320,
									"end": 3329,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 3315,
									"end": 4426,
									"name": "tag",
									"source": 33,
									"value": "121"
								},
								{
									"begin": 3315,
									"end": 4426,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 3335,
									"end": 3343,
									"name": "DUP4",
									"source": 33
								},
								{
									"begin": 3335,
									"end": 3353,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 3335,
									"end": 3353,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 3335,
									"end": 3353,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 3335,
									"end": 3360,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 3331,
									"end": 3332,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 3331,
									"end": 3360,
									"name": "LT",
									"source": 33
								},
								{
									"begin": 3315,
									"end": 4426,
									"name": "ISZERO",
									"source": 33
								},
								{
									"begin": 3315,
									"end": 4426,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "122"
								},
								{
									"begin": 3315,
									"end": 4426,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 3385,
									"end": 3400,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 3403,
									"end": 3411,
									"name": "DUP5",
									"source": 33
								},
								{
									"begin": 3403,
									"end": 3421,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 3403,
									"end": 3421,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 3403,
									"end": 3421,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 3422,
									"end": 3423,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 3403,
									"end": 3424,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 3403,
									"end": 3424,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 3403,
									"end": 3424,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 3403,
									"end": 3424,
									"name": "LT",
									"source": 33
								},
								{
									"begin": 3403,
									"end": 3424,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "125"
								},
								{
									"begin": 3403,
									"end": 3424,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 3403,
									"end": 3424,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "125"
								},
								{
									"begin": 3403,
									"end": 3424,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "12"
								},
								{
									"begin": 3403,
									"end": 3424,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 33
								},
								{
									"begin": 3403,
									"end": 3424,
									"name": "tag",
									"source": 33,
									"value": "125"
								},
								{
									"begin": 3403,
									"end": 3424,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 3403,
									"end": 3424,
									"name": "PUSH",
									"source": 33,
									"value": "20"
								},
								{
									"begin": 3403,
									"end": 3424,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 3403,
									"end": 3424,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 3403,
									"end": 3424,
									"name": "MUL",
									"source": 33
								},
								{
									"begin": 3403,
									"end": 3424,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 3403,
									"end": 3424,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 3403,
									"end": 3424,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 3403,
									"end": 3424,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 3403,
									"end": 3424,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 3403,
									"end": 3424,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 3403,
									"end": 3424,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3461,
									"end": 3479,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 3461,
									"end": 3479,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 3442,
									"end": 3458,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 3461,
									"end": 3479,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 3461,
									"end": 3479,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 3461,
									"end": 3479,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 3461,
									"end": 3479,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 3461,
									"end": 3479,
									"name": "DUP11",
									"source": 33
								},
								{
									"begin": 3461,
									"end": 3479,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 3461,
									"end": 3479,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 3461,
									"end": 3479,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 3461,
									"end": 3479,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 3461,
									"end": 3479,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 3461,
									"end": 3479,
									"name": "KECCAK256",
									"source": 33
								},
								{
									"begin": 3461,
									"end": 3479,
									"name": "SLOAD",
									"source": 33
								},
								{
									"begin": 3403,
									"end": 3424,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 3403,
									"end": 3424,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3502,
									"end": 3528,
									"name": "PUSH",
									"source": 33,
									"value": "60"
								},
								{
									"begin": 3502,
									"end": 3528,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 3502,
									"end": 3528,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 3502,
									"end": 3528,
									"name": "SHR",
									"source": 33
								},
								{
									"begin": 3502,
									"end": 3542,
									"name": "ISZERO",
									"source": 33
								},
								{
									"begin": 3498,
									"end": 3610,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "126"
								},
								{
									"begin": 3498,
									"end": 3610,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 3571,
									"end": 3610,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 3571,
									"end": 3610,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4923A771"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3571,
									"end": 3610,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 3571,
									"end": 3610,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 3571,
									"end": 3610,
									"name": "PUSH",
									"source": 33,
									"value": "4"
								},
								{
									"begin": 3571,
									"end": 3610,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 3571,
									"end": 3610,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 3571,
									"end": 3610,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 3571,
									"end": 3610,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 3571,
									"end": 3610,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 3571,
									"end": 3610,
									"name": "SUB",
									"source": 33
								},
								{
									"begin": 3571,
									"end": 3610,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 3571,
									"end": 3610,
									"name": "REVERT",
									"source": 33
								},
								{
									"begin": 3498,
									"end": 3610,
									"name": "tag",
									"source": 33,
									"value": "126"
								},
								{
									"begin": 3498,
									"end": 3610,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 3720,
									"end": 3735,
									"name": "DUP6",
									"source": 33
								},
								{
									"begin": 3720,
									"end": 3735,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3671,
									"end": 3689,
									"name": "DUP4",
									"source": 33
								},
								{
									"begin": 3671,
									"end": 3689,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 3671,
									"end": 3689,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 3759,
									"end": 3781,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 3671,
									"end": 3689,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 3671,
									"end": 3689,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 3671,
									"end": 3689,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 3671,
									"end": 3689,
									"name": "PUSH",
									"source": 33,
									"value": "20"
								},
								{
									"begin": 3671,
									"end": 3689,
									"name": "DUP14",
									"source": 33
								},
								{
									"begin": 3671,
									"end": 3689,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 3671,
									"end": 3689,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 3671,
									"end": 3689,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 3671,
									"end": 3689,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 3671,
									"end": 3689,
									"name": "KECCAK256",
									"source": 33
								},
								{
									"begin": 3712,
									"end": 3736,
									"name": "PUSH",
									"source": 33,
									"value": "60"
								},
								{
									"begin": 3712,
									"end": 3736,
									"name": "SWAP4",
									"source": 33
								},
								{
									"begin": 3712,
									"end": 3736,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 3712,
									"end": 3736,
									"name": "SWAP4",
									"source": 33
								},
								{
									"begin": 3712,
									"end": 3736,
									"name": "SHL",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3712,
									"end": 3781,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 3712,
									"end": 3781,
									"name": "DUP12",
									"source": 33
								},
								{
									"begin": 3712,
									"end": 3781,
									"name": "OR",
									"source": 33
								},
								{
									"begin": 3671,
									"end": 3781,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 3671,
									"end": 3781,
									"name": "SWAP3",
									"source": 33
								},
								{
									"begin": 3671,
									"end": 3781,
									"name": "SSTORE",
									"source": 33
								},
								{
									"begin": 3855,
									"end": 3856,
									"name": "PUSH",
									"source": 33,
									"value": "5"
								},
								{
									"begin": 3832,
									"end": 3856,
									"name": "DUP11",
									"source": 33
								},
								{
									"begin": 3832,
									"end": 3856,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 3832,
									"end": 3856,
									"name": "SHL",
									"source": 33
								},
								{
									"begin": 3832,
									"end": 3856,
									"name": "PUSH",
									"source": 33,
									"value": "E0"
								},
								{
									"begin": 3832,
									"end": 3856,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 3832,
									"end": 3856,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 3832,
									"end": 3856,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 4091,
									"end": 4134,
									"name": "SWAP3",
									"source": 33
								},
								{
									"begin": 4091,
									"end": 4134,
									"name": "DUP4",
									"source": 33
								},
								{
									"begin": 4091,
									"end": 4134,
									"name": "SHR",
									"source": 33
								},
								{
									"begin": 4020,
									"end": 4065,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 4020,
									"end": 4065,
									"name": "DUP4",
									"source": 33
								},
								{
									"begin": 4020,
									"end": 4065,
									"name": "SHR",
									"source": 33
								},
								{
									"begin": 4018,
									"end": 4066,
									"name": "NOT",
									"source": 33
								},
								{
									"begin": 3979,
									"end": 4066,
									"name": "SWAP10",
									"source": 33
								},
								{
									"begin": 3979,
									"end": 4066,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 3979,
									"end": 4066,
									"name": "SWAP10",
									"source": 33
								},
								{
									"begin": 3979,
									"end": 4066,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 3978,
									"end": 4135,
									"name": "OR",
									"source": 33
								},
								{
									"begin": 3978,
									"end": 4135,
									"name": "SWAP8",
									"source": 33
								},
								{
									"begin": 4218,
									"end": 4247,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 4218,
									"end": 4247,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 4218,
									"end": 4247,
									"name": "SUB",
									"source": 33
								},
								{
									"begin": 4214,
									"end": 4378,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "127"
								},
								{
									"begin": 4214,
									"end": 4378,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 4304,
									"end": 4305,
									"name": "PUSH",
									"source": 33,
									"value": "3"
								},
								{
									"begin": 4287,
									"end": 4305,
									"name": "DUP10",
									"source": 33
								},
								{
									"begin": 4287,
									"end": 4305,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 4287,
									"end": 4305,
									"name": "SHR",
									"source": 33
								},
								{
									"begin": 4271,
									"end": 4306,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 4271,
									"end": 4306,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 4271,
									"end": 4306,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 4271,
									"end": 4306,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 4271,
									"end": 4286,
									"name": "PUSH",
									"source": 33,
									"value": "2"
								},
								{
									"begin": 4271,
									"end": 4286,
									"name": "DUP12",
									"source": 33
								},
								{
									"begin": 4271,
									"end": 4286,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 4271,
									"end": 4306,
									"name": "PUSH",
									"source": 33,
									"value": "20"
								},
								{
									"begin": 4271,
									"end": 4306,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 4271,
									"end": 4306,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 4271,
									"end": 4306,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 4271,
									"end": 4306,
									"name": "KECCAK256",
									"source": 33
								},
								{
									"begin": 4271,
									"end": 4321,
									"name": "SWAP9",
									"source": 33
								},
								{
									"begin": 4271,
									"end": 4321,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 4271,
									"end": 4321,
									"name": "SWAP9",
									"source": 33
								},
								{
									"begin": 4271,
									"end": 4321,
									"name": "SSTORE",
									"source": 33
								},
								{
									"begin": 4214,
									"end": 4378,
									"name": "tag",
									"source": 33,
									"value": "127"
								},
								{
									"begin": 4214,
									"end": 4378,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4396,
									"end": 4411,
									"name": "PUSH",
									"source": 33,
									"value": "1"
								},
								{
									"begin": 4396,
									"end": 4411,
									"name": "SWAP6",
									"source": 33
								},
								{
									"begin": 4396,
									"end": 4411,
									"name": "DUP7",
									"source": 33
								},
								{
									"begin": 4396,
									"end": 4411,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 4396,
									"end": 4411,
									"name": "SWAP6",
									"source": 33
								},
								{
									"begin": 3362,
									"end": 3365,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 3315,
									"end": 4426,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "121"
								},
								{
									"begin": 3315,
									"end": 4426,
									"name": "JUMP",
									"source": 33
								},
								{
									"begin": 3315,
									"end": 4426,
									"name": "tag",
									"source": 33,
									"value": "122"
								},
								{
									"begin": 3315,
									"end": 4426,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4448,
									"end": 4461,
									"name": "SWAP4",
									"source": 33
								},
								{
									"begin": 4448,
									"end": 4461,
									"name": "SWAP6",
									"source": 33
								},
								{
									"begin": 4463,
									"end": 4475,
									"name": "SWAP3",
									"source": 33
								},
								{
									"begin": 4463,
									"end": 4475,
									"name": "SWAP5",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2898,
									"end": 4493,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 2898,
									"end": 4493,
									"name": "SWAP3",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2898,
									"end": 4493,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 33
								},
								{
									"begin": 8179,
									"end": 9259,
									"name": "tag",
									"source": 33,
									"value": "96"
								},
								{
									"begin": 8179,
									"end": 9259,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 8344,
									"end": 8359,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 8344,
									"end": 8359,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8344,
									"end": 8370,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 568,
									"end": 588,
									"name": "EXTCODESIZE",
									"source": 36
								},
								{
									"begin": 8339,
									"end": 8431,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "130"
								},
								{
									"begin": 8339,
									"end": 8431,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 8397,
									"end": 8431,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 8397,
									"end": 8431,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "3DDC5CAB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8397,
									"end": 8431,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 8397,
									"end": 8431,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 8397,
									"end": 8431,
									"name": "PUSH",
									"source": 33,
									"value": "4"
								},
								{
									"begin": 8397,
									"end": 8431,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 8397,
									"end": 8431,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 8397,
									"end": 8431,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 8397,
									"end": 8431,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 8397,
									"end": 8431,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 8397,
									"end": 8431,
									"name": "SUB",
									"source": 33
								},
								{
									"begin": 8397,
									"end": 8431,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 8397,
									"end": 8431,
									"name": "REVERT",
									"source": 33
								},
								{
									"begin": 8339,
									"end": 8431,
									"name": "tag",
									"source": 33,
									"value": "130"
								},
								{
									"begin": 8339,
									"end": 8431,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 8451,
									"end": 8460,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 8446,
									"end": 9243,
									"name": "tag",
									"source": 33,
									"value": "131"
								},
								{
									"begin": 8446,
									"end": 9243,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 8466,
									"end": 8474,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 8466,
									"end": 8484,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 8466,
									"end": 8484,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 8466,
									"end": 8484,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 8466,
									"end": 8491,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 8462,
									"end": 8463,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 8462,
									"end": 8491,
									"name": "LT",
									"source": 33
								},
								{
									"begin": 8446,
									"end": 9243,
									"name": "ISZERO",
									"source": 33
								},
								{
									"begin": 8446,
									"end": 9243,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "132"
								},
								{
									"begin": 8446,
									"end": 9243,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 8516,
									"end": 8531,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 8534,
									"end": 8542,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 8534,
									"end": 8552,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 8534,
									"end": 8552,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 8534,
									"end": 8552,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 8553,
									"end": 8554,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 8534,
									"end": 8555,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 8534,
									"end": 8555,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 8534,
									"end": 8555,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 8534,
									"end": 8555,
									"name": "LT",
									"source": 33
								},
								{
									"begin": 8534,
									"end": 8555,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "135"
								},
								{
									"begin": 8534,
									"end": 8555,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 8534,
									"end": 8555,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "135"
								},
								{
									"begin": 8534,
									"end": 8555,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "12"
								},
								{
									"begin": 8534,
									"end": 8555,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 33
								},
								{
									"begin": 8534,
									"end": 8555,
									"name": "tag",
									"source": 33,
									"value": "135"
								},
								{
									"begin": 8534,
									"end": 8555,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 8534,
									"end": 8555,
									"name": "PUSH",
									"source": 33,
									"value": "20"
								},
								{
									"begin": 8534,
									"end": 8555,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 8534,
									"end": 8555,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 8534,
									"end": 8555,
									"name": "MUL",
									"source": 33
								},
								{
									"begin": 8534,
									"end": 8555,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 8534,
									"end": 8555,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 8534,
									"end": 8555,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 8534,
									"end": 8555,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 8534,
									"end": 8555,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 8534,
									"end": 8555,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 8534,
									"end": 8555,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 8592,
									"end": 8610,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 8592,
									"end": 8610,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 8573,
									"end": 8589,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 8592,
									"end": 8610,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 8592,
									"end": 8610,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 8592,
									"end": 8610,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 8592,
									"end": 8610,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 8592,
									"end": 8610,
									"name": "DUP7",
									"source": 33
								},
								{
									"begin": 8592,
									"end": 8610,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 8592,
									"end": 8610,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 8592,
									"end": 8610,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 8592,
									"end": 8610,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 8592,
									"end": 8610,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 8592,
									"end": 8610,
									"name": "KECCAK256",
									"source": 33
								},
								{
									"begin": 8592,
									"end": 8610,
									"name": "SLOAD",
									"source": 33
								},
								{
									"begin": 8534,
									"end": 8555,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 8534,
									"end": 8555,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8654,
									"end": 8680,
									"name": "PUSH",
									"source": 33,
									"value": "60"
								},
								{
									"begin": 8654,
									"end": 8680,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 8654,
									"end": 8680,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 8654,
									"end": 8680,
									"name": "SHR",
									"source": 33
								},
								{
									"begin": 8654,
									"end": 8680,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 8699,
									"end": 8796,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "136"
								},
								{
									"begin": 8699,
									"end": 8796,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 8761,
									"end": 8796,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 8761,
									"end": 8796,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "37E25A97"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8761,
									"end": 8796,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 8761,
									"end": 8796,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 8761,
									"end": 8796,
									"name": "PUSH",
									"source": 33,
									"value": "4"
								},
								{
									"begin": 8761,
									"end": 8796,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 8761,
									"end": 8796,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 8761,
									"end": 8796,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 8761,
									"end": 8796,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 8761,
									"end": 8796,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 8761,
									"end": 8796,
									"name": "SUB",
									"source": 33
								},
								{
									"begin": 8761,
									"end": 8796,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 8761,
									"end": 8796,
									"name": "REVERT",
									"source": 33
								},
								{
									"begin": 8699,
									"end": 8796,
									"name": "tag",
									"source": 33,
									"value": "136"
								},
								{
									"begin": 8699,
									"end": 8796,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 8845,
									"end": 8849,
									"name": "ADDRESS",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8818,
									"end": 8850,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 8818,
									"end": 8850,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 8818,
									"end": 8850,
									"name": "SUB",
									"source": 33
								},
								{
									"begin": 8814,
									"end": 8917,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "137"
								},
								{
									"begin": 8814,
									"end": 8917,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 8879,
									"end": 8917,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 8879,
									"end": 8917,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E9835731"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8879,
									"end": 8917,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 8879,
									"end": 8917,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 8879,
									"end": 8917,
									"name": "PUSH",
									"source": 33,
									"value": "4"
								},
								{
									"begin": 8879,
									"end": 8917,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 8879,
									"end": 8917,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 8879,
									"end": 8917,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 8879,
									"end": 8917,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 8879,
									"end": 8917,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 8879,
									"end": 8917,
									"name": "SUB",
									"source": 33
								},
								{
									"begin": 8879,
									"end": 8917,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 8879,
									"end": 8917,
									"name": "REVERT",
									"source": 33
								},
								{
									"begin": 8814,
									"end": 8917,
									"name": "tag",
									"source": 33,
									"value": "137"
								},
								{
									"begin": 8814,
									"end": 8917,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 8958,
									"end": 8966,
									"name": "DUP5",
									"source": 33
								},
								{
									"begin": 8958,
									"end": 8973,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 8958,
									"end": 8973,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 8958,
									"end": 8973,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8939,
									"end": 8973,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 8939,
									"end": 8954,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8939,
									"end": 8973,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 8939,
									"end": 8973,
									"name": "SUB",
									"source": 33
								},
								{
									"begin": 8935,
									"end": 9045,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "138"
								},
								{
									"begin": 8935,
									"end": 9045,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 9002,
									"end": 9045,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 9002,
									"end": 9045,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "30BAABF3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 9002,
									"end": 9045,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 9002,
									"end": 9045,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 9002,
									"end": 9045,
									"name": "PUSH",
									"source": 33,
									"value": "4"
								},
								{
									"begin": 9002,
									"end": 9045,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 9002,
									"end": 9045,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 9002,
									"end": 9045,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 9002,
									"end": 9045,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 9002,
									"end": 9045,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 9002,
									"end": 9045,
									"name": "SUB",
									"source": 33
								},
								{
									"begin": 9002,
									"end": 9045,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 9002,
									"end": 9045,
									"name": "REVERT",
									"source": 33
								},
								{
									"begin": 8935,
									"end": 9045,
									"name": "tag",
									"source": 33,
									"value": "138"
								},
								{
									"begin": 8935,
									"end": 9045,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 9212,
									"end": 9227,
									"name": "DUP4",
									"source": 33
								},
								{
									"begin": 9212,
									"end": 9227,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 9109,
									"end": 9127,
									"name": "SWAP3",
									"source": 33
								},
								{
									"begin": 9109,
									"end": 9127,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 9109,
									"end": 9127,
									"name": "SWAP3",
									"source": 33
								},
								{
									"begin": 9109,
									"end": 9127,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 9212,
									"end": 9227,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 9109,
									"end": 9127,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 9109,
									"end": 9127,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 9109,
									"end": 9127,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 9109,
									"end": 9127,
									"name": "PUSH",
									"source": 33,
									"value": "20"
								},
								{
									"begin": 9109,
									"end": 9127,
									"name": "DUP7",
									"source": 33
								},
								{
									"begin": 9109,
									"end": 9127,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 9109,
									"end": 9127,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 9109,
									"end": 9127,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 9109,
									"end": 9127,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 9109,
									"end": 9127,
									"name": "KECCAK256",
									"source": 33
								},
								{
									"begin": 9204,
									"end": 9228,
									"name": "PUSH",
									"source": 33,
									"value": "60"
								},
								{
									"begin": 9204,
									"end": 9228,
									"name": "SWAP3",
									"source": 33
								},
								{
									"begin": 9204,
									"end": 9228,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 9204,
									"end": 9228,
									"name": "SWAP3",
									"source": 33
								},
								{
									"begin": 9204,
									"end": 9228,
									"name": "SHL",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 9150,
									"end": 9228,
									"name": "AND",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9151,
									"end": 9180,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 9151,
									"end": 9180,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 9151,
									"end": 9180,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 9151,
									"end": 9180,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 9150,
									"end": 9228,
									"name": "OR",
									"source": 33
								},
								{
									"begin": 9109,
									"end": 9228,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 9109,
									"end": 9228,
									"name": "SSTORE",
									"source": 33
								},
								{
									"begin": 8493,
									"end": 8496,
									"name": "PUSH",
									"source": 33,
									"value": "1"
								},
								{
									"begin": 8493,
									"end": 8496,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 8446,
									"end": 9243,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "131"
								},
								{
									"begin": 8446,
									"end": 9243,
									"name": "JUMP",
									"source": 33
								},
								{
									"begin": 8446,
									"end": 9243,
									"name": "tag",
									"source": 33,
									"value": "132"
								},
								{
									"begin": 8446,
									"end": 9243,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 8446,
									"end": 9243,
									"name": "POP",
									"source": 33
								},
								{
									"begin": 8179,
									"end": 9259,
									"name": "POP",
									"source": 33
								},
								{
									"begin": 8179,
									"end": 9259,
									"name": "POP",
									"source": 33
								},
								{
									"begin": 8179,
									"end": 9259,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 33
								},
								{
									"begin": 4499,
									"end": 8173,
									"name": "tag",
									"source": 33,
									"value": "104"
								},
								{
									"begin": 4499,
									"end": 8173,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 4750,
									"end": 4765,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 4750,
									"end": 4765,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 4694,
									"end": 4701,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 4694,
									"end": 4701,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 4694,
									"end": 4701,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 4694,
									"end": 4701,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4750,
									"end": 4779,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 4750,
									"end": 4779,
									"name": "ISZERO",
									"source": 33
								},
								{
									"begin": 4746,
									"end": 4849,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "140"
								},
								{
									"begin": 4746,
									"end": 4849,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 4804,
									"end": 4849,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 4804,
									"end": 4849,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "3AB34909"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4804,
									"end": 4849,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 4804,
									"end": 4849,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 4804,
									"end": 4849,
									"name": "PUSH",
									"source": 33,
									"value": "4"
								},
								{
									"begin": 4804,
									"end": 4849,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 4804,
									"end": 4849,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 4804,
									"end": 4849,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 4804,
									"end": 4849,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 4804,
									"end": 4849,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 4804,
									"end": 4849,
									"name": "SUB",
									"source": 33
								},
								{
									"begin": 4804,
									"end": 4849,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 4804,
									"end": 4849,
									"name": "REVERT",
									"source": 33
								},
								{
									"begin": 4746,
									"end": 4849,
									"name": "tag",
									"source": 33,
									"value": "140"
								},
								{
									"begin": 4746,
									"end": 4849,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 4909,
									"end": 4910,
									"name": "PUSH",
									"source": 33,
									"value": "3"
								},
								{
									"begin": 4892,
									"end": 4910,
									"name": "DUP6",
									"source": 33
								},
								{
									"begin": 4892,
									"end": 4910,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 4892,
									"end": 4910,
									"name": "SHR",
									"source": 33
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 33,
									"value": "7"
								},
								{
									"begin": 4954,
									"end": 4971,
									"name": "DUP7",
									"source": 33
								},
								{
									"begin": 4954,
									"end": 4971,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 4864,
									"end": 4889,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 4986,
									"end": 8029,
									"name": "tag",
									"source": 33,
									"value": "141"
								},
								{
									"begin": 4986,
									"end": 8029,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 5006,
									"end": 5014,
									"name": "DUP6",
									"source": 33
								},
								{
									"begin": 5006,
									"end": 5024,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 5006,
									"end": 5024,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 5006,
									"end": 5024,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 5006,
									"end": 5031,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 5002,
									"end": 5003,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 5002,
									"end": 5031,
									"name": "LT",
									"source": 33
								},
								{
									"begin": 4986,
									"end": 8029,
									"name": "ISZERO",
									"source": 33
								},
								{
									"begin": 4986,
									"end": 8029,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "142"
								},
								{
									"begin": 4986,
									"end": 8029,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 5056,
									"end": 5071,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 5074,
									"end": 5082,
									"name": "DUP7",
									"source": 33
								},
								{
									"begin": 5074,
									"end": 5092,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 5074,
									"end": 5092,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 5074,
									"end": 5092,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 5093,
									"end": 5094,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 5074,
									"end": 5095,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 5074,
									"end": 5095,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 5074,
									"end": 5095,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 5074,
									"end": 5095,
									"name": "LT",
									"source": 33
								},
								{
									"begin": 5074,
									"end": 5095,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "145"
								},
								{
									"begin": 5074,
									"end": 5095,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 5074,
									"end": 5095,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "145"
								},
								{
									"begin": 5074,
									"end": 5095,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "12"
								},
								{
									"begin": 5074,
									"end": 5095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 33
								},
								{
									"begin": 5074,
									"end": 5095,
									"name": "tag",
									"source": 33,
									"value": "145"
								},
								{
									"begin": 5074,
									"end": 5095,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 5074,
									"end": 5095,
									"name": "PUSH",
									"source": 33,
									"value": "20"
								},
								{
									"begin": 5074,
									"end": 5095,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 5074,
									"end": 5095,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 5074,
									"end": 5095,
									"name": "MUL",
									"source": 33
								},
								{
									"begin": 5074,
									"end": 5095,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 5074,
									"end": 5095,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 5074,
									"end": 5095,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 5074,
									"end": 5095,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 5074,
									"end": 5095,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 5074,
									"end": 5095,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 5074,
									"end": 5095,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5132,
									"end": 5150,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 5132,
									"end": 5150,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 5113,
									"end": 5129,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 5132,
									"end": 5150,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 5132,
									"end": 5150,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 5132,
									"end": 5150,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 5132,
									"end": 5150,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 5132,
									"end": 5150,
									"name": "DUP13",
									"source": 33
								},
								{
									"begin": 5132,
									"end": 5150,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 5132,
									"end": 5150,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 5132,
									"end": 5150,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 5132,
									"end": 5150,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 5132,
									"end": 5150,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 5132,
									"end": 5150,
									"name": "KECCAK256",
									"source": 33
								},
								{
									"begin": 5132,
									"end": 5150,
									"name": "SLOAD",
									"source": 33
								},
								{
									"begin": 5074,
									"end": 5095,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 5074,
									"end": 5095,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5173,
									"end": 5199,
									"name": "PUSH",
									"source": 33,
									"value": "60"
								},
								{
									"begin": 5173,
									"end": 5199,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 5173,
									"end": 5199,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 5173,
									"end": 5199,
									"name": "SHR",
									"source": 33
								},
								{
									"begin": 5169,
									"end": 5277,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "146"
								},
								{
									"begin": 5169,
									"end": 5277,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 5242,
									"end": 5277,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 5242,
									"end": 5277,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "37E25A97"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5242,
									"end": 5277,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 5242,
									"end": 5277,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 5242,
									"end": 5277,
									"name": "PUSH",
									"source": 33,
									"value": "4"
								},
								{
									"begin": 5242,
									"end": 5277,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 5242,
									"end": 5277,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 5242,
									"end": 5277,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 5242,
									"end": 5277,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 5242,
									"end": 5277,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 5242,
									"end": 5277,
									"name": "SUB",
									"source": 33
								},
								{
									"begin": 5242,
									"end": 5277,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 5242,
									"end": 5277,
									"name": "REVERT",
									"source": 33
								},
								{
									"begin": 5169,
									"end": 5277,
									"name": "tag",
									"source": 33,
									"value": "146"
								},
								{
									"begin": 5169,
									"end": 5277,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 5338,
									"end": 5342,
									"name": "ADDRESS",
									"source": 33
								},
								{
									"begin": 5300,
									"end": 5326,
									"name": "PUSH",
									"source": 33,
									"value": "60"
								},
								{
									"begin": 5300,
									"end": 5326,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 5300,
									"end": 5326,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 5300,
									"end": 5326,
									"name": "SHR",
									"source": 33
								},
								{
									"begin": 5300,
									"end": 5343,
									"name": "SUB",
									"source": 33
								},
								{
									"begin": 5296,
									"end": 5410,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "147"
								},
								{
									"begin": 5296,
									"end": 5410,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 5372,
									"end": 5410,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 5372,
									"end": 5410,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E9835731"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5372,
									"end": 5410,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 5372,
									"end": 5410,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 5372,
									"end": 5410,
									"name": "PUSH",
									"source": 33,
									"value": "4"
								},
								{
									"begin": 5372,
									"end": 5410,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 5372,
									"end": 5410,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 5372,
									"end": 5410,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 5372,
									"end": 5410,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 5372,
									"end": 5410,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 5372,
									"end": 5410,
									"name": "SUB",
									"source": 33
								},
								{
									"begin": 5372,
									"end": 5410,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 5372,
									"end": 5410,
									"name": "REVERT",
									"source": 33
								},
								{
									"begin": 5296,
									"end": 5410,
									"name": "tag",
									"source": 33,
									"value": "147"
								},
								{
									"begin": 5296,
									"end": 5410,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 5449,
									"end": 5450,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 5433,
									"end": 5450,
									"name": "DUP10",
									"source": 33
								},
								{
									"begin": 5433,
									"end": 5450,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 5433,
									"end": 5450,
									"name": "SUB",
									"source": 33
								},
								{
									"begin": 5429,
									"end": 5696,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "148"
								},
								{
									"begin": 5429,
									"end": 5696,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5474,
									"end": 5493,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 5474,
									"end": 5493,
									"name": "SWAP5",
									"source": 33
								},
								{
									"begin": 5474,
									"end": 5493,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 5530,
									"end": 5564,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 5530,
									"end": 5564,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 5530,
									"end": 5564,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 5530,
									"end": 5564,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 5530,
									"end": 5545,
									"name": "PUSH",
									"source": 33,
									"value": "2"
								},
								{
									"begin": 5530,
									"end": 5545,
									"name": "DUP13",
									"source": 33
								},
								{
									"begin": 5530,
									"end": 5545,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 5530,
									"end": 5564,
									"name": "PUSH",
									"source": 33,
									"value": "20"
								},
								{
									"begin": 5530,
									"end": 5564,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 5530,
									"end": 5564,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 5530,
									"end": 5564,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 5530,
									"end": 5564,
									"name": "KECCAK256",
									"source": 33
								},
								{
									"begin": 5530,
									"end": 5564,
									"name": "SLOAD",
									"source": 33
								},
								{
									"begin": 5530,
									"end": 5564,
									"name": "SWAP9",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5474,
									"end": 5493,
									"name": "SWAP4",
									"source": 33
								},
								{
									"begin": 5608,
									"end": 5609,
									"name": "PUSH",
									"source": 33,
									"value": "7"
								},
								{
									"begin": 5608,
									"end": 5609,
									"name": "SWAP4",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5429,
									"end": 5696,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "149"
								},
								{
									"begin": 5429,
									"end": 5696,
									"name": "JUMP",
									"source": 33
								},
								{
									"begin": 5429,
									"end": 5696,
									"name": "tag",
									"source": 33,
									"value": "148"
								},
								{
									"begin": 5429,
									"end": 5696,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5656,
									"end": 5677,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 5656,
									"end": 5677,
									"name": "SWAP4",
									"source": 33
								},
								{
									"begin": 5656,
									"end": 5677,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 5656,
									"end": 5677,
									"name": "SWAP3",
									"source": 33
								},
								{
									"begin": 5429,
									"end": 5696,
									"name": "tag",
									"source": 33,
									"value": "149"
								},
								{
									"begin": 5429,
									"end": 5696,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 6099,
									"end": 6100,
									"name": "PUSH",
									"source": 33,
									"value": "5"
								},
								{
									"begin": 6076,
									"end": 6100,
									"name": "DUP5",
									"source": 33
								},
								{
									"begin": 6076,
									"end": 6100,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 6076,
									"end": 6100,
									"name": "SHL",
									"source": 33
								},
								{
									"begin": 6059,
									"end": 6101,
									"name": "DUP10",
									"source": 33
								},
								{
									"begin": 6059,
									"end": 6101,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 6059,
									"end": 6101,
									"name": "SHL",
									"source": 33
								},
								{
									"begin": 5714,
									"end": 5733,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 5714,
									"end": 5733,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6150,
									"end": 6174,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 6150,
									"end": 6174,
									"name": "DUP5",
									"source": 33
								},
								{
									"begin": 6150,
									"end": 6174,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 6150,
									"end": 6174,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 6150,
									"end": 6174,
									"name": "DUP7",
									"source": 33
								},
								{
									"begin": 6150,
									"end": 6174,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 6150,
									"end": 6174,
									"name": "EQ",
									"source": 33
								},
								{
									"begin": 6146,
									"end": 6438,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "150"
								},
								{
									"begin": 6146,
									"end": 6438,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "DUP4",
									"source": 33
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 6392,
									"end": 6400,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "PUSH",
									"source": 33,
									"value": "20"
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "DUP16",
									"source": 33
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "KECCAK256",
									"source": 33
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 6392,
									"end": 6414,
									"name": "SLOAD",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6322,
									"end": 6415,
									"name": "AND",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6323,
									"end": 6352,
									"name": "DUP7",
									"source": 33
								},
								{
									"begin": 6323,
									"end": 6352,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 6322,
									"end": 6415,
									"name": "OR",
									"source": 33
								},
								{
									"begin": 6269,
									"end": 6415,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 6269,
									"end": 6415,
									"name": "SSTORE",
									"source": 33
								},
								{
									"begin": 6146,
									"end": 6438,
									"name": "tag",
									"source": 33,
									"value": "150"
								},
								{
									"begin": 6146,
									"end": 6438,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6467,
									"end": 6485,
									"name": "DUP4",
									"source": 33
								},
								{
									"begin": 6467,
									"end": 6485,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 6467,
									"end": 6475,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 6467,
									"end": 6485,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 6467,
									"end": 6485,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 6467,
									"end": 6485,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 6467,
									"end": 6485,
									"name": "PUSH",
									"source": 33,
									"value": "20"
								},
								{
									"begin": 6467,
									"end": 6485,
									"name": "DUP14",
									"source": 33
								},
								{
									"begin": 6467,
									"end": 6485,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 6467,
									"end": 6485,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 6467,
									"end": 6485,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 6467,
									"end": 6485,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 6467,
									"end": 6485,
									"name": "KECCAK256",
									"source": 33
								},
								{
									"begin": 6460,
									"end": 6485,
									"name": "SSTORE",
									"source": 33
								},
								{
									"begin": 6605,
									"end": 6626,
									"name": "PUSH",
									"source": 33,
									"value": "1FFF"
								},
								{
									"begin": 6625,
									"end": 6626,
									"name": "PUSH",
									"source": 33,
									"value": "3"
								},
								{
									"begin": 6605,
									"end": 6626,
									"name": "DUP4",
									"source": 33
								},
								{
									"begin": 6605,
									"end": 6626,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 6605,
									"end": 6626,
									"name": "SHR",
									"source": 33
								},
								{
									"begin": 6605,
									"end": 6626,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 6676,
									"end": 6703,
									"name": "PUSH",
									"source": 33,
									"value": "E0"
								},
								{
									"begin": 6702,
									"end": 6703,
									"name": "PUSH",
									"source": 33,
									"value": "5"
								},
								{
									"begin": 6676,
									"end": 6703,
									"name": "DUP5",
									"source": 33
								},
								{
									"begin": 6676,
									"end": 6703,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 6676,
									"end": 6703,
									"name": "SHL",
									"source": 33
								},
								{
									"begin": 6676,
									"end": 6703,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 6744,
									"end": 6786,
									"name": "DUP8",
									"source": 33
								},
								{
									"begin": 6744,
									"end": 6786,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 6744,
									"end": 6786,
									"name": "EQ",
									"source": 33
								},
								{
									"begin": 6740,
									"end": 7847,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "151"
								},
								{
									"begin": 6740,
									"end": 7847,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 6810,
									"end": 6833,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 6836,
									"end": 6920,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 6836,
									"end": 6920,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 6836,
									"end": 6920,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 6836,
									"end": 6851,
									"name": "PUSH",
									"source": 33,
									"value": "2"
								},
								{
									"begin": 6836,
									"end": 6851,
									"name": "DUP16",
									"source": 33
								},
								{
									"begin": 6836,
									"end": 6851,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 6836,
									"end": 6920,
									"name": "PUSH",
									"source": 33,
									"value": "20"
								},
								{
									"begin": 6836,
									"end": 6920,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 6836,
									"end": 6920,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 6836,
									"end": 6920,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 6836,
									"end": 6920,
									"name": "KECCAK256",
									"source": 33
								},
								{
									"begin": 6836,
									"end": 6920,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 6836,
									"end": 6920,
									"name": "SLOAD",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 7134,
									"end": 7214,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 7134,
									"end": 7214,
									"name": "DUP5",
									"source": 33
								},
								{
									"begin": 7134,
									"end": 7214,
									"name": "SHR",
									"source": 33
								},
								{
									"begin": 7132,
									"end": 7215,
									"name": "NOT",
									"source": 33
								},
								{
									"begin": 7086,
									"end": 7215,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 7086,
									"end": 7215,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 7086,
									"end": 7215,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 7244,
									"end": 7265,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 7244,
									"end": 7265,
									"name": "DUP6",
									"source": 33
								},
								{
									"begin": 7244,
									"end": 7265,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 7244,
									"end": 7294,
									"name": "DUP4",
									"source": 33
								},
								{
									"begin": 7244,
									"end": 7294,
									"name": "SHR",
									"source": 33
								},
								{
									"begin": 7085,
									"end": 7295,
									"name": "OR",
									"source": 33
								},
								{
									"begin": 7379,
									"end": 7435,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 7379,
									"end": 7435,
									"name": "SSTORE",
									"source": 33
								},
								{
									"begin": 6740,
									"end": 7847,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "152"
								},
								{
									"begin": 6740,
									"end": 7847,
									"name": "JUMP",
									"source": 33
								},
								{
									"begin": 6740,
									"end": 7847,
									"name": "tag",
									"source": 33,
									"value": "151"
								},
								{
									"begin": 6740,
									"end": 7847,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 7802,
									"end": 7827,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 7785,
									"end": 7797,
									"name": "DUP4",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7777,
									"end": 7798,
									"name": "NOT",
									"source": 33
								},
								{
									"begin": 7777,
									"end": 7798,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 7777,
									"end": 7827,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 7777,
									"end": 7827,
									"name": "SHR",
									"source": 33
								},
								{
									"begin": 7722,
									"end": 7747,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 539,
									"end": 574,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 539,
									"end": 574,
									"name": "SHL",
									"source": 33
								},
								{
									"begin": 7667,
									"end": 7747,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 7667,
									"end": 7747,
									"name": "SHR",
									"source": 33
								},
								{
									"begin": 7665,
									"end": 7748,
									"name": "NOT",
									"source": 33
								},
								{
									"begin": 7622,
									"end": 7634,
									"name": "DUP14",
									"source": 33
								},
								{
									"begin": 7622,
									"end": 7748,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 7621,
									"end": 7828,
									"name": "OR",
									"source": 33
								},
								{
									"begin": 7582,
									"end": 7828,
									"name": "SWAP12",
									"source": 33
								},
								{
									"begin": 7582,
									"end": 7828,
									"name": "POP",
									"source": 33
								},
								{
									"begin": 6740,
									"end": 7847,
									"name": "tag",
									"source": 33,
									"value": "152"
								},
								{
									"begin": 6740,
									"end": 7847,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 7869,
									"end": 7888,
									"name": "DUP7",
									"source": 33
								},
								{
									"begin": 7892,
									"end": 7893,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 7869,
									"end": 7893,
									"name": "SUB",
									"source": 33
								},
								{
									"begin": 7865,
									"end": 8015,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "153"
								},
								{
									"begin": 7865,
									"end": 8015,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 7924,
									"end": 7958,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 7924,
									"end": 7958,
									"name": "DUP9",
									"source": 33
								},
								{
									"begin": 7924,
									"end": 7958,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 7924,
									"end": 7958,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 7924,
									"end": 7939,
									"name": "PUSH",
									"source": 33,
									"value": "2"
								},
								{
									"begin": 7924,
									"end": 7939,
									"name": "DUP16",
									"source": 33
								},
								{
									"begin": 7924,
									"end": 7939,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 7924,
									"end": 7958,
									"name": "PUSH",
									"source": 33,
									"value": "20"
								},
								{
									"begin": 7924,
									"end": 7958,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 7924,
									"end": 7958,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 7924,
									"end": 7958,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 7924,
									"end": 7958,
									"name": "KECCAK256",
									"source": 33
								},
								{
									"begin": 7917,
									"end": 7958,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 7917,
									"end": 7958,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 7917,
									"end": 7958,
									"name": "SSTORE",
									"source": 33
								},
								{
									"begin": 7924,
									"end": 7958,
									"name": "SWAP12",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7865,
									"end": 8015,
									"name": "tag",
									"source": 33,
									"value": "153"
								},
								{
									"begin": 7865,
									"end": 8015,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5033,
									"end": 5036,
									"name": "PUSH",
									"source": 33,
									"value": "1"
								},
								{
									"begin": 5033,
									"end": 5036,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 5033,
									"end": 5036,
									"name": "SWAP4",
									"source": 33
								},
								{
									"begin": 5033,
									"end": 5036,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 5033,
									"end": 5036,
									"name": "SWAP3",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4986,
									"end": 8029,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "141"
								},
								{
									"begin": 4986,
									"end": 8029,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4986,
									"end": 8029,
									"name": "JUMP",
									"source": 33
								},
								{
									"begin": 4986,
									"end": 8029,
									"name": "tag",
									"source": 33,
									"value": "142"
								},
								{
									"begin": 4986,
									"end": 8029,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8081,
									"end": 8082,
									"name": "PUSH",
									"source": 33,
									"value": "3"
								},
								{
									"begin": 8060,
									"end": 8082,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 8060,
									"end": 8082,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 8060,
									"end": 8082,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 8060,
									"end": 8082,
									"name": "SHL",
									"source": 33
								},
								{
									"begin": 8059,
									"end": 8105,
									"name": "OR",
									"source": 33
								},
								{
									"begin": 8059,
									"end": 8105,
									"name": "SWAP7",
									"source": 33
								},
								{
									"begin": 8143,
									"end": 8155,
									"name": "SWAP4",
									"source": 33
								},
								{
									"begin": 8143,
									"end": 8155,
									"name": "SWAP6",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4499,
									"end": 8173,
									"name": "SWAP3",
									"source": 33
								},
								{
									"begin": 4499,
									"end": 8173,
									"name": "SWAP4",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4499,
									"end": 8173,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 33
								},
								{
									"begin": 9265,
									"end": 9928,
									"name": "tag",
									"source": 33,
									"value": "110"
								},
								{
									"begin": 9265,
									"end": 9928,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 9370,
									"end": 9381,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 9370,
									"end": 9381,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 9370,
									"end": 9386,
									"name": "ISZERO",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9344,
									"end": 9364,
									"name": "DUP4",
									"source": 33
								},
								{
									"begin": 9344,
									"end": 9364,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 9344,
									"end": 9364,
									"name": "ISZERO",
									"source": 33
								},
								{
									"begin": 9343,
									"end": 9387,
									"name": "EQ",
									"source": 33
								},
								{
									"begin": 9339,
									"end": 9458,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "155"
								},
								{
									"begin": 9339,
									"end": 9458,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 9408,
									"end": 9458,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 9408,
									"end": 9458,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "26DF4CCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 9408,
									"end": 9458,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 9408,
									"end": 9458,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 9408,
									"end": 9458,
									"name": "PUSH",
									"source": 33,
									"value": "4"
								},
								{
									"begin": 9408,
									"end": 9458,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 9408,
									"end": 9458,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 9408,
									"end": 9458,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 9408,
									"end": 9458,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 9408,
									"end": 9458,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 9408,
									"end": 9458,
									"name": "SUB",
									"source": 33
								},
								{
									"begin": 9408,
									"end": 9458,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 9408,
									"end": 9458,
									"name": "REVERT",
									"source": 33
								},
								{
									"begin": 9339,
									"end": 9458,
									"name": "tag",
									"source": 33,
									"value": "155"
								},
								{
									"begin": 9339,
									"end": 9458,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9473,
									"end": 9493,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 9473,
									"end": 9493,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 9473,
									"end": 9493,
									"name": "ISZERO",
									"source": 33
								},
								{
									"begin": 9469,
									"end": 9922,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "156"
								},
								{
									"begin": 9469,
									"end": 9922,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9513,
									"end": 9536,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 9513,
									"end": 9536,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 9531,
									"end": 9535,
									"name": "ADDRESS",
									"source": 33
								},
								{
									"begin": 9513,
									"end": 9536,
									"name": "EQ",
									"source": 33
								},
								{
									"begin": 9509,
									"end": 9658,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "159"
								},
								{
									"begin": 9509,
									"end": 9658,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9561,
									"end": 9578,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 9561,
									"end": 9578,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 568,
									"end": 588,
									"name": "EXTCODESIZE",
									"source": 36
								},
								{
									"begin": 9556,
									"end": 9643,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "159"
								},
								{
									"begin": 9556,
									"end": 9643,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 9609,
									"end": 9643,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 9609,
									"end": 9643,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "3DDC5CAB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 9609,
									"end": 9643,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 9609,
									"end": 9643,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 9609,
									"end": 9643,
									"name": "PUSH",
									"source": 33,
									"value": "4"
								},
								{
									"begin": 9609,
									"end": 9643,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 9609,
									"end": 9643,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 9609,
									"end": 9643,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 9609,
									"end": 9643,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 9609,
									"end": 9643,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 9609,
									"end": 9643,
									"name": "SUB",
									"source": 33
								},
								{
									"begin": 9609,
									"end": 9643,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 9609,
									"end": 9643,
									"name": "REVERT",
									"source": 33
								},
								{
									"begin": 9556,
									"end": 9643,
									"name": "tag",
									"source": 33,
									"value": "159"
								},
								{
									"begin": 9556,
									"end": 9643,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 9673,
									"end": 9685,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 9691,
									"end": 9697,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9691,
									"end": 9710,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 9711,
									"end": 9715,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "160"
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "161"
								},
								{
									"begin": 9691,
									"end": 9716,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "tag",
									"source": 33,
									"value": "160"
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "DUP4",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "SUB",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "DUP6",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "GAS",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "DELEGATECALL",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "POP",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "POP",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "RETURNDATASIZE",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "EQ",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "164"
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "POP",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "PUSH",
									"source": 33,
									"value": "1F"
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "NOT",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "PUSH",
									"source": 33,
									"value": "3F"
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "RETURNDATASIZE",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "AND",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "PUSH",
									"source": 33,
									"value": "40"
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "RETURNDATASIZE",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "RETURNDATASIZE",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "PUSH",
									"source": 33,
									"value": "20"
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "DUP5",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "ADD",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "RETURNDATACOPY",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "163"
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "JUMP",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "tag",
									"source": 33,
									"value": "164"
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "PUSH",
									"source": 33,
									"value": "60"
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "SWAP2",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "POP",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "tag",
									"source": 33,
									"value": "163"
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 9691,
									"end": 9716,
									"name": "POP",
									"source": 33
								},
								{
									"begin": 9672,
									"end": 9716,
									"name": "POP",
									"source": 33
								},
								{
									"begin": 9672,
									"end": 9716,
									"name": "SWAP1",
									"source": 33
								},
								{
									"begin": 9672,
									"end": 9716,
									"name": "POP",
									"source": 33
								},
								{
									"begin": 9736,
									"end": 9743,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 9731,
									"end": 9912,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "132"
								},
								{
									"begin": 9731,
									"end": 9912,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 9815,
									"end": 9831,
									"name": "RETURNDATASIZE",
									"source": 33
								},
								{
									"begin": 9812,
									"end": 9813,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 9812,
									"end": 9813,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 9794,
									"end": 9832,
									"name": "RETURNDATACOPY",
									"source": 33
								},
								{
									"begin": 9863,
									"end": 9879,
									"name": "RETURNDATASIZE",
									"source": 33
								},
								{
									"begin": 9812,
									"end": 9813,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 9853,
									"end": 9880,
									"name": "REVERT",
									"source": 33
								},
								{
									"begin": 9469,
									"end": 9922,
									"name": "tag",
									"source": 33,
									"value": "156"
								},
								{
									"begin": 9469,
									"end": 9922,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 9265,
									"end": 9928,
									"name": "POP",
									"source": 33
								},
								{
									"begin": 9265,
									"end": 9928,
									"name": "POP",
									"source": 33
								},
								{
									"begin": 9265,
									"end": 9928,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 33
								},
								{
									"begin": 146,
									"end": 378,
									"name": "tag",
									"source": 38,
									"value": "9"
								},
								{
									"begin": 146,
									"end": 378,
									"name": "JUMPDEST",
									"source": 38
								},
								{
									"begin": 185,
									"end": 188,
									"name": "PUSH",
									"source": 38,
									"value": "0"
								},
								{
									"begin": 206,
									"end": 223,
									"name": "PUSH",
									"source": 38,
									"value": "1"
								},
								{
									"begin": 206,
									"end": 223,
									"name": "DUP3",
									"source": 38
								},
								{
									"begin": 206,
									"end": 223,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 203,
									"end": 343,
									"name": "PUSH [tag]",
									"source": 38,
									"value": "176"
								},
								{
									"begin": 203,
									"end": 343,
									"name": "JUMPI",
									"source": 38
								},
								{
									"begin": 265,
									"end": 275,
									"name": "PUSH",
									"source": 38,
									"value": "4E487B71"
								},
								{
									"begin": 260,
									"end": 263,
									"name": "PUSH",
									"source": 38,
									"value": "E0"
								},
								{
									"begin": 256,
									"end": 276,
									"name": "SHL",
									"source": 38
								},
								{
									"begin": 253,
									"end": 254,
									"name": "PUSH",
									"source": 38,
									"value": "0"
								},
								{
									"begin": 246,
									"end": 277,
									"name": "MSTORE",
									"source": 38
								},
								{
									"begin": 300,
									"end": 304,
									"name": "PUSH",
									"source": 38,
									"value": "11"
								},
								{
									"begin": 297,
									"end": 298,
									"name": "PUSH",
									"source": 38,
									"value": "4"
								},
								{
									"begin": 290,
									"end": 305,
									"name": "MSTORE",
									"source": 38
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"source": 38,
									"value": "24"
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"source": 38,
									"value": "0"
								},
								{
									"begin": 318,
									"end": 333,
									"name": "REVERT",
									"source": 38
								},
								{
									"begin": 203,
									"end": 343,
									"name": "tag",
									"source": 38,
									"value": "176"
								},
								{
									"begin": 203,
									"end": 343,
									"name": "JUMPDEST",
									"source": 38
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 370,
									"end": 371,
									"name": "PUSH",
									"source": 38,
									"value": "1"
								},
								{
									"begin": 359,
									"end": 372,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 359,
									"end": 372,
									"name": "SWAP1",
									"source": 38
								},
								{
									"begin": 146,
									"end": 378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 38
								},
								{
									"begin": 383,
									"end": 510,
									"name": "tag",
									"source": 38,
									"value": "12"
								},
								{
									"begin": 383,
									"end": 510,
									"name": "JUMPDEST",
									"source": 38
								},
								{
									"begin": 444,
									"end": 454,
									"name": "PUSH",
									"source": 38,
									"value": "4E487B71"
								},
								{
									"begin": 439,
									"end": 442,
									"name": "PUSH",
									"source": 38,
									"value": "E0"
								},
								{
									"begin": 435,
									"end": 455,
									"name": "SHL",
									"source": 38
								},
								{
									"begin": 432,
									"end": 433,
									"name": "PUSH",
									"source": 38,
									"value": "0"
								},
								{
									"begin": 425,
									"end": 456,
									"name": "MSTORE",
									"source": 38
								},
								{
									"begin": 475,
									"end": 479,
									"name": "PUSH",
									"source": 38,
									"value": "32"
								},
								{
									"begin": 472,
									"end": 473,
									"name": "PUSH",
									"source": 38,
									"value": "4"
								},
								{
									"begin": 465,
									"end": 480,
									"name": "MSTORE",
									"source": 38
								},
								{
									"begin": 499,
									"end": 503,
									"name": "PUSH",
									"source": 38,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 497,
									"name": "PUSH",
									"source": 38,
									"value": "0"
								},
								{
									"begin": 489,
									"end": 504,
									"name": "REVERT",
									"source": 38
								},
								{
									"begin": 515,
									"end": 642,
									"name": "tag",
									"source": 38,
									"value": "60"
								},
								{
									"begin": 515,
									"end": 642,
									"name": "JUMPDEST",
									"source": 38
								},
								{
									"begin": 576,
									"end": 586,
									"name": "PUSH",
									"source": 38,
									"value": "4E487B71"
								},
								{
									"begin": 571,
									"end": 574,
									"name": "PUSH",
									"source": 38,
									"value": "E0"
								},
								{
									"begin": 567,
									"end": 587,
									"name": "SHL",
									"source": 38
								},
								{
									"begin": 564,
									"end": 565,
									"name": "PUSH",
									"source": 38,
									"value": "0"
								},
								{
									"begin": 557,
									"end": 588,
									"name": "MSTORE",
									"source": 38
								},
								{
									"begin": 607,
									"end": 611,
									"name": "PUSH",
									"source": 38,
									"value": "21"
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 38,
									"value": "4"
								},
								{
									"begin": 597,
									"end": 612,
									"name": "MSTORE",
									"source": 38
								},
								{
									"begin": 631,
									"end": 635,
									"name": "PUSH",
									"source": 38,
									"value": "24"
								},
								{
									"begin": 628,
									"end": 629,
									"name": "PUSH",
									"source": 38,
									"value": "0"
								},
								{
									"begin": 621,
									"end": 636,
									"name": "REVERT",
									"source": 38
								},
								{
									"begin": 756,
									"end": 1006,
									"name": "tag",
									"source": 38,
									"value": "171"
								},
								{
									"begin": 756,
									"end": 1006,
									"name": "JUMPDEST",
									"source": 38
								},
								{
									"begin": 841,
									"end": 842,
									"name": "PUSH",
									"source": 38,
									"value": "0"
								},
								{
									"begin": 851,
									"end": 964,
									"name": "tag",
									"source": 38,
									"value": "181"
								},
								{
									"begin": 851,
									"end": 964,
									"name": "JUMPDEST",
									"source": 38
								},
								{
									"begin": 865,
									"end": 871,
									"name": "DUP4",
									"source": 38
								},
								{
									"begin": 862,
									"end": 863,
									"name": "DUP2",
									"source": 38
								},
								{
									"begin": 859,
									"end": 872,
									"name": "LT",
									"source": 38
								},
								{
									"begin": 851,
									"end": 964,
									"name": "ISZERO",
									"source": 38
								},
								{
									"begin": 851,
									"end": 964,
									"name": "PUSH [tag]",
									"source": 38,
									"value": "183"
								},
								{
									"begin": 851,
									"end": 964,
									"name": "JUMPI",
									"source": 38
								},
								{
									"begin": 941,
									"end": 952,
									"name": "DUP2",
									"source": 38
								},
								{
									"begin": 941,
									"end": 952,
									"name": "DUP2",
									"source": 38
								},
								{
									"begin": 941,
									"end": 952,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 935,
									"end": 953,
									"name": "MLOAD",
									"source": 38
								},
								{
									"begin": 922,
									"end": 933,
									"name": "DUP4",
									"source": 38
								},
								{
									"begin": 922,
									"end": 933,
									"name": "DUP3",
									"source": 38
								},
								{
									"begin": 922,
									"end": 933,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 915,
									"end": 954,
									"name": "MSTORE",
									"source": 38
								},
								{
									"begin": 887,
									"end": 889,
									"name": "PUSH",
									"source": 38,
									"value": "20"
								},
								{
									"begin": 880,
									"end": 890,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 851,
									"end": 964,
									"name": "PUSH [tag]",
									"source": 38,
									"value": "181"
								},
								{
									"begin": 851,
									"end": 964,
									"name": "JUMP",
									"source": 38
								},
								{
									"begin": 851,
									"end": 964,
									"name": "tag",
									"source": 38,
									"value": "183"
								},
								{
									"begin": 851,
									"end": 964,
									"name": "JUMPDEST",
									"source": 38
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 998,
									"end": 999,
									"name": "PUSH",
									"source": 38,
									"value": "0"
								},
								{
									"begin": 980,
									"end": 996,
									"name": "SWAP2",
									"source": 38
								},
								{
									"begin": 980,
									"end": 996,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 973,
									"end": 1000,
									"name": "MSTORE",
									"source": 38
								},
								{
									"begin": 756,
									"end": 1006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 38
								},
								{
									"begin": 1011,
									"end": 1281,
									"name": "tag",
									"source": 38,
									"value": "172"
								},
								{
									"begin": 1011,
									"end": 1281,
									"name": "JUMPDEST",
									"source": 38
								},
								{
									"begin": 1052,
									"end": 1055,
									"name": "PUSH",
									"source": 38,
									"value": "0"
								},
								{
									"begin": 1090,
									"end": 1095,
									"name": "DUP2",
									"source": 38
								},
								{
									"begin": 1084,
									"end": 1096,
									"name": "MLOAD",
									"source": 38
								},
								{
									"begin": 1117,
									"end": 1123,
									"name": "DUP1",
									"source": 38
								},
								{
									"begin": 1112,
									"end": 1115,
									"name": "DUP5",
									"source": 38
								},
								{
									"begin": 1105,
									"end": 1124,
									"name": "MSTORE",
									"source": 38
								},
								{
									"begin": 1133,
									"end": 1209,
									"name": "PUSH [tag]",
									"source": 38,
									"value": "185"
								},
								{
									"begin": 1202,
									"end": 1208,
									"name": "DUP2",
									"source": 38
								},
								{
									"begin": 1195,
									"end": 1199,
									"name": "PUSH",
									"source": 38,
									"value": "20"
								},
								{
									"begin": 1190,
									"end": 1193,
									"name": "DUP7",
									"source": 38
								},
								{
									"begin": 1186,
									"end": 1200,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 1179,
									"end": 1183,
									"name": "PUSH",
									"source": 38,
									"value": "20"
								},
								{
									"begin": 1172,
									"end": 1177,
									"name": "DUP7",
									"source": 38
								},
								{
									"begin": 1168,
									"end": 1184,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 1133,
									"end": 1209,
									"name": "PUSH [tag]",
									"source": 38,
									"value": "171"
								},
								{
									"begin": 1133,
									"end": 1209,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 38
								},
								{
									"begin": 1133,
									"end": 1209,
									"name": "tag",
									"source": 38,
									"value": "185"
								},
								{
									"begin": 1133,
									"end": 1209,
									"name": "JUMPDEST",
									"source": 38
								},
								{
									"begin": 1263,
									"end": 1265,
									"name": "PUSH",
									"source": 38,
									"value": "1F"
								},
								{
									"begin": 1242,
									"end": 1257,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1238,
									"end": 1267,
									"name": "AND",
									"source": 38
								},
								{
									"begin": 1229,
									"end": 1268,
									"name": "SWAP3",
									"source": 38
								},
								{
									"begin": 1229,
									"end": 1268,
									"name": "SWAP1",
									"source": 38
								},
								{
									"begin": 1229,
									"end": 1268,
									"name": "SWAP3",
									"source": 38
								},
								{
									"begin": 1229,
									"end": 1268,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 1270,
									"end": 1274,
									"name": "PUSH",
									"source": 38,
									"value": "20"
								},
								{
									"begin": 1225,
									"end": 1275,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 1225,
									"end": 1275,
									"name": "SWAP3",
									"source": 38
								},
								{
									"begin": 1011,
									"end": 1281,
									"name": "SWAP2",
									"source": 38
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1011,
									"end": 1281,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 38
								},
								{
									"begin": 1286,
									"end": 3376,
									"name": "tag",
									"source": 38,
									"value": "108"
								},
								{
									"begin": 1286,
									"end": 3376,
									"name": "JUMPDEST",
									"source": 38
								},
								{
									"begin": 1554,
									"end": 1558,
									"name": "PUSH",
									"source": 38,
									"value": "0"
								},
								{
									"begin": 1583,
									"end": 1585,
									"name": "PUSH",
									"source": 38,
									"value": "60"
								},
								{
									"begin": 1623,
									"end": 1625,
									"name": "DUP1",
									"source": 38
								},
								{
									"begin": 1612,
									"end": 1621,
									"name": "DUP4",
									"source": 38
								},
								{
									"begin": 1608,
									"end": 1626,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 1653,
									"end": 1655,
									"name": "DUP2",
									"source": 38
								},
								{
									"begin": 1642,
									"end": 1651,
									"name": "DUP5",
									"source": 38
								},
								{
									"begin": 1635,
									"end": 1656,
									"name": "MSTORE",
									"source": 38
								},
								{
									"begin": 1676,
									"end": 1682,
									"name": "DUP1",
									"source": 38
								},
								{
									"begin": 1711,
									"end": 1717,
									"name": "DUP8",
									"source": 38
								},
								{
									"begin": 1705,
									"end": 1718,
									"name": "MLOAD",
									"source": 38
								},
								{
									"begin": 1742,
									"end": 1748,
									"name": "DUP1",
									"source": 38
								},
								{
									"begin": 1734,
									"end": 1740,
									"name": "DUP4",
									"source": 38
								},
								{
									"begin": 1727,
									"end": 1749,
									"name": "MSTORE",
									"source": 38
								},
								{
									"begin": 1768,
									"end": 1771,
									"name": "PUSH",
									"source": 38,
									"value": "80"
								},
								{
									"begin": 1758,
									"end": 1771,
									"name": "SWAP3",
									"source": 38
								},
								{
									"begin": 1758,
									"end": 1771,
									"name": "POP",
									"source": 38
								},
								{
									"begin": 1802,
									"end": 1804,
									"name": "DUP3",
									"source": 38
								},
								{
									"begin": 1791,
									"end": 1800,
									"name": "DUP7",
									"source": 38
								},
								{
									"begin": 1787,
									"end": 1805,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 1780,
									"end": 1805,
									"name": "SWAP2",
									"source": 38
								},
								{
									"begin": 1780,
									"end": 1805,
									"name": "POP",
									"source": 38
								},
								{
									"begin": 1864,
									"end": 1866,
									"name": "DUP3",
									"source": 38
								},
								{
									"begin": 1854,
									"end": 1860,
									"name": "DUP2",
									"source": 38
								},
								{
									"begin": 1851,
									"end": 1852,
									"name": "PUSH",
									"source": 38,
									"value": "5"
								},
								{
									"begin": 1847,
									"end": 1861,
									"name": "SHL",
									"source": 38
								},
								{
									"begin": 1836,
									"end": 1845,
									"name": "DUP8",
									"source": 38
								},
								{
									"begin": 1832,
									"end": 1862,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 1828,
									"end": 1867,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 1886,
									"end": 1890,
									"name": "PUSH",
									"source": 38,
									"value": "20"
								},
								{
									"begin": 1925,
									"end": 1927,
									"name": "DUP1",
									"source": 38
								},
								{
									"begin": 1917,
									"end": 1923,
									"name": "DUP12",
									"source": 38
								},
								{
									"begin": 1913,
									"end": 1928,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 1946,
									"end": 1947,
									"name": "PUSH",
									"source": 38,
									"value": "0"
								},
								{
									"begin": 1956,
									"end": 3205,
									"name": "tag",
									"source": 38,
									"value": "187"
								},
								{
									"begin": 1956,
									"end": 3205,
									"name": "JUMPDEST",
									"source": 38
								},
								{
									"begin": 1970,
									"end": 1976,
									"name": "DUP5",
									"source": 38
								},
								{
									"begin": 1967,
									"end": 1968,
									"name": "DUP2",
									"source": 38
								},
								{
									"begin": 1964,
									"end": 1977,
									"name": "LT",
									"source": 38
								},
								{
									"begin": 1956,
									"end": 3205,
									"name": "ISZERO",
									"source": 38
								},
								{
									"begin": 1956,
									"end": 3205,
									"name": "PUSH [tag]",
									"source": 38,
									"value": "189"
								},
								{
									"begin": 1956,
									"end": 3205,
									"name": "JUMPI",
									"source": 38
								},
								{
									"begin": 2035,
									"end": 2057,
									"name": "DUP10",
									"source": 38
								},
								{
									"begin": 2035,
									"end": 2057,
									"name": "DUP5",
									"source": 38
								},
								{
									"begin": 2035,
									"end": 2057,
									"name": "SUB",
									"source": 38
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "7F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2031,
									"end": 2068,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 2019,
									"end": 2069,
									"name": "DUP7",
									"source": 38
								},
								{
									"begin": 2019,
									"end": 2069,
									"name": "MSTORE",
									"source": 38
								},
								{
									"begin": 2092,
									"end": 2105,
									"name": "DUP2",
									"source": 38
								},
								{
									"begin": 2092,
									"end": 2105,
									"name": "MLOAD",
									"source": 38
								},
								{
									"begin": 2179,
									"end": 2188,
									"name": "DUP1",
									"source": 38
								},
								{
									"begin": 2179,
									"end": 2188,
									"name": "MLOAD",
									"source": 38
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2175,
									"end": 2210,
									"name": "AND",
									"source": 38
								},
								{
									"begin": 2160,
									"end": 2211,
									"name": "DUP6",
									"source": 38
								},
								{
									"begin": 2160,
									"end": 2211,
									"name": "MSTORE",
									"source": 38
								},
								{
									"begin": 2250,
									"end": 2261,
									"name": "DUP4",
									"source": 38
								},
								{
									"begin": 2250,
									"end": 2261,
									"name": "DUP2",
									"source": 38
								},
								{
									"begin": 2250,
									"end": 2261,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 2244,
									"end": 2262,
									"name": "MLOAD",
									"source": 38
								},
								{
									"begin": 2132,
									"end": 2147,
									"name": "DUP10",
									"source": 38
								},
								{
									"begin": 2132,
									"end": 2147,
									"name": "DUP7",
									"source": 38
								},
								{
									"begin": 2132,
									"end": 2147,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 2132,
									"end": 2147,
									"name": "SWAP1",
									"source": 38
								},
								{
									"begin": 2302,
									"end": 2303,
									"name": "PUSH",
									"source": 38,
									"value": "3"
								},
								{
									"begin": 2285,
									"end": 2304,
									"name": "DUP2",
									"source": 38
								},
								{
									"begin": 2285,
									"end": 2304,
									"name": "LT",
									"source": 38
								},
								{
									"begin": 2275,
									"end": 2445,
									"name": "PUSH [tag]",
									"source": 38,
									"value": "190"
								},
								{
									"begin": 2275,
									"end": 2445,
									"name": "JUMPI",
									"source": 38
								},
								{
									"begin": 2355,
									"end": 2365,
									"name": "PUSH",
									"source": 38,
									"value": "4E487B71"
								},
								{
									"begin": 2350,
									"end": 2353,
									"name": "PUSH",
									"source": 38,
									"value": "E0"
								},
								{
									"begin": 2346,
									"end": 2366,
									"name": "SHL",
									"source": 38
								},
								{
									"begin": 2343,
									"end": 2344,
									"name": "PUSH",
									"source": 38,
									"value": "0"
								},
								{
									"begin": 2336,
									"end": 2367,
									"name": "MSTORE",
									"source": 38
								},
								{
									"begin": 2394,
									"end": 2398,
									"name": "PUSH",
									"source": 38,
									"value": "21"
								},
								{
									"begin": 2391,
									"end": 2392,
									"name": "PUSH",
									"source": 38,
									"value": "4"
								},
								{
									"begin": 2384,
									"end": 2399,
									"name": "MSTORE",
									"source": 38
								},
								{
									"begin": 2426,
									"end": 2430,
									"name": "PUSH",
									"source": 38,
									"value": "24"
								},
								{
									"begin": 2423,
									"end": 2424,
									"name": "PUSH",
									"source": 38,
									"value": "0"
								},
								{
									"begin": 2416,
									"end": 2431,
									"name": "REVERT",
									"source": 38
								},
								{
									"begin": 2275,
									"end": 2445,
									"name": "tag",
									"source": 38,
									"value": "190"
								},
								{
									"begin": 2275,
									"end": 2445,
									"name": "JUMPDEST",
									"source": 38
								},
								{
									"begin": 2465,
									"end": 2480,
									"name": "DUP7",
									"source": 38
								},
								{
									"begin": 2465,
									"end": 2480,
									"name": "DUP7",
									"source": 38
								},
								{
									"begin": 2465,
									"end": 2480,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 2458,
									"end": 2495,
									"name": "MSTORE",
									"source": 38
								},
								{
									"begin": 2518,
									"end": 2522,
									"name": "PUSH",
									"source": 38,
									"value": "40"
								},
								{
									"begin": 2563,
									"end": 2574,
									"name": "SWAP2",
									"source": 38
								},
								{
									"begin": 2563,
									"end": 2574,
									"name": "DUP3",
									"source": 38
								},
								{
									"begin": 2563,
									"end": 2574,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 2557,
									"end": 2575,
									"name": "MLOAD",
									"source": 38
								},
								{
									"begin": 2595,
									"end": 2610,
									"name": "SWAP2",
									"source": 38
								},
								{
									"begin": 2595,
									"end": 2610,
									"name": "DUP7",
									"source": 38
								},
								{
									"begin": 2595,
									"end": 2610,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 2588,
									"end": 2615,
									"name": "DUP11",
									"source": 38
								},
								{
									"begin": 2588,
									"end": 2615,
									"name": "SWAP1",
									"source": 38
								},
								{
									"begin": 2588,
									"end": 2615,
									"name": "MSTORE",
									"source": 38
								},
								{
									"begin": 2676,
									"end": 2697,
									"name": "DUP2",
									"source": 38
								},
								{
									"begin": 2676,
									"end": 2697,
									"name": "MLOAD",
									"source": 38
								},
								{
									"begin": 2710,
									"end": 2734,
									"name": "SWAP1",
									"source": 38
								},
								{
									"begin": 2710,
									"end": 2734,
									"name": "DUP2",
									"source": 38
								},
								{
									"begin": 2710,
									"end": 2734,
									"name": "SWAP1",
									"source": 38
								},
								{
									"begin": 2710,
									"end": 2734,
									"name": "MSTORE",
									"source": 38
								},
								{
									"begin": 2800,
									"end": 2823,
									"name": "SWAP1",
									"source": 38
								},
								{
									"begin": 2800,
									"end": 2823,
									"name": "DUP5",
									"source": 38
								},
								{
									"begin": 2800,
									"end": 2823,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 2800,
									"end": 2823,
									"name": "SWAP1",
									"source": 38
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 2756,
									"end": 2771,
									"name": "DUP10",
									"source": 38
								},
								{
									"begin": 2756,
									"end": 2771,
									"name": "DUP8",
									"source": 38
								},
								{
									"begin": 2756,
									"end": 2771,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 2756,
									"end": 2771,
									"name": "SWAP1",
									"source": 38
								},
								{
									"begin": 2861,
									"end": 3097,
									"name": "tag",
									"source": 38,
									"value": "191"
								},
								{
									"begin": 2861,
									"end": 3097,
									"name": "JUMPDEST",
									"source": 38
								},
								{
									"begin": 2877,
									"end": 2885,
									"name": "DUP1",
									"source": 38
								},
								{
									"begin": 2872,
									"end": 2875,
									"name": "DUP4",
									"source": 38
								},
								{
									"begin": 2869,
									"end": 2886,
									"name": "LT",
									"source": 38
								},
								{
									"begin": 2861,
									"end": 3097,
									"name": "ISZERO",
									"source": 38
								},
								{
									"begin": 2861,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 38,
									"value": "193"
								},
								{
									"begin": 2861,
									"end": 3097,
									"name": "JUMPI",
									"source": 38
								},
								{
									"begin": 2958,
									"end": 2973,
									"name": "DUP4",
									"source": 38
								},
								{
									"begin": 2958,
									"end": 2973,
									"name": "MLOAD",
									"source": 38
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2954,
									"end": 2996,
									"name": "AND",
									"source": 38
								},
								{
									"begin": 2940,
									"end": 2997,
									"name": "DUP3",
									"source": 38
								},
								{
									"begin": 2940,
									"end": 2997,
									"name": "MSTORE",
									"source": 38
								},
								{
									"begin": 3066,
									"end": 3083,
									"name": "SWAP3",
									"source": 38
								},
								{
									"begin": 3066,
									"end": 3083,
									"name": "DUP7",
									"source": 38
								},
								{
									"begin": 3066,
									"end": 3083,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 3066,
									"end": 3083,
									"name": "SWAP3",
									"source": 38
								},
								{
									"begin": 2905,
									"end": 2906,
									"name": "PUSH",
									"source": 38,
									"value": "1"
								},
								{
									"begin": 2896,
									"end": 2907,
									"name": "SWAP3",
									"source": 38
								},
								{
									"begin": 2896,
									"end": 2907,
									"name": "SWAP1",
									"source": 38
								},
								{
									"begin": 2896,
									"end": 2907,
									"name": "SWAP3",
									"source": 38
								},
								{
									"begin": 2896,
									"end": 2907,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 2896,
									"end": 2907,
									"name": "SWAP2",
									"source": 38
								},
								{
									"begin": 3023,
									"end": 3037,
									"name": "SWAP1",
									"source": 38
								},
								{
									"begin": 3023,
									"end": 3037,
									"name": "DUP7",
									"source": 38
								},
								{
									"begin": 3023,
									"end": 3037,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 3023,
									"end": 3037,
									"name": "SWAP1",
									"source": 38
								},
								{
									"begin": 2861,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 38,
									"value": "191"
								},
								{
									"begin": 2861,
									"end": 3097,
									"name": "JUMP",
									"source": 38
								},
								{
									"begin": 2861,
									"end": 3097,
									"name": "tag",
									"source": 38,
									"value": "193"
								},
								{
									"begin": 2861,
									"end": 3097,
									"name": "JUMPDEST",
									"source": 38
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3183,
									"end": 3195,
									"name": "SWAP8",
									"source": 38
								},
								{
									"begin": 3183,
									"end": 3195,
									"name": "DUP6",
									"source": 38
								},
								{
									"begin": 3183,
									"end": 3195,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 3183,
									"end": 3195,
									"name": "SWAP8",
									"source": 38
								},
								{
									"begin": 3120,
									"end": 3125,
									"name": "SWAP6",
									"source": 38
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3148,
									"end": 3163,
									"name": "SWAP1",
									"source": 38
								},
								{
									"begin": 3148,
									"end": 3163,
									"name": "DUP3",
									"source": 38
								},
								{
									"begin": 3148,
									"end": 3163,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 3148,
									"end": 3163,
									"name": "SWAP1",
									"source": 38
								},
								{
									"begin": 1992,
									"end": 1993,
									"name": "PUSH",
									"source": 38,
									"value": "1"
								},
								{
									"begin": 1985,
									"end": 1994,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 1956,
									"end": 3205,
									"name": "PUSH [tag]",
									"source": 38,
									"value": "187"
								},
								{
									"begin": 1956,
									"end": 3205,
									"name": "JUMP",
									"source": 38
								},
								{
									"begin": 1956,
									"end": 3205,
									"name": "tag",
									"source": 38,
									"value": "189"
								},
								{
									"begin": 1956,
									"end": 3205,
									"name": "JUMPDEST",
									"source": 38
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 713,
									"end": 744,
									"name": "DUP11",
									"source": 38
								},
								{
									"begin": 713,
									"end": 744,
									"name": "AND",
									"source": 38
								},
								{
									"begin": 3241,
									"end": 3259,
									"name": "SWAP1",
									"source": 38
								},
								{
									"begin": 3241,
									"end": 3259,
									"name": "DUP9",
									"source": 38
								},
								{
									"begin": 3241,
									"end": 3259,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 701,
									"end": 745,
									"name": "MSTORE",
									"source": 38
								},
								{
									"begin": 3298,
									"end": 3320,
									"name": "DUP7",
									"source": 38
								},
								{
									"begin": 3298,
									"end": 3320,
									"name": "DUP2",
									"source": 38
								},
								{
									"begin": 3298,
									"end": 3320,
									"name": "SUB",
									"source": 38
								},
								{
									"begin": 3291,
									"end": 3295,
									"name": "PUSH",
									"source": 38,
									"value": "40"
								},
								{
									"begin": 3276,
									"end": 3296,
									"name": "DUP9",
									"source": 38
								},
								{
									"begin": 3276,
									"end": 3296,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 3269,
									"end": 3321,
									"name": "MSTORE",
									"source": 38
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 38,
									"value": "195"
								},
								{
									"begin": 3302,
									"end": 3308,
									"name": "DUP2",
									"source": 38
								},
								{
									"begin": 3355,
									"end": 3361,
									"name": "DUP10",
									"source": 38
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 38,
									"value": "172"
								},
								{
									"begin": 3338,
									"end": 3370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 38
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "tag",
									"source": 38,
									"value": "195"
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "JUMPDEST",
									"source": 38
								},
								{
									"begin": 3330,
									"end": 3370,
									"name": "SWAP11",
									"source": 38
								},
								{
									"begin": 1286,
									"end": 3376,
									"name": "SWAP10",
									"source": 38
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1286,
									"end": 3376,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 38
								},
								{
									"begin": 3381,
									"end": 3668,
									"name": "tag",
									"source": 38,
									"value": "161"
								},
								{
									"begin": 3381,
									"end": 3668,
									"name": "JUMPDEST",
									"source": 38
								},
								{
									"begin": 3510,
									"end": 3513,
									"name": "PUSH",
									"source": 38,
									"value": "0"
								},
								{
									"begin": 3548,
									"end": 3554,
									"name": "DUP3",
									"source": 38
								},
								{
									"begin": 3542,
									"end": 3555,
									"name": "MLOAD",
									"source": 38
								},
								{
									"begin": 3564,
									"end": 3630,
									"name": "PUSH [tag]",
									"source": 38,
									"value": "197"
								},
								{
									"begin": 3623,
									"end": 3629,
									"name": "DUP2",
									"source": 38
								},
								{
									"begin": 3618,
									"end": 3621,
									"name": "DUP5",
									"source": 38
								},
								{
									"begin": 3611,
									"end": 3615,
									"name": "PUSH",
									"source": 38,
									"value": "20"
								},
								{
									"begin": 3603,
									"end": 3609,
									"name": "DUP8",
									"source": 38
								},
								{
									"begin": 3599,
									"end": 3616,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 3564,
									"end": 3630,
									"name": "PUSH [tag]",
									"source": 38,
									"value": "171"
								},
								{
									"begin": 3564,
									"end": 3630,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 38
								},
								{
									"begin": 3564,
									"end": 3630,
									"name": "tag",
									"source": 38,
									"value": "197"
								},
								{
									"begin": 3564,
									"end": 3630,
									"name": "JUMPDEST",
									"source": 38
								},
								{
									"begin": 3646,
									"end": 3662,
									"name": "SWAP2",
									"source": 38
								},
								{
									"begin": 3646,
									"end": 3662,
									"name": "SWAP1",
									"source": 38
								},
								{
									"begin": 3646,
									"end": 3662,
									"name": "SWAP2",
									"source": 38
								},
								{
									"begin": 3646,
									"end": 3662,
									"name": "ADD",
									"source": 38
								},
								{
									"begin": 3646,
									"end": 3662,
									"name": "SWAP3",
									"source": 38
								},
								{
									"begin": 3381,
									"end": 3668,
									"name": "SWAP2",
									"source": 38
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3381,
									"end": 3668,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 38
								},
								{
									"begin": 3381,
									"end": 3668,
									"name": "tag",
									"source": 38,
									"value": "173"
								},
								{
									"begin": 3381,
									"end": 3668,
									"name": "JUMPDEST",
									"source": 38
								},
								{
									"begin": 152,
									"end": 182,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 152,
									"end": 182,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 152,
									"end": 182,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 152,
									"end": 182,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 152,
									"end": 182,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 152,
									"end": 182,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 152,
									"end": 182,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204fd3e61e32cabd24239218d2a5618d6811f3c53d9103eb5dd773aa327300861664736f6c63430008130033",
									".code": [
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH",
											"source": 1,
											"value": "8AB5150A"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH",
											"source": 1,
											"value": "8AB5150A"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH",
											"source": 1,
											"value": "91423765"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH",
											"source": 1,
											"value": "ADFCA15E"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH",
											"source": 1,
											"value": "CDFFACC6"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH",
											"source": 1,
											"value": "1F931C1C"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH",
											"source": 1,
											"value": "2C408059"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH",
											"source": 1,
											"value": "52EF6B2C"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH",
											"source": 1,
											"value": "79BA5097"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH",
											"source": 1,
											"value": "7A0ED627"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 182,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 152,
											"end": 182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 582,
											"end": 604,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 607,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "21"
										},
										{
											"begin": 607,
											"end": 627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 22
										},
										{
											"begin": 607,
											"end": 627,
											"name": "tag",
											"source": 22,
											"value": "20"
										},
										{
											"begin": 607,
											"end": 627,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 582,
											"end": 627,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 643,
											"end": 668,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 643,
											"end": 668,
											"name": "AND",
											"source": 22
										},
										{
											"begin": 568,
											"end": 588,
											"name": "EXTCODESIZE",
											"source": 36
										},
										{
											"begin": 638,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "24"
										},
										{
											"begin": 638,
											"end": 727,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 691,
											"end": 727,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 727,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21F27F0D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 691,
											"end": 727,
											"name": "DUP2",
											"source": 22
										},
										{
											"begin": 691,
											"end": 727,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 691,
											"end": 727,
											"name": "PUSH",
											"source": 22,
											"value": "4"
										},
										{
											"begin": 691,
											"end": 727,
											"name": "ADD",
											"source": 22
										},
										{
											"begin": 691,
											"end": 727,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 727,
											"name": "MLOAD",
											"source": 22
										},
										{
											"begin": 691,
											"end": 727,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 691,
											"end": 727,
											"name": "SWAP2",
											"source": 22
										},
										{
											"begin": 691,
											"end": 727,
											"name": "SUB",
											"source": 22
										},
										{
											"begin": 691,
											"end": 727,
											"name": "SWAP1",
											"source": 22
										},
										{
											"begin": 691,
											"end": 727,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 638,
											"end": 727,
											"name": "tag",
											"source": 22,
											"value": "24"
										},
										{
											"begin": 638,
											"end": 727,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 780,
											"end": 794,
											"name": "CALLDATASIZE",
											"source": 22
										},
										{
											"begin": 777,
											"end": 778,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 775,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 761,
											"end": 795,
											"name": "CALLDATACOPY",
											"source": 22
										},
										{
											"begin": 977,
											"end": 978,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 958,
											"end": 959,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 926,
											"end": 940,
											"name": "CALLDATASIZE",
											"source": 22
										},
										{
											"begin": 907,
											"end": 908,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 875,
											"end": 889,
											"name": "DUP5",
											"source": 22
										},
										{
											"begin": 852,
											"end": 857,
											"name": "GAS",
											"source": 22
										},
										{
											"begin": 822,
											"end": 992,
											"name": "DELEGATECALL",
											"source": 22
										},
										{
											"begin": 1026,
											"end": 1042,
											"name": "RETURNDATASIZE",
											"source": 22
										},
										{
											"begin": 1023,
											"end": 1024,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1020,
											"end": 1021,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 1005,
											"end": 1043,
											"name": "RETURNDATACOPY",
											"source": 22
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "ISZERO",
											"source": 22
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 22,
											"value": "26"
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "JUMPI",
											"source": 22
										},
										{
											"begin": 1198,
											"end": 1214,
											"name": "RETURNDATASIZE",
											"source": 22
										},
										{
											"begin": 1195,
											"end": 1196,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1215,
											"name": "RETURN",
											"source": 22
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "tag",
											"source": 22,
											"value": "26"
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1118,
											"end": 1134,
											"name": "RETURNDATASIZE",
											"source": 22
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1135,
											"name": "REVERT",
											"source": 22
										},
										{
											"begin": 1057,
											"end": 1229,
											"name": "tag",
											"source": 22,
											"value": "25"
										},
										{
											"begin": 1057,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 22
										},
										{
											"begin": 1057,
											"end": 1229,
											"name": "STOP",
											"source": 22
										},
										{
											"begin": 444,
											"end": 573,
											"name": "tag",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 444,
											"end": 573,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 444,
											"end": 573,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 444,
											"end": 573,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 444,
											"end": 573,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 444,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 444,
											"end": 573,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 444,
											"end": 573,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 444,
											"end": 573,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 444,
											"end": 573,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 444,
											"end": 573,
											"name": "tag",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 444,
											"end": 573,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 444,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 444,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "29"
										},
										{
											"begin": 444,
											"end": 573,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 444,
											"end": 573,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 444,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 444,
											"end": 573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 444,
											"end": 573,
											"name": "tag",
											"source": 16,
											"value": "29"
										},
										{
											"begin": 444,
											"end": 573,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 628,
											"end": 687,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 512,
											"end": 516,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 687,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 628,
											"end": 687,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 628,
											"end": 687,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 219,
											"end": 271,
											"name": "PUSH",
											"source": 18,
											"value": "FC606C433378E3A7E0A6A531DEAC289B66CAA1B4AA8554FD4AB2C6F1570F92D8"
										},
										{
											"begin": 628,
											"end": 687,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 628,
											"end": 687,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 628,
											"end": 687,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 687,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 628,
											"end": 687,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 628,
											"end": 687,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 628,
											"end": 687,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 628,
											"end": 687,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 628,
											"end": 687,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 444,
											"end": 573,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 444,
											"end": 573,
											"name": "tag",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 444,
											"end": 573,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 444,
											"end": 573,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 444,
											"end": 573,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 546,
											"end": 560,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 546,
											"end": 560,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 539,
											"end": 561,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 521,
											"end": 562,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 521,
											"end": 562,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 509,
											"end": 511,
											"name": "PUSH",
											"source": 38,
											"value": "20"
										},
										{
											"begin": 494,
											"end": 512,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 444,
											"end": 573,
											"name": "tag",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 444,
											"end": 573,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 444,
											"end": 573,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 444,
											"end": 573,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 444,
											"end": 573,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 444,
											"end": 573,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 444,
											"end": 573,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 444,
											"end": 573,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 444,
											"end": 573,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 495,
											"end": 685,
											"name": "tag",
											"source": 32,
											"value": "4"
										},
										{
											"begin": 495,
											"end": 685,
											"name": "JUMPDEST",
											"source": 32
										},
										{
											"begin": 495,
											"end": 685,
											"name": "CALLVALUE",
											"source": 32
										},
										{
											"begin": 495,
											"end": 685,
											"name": "DUP1",
											"source": 32
										},
										{
											"begin": 495,
											"end": 685,
											"name": "ISZERO",
											"source": 32
										},
										{
											"begin": 495,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 32,
											"value": "34"
										},
										{
											"begin": 495,
											"end": 685,
											"name": "JUMPI",
											"source": 32
										},
										{
											"begin": 495,
											"end": 685,
											"name": "PUSH",
											"source": 32,
											"value": "0"
										},
										{
											"begin": 495,
											"end": 685,
											"name": "DUP1",
											"source": 32
										},
										{
											"begin": 495,
											"end": 685,
											"name": "REVERT",
											"source": 32
										},
										{
											"begin": 495,
											"end": 685,
											"name": "tag",
											"source": 32,
											"value": "34"
										},
										{
											"begin": 495,
											"end": 685,
											"name": "JUMPDEST",
											"source": 32
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 495,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 32,
											"value": "25"
										},
										{
											"begin": 495,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 32,
											"value": "36"
										},
										{
											"begin": 495,
											"end": 685,
											"name": "CALLDATASIZE",
											"source": 32
										},
										{
											"begin": 495,
											"end": 685,
											"name": "PUSH",
											"source": 32,
											"value": "4"
										},
										{
											"begin": 495,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 32,
											"value": "37"
										},
										{
											"begin": 495,
											"end": 685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 32
										},
										{
											"begin": 495,
											"end": 685,
											"name": "tag",
											"source": 32,
											"value": "36"
										},
										{
											"begin": 495,
											"end": 685,
											"name": "JUMPDEST",
											"source": 32
										},
										{
											"begin": 495,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 32,
											"value": "38"
										},
										{
											"begin": 495,
											"end": 685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 32
										},
										{
											"begin": 539,
											"end": 701,
											"name": "tag",
											"source": 28,
											"value": "5"
										},
										{
											"begin": 539,
											"end": 701,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 539,
											"end": 701,
											"name": "CALLVALUE",
											"source": 28
										},
										{
											"begin": 539,
											"end": 701,
											"name": "DUP1",
											"source": 28
										},
										{
											"begin": 539,
											"end": 701,
											"name": "ISZERO",
											"source": 28
										},
										{
											"begin": 539,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "39"
										},
										{
											"begin": 539,
											"end": 701,
											"name": "JUMPI",
											"source": 28
										},
										{
											"begin": 539,
											"end": 701,
											"name": "PUSH",
											"source": 28,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 701,
											"name": "DUP1",
											"source": 28
										},
										{
											"begin": 539,
											"end": 701,
											"name": "REVERT",
											"source": 28
										},
										{
											"begin": 539,
											"end": 701,
											"name": "tag",
											"source": 28,
											"value": "39"
										},
										{
											"begin": 539,
											"end": 701,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 539,
											"end": 701,
											"name": "POP",
											"source": 28
										},
										{
											"begin": 539,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "40"
										},
										{
											"begin": 539,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "41"
										},
										{
											"begin": 539,
											"end": 701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 28
										},
										{
											"begin": 539,
											"end": 701,
											"name": "tag",
											"source": 28,
											"value": "40"
										},
										{
											"begin": 539,
											"end": 701,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 539,
											"end": 701,
											"name": "PUSH",
											"source": 28,
											"value": "40"
										},
										{
											"begin": 539,
											"end": 701,
											"name": "MLOAD",
											"source": 28
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2391,
											"end": 2423,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 2391,
											"end": 2423,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 2391,
											"end": 2423,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 2373,
											"end": 2424,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 2373,
											"end": 2424,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 2361,
											"end": 2363,
											"name": "PUSH",
											"source": 38,
											"value": "20"
										},
										{
											"begin": 2346,
											"end": 2364,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 539,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "32"
										},
										{
											"begin": 2227,
											"end": 2430,
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 4281,
											"end": 5755,
											"name": "tag",
											"source": 30,
											"value": "6"
										},
										{
											"begin": 4281,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4281,
											"end": 5755,
											"name": "CALLVALUE",
											"source": 30
										},
										{
											"begin": 4281,
											"end": 5755,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4281,
											"end": 5755,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4281,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "44"
										},
										{
											"begin": 4281,
											"end": 5755,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 4281,
											"end": 5755,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4281,
											"end": 5755,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4281,
											"end": 5755,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 4281,
											"end": 5755,
											"name": "tag",
											"source": 30,
											"value": "44"
										},
										{
											"begin": 4281,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4281,
											"end": 5755,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4281,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "45"
										},
										{
											"begin": 4281,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "46"
										},
										{
											"begin": 4281,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 4281,
											"end": 5755,
											"name": "tag",
											"source": 30,
											"value": "45"
										},
										{
											"begin": 4281,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4281,
											"end": 5755,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4281,
											"end": 5755,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 4281,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "32"
										},
										{
											"begin": 4281,
											"end": 5755,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4281,
											"end": 5755,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4281,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "48"
										},
										{
											"begin": 4281,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 654,
											"end": 748,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 654,
											"end": 748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 654,
											"end": 748,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 654,
											"end": 748,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 654,
											"end": 748,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 654,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 654,
											"end": 748,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 654,
											"end": 748,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 748,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 654,
											"end": 748,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 654,
											"end": 748,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 654,
											"end": 748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 654,
											"end": 748,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 654,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 654,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 654,
											"end": 748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 436,
											"end": 2985,
											"name": "tag",
											"source": 30,
											"value": "8"
										},
										{
											"begin": 436,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 436,
											"end": 2985,
											"name": "CALLVALUE",
											"source": 30
										},
										{
											"begin": 436,
											"end": 2985,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 436,
											"end": 2985,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 436,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "52"
										},
										{
											"begin": 436,
											"end": 2985,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 436,
											"end": 2985,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 2985,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 436,
											"end": 2985,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 436,
											"end": 2985,
											"name": "tag",
											"source": 30,
											"value": "52"
										},
										{
											"begin": 436,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 436,
											"end": 2985,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 436,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "53"
										},
										{
											"begin": 436,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "54"
										},
										{
											"begin": 436,
											"end": 2985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 436,
											"end": 2985,
											"name": "tag",
											"source": 30,
											"value": "53"
										},
										{
											"begin": 436,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 436,
											"end": 2985,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 2985,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 436,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "32"
										},
										{
											"begin": 436,
											"end": 2985,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 436,
											"end": 2985,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 436,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "56"
										},
										{
											"begin": 436,
											"end": 2985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 499,
											"end": 600,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 499,
											"end": 600,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 499,
											"end": 600,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 499,
											"end": 600,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 499,
											"end": 600,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 499,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 499,
											"end": 600,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 499,
											"end": 600,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 499,
											"end": 600,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 499,
											"end": 600,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 499,
											"end": 600,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 499,
											"end": 600,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 499,
											"end": 600,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 499,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 499,
											"end": 600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 378,
											"end": 465,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 378,
											"end": 465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 378,
											"end": 465,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 378,
											"end": 465,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 378,
											"end": 465,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 378,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 378,
											"end": 465,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 378,
											"end": 465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 465,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 378,
											"end": 465,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 378,
											"end": 465,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 378,
											"end": 465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 378,
											"end": 465,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 378,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 378,
											"end": 465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 759,
											"end": 884,
											"name": "tag",
											"source": 28,
											"value": "11"
										},
										{
											"begin": 759,
											"end": 884,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 759,
											"end": 884,
											"name": "CALLVALUE",
											"source": 28
										},
										{
											"begin": 759,
											"end": 884,
											"name": "DUP1",
											"source": 28
										},
										{
											"begin": 759,
											"end": 884,
											"name": "ISZERO",
											"source": 28
										},
										{
											"begin": 759,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "65"
										},
										{
											"begin": 759,
											"end": 884,
											"name": "JUMPI",
											"source": 28
										},
										{
											"begin": 759,
											"end": 884,
											"name": "PUSH",
											"source": 28,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 884,
											"name": "DUP1",
											"source": 28
										},
										{
											"begin": 759,
											"end": 884,
											"name": "REVERT",
											"source": 28
										},
										{
											"begin": 759,
											"end": 884,
											"name": "tag",
											"source": 28,
											"value": "65"
										},
										{
											"begin": 759,
											"end": 884,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 759,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "25"
										},
										{
											"begin": 759,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "67"
										},
										{
											"begin": 759,
											"end": 884,
											"name": "CALLDATASIZE",
											"source": 28
										},
										{
											"begin": 759,
											"end": 884,
											"name": "PUSH",
											"source": 28,
											"value": "4"
										},
										{
											"begin": 759,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "68"
										},
										{
											"begin": 759,
											"end": 884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 28
										},
										{
											"begin": 759,
											"end": 884,
											"name": "tag",
											"source": 28,
											"value": "67"
										},
										{
											"begin": 759,
											"end": 884,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 759,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "69"
										},
										{
											"begin": 759,
											"end": 884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 28
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "tag",
											"source": 30,
											"value": "12"
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "CALLVALUE",
											"source": 30
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "70"
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "tag",
											"source": 30,
											"value": "70"
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "71"
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "72"
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "CALLDATASIZE",
											"source": 30
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "68"
										},
										{
											"begin": 3043,
											"end": 4223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "tag",
											"source": 30,
											"value": "72"
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "73"
										},
										{
											"begin": 3043,
											"end": 4223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "tag",
											"source": 30,
											"value": "71"
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "32"
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "75"
										},
										{
											"begin": 3043,
											"end": 4223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 5813,
											"end": 5991,
											"name": "tag",
											"source": 30,
											"value": "13"
										},
										{
											"begin": 5813,
											"end": 5991,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 5813,
											"end": 5991,
											"name": "CALLVALUE",
											"source": 30
										},
										{
											"begin": 5813,
											"end": 5991,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5813,
											"end": 5991,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 5813,
											"end": 5991,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "76"
										},
										{
											"begin": 5813,
											"end": 5991,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 5813,
											"end": 5991,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 5813,
											"end": 5991,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5813,
											"end": 5991,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 5813,
											"end": 5991,
											"name": "tag",
											"source": 30,
											"value": "76"
										},
										{
											"begin": 5813,
											"end": 5991,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5813,
											"end": 5991,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5813,
											"end": 5991,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "78"
										},
										{
											"begin": 5813,
											"end": 5991,
											"name": "CALLDATASIZE",
											"source": 30
										},
										{
											"begin": 5813,
											"end": 5991,
											"name": "PUSH",
											"source": 30,
											"value": "4"
										},
										{
											"begin": 5813,
											"end": 5991,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "30"
										},
										{
											"begin": 5813,
											"end": 5991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 5813,
											"end": 5991,
											"name": "tag",
											"source": 30,
											"value": "78"
										},
										{
											"begin": 5813,
											"end": 5991,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5938,
											"end": 5982,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 5889,
											"end": 5902,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 5938,
											"end": 5982,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5938,
											"end": 5982,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5938,
											"end": 5982,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B4A3F1194FF204DF3421C76163FF361A7821792777BFC1DCB14FA8D3EB97E7F5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5938,
											"end": 5982,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 5938,
											"end": 5982,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 5938,
											"end": 5982,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5938,
											"end": 5982,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5938,
											"end": 5982,
											"name": "KECCAK256",
											"source": 30
										},
										{
											"begin": 5938,
											"end": 5982,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 5922,
											"end": 5984,
											"name": "PUSH",
											"source": 30,
											"value": "60"
										},
										{
											"begin": 5922,
											"end": 5984,
											"name": "SHR",
											"source": 30
										},
										{
											"begin": 5922,
											"end": 5984,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5813,
											"end": 5991,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 514,
											"end": 627,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 514,
											"end": 627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 514,
											"end": 627,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 514,
											"end": 627,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 627,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 514,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 514,
											"end": 627,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 627,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 627,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 627,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 514,
											"end": 627,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 514,
											"end": 627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 514,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 514,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 514,
											"end": 627,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 514,
											"end": 627,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 514,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 514,
											"end": 627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 514,
											"end": 627,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 514,
											"end": 627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 514,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 514,
											"end": 627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3493,
											"name": "tag",
											"source": 24,
											"value": "21"
										},
										{
											"begin": 3281,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3405,
											"end": 3427,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "86"
										},
										{
											"begin": 3460,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "87"
										},
										{
											"begin": 3460,
											"end": 3486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "tag",
											"source": 24,
											"value": "86"
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3443,
											"end": 3486,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 3443,
											"end": 3486,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3281,
											"end": 3493,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 3281,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 495,
											"end": 685,
											"name": "tag",
											"source": 32,
											"value": "38"
										},
										{
											"begin": 495,
											"end": 685,
											"name": "JUMPDEST",
											"source": 32
										},
										{
											"begin": 436,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 436,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 436,
											"end": 444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 436,
											"end": 444,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 436,
											"end": 444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 422,
											"end": 444,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 422,
											"end": 432,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 422,
											"end": 444,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 422,
											"end": 444,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 418,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 418,
											"end": 472,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 453,
											"end": 472,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 453,
											"end": 472,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2F7A8EE1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 453,
											"end": 472,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 453,
											"end": 472,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 453,
											"end": 472,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 453,
											"end": 472,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 453,
											"end": 472,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 453,
											"end": 472,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 453,
											"end": 472,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 453,
											"end": 472,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 453,
											"end": 472,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 453,
											"end": 472,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 453,
											"end": 472,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 418,
											"end": 472,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 418,
											"end": 472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 32,
											"value": "97"
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 32,
											"value": "98"
										},
										{
											"begin": 654,
											"end": 663,
											"name": "DUP6",
											"source": 32
										},
										{
											"begin": 654,
											"end": 663,
											"name": "DUP8",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 32,
											"value": "99"
										},
										{
											"begin": 642,
											"end": 678,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "tag",
											"source": 32,
											"value": "98"
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 32
										},
										{
											"begin": 665,
											"end": 671,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 32
										},
										{
											"begin": 673,
											"end": 677,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 32
										},
										{
											"begin": 673,
											"end": 677,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 32,
											"value": "1F"
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 32,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 32,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 32,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 32,
											"value": "40"
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 32,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 32,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 678,
											"name": "SWAP3",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"name": "SWAP2",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"name": "SWAP1",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"name": "SWAP2",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"name": "MSTORE",
											"source": 32
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 642,
											"end": 653,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 32,
											"value": "100"
										},
										{
											"begin": 642,
											"end": 653,
											"name": "SWAP3",
											"source": 32
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 642,
											"end": 678,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 32
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "tag",
											"source": 32,
											"value": "97"
										},
										{
											"begin": 642,
											"end": 678,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 32
										},
										{
											"begin": 495,
											"end": 685,
											"name": "POP",
											"source": 32
										},
										{
											"begin": 495,
											"end": 685,
											"name": "POP",
											"source": 32
										},
										{
											"begin": 495,
											"end": 685,
											"name": "POP",
											"source": 32
										},
										{
											"begin": 495,
											"end": 685,
											"name": "POP",
											"source": 32
										},
										{
											"begin": 495,
											"end": 685,
											"name": "POP",
											"source": 32
										},
										{
											"begin": 495,
											"end": 685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 32
										},
										{
											"begin": 539,
											"end": 701,
											"name": "tag",
											"source": 28,
											"value": "41"
										},
										{
											"begin": 539,
											"end": 701,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 616,
											"end": 639,
											"name": "PUSH",
											"source": 28,
											"value": "0"
										},
										{
											"begin": 673,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "86"
										},
										{
											"begin": 1620,
											"end": 1663,
											"name": "PUSH",
											"source": 28,
											"value": "177481AC65E4292921C69F62D1CC7F57541261E5D61C8175CF4E36A01C9BFC96"
										},
										{
											"begin": 1620,
											"end": 1663,
											"name": "SLOAD",
											"source": 28
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1620,
											"end": 1663,
											"name": "AND",
											"source": 28
										},
										{
											"begin": 1620,
											"end": 1663,
											"name": "SWAP1",
											"source": 28
										},
										{
											"begin": 1469,
											"end": 1670,
											"name": "JUMP",
											"source": 28
										},
										{
											"begin": 4281,
											"end": 5755,
											"name": "tag",
											"source": 30,
											"value": "46"
										},
										{
											"begin": 4281,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "A5E74BF718C7D6929BF8F422C8BE92118782759ABAC1BF7601C5A938D6F306A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4498,
											"end": 4513,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 4354,
											"end": 4380,
											"name": "PUSH",
											"source": 30,
											"value": "60"
										},
										{
											"begin": 4354,
											"end": 4380,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B4A3F1194FF204DF3421C76163FF361A7821792777BFC1DCB14FA8D3EB97E7F5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 584,
											"end": 637,
											"name": "SWAP1",
											"source": 26
										},
										{
											"begin": 4498,
											"end": 4513,
											"name": "PUSH",
											"source": 30,
											"value": "FFFF"
										},
										{
											"begin": 4498,
											"end": 4513,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "PUSH",
											"source": 30,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "GT",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "108"
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "108"
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "109"
										},
										{
											"begin": 4484,
											"end": 4514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "tag",
											"source": 30,
											"value": "108"
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "MUL",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "110"
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "MUL",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "CALLDATASIZE",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "CALLDATACOPY",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "tag",
											"source": 30,
											"value": "110"
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4484,
											"end": 4514,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4472,
											"end": 4514,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4472,
											"end": 4514,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4524,
											"end": 4541,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4572,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4588,
											"end": 4605,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4583,
											"end": 5620,
											"name": "tag",
											"source": 30,
											"value": "111"
										},
										{
											"begin": 4583,
											"end": 5620,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4623,
											"end": 4638,
											"name": "PUSH",
											"source": 30,
											"value": "1"
										},
										{
											"begin": 4623,
											"end": 4638,
											"name": "DUP5",
											"source": 30
										},
										{
											"begin": 4623,
											"end": 4638,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4623,
											"end": 4638,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 4623,
											"end": 4638,
											"name": "PUSH",
											"source": 30,
											"value": "FFFF"
										},
										{
											"begin": 4623,
											"end": 4638,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4607,
											"end": 4638,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 4607,
											"end": 4638,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 4583,
											"end": 5620,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4583,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "112"
										},
										{
											"begin": 4583,
											"end": 5620,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 4667,
											"end": 4679,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 4682,
											"end": 4708,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4682,
											"end": 4708,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4682,
											"end": 4708,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 4682,
											"end": 4697,
											"name": "PUSH",
											"source": 30,
											"value": "2"
										},
										{
											"begin": 4682,
											"end": 4697,
											"name": "DUP6",
											"source": 30
										},
										{
											"begin": 4682,
											"end": 4697,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4682,
											"end": 4708,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 4682,
											"end": 4708,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 4682,
											"end": 4708,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 4682,
											"end": 4708,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4682,
											"end": 4708,
											"name": "KECCAK256",
											"source": 30
										},
										{
											"begin": 4682,
											"end": 4708,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 4682,
											"end": 4708,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4723,
											"end": 5610,
											"name": "tag",
											"source": 30,
											"value": "114"
										},
										{
											"begin": 4723,
											"end": 5610,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4808,
											"end": 4809,
											"name": "PUSH",
											"source": 30,
											"value": "8"
										},
										{
											"begin": 4788,
											"end": 4805,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4788,
											"end": 4809,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 4723,
											"end": 5610,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 4723,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "115"
										},
										{
											"begin": 4723,
											"end": 5610,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "117"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "118"
										},
										{
											"begin": 4879,
											"end": 4894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "tag",
											"source": 30,
											"value": "117"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4948,
											"name": "PUSH",
											"source": 30,
											"value": "1"
										},
										{
											"begin": 4933,
											"end": 4948,
											"name": "DUP9",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4948,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 4933,
											"end": 4948,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "SWAP6",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4933,
											"end": 4948,
											"name": "PUSH",
											"source": 30,
											"value": "FFFF"
										},
										{
											"begin": 4933,
											"end": 4948,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4948,
											"name": "DUP6",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4948,
											"name": "GT",
											"source": 30
										},
										{
											"begin": 4917,
											"end": 4948,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4972,
											"end": 4977,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "115"
										},
										{
											"begin": 4913,
											"end": 4996,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 5069,
											"end": 5070,
											"name": "PUSH",
											"source": 30,
											"value": "5"
										},
										{
											"begin": 5048,
											"end": 5070,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5048,
											"end": 5070,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5048,
											"end": 5070,
											"name": "SHL",
											"source": 30
										},
										{
											"begin": 5039,
											"end": 5071,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 5039,
											"end": 5071,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5039,
											"end": 5071,
											"name": "SHL",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5122,
											"end": 5140,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5122,
											"end": 5140,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 5014,
											"end": 5029,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 5122,
											"end": 5140,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5122,
											"end": 5140,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5122,
											"end": 5140,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 5122,
											"end": 5140,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 5122,
											"end": 5140,
											"name": "DUP9",
											"source": 30
										},
										{
											"begin": 5122,
											"end": 5140,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5122,
											"end": 5140,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 5122,
											"end": 5140,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 5122,
											"end": 5140,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5122,
											"end": 5140,
											"name": "KECCAK256",
											"source": 30
										},
										{
											"begin": 5122,
											"end": 5140,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 5106,
											"end": 5142,
											"name": "PUSH",
											"source": 30,
											"value": "60"
										},
										{
											"begin": 5106,
											"end": 5142,
											"name": "SHR",
											"source": 30
										},
										{
											"begin": 5106,
											"end": 5142,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5014,
											"end": 5029,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5197,
											"end": 5435,
											"name": "tag",
											"source": 30,
											"value": "120"
										},
										{
											"begin": 5197,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 5235,
											"end": 5244,
											"name": "DUP9",
											"source": 30
										},
										{
											"begin": 5222,
											"end": 5232,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5222,
											"end": 5244,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 5197,
											"end": 5435,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 5197,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "121"
										},
										{
											"begin": 5197,
											"end": 5435,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 5295,
											"end": 5304,
											"name": "DUP11",
											"source": 30
										},
										{
											"begin": 5305,
											"end": 5315,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5295,
											"end": 5316,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5295,
											"end": 5316,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 5295,
											"end": 5316,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5295,
											"end": 5316,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 5295,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "124"
										},
										{
											"begin": 5295,
											"end": 5316,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 5295,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "124"
										},
										{
											"begin": 5295,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "125"
										},
										{
											"begin": 5295,
											"end": 5316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 5295,
											"end": 5316,
											"name": "tag",
											"source": 30,
											"value": "124"
										},
										{
											"begin": 5295,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 5295,
											"end": 5316,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 5295,
											"end": 5316,
											"name": "MUL",
											"source": 30
										},
										{
											"begin": 5295,
											"end": 5316,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 5295,
											"end": 5316,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 5295,
											"end": 5316,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 5295,
											"end": 5316,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5286,
											"end": 5316,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 5286,
											"end": 5291,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5286,
											"end": 5316,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 5286,
											"end": 5316,
											"name": "SUB",
											"source": 30
										},
										{
											"begin": 5282,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "126"
										},
										{
											"begin": 5282,
											"end": 5417,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 5359,
											"end": 5363,
											"name": "PUSH",
											"source": 30,
											"value": "1"
										},
										{
											"begin": 5344,
											"end": 5363,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 5344,
											"end": 5363,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5389,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "121"
										},
										{
											"begin": 5389,
											"end": 5394,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 5282,
											"end": 5417,
											"name": "tag",
											"source": 30,
											"value": "126"
										},
										{
											"begin": 5282,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 5246,
											"end": 5258,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5246,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "127"
										},
										{
											"begin": 5246,
											"end": 5258,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5246,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "118"
										},
										{
											"begin": 5246,
											"end": 5258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 5246,
											"end": 5258,
											"name": "tag",
											"source": 30,
											"value": "127"
										},
										{
											"begin": 5246,
											"end": 5258,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 5246,
											"end": 5258,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 5246,
											"end": 5258,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5246,
											"end": 5258,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5197,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "120"
										},
										{
											"begin": 5197,
											"end": 5435,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 5197,
											"end": 5435,
											"name": "tag",
											"source": 30,
											"value": "121"
										},
										{
											"begin": 5197,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 5197,
											"end": 5435,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5457,
											"end": 5469,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 5453,
											"end": 5520,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 5453,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "128"
										},
										{
											"begin": 5453,
											"end": 5520,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 5493,
											"end": 5501,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5493,
											"end": 5501,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5493,
											"end": 5501,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5493,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "116"
										},
										{
											"begin": 5493,
											"end": 5501,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 5453,
											"end": 5520,
											"name": "tag",
											"source": 30,
											"value": "128"
										},
										{
											"begin": 5453,
											"end": 5520,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 5561,
											"end": 5566,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5538,
											"end": 5547,
											"name": "DUP11",
											"source": 30
										},
										{
											"begin": 5548,
											"end": 5557,
											"name": "DUP10",
											"source": 30
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "130"
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "130"
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "125"
										},
										{
											"begin": 5538,
											"end": 5558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "tag",
											"source": 30,
											"value": "130"
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5538,
											"end": 5566,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5538,
											"end": 5566,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 5538,
											"end": 5566,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "MUL",
											"source": 30
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 5538,
											"end": 5566,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 5584,
											"end": 5595,
											"name": "DUP8",
											"source": 30
										},
										{
											"begin": 5584,
											"end": 5595,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "131"
										},
										{
											"begin": 5584,
											"end": 5595,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 5584,
											"end": 5595,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "118"
										},
										{
											"begin": 5584,
											"end": 5595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 5584,
											"end": 5595,
											"name": "tag",
											"source": 30,
											"value": "131"
										},
										{
											"begin": 5584,
											"end": 5595,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 5584,
											"end": 5595,
											"name": "SWAP9",
											"source": 30
										},
										{
											"begin": 5584,
											"end": 5595,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 5584,
											"end": 5595,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4861,
											"end": 5610,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4861,
											"end": 5610,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4861,
											"end": 5610,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4723,
											"end": 5610,
											"name": "tag",
											"source": 30,
											"value": "116"
										},
										{
											"begin": 4723,
											"end": 5610,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4827,
											"end": 4846,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4827,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "132"
										},
										{
											"begin": 4827,
											"end": 4846,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4827,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "118"
										},
										{
											"begin": 4827,
											"end": 4846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 4827,
											"end": 4846,
											"name": "tag",
											"source": 30,
											"value": "132"
										},
										{
											"begin": 4827,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4827,
											"end": 4846,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4827,
											"end": 4846,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4827,
											"end": 4846,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4723,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "114"
										},
										{
											"begin": 4723,
											"end": 5610,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 4723,
											"end": 5610,
											"name": "tag",
											"source": 30,
											"value": "115"
										},
										{
											"begin": 4723,
											"end": 5610,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4723,
											"end": 5610,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4653,
											"end": 5620,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4640,
											"end": 4651,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4640,
											"end": 4651,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 4640,
											"end": 4651,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "133"
										},
										{
											"begin": 4640,
											"end": 4651,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4640,
											"end": 4651,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "118"
										},
										{
											"begin": 4640,
											"end": 4651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 4640,
											"end": 4651,
											"name": "tag",
											"source": 30,
											"value": "133"
										},
										{
											"begin": 4640,
											"end": 4651,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4640,
											"end": 4651,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 4640,
											"end": 4651,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4640,
											"end": 4651,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4583,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "111"
										},
										{
											"begin": 4583,
											"end": 5620,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 4583,
											"end": 5620,
											"name": "tag",
											"source": 30,
											"value": "112"
										},
										{
											"begin": 4583,
											"end": 5620,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5711,
											"end": 5739,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 5711,
											"end": 5739,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5718,
											"end": 5727,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 4281,
											"end": 5755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 654,
											"end": 748,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 654,
											"end": 748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 387,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 387,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 387,
											"end": 402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 387,
											"end": 402,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 387,
											"end": 402,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 373,
											"end": 402,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 373,
											"end": 383,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 373,
											"end": 402,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 373,
											"end": 402,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 369,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 369,
											"end": 453,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 423,
											"end": 453,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 453,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EFD1052D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 423,
											"end": 453,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 423,
											"end": 453,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 423,
											"end": 453,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 423,
											"end": 453,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 423,
											"end": 453,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 453,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 423,
											"end": 453,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 423,
											"end": 453,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 423,
											"end": 453,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 423,
											"end": 453,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 423,
											"end": 453,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 369,
											"end": 453,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 369,
											"end": 453,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 723,
											"end": 741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 723,
											"end": 739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 723,
											"end": 741,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 723,
											"end": 741,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 723,
											"end": 741,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 654,
											"end": 748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 436,
											"end": 2985,
											"name": "tag",
											"source": 30,
											"value": "54"
										},
										{
											"begin": 436,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "A5E74BF718C7D6929BF8F422C8BE92118782759ABAC1BF7601C5A938D6F306A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 621,
											"end": 636,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 477,
											"end": 505,
											"name": "PUSH",
											"source": 30,
											"value": "60"
										},
										{
											"begin": 477,
											"end": 505,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B4A3F1194FF204DF3421C76163FF361A7821792777BFC1DCB14FA8D3EB97E7F5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 584,
											"end": 637,
											"name": "SWAP1",
											"source": 26
										},
										{
											"begin": 621,
											"end": 636,
											"name": "PUSH",
											"source": 30,
											"value": "FFFF"
										},
										{
											"begin": 621,
											"end": 636,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "PUSH",
											"source": 30,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 609,
											"end": 637,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "GT",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "144"
										},
										{
											"begin": 609,
											"end": 637,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "144"
										},
										{
											"begin": 609,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "109"
										},
										{
											"begin": 609,
											"end": 637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "tag",
											"source": 30,
											"value": "144"
										},
										{
											"begin": 609,
											"end": 637,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 609,
											"end": 637,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 609,
											"end": 637,
											"name": "MUL",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 609,
											"end": 637,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 609,
											"end": 637,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "145"
										},
										{
											"begin": 609,
											"end": 637,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 609,
											"end": 637,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "tag",
											"source": 30,
											"value": "146"
										},
										{
											"begin": 609,
											"end": 637,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 609,
											"end": 637,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 609,
											"end": 637,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "PUSH",
											"source": 30,
											"value": "1"
										},
										{
											"begin": 609,
											"end": 637,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "SUB",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "146"
										},
										{
											"begin": 609,
											"end": 637,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 609,
											"end": 637,
											"name": "tag",
											"source": 30,
											"value": "145"
										},
										{
											"begin": 609,
											"end": 637,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 695,
											"end": 710,
											"name": "PUSH",
											"source": 30,
											"value": "1"
										},
										{
											"begin": 695,
											"end": 710,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 695,
											"end": 710,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 695,
											"end": 710,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 593,
											"end": 637,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 593,
											"end": 637,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 648,
											"end": 680,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 648,
											"end": 680,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 695,
											"end": 710,
											"name": "PUSH",
											"source": 30,
											"value": "FFFF"
										},
										{
											"begin": 695,
											"end": 710,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "PUSH",
											"source": 30,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 683,
											"end": 711,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "GT",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "150"
										},
										{
											"begin": 683,
											"end": 711,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "150"
										},
										{
											"begin": 683,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "109"
										},
										{
											"begin": 683,
											"end": 711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "tag",
											"source": 30,
											"value": "150"
										},
										{
											"begin": 683,
											"end": 711,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 711,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 683,
											"end": 711,
											"name": "MUL",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 683,
											"end": 711,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 711,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "151"
										},
										{
											"begin": 683,
											"end": 711,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 683,
											"end": 711,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 683,
											"end": 711,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "MUL",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "CALLDATASIZE",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "CALLDATACOPY",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 683,
											"end": 711,
											"name": "tag",
											"source": 30,
											"value": "151"
										},
										{
											"begin": 683,
											"end": 711,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 683,
											"end": 711,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 648,
											"end": 711,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 648,
											"end": 711,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 721,
											"end": 738,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 769,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 828,
											"end": 845,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 823,
											"end": 2504,
											"name": "tag",
											"source": 30,
											"value": "152"
										},
										{
											"begin": 823,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 863,
											"end": 878,
											"name": "PUSH",
											"source": 30,
											"value": "1"
										},
										{
											"begin": 863,
											"end": 878,
											"name": "DUP6",
											"source": 30
										},
										{
											"begin": 863,
											"end": 878,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 863,
											"end": 878,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 863,
											"end": 878,
											"name": "PUSH",
											"source": 30,
											"value": "FFFF"
										},
										{
											"begin": 863,
											"end": 878,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 847,
											"end": 878,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 847,
											"end": 878,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 823,
											"end": 2504,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 823,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "153"
										},
										{
											"begin": 823,
											"end": 2504,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 907,
											"end": 919,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 948,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 922,
											"end": 948,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 922,
											"end": 948,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 922,
											"end": 937,
											"name": "PUSH",
											"source": 30,
											"value": "2"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "DUP7",
											"source": 30
										},
										{
											"begin": 922,
											"end": 937,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 922,
											"end": 948,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 922,
											"end": 948,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 922,
											"end": 948,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 922,
											"end": 948,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 922,
											"end": 948,
											"name": "KECCAK256",
											"source": 30
										},
										{
											"begin": 922,
											"end": 948,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 922,
											"end": 948,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 963,
											"end": 2494,
											"name": "tag",
											"source": 30,
											"value": "155"
										},
										{
											"begin": 963,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1048,
											"end": 1049,
											"name": "PUSH",
											"source": 30,
											"value": "8"
										},
										{
											"begin": 1028,
											"end": 1045,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1028,
											"end": 1049,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 963,
											"end": 2494,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 963,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "156"
										},
										{
											"begin": 963,
											"end": 2494,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1119,
											"end": 1134,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 1119,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "158"
										},
										{
											"begin": 1119,
											"end": 1134,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1119,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "118"
										},
										{
											"begin": 1119,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 1119,
											"end": 1134,
											"name": "tag",
											"source": 30,
											"value": "158"
										},
										{
											"begin": 1119,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "PUSH",
											"source": 30,
											"value": "1"
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "DUP10",
											"source": 30
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 1119,
											"end": 1134,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 1119,
											"end": 1134,
											"name": "SWAP6",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "PUSH",
											"source": 30,
											"value": "FFFF"
										},
										{
											"begin": 1173,
											"end": 1188,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 1157,
											"end": 1188,
											"name": "DUP6",
											"source": 30
										},
										{
											"begin": 1157,
											"end": 1188,
											"name": "GT",
											"source": 30
										},
										{
											"begin": 1157,
											"end": 1188,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1212,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "156"
										},
										{
											"begin": 1153,
											"end": 1236,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1309,
											"end": 1310,
											"name": "PUSH",
											"source": 30,
											"value": "5"
										},
										{
											"begin": 1288,
											"end": 1310,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1288,
											"end": 1310,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 1288,
											"end": 1310,
											"name": "SHL",
											"source": 30
										},
										{
											"begin": 1279,
											"end": 1311,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 1279,
											"end": 1311,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 1279,
											"end": 1311,
											"name": "SHL",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 1254,
											"end": 1269,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "DUP10",
											"source": 30
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "KECCAK256",
											"source": 30
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 1346,
											"end": 1382,
											"name": "PUSH",
											"source": 30,
											"value": "60"
										},
										{
											"begin": 1346,
											"end": 1382,
											"name": "SHR",
											"source": 30
										},
										{
											"begin": 1346,
											"end": 1382,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 1254,
											"end": 1269,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1437,
											"end": 2070,
											"name": "tag",
											"source": 30,
											"value": "160"
										},
										{
											"begin": 1437,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1475,
											"end": 1484,
											"name": "DUP9",
											"source": 30
										},
										{
											"begin": 1462,
											"end": 1472,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1462,
											"end": 1484,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 1437,
											"end": 2070,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 1437,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "161"
										},
										{
											"begin": 1437,
											"end": 2070,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1562,
											"end": 1567,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1526,
											"end": 1567,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 1526,
											"end": 1539,
											"name": "DUP13",
											"source": 30
										},
										{
											"begin": 1540,
											"end": 1550,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 1526,
											"end": 1551,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1526,
											"end": 1551,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 1526,
											"end": 1551,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1526,
											"end": 1551,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 1526,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "164"
										},
										{
											"begin": 1526,
											"end": 1551,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1526,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "164"
										},
										{
											"begin": 1526,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "125"
										},
										{
											"begin": 1526,
											"end": 1551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 1526,
											"end": 1551,
											"name": "tag",
											"source": 30,
											"value": "164"
										},
										{
											"begin": 1526,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1526,
											"end": 1551,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 1526,
											"end": 1551,
											"name": "MUL",
											"source": 30
										},
										{
											"begin": 1526,
											"end": 1551,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 1526,
											"end": 1551,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 1526,
											"end": 1551,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 1526,
											"end": 1551,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 1526,
											"end": 1558,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 1526,
											"end": 1558,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 1526,
											"end": 1558,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1526,
											"end": 1567,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 1526,
											"end": 1567,
											"name": "SUB",
											"source": 30
										},
										{
											"begin": 1522,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "165"
										},
										{
											"begin": 1522,
											"end": 2052,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1718,
											"end": 1726,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "DUP13",
											"source": 30
										},
										{
											"begin": 1609,
											"end": 1619,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "167"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "167"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "125"
										},
										{
											"begin": 1595,
											"end": 1620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "tag",
											"source": 30,
											"value": "167"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "MUL",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1630,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 1595,
											"end": 1630,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1630,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 1660,
											"end": 1677,
											"name": "DUP12",
											"source": 30
										},
										{
											"begin": 1678,
											"end": 1688,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "169"
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "169"
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "125"
										},
										{
											"begin": 1660,
											"end": 1689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "tag",
											"source": 30,
											"value": "169"
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "MUL",
											"source": 30
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1715,
											"name": "PUSH",
											"source": 30,
											"value": "FF"
										},
										{
											"begin": 1595,
											"end": 1715,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1715,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1715,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1715,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1715,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "171"
										},
										{
											"begin": 1595,
											"end": 1715,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "171"
										},
										{
											"begin": 1595,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "125"
										},
										{
											"begin": 1595,
											"end": 1715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1715,
											"name": "tag",
											"source": 30,
											"value": "171"
										},
										{
											"begin": 1595,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1715,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 1595,
											"end": 1715,
											"name": "MUL",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1715,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 1595,
											"end": 1715,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1715,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1726,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1595,
											"end": 1726,
											"name": "NOT",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1726,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1726,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1726,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1595,
											"end": 1726,
											"name": "NOT",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1726,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1726,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1726,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1726,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 1595,
											"end": 1726,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 1892,
											"end": 1895,
											"name": "PUSH",
											"source": 30,
											"value": "FF"
										},
										{
											"begin": 1860,
											"end": 1877,
											"name": "DUP11",
											"source": 30
										},
										{
											"begin": 1878,
											"end": 1888,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "173"
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "173"
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "125"
										},
										{
											"begin": 1860,
											"end": 1889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "tag",
											"source": 30,
											"value": "173"
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "MUL",
											"source": 30
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 1860,
											"end": 1895,
											"name": "PUSH",
											"source": 30,
											"value": "FF"
										},
										{
											"begin": 1860,
											"end": 1895,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 1860,
											"end": 1895,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 1852,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "174"
										},
										{
											"begin": 1852,
											"end": 1896,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1852,
											"end": 1896,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1896,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1852,
											"end": 1896,
											"name": "REVERT",
											"source": 30
										},
										{
											"begin": 1852,
											"end": 1896,
											"name": "tag",
											"source": 30,
											"value": "174"
										},
										{
											"begin": 1852,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1922,
											"end": 1939,
											"name": "DUP10",
											"source": 30
										},
										{
											"begin": 1940,
											"end": 1950,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1922,
											"end": 1951,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1922,
											"end": 1951,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 1922,
											"end": 1951,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1922,
											"end": 1951,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 1922,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "176"
										},
										{
											"begin": 1922,
											"end": 1951,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 1922,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "176"
										},
										{
											"begin": 1922,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "125"
										},
										{
											"begin": 1922,
											"end": 1951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 1922,
											"end": 1951,
											"name": "tag",
											"source": 30,
											"value": "176"
										},
										{
											"begin": 1922,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1922,
											"end": 1951,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1951,
											"name": "MUL",
											"source": 30
										},
										{
											"begin": 1922,
											"end": 1951,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1951,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 1922,
											"end": 1951,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "177"
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "178"
										},
										{
											"begin": 1922,
											"end": 1953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "tag",
											"source": 30,
											"value": "177"
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "PUSH",
											"source": 30,
											"value": "FF"
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1994,
											"end": 1998,
											"name": "PUSH",
											"source": 30,
											"value": "1"
										},
										{
											"begin": 1994,
											"end": 1998,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2024,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "161"
										},
										{
											"begin": 2024,
											"end": 2029,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 1522,
											"end": 2052,
											"name": "tag",
											"source": 30,
											"value": "165"
										},
										{
											"begin": 1522,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "179"
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "118"
										},
										{
											"begin": 1486,
											"end": 1498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "tag",
											"source": 30,
											"value": "179"
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 1437,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "160"
										},
										{
											"begin": 1437,
											"end": 2070,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 1437,
											"end": 2070,
											"name": "tag",
											"source": 30,
											"value": "161"
										},
										{
											"begin": 1437,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1437,
											"end": 2070,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 2092,
											"end": 2104,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 2088,
											"end": 2155,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 2088,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "180"
										},
										{
											"begin": 2088,
											"end": 2155,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 2128,
											"end": 2136,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 2128,
											"end": 2136,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 2128,
											"end": 2136,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 2128,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "157"
										},
										{
											"begin": 2128,
											"end": 2136,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 2088,
											"end": 2155,
											"name": "tag",
											"source": 30,
											"value": "180"
										},
										{
											"begin": 2088,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 2207,
											"end": 2212,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 2173,
											"end": 2186,
											"name": "DUP12",
											"source": 30
										},
										{
											"begin": 2187,
											"end": 2196,
											"name": "DUP10",
											"source": 30
										},
										{
											"begin": 2173,
											"end": 2197,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 2173,
											"end": 2197,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 2173,
											"end": 2197,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 2173,
											"end": 2197,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 2173,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "182"
										},
										{
											"begin": 2173,
											"end": 2197,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 2173,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "182"
										},
										{
											"begin": 2173,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "125"
										},
										{
											"begin": 2173,
											"end": 2197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 2173,
											"end": 2197,
											"name": "tag",
											"source": 30,
											"value": "182"
										},
										{
											"begin": 2173,
											"end": 2197,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 2173,
											"end": 2197,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 2173,
											"end": 2197,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 2173,
											"end": 2197,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 2173,
											"end": 2197,
											"name": "MUL",
											"source": 30
										},
										{
											"begin": 2173,
											"end": 2197,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 2173,
											"end": 2197,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 2173,
											"end": 2197,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 2173,
											"end": 2197,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 2173,
											"end": 2197,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 2173,
											"end": 2197,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2173,
											"end": 2212,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 2173,
											"end": 2212,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 2173,
											"end": 2212,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 2173,
											"end": 2212,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 2173,
											"end": 2212,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 2301,
											"end": 2316,
											"name": "PUSH",
											"source": 30,
											"value": "1"
										},
										{
											"begin": 2301,
											"end": 2316,
											"name": "DUP11",
											"source": 30
										},
										{
											"begin": 2301,
											"end": 2316,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 2301,
											"end": 2316,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 2301,
											"end": 2316,
											"name": "PUSH",
											"source": 30,
											"value": "FFFF"
										},
										{
											"begin": 2301,
											"end": 2316,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "PUSH",
											"source": 30,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "GT",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "184"
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "184"
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "109"
										},
										{
											"begin": 2267,
											"end": 2334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "tag",
											"source": 30,
											"value": "184"
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "MUL",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "185"
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "MUL",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "CALLDATASIZE",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "CALLDATACOPY",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "tag",
											"source": 30,
											"value": "185"
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 2267,
											"end": 2334,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 2230,
											"end": 2243,
											"name": "DUP12",
											"source": 30
										},
										{
											"begin": 2244,
											"end": 2253,
											"name": "DUP10",
											"source": 30
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "187"
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "187"
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "125"
										},
										{
											"begin": 2230,
											"end": 2254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "tag",
											"source": 30,
											"value": "187"
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "MUL",
											"source": 30
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 2230,
											"end": 2254,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 2230,
											"end": 2264,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2264,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 2230,
											"end": 2334,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 2230,
											"end": 2334,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 2230,
											"end": 2334,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 2230,
											"end": 2334,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 2392,
											"end": 2400,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2365,
											"name": "DUP12",
											"source": 30
										},
										{
											"begin": 2366,
											"end": 2375,
											"name": "DUP10",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2376,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2376,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2376,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2376,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "189"
										},
										{
											"begin": 2352,
											"end": 2376,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "189"
										},
										{
											"begin": 2352,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "125"
										},
										{
											"begin": 2352,
											"end": 2376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2376,
											"name": "tag",
											"source": 30,
											"value": "189"
										},
										{
											"begin": 2352,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2376,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 2352,
											"end": 2376,
											"name": "MUL",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2376,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 2352,
											"end": 2376,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2376,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2376,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2386,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 2352,
											"end": 2386,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2386,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 2387,
											"end": 2388,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2389,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2389,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2389,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2389,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "191"
										},
										{
											"begin": 2352,
											"end": 2389,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "191"
										},
										{
											"begin": 2352,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "125"
										},
										{
											"begin": 2352,
											"end": 2389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2389,
											"name": "tag",
											"source": 30,
											"value": "191"
										},
										{
											"begin": 2352,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2389,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 2352,
											"end": 2389,
											"name": "MUL",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2389,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 2352,
											"end": 2389,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2389,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2400,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2352,
											"end": 2400,
											"name": "NOT",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2400,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2400,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2400,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2352,
											"end": 2400,
											"name": "NOT",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2400,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2400,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2400,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2400,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 2352,
											"end": 2400,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 2449,
											"end": 2450,
											"name": "PUSH",
											"source": 30,
											"value": "1"
										},
										{
											"begin": 2418,
											"end": 2435,
											"name": "DUP10",
											"source": 30
										},
										{
											"begin": 2436,
											"end": 2445,
											"name": "DUP10",
											"source": 30
										},
										{
											"begin": 2418,
											"end": 2446,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 2418,
											"end": 2446,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 2418,
											"end": 2446,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 2418,
											"end": 2446,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 2418,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "193"
										},
										{
											"begin": 2418,
											"end": 2446,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 2418,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "193"
										},
										{
											"begin": 2418,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "125"
										},
										{
											"begin": 2418,
											"end": 2446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 2418,
											"end": 2446,
											"name": "tag",
											"source": 30,
											"value": "193"
										},
										{
											"begin": 2418,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 2418,
											"end": 2450,
											"name": "PUSH",
											"source": 30,
											"value": "FF"
										},
										{
											"begin": 2418,
											"end": 2450,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 2418,
											"end": 2450,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 2418,
											"end": 2450,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 2418,
											"end": 2446,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 2418,
											"end": 2446,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 2418,
											"end": 2446,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 2418,
											"end": 2446,
											"name": "MUL",
											"source": 30
										},
										{
											"begin": 2418,
											"end": 2446,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 2418,
											"end": 2446,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 2418,
											"end": 2446,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 2418,
											"end": 2446,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 2418,
											"end": 2446,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 2418,
											"end": 2446,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 2418,
											"end": 2446,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 2418,
											"end": 2450,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 2468,
											"end": 2479,
											"name": "DUP8",
											"source": 30
										},
										{
											"begin": 2468,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "194"
										},
										{
											"begin": 2468,
											"end": 2479,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 2468,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "118"
										},
										{
											"begin": 2468,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 2468,
											"end": 2479,
											"name": "tag",
											"source": 30,
											"value": "194"
										},
										{
											"begin": 2468,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 2468,
											"end": 2479,
											"name": "SWAP9",
											"source": 30
										},
										{
											"begin": 2468,
											"end": 2479,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 2468,
											"end": 2479,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 1101,
											"end": 2494,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 1101,
											"end": 2494,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 1101,
											"end": 2494,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 963,
											"end": 2494,
											"name": "tag",
											"source": 30,
											"value": "157"
										},
										{
											"begin": 963,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1067,
											"end": 1086,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 1067,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "195"
										},
										{
											"begin": 1067,
											"end": 1086,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 1067,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "118"
										},
										{
											"begin": 1067,
											"end": 1086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 1067,
											"end": 1086,
											"name": "tag",
											"source": 30,
											"value": "195"
										},
										{
											"begin": 1067,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 1067,
											"end": 1086,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 1067,
											"end": 1086,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 1067,
											"end": 1086,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 963,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "155"
										},
										{
											"begin": 963,
											"end": 2494,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 963,
											"end": 2494,
											"name": "tag",
											"source": 30,
											"value": "156"
										},
										{
											"begin": 963,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 963,
											"end": 2494,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 893,
											"end": 2504,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 880,
											"end": 891,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 880,
											"end": 891,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 880,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "196"
										},
										{
											"begin": 880,
											"end": 891,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 880,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "118"
										},
										{
											"begin": 880,
											"end": 891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 880,
											"end": 891,
											"name": "tag",
											"source": 30,
											"value": "196"
										},
										{
											"begin": 880,
											"end": 891,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 880,
											"end": 891,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 880,
											"end": 891,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 880,
											"end": 891,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 823,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "152"
										},
										{
											"begin": 823,
											"end": 2504,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 823,
											"end": 2504,
											"name": "tag",
											"source": 30,
											"value": "153"
										},
										{
											"begin": 823,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 823,
											"end": 2504,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 2519,
											"end": 2537,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2864,
											"name": "tag",
											"source": 30,
											"value": "197"
										},
										{
											"begin": 2514,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 2552,
											"end": 2561,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 2539,
											"end": 2549,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 2539,
											"end": 2561,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 2514,
											"end": 2864,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 2514,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "198"
										},
										{
											"begin": 2514,
											"end": 2864,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 2591,
											"end": 2611,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 2614,
											"end": 2631,
											"name": "DUP5",
											"source": 30
										},
										{
											"begin": 2632,
											"end": 2642,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 2614,
											"end": 2643,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 2614,
											"end": 2643,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 2614,
											"end": 2643,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 2614,
											"end": 2643,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 2614,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "201"
										},
										{
											"begin": 2614,
											"end": 2643,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 2614,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "201"
										},
										{
											"begin": 2614,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "125"
										},
										{
											"begin": 2614,
											"end": 2643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 2614,
											"end": 2643,
											"name": "tag",
											"source": 30,
											"value": "201"
										},
										{
											"begin": 2614,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 2614,
											"end": 2643,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 2614,
											"end": 2643,
											"name": "MUL",
											"source": 30
										},
										{
											"begin": 2614,
											"end": 2643,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 2614,
											"end": 2643,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 2614,
											"end": 2643,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 2614,
											"end": 2643,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "PUSH",
											"source": 30,
											"value": "FF"
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 2657,
											"end": 2682,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 2685,
											"end": 2698,
											"name": "DUP8",
											"source": 30
										},
										{
											"begin": 2699,
											"end": 2709,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 2685,
											"end": 2710,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 2685,
											"end": 2710,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 2685,
											"end": 2710,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 2685,
											"end": 2710,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 2685,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "203"
										},
										{
											"begin": 2685,
											"end": 2710,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 2685,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "203"
										},
										{
											"begin": 2685,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "125"
										},
										{
											"begin": 2685,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 2685,
											"end": 2710,
											"name": "tag",
											"source": 30,
											"value": "203"
										},
										{
											"begin": 2685,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 2685,
											"end": 2710,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 2685,
											"end": 2710,
											"name": "MUL",
											"source": 30
										},
										{
											"begin": 2685,
											"end": 2710,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 2685,
											"end": 2710,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 2685,
											"end": 2710,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 2685,
											"end": 2710,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 2685,
											"end": 2720,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 2685,
											"end": 2720,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 2685,
											"end": 2720,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 2657,
											"end": 2720,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 2657,
											"end": 2720,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 2827,
											"end": 2839,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 2816,
											"end": 2825,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 2809,
											"end": 2840,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 2791,
											"end": 2854,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 2791,
											"end": 2854,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 2563,
											"end": 2575,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 2563,
											"end": 2575,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 2563,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "204"
										},
										{
											"begin": 2563,
											"end": 2575,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 2563,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "118"
										},
										{
											"begin": 2563,
											"end": 2575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 2563,
											"end": 2575,
											"name": "tag",
											"source": 30,
											"value": "204"
										},
										{
											"begin": 2563,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 2563,
											"end": 2575,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 2563,
											"end": 2575,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 2563,
											"end": 2575,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 2514,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "197"
										},
										{
											"begin": 2514,
											"end": 2864,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 2514,
											"end": 2864,
											"name": "tag",
											"source": 30,
											"value": "198"
										},
										{
											"begin": 2514,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 2514,
											"end": 2864,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 2959,
											"end": 2968,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 2944,
											"end": 2957,
											"name": "DUP6",
											"source": 30
										},
										{
											"begin": 2937,
											"end": 2969,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 2923,
											"end": 2979,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 2923,
											"end": 2979,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 2923,
											"end": 2979,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 2923,
											"end": 2979,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 436,
											"end": 2985,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 436,
											"end": 2985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 499,
											"end": 600,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 499,
											"end": 600,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 552,
											"end": 559,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 578,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 578,
											"end": 593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 378,
											"end": 465,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 378,
											"end": 465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 424,
											"end": 431,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 450,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 450,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 450,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 759,
											"end": 884,
											"name": "tag",
											"source": 28,
											"value": "69"
										},
										{
											"begin": 759,
											"end": 884,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 436,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 436,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 436,
											"end": 444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 436,
											"end": 444,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 436,
											"end": 444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 422,
											"end": 444,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 422,
											"end": 432,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 422,
											"end": 444,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 422,
											"end": 444,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 418,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 418,
											"end": 472,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 453,
											"end": 472,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 453,
											"end": 472,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2F7A8EE1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 453,
											"end": 472,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 453,
											"end": 472,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 453,
											"end": 472,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 453,
											"end": 472,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 453,
											"end": 472,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 453,
											"end": 472,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 453,
											"end": 472,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 453,
											"end": 472,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 453,
											"end": 472,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 453,
											"end": 472,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 453,
											"end": 472,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 418,
											"end": 472,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 418,
											"end": 472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1900,
											"end": 1943,
											"name": "PUSH",
											"source": 28,
											"value": "177481AC65E4292921C69F62D1CC7F57541261E5D61C8175CF4E36A01C9BFC96"
										},
										{
											"begin": 1900,
											"end": 1961,
											"name": "DUP1",
											"source": 28
										},
										{
											"begin": 1900,
											"end": 1961,
											"name": "SLOAD",
											"source": 28
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 1961,
											"name": "AND",
											"source": 28
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 1961,
											"name": "DUP4",
											"source": 28
										},
										{
											"begin": 1900,
											"end": 1961,
											"name": "AND",
											"source": 28
										},
										{
											"begin": 1900,
											"end": 1961,
											"name": "OR",
											"source": 28
										},
										{
											"begin": 1900,
											"end": 1961,
											"name": "SWAP1",
											"source": 28
										},
										{
											"begin": 1900,
											"end": 1961,
											"name": "SSTORE",
											"source": 28
										},
										{
											"begin": 759,
											"end": 884,
											"name": "POP",
											"source": 28
										},
										{
											"begin": 759,
											"end": 884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 28
										},
										{
											"begin": 841,
											"end": 877,
											"modifierDepth": 1,
											"name": "tag",
											"source": 28,
											"value": "213"
										},
										{
											"begin": 841,
											"end": 877,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 759,
											"end": 884,
											"name": "POP",
											"source": 28
										},
										{
											"begin": 759,
											"end": 884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 28
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "tag",
											"source": 30,
											"value": "73"
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "A5E74BF718C7D6929BF8F422C8BE92118782759ABAC1BF7601C5A938D6F306A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3265,
											"end": 3280,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 3127,
											"end": 3152,
											"name": "PUSH",
											"source": 30,
											"value": "60"
										},
										{
											"begin": 3127,
											"end": 3152,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B4A3F1194FF204DF3421C76163FF361A7821792777BFC1DCB14FA8D3EB97E7F5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 584,
											"end": 637,
											"name": "SWAP1",
											"source": 26
										},
										{
											"begin": 3265,
											"end": 3280,
											"name": "PUSH",
											"source": 30,
											"value": "FFFF"
										},
										{
											"begin": 3265,
											"end": 3280,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "PUSH",
											"source": 30,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "GT",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "218"
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "218"
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "109"
										},
										{
											"begin": 3252,
											"end": 3281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "tag",
											"source": 30,
											"value": "218"
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "MUL",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "219"
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "MUL",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "CALLDATASIZE",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "CALLDATACOPY",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "tag",
											"source": 30,
											"value": "219"
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 3240,
											"end": 3281,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 3240,
											"end": 3281,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 3292,
											"end": 3312,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 3322,
											"end": 3343,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3402,
											"end": 3419,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 3397,
											"end": 4091,
											"name": "tag",
											"source": 30,
											"value": "220"
										},
										{
											"begin": 3397,
											"end": 4091,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 3437,
											"end": 3452,
											"name": "PUSH",
											"source": 30,
											"value": "1"
										},
										{
											"begin": 3437,
											"end": 3452,
											"name": "DUP5",
											"source": 30
										},
										{
											"begin": 3437,
											"end": 3452,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3437,
											"end": 3452,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 3437,
											"end": 3452,
											"name": "PUSH",
											"source": 30,
											"value": "FFFF"
										},
										{
											"begin": 3437,
											"end": 3452,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 3421,
											"end": 3452,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 3421,
											"end": 3452,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 3397,
											"end": 4091,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 3397,
											"end": 4091,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "221"
										},
										{
											"begin": 3397,
											"end": 4091,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 3481,
											"end": 3493,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3522,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3496,
											"end": 3522,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3496,
											"end": 3522,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 3496,
											"end": 3511,
											"name": "PUSH",
											"source": 30,
											"value": "2"
										},
										{
											"begin": 3496,
											"end": 3511,
											"name": "DUP6",
											"source": 30
										},
										{
											"begin": 3496,
											"end": 3511,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3496,
											"end": 3522,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 3496,
											"end": 3522,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 3496,
											"end": 3522,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 3496,
											"end": 3522,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3496,
											"end": 3522,
											"name": "KECCAK256",
											"source": 30
										},
										{
											"begin": 3496,
											"end": 3522,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 3496,
											"end": 3522,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3537,
											"end": 4081,
											"name": "tag",
											"source": 30,
											"value": "223"
										},
										{
											"begin": 3537,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 3622,
											"end": 3623,
											"name": "PUSH",
											"source": 30,
											"value": "8"
										},
										{
											"begin": 3602,
											"end": 3619,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3602,
											"end": 3623,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 3537,
											"end": 4081,
											"name": "ISZERO",
											"source": 30
										},
										{
											"begin": 3537,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "224"
										},
										{
											"begin": 3537,
											"end": 4081,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 3693,
											"end": 3708,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 3693,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "226"
										},
										{
											"begin": 3693,
											"end": 3708,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3693,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "118"
										},
										{
											"begin": 3693,
											"end": 3708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 3693,
											"end": 3708,
											"name": "tag",
											"source": 30,
											"value": "226"
										},
										{
											"begin": 3693,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 3747,
											"end": 3762,
											"name": "PUSH",
											"source": 30,
											"value": "1"
										},
										{
											"begin": 3747,
											"end": 3762,
											"name": "DUP9",
											"source": 30
										},
										{
											"begin": 3747,
											"end": 3762,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3747,
											"end": 3762,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 3693,
											"end": 3708,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3693,
											"end": 3708,
											"name": "SWAP6",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3747,
											"end": 3762,
											"name": "PUSH",
											"source": 30,
											"value": "FFFF"
										},
										{
											"begin": 3747,
											"end": 3762,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 3731,
											"end": 3762,
											"name": "DUP6",
											"source": 30
										},
										{
											"begin": 3731,
											"end": 3762,
											"name": "GT",
											"source": 30
										},
										{
											"begin": 3731,
											"end": 3762,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3786,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "224"
										},
										{
											"begin": 3727,
											"end": 3810,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 3883,
											"end": 3884,
											"name": "PUSH",
											"source": 30,
											"value": "5"
										},
										{
											"begin": 3862,
											"end": 3884,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3862,
											"end": 3884,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3862,
											"end": 3884,
											"name": "SHL",
											"source": 30
										},
										{
											"begin": 3853,
											"end": 3885,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 3853,
											"end": 3885,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3853,
											"end": 3885,
											"name": "SHL",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 3828,
											"end": 3843,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "DUP9",
											"source": 30
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "KECCAK256",
											"source": 30
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "SLOAD",
											"source": 30
										},
										{
											"begin": 3918,
											"end": 3954,
											"name": "PUSH",
											"source": 30,
											"value": "60"
										},
										{
											"begin": 3918,
											"end": 3954,
											"name": "SHR",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3909,
											"end": 3954,
											"name": "DUP11",
											"source": 30
										},
										{
											"begin": 3909,
											"end": 3954,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 3909,
											"end": 3954,
											"name": "SUB",
											"source": 30
										},
										{
											"begin": 3905,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "228"
										},
										{
											"begin": 3905,
											"end": 4067,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 4004,
											"end": 4012,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3978,
											"end": 3987,
											"name": "DUP9",
											"source": 30
										},
										{
											"begin": 3988,
											"end": 4000,
											"name": "DUP8",
											"source": 30
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "MLOAD",
											"source": 30
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "LT",
											"source": 30
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "230"
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "JUMPI",
											"source": 30
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "230"
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "125"
										},
										{
											"begin": 3978,
											"end": 4001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "tag",
											"source": 30,
											"value": "230"
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3978,
											"end": 4012,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3978,
											"end": 4012,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 3978,
											"end": 4012,
											"name": "AND",
											"source": 30
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "PUSH",
											"source": 30,
											"value": "20"
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "SWAP3",
											"source": 30
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "DUP4",
											"source": 30
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "MUL",
											"source": 30
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 3978,
											"end": 4001,
											"name": "ADD",
											"source": 30
										},
										{
											"begin": 3978,
											"end": 4012,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 4034,
											"end": 4048,
											"name": "DUP6",
											"source": 30
										},
										{
											"begin": 4034,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "231"
										},
										{
											"begin": 4034,
											"end": 4048,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 4034,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "118"
										},
										{
											"begin": 4034,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 4034,
											"end": 4048,
											"name": "tag",
											"source": 30,
											"value": "231"
										},
										{
											"begin": 4034,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 4034,
											"end": 4048,
											"name": "SWAP7",
											"source": 30
										},
										{
											"begin": 4034,
											"end": 4048,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 4034,
											"end": 4048,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 3905,
											"end": 4067,
											"name": "tag",
											"source": 30,
											"value": "228"
										},
										{
											"begin": 3905,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3641,
											"end": 3660,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3641,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "232"
										},
										{
											"begin": 3641,
											"end": 3660,
											"name": "DUP2",
											"source": 30
										},
										{
											"begin": 3641,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "118"
										},
										{
											"begin": 3641,
											"end": 3660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 3641,
											"end": 3660,
											"name": "tag",
											"source": 30,
											"value": "232"
										},
										{
											"begin": 3641,
											"end": 3660,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 3641,
											"end": 3660,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 3641,
											"end": 3660,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 3641,
											"end": 3660,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 3537,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "223"
										},
										{
											"begin": 3537,
											"end": 4081,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 3537,
											"end": 4081,
											"name": "tag",
											"source": 30,
											"value": "224"
										},
										{
											"begin": 3537,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 3537,
											"end": 4081,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 3467,
											"end": 4091,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 3454,
											"end": 3465,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3454,
											"end": 3465,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 3454,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "233"
										},
										{
											"begin": 3454,
											"end": 3465,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": 3454,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "118"
										},
										{
											"begin": 3454,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 3454,
											"end": 3465,
											"name": "tag",
											"source": 30,
											"value": "233"
										},
										{
											"begin": 3454,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": 3454,
											"end": 3465,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 3454,
											"end": 3465,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 3454,
											"end": 3465,
											"name": "POP",
											"source": 30
										},
										{
											"begin": 3397,
											"end": 4091,
											"name": "PUSH [tag]",
											"source": 30,
											"value": "220"
										},
										{
											"begin": 3397,
											"end": 4091,
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 3397,
											"end": 4091,
											"name": "tag",
											"source": 30,
											"value": "221"
										},
										{
											"begin": 3397,
											"end": 4091,
											"name": "JUMPDEST",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4176,
											"end": 4207,
											"name": "DUP3",
											"source": 30
										},
										{
											"begin": 4176,
											"end": 4207,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4183,
											"end": 4192,
											"name": "SWAP2",
											"source": 30
										},
										{
											"begin": 3043,
											"end": 4223,
											"name": "SWAP1",
											"source": 30
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3043,
											"end": 4223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 30
										},
										{
											"begin": 514,
											"end": 627,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 514,
											"end": 627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 436,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 436,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 436,
											"end": 444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 436,
											"end": 444,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 436,
											"end": 444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 422,
											"end": 444,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 422,
											"end": 432,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 422,
											"end": 444,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 422,
											"end": 444,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 418,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 418,
											"end": 472,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 453,
											"end": 472,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 453,
											"end": 472,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2F7A8EE1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 453,
											"end": 472,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 453,
											"end": 472,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 453,
											"end": 472,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 453,
											"end": 472,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 453,
											"end": 472,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 453,
											"end": 472,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 453,
											"end": 472,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 453,
											"end": 472,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 453,
											"end": 472,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 453,
											"end": 472,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 453,
											"end": 472,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 418,
											"end": 472,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 418,
											"end": 472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 593,
											"end": 620,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 612,
											"end": 619,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 593,
											"end": 611,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 593,
											"end": 620,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1317,
											"name": "tag",
											"source": 28,
											"value": "87"
										},
										{
											"begin": 1012,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 1122,
											"end": 1144,
											"name": "PUSH",
											"source": 28,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 835,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 828,
											"end": 835,
											"name": "CALLDATALOAD",
											"source": 25
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 828,
											"end": 835,
											"name": "AND",
											"source": 25
										},
										{
											"begin": 819,
											"end": 836,
											"name": "DUP2",
											"source": 25
										},
										{
											"begin": 819,
											"end": 836,
											"name": "MSTORE",
											"source": 25
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B4A3F1194FF204DF3421C76163FF361A7821792777BFC1DCB14FA8D3EB97E7F5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 819,
											"end": 836,
											"name": "PUSH",
											"source": 25,
											"value": "20"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "MSTORE",
											"source": 25
										},
										{
											"begin": 819,
											"end": 836,
											"name": "PUSH",
											"source": 25,
											"value": "40"
										},
										{
											"begin": 819,
											"end": 836,
											"name": "SWAP1",
											"source": 25
										},
										{
											"begin": 819,
											"end": 836,
											"name": "KECCAK256",
											"source": 25
										},
										{
											"begin": 819,
											"end": 836,
											"name": "SLOAD",
											"source": 25
										},
										{
											"begin": 803,
											"end": 838,
											"name": "PUSH",
											"source": 25,
											"value": "60"
										},
										{
											"begin": 803,
											"end": 838,
											"name": "SHR",
											"source": 25
										},
										{
											"begin": 803,
											"end": 838,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 1214,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 28,
											"value": "245"
										},
										{
											"begin": 1214,
											"end": 1311,
											"name": "JUMPI",
											"source": 28
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1620,
											"end": 1663,
											"name": "PUSH",
											"source": 28,
											"value": "177481AC65E4292921C69F62D1CC7F57541261E5D61C8175CF4E36A01C9BFC96"
										},
										{
											"begin": 1620,
											"end": 1663,
											"name": "SLOAD",
											"source": 28
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1620,
											"end": 1663,
											"name": "AND",
											"source": 28
										},
										{
											"begin": 1620,
											"end": 1663,
											"name": "SWAP1",
											"source": 28
										},
										{
											"begin": 3281,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1214,
											"end": 1311,
											"name": "tag",
											"source": 28,
											"value": "245"
										},
										{
											"begin": 1214,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 28
										},
										{
											"begin": 1012,
											"end": 1317,
											"name": "SWAP1",
											"source": 28
										},
										{
											"begin": 1012,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 28
										},
										{
											"begin": 647,
											"end": 758,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 647,
											"end": 758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 696,
											"end": 703,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 235,
											"name": "PUSH",
											"source": 8,
											"value": "8A22373512790C48B83A1FE2EFDD2888D4A917BCDC24D0ADF63E60F671680460"
										},
										{
											"begin": 722,
											"end": 745,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 722,
											"end": 745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 722,
											"end": 751,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 722,
											"end": 751,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 722,
											"end": 751,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 647,
											"end": 758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 647,
											"end": 758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 849,
											"end": 2892,
											"name": "tag",
											"source": 33,
											"value": "100"
										},
										{
											"begin": 849,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "A5E74BF718C7D6929BF8F422C8BE92118782759ABAC1BF7601C5A938D6F306A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1123,
											"end": 1138,
											"name": "SLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B4A3F1194FF204DF3421C76163FF361A7821792777BFC1DCB14FA8D3EB97E7F5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 584,
											"end": 637,
											"name": "SWAP1",
											"source": 26
										},
										{
											"begin": 1123,
											"end": 1138,
											"name": "PUSH",
											"source": 33,
											"value": "FFFF"
										},
										{
											"begin": 1123,
											"end": 1138,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1123,
											"end": 1138,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 1123,
											"end": 1138,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1123,
											"end": 1138,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1123,
											"end": 1138,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 991,
											"end": 1026,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 991,
											"end": 1026,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1321,
											"end": 1322,
											"name": "PUSH",
											"source": 33,
											"value": "7"
										},
										{
											"begin": 1305,
											"end": 1322,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 1305,
											"end": 1326,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 1301,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "255"
										},
										{
											"begin": 1301,
											"end": 1452,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1435,
											"end": 1436,
											"name": "PUSH",
											"source": 33,
											"value": "3"
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "SHR",
											"source": 33
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 1402,
											"end": 1417,
											"name": "PUSH",
											"source": 33,
											"value": "2"
										},
										{
											"begin": 1402,
											"end": 1417,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 1402,
											"end": 1417,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "KECCAK256",
											"source": 33
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "SLOAD",
											"source": 33
										},
										{
											"begin": 1301,
											"end": 1452,
											"name": "tag",
											"source": 33,
											"value": "255"
										},
										{
											"begin": 1301,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1471,
											"end": 1480,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 1466,
											"end": 2479,
											"name": "tag",
											"source": 33,
											"value": "256"
										},
										{
											"begin": 1466,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1486,
											"end": 1495,
											"name": "DUP8",
											"source": 33
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 1482,
											"end": 1483,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1482,
											"end": 1502,
											"name": "LT",
											"source": 33
										},
										{
											"begin": 1466,
											"end": 2479,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 1466,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "257"
										},
										{
											"begin": 1466,
											"end": 2479,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 1527,
											"end": 1551,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 1554,
											"end": 1563,
											"name": "DUP9",
											"source": 33
										},
										{
											"begin": 1564,
											"end": 1565,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "LT",
											"source": 33
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "260"
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "260"
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "125"
										},
										{
											"begin": 1554,
											"end": 1566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "tag",
											"source": 33,
											"value": "260"
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "MUL",
											"source": 33
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 1554,
											"end": 1566,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 1527,
											"end": 1566,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1527,
											"end": 1566,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1584,
											"end": 1605,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1616,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1608,
											"end": 1623,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 1608,
											"end": 1623,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 1608,
											"end": 1623,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1584,
											"end": 1623,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1646,
											"end": 1654,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1646,
											"end": 1664,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1664,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 1646,
											"end": 1664,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 1646,
											"end": 1671,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 1675,
											"end": 1676,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1676,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 1642,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "261"
										},
										{
											"begin": 1642,
											"end": 1744,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 1705,
											"end": 1744,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 1705,
											"end": 1744,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EB6C3AEB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1705,
											"end": 1744,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1705,
											"end": 1744,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 1705,
											"end": 1744,
											"name": "PUSH",
											"source": 33,
											"value": "4"
										},
										{
											"begin": 1705,
											"end": 1744,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 1705,
											"end": 1744,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 1705,
											"end": 1744,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 1705,
											"end": 1744,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 1705,
											"end": 1744,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 1705,
											"end": 1744,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 1705,
											"end": 1744,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1705,
											"end": 1744,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 1642,
											"end": 1744,
											"name": "tag",
											"source": 33,
											"value": "261"
										},
										{
											"begin": 1642,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1777,
											"end": 1795,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1773,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1767,
											"end": 1795,
											"name": "PUSH",
											"source": 33,
											"value": "2"
										},
										{
											"begin": 1767,
											"end": 1795,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 1767,
											"end": 1795,
											"name": "GT",
											"source": 33
										},
										{
											"begin": 1767,
											"end": 1795,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 1767,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "266"
										},
										{
											"begin": 1767,
											"end": 1795,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 1767,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "266"
										},
										{
											"begin": 1767,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "264"
										},
										{
											"begin": 1767,
											"end": 1795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 1767,
											"end": 1795,
											"name": "tag",
											"source": 33,
											"value": "266"
										},
										{
											"begin": 1767,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1767,
											"end": 1795,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 1763,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "267"
										},
										{
											"begin": 1763,
											"end": 2465,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 1851,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "268"
										},
										{
											"begin": 1895,
											"end": 1896,
											"name": "DUP8",
											"source": 33
										},
										{
											"begin": 1922,
											"end": 1935,
											"name": "DUP7",
											"source": 33
										},
										{
											"begin": 1961,
											"end": 1973,
											"name": "DUP7",
											"source": 33
										},
										{
											"begin": 1999,
											"end": 2007,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "269"
										},
										{
											"begin": 1851,
											"end": 2029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 1851,
											"end": 2029,
											"name": "tag",
											"source": 33,
											"value": "268"
										},
										{
											"begin": 1851,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1819,
											"end": 2029,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 1819,
											"end": 2029,
											"name": "SWAP6",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1819,
											"end": 2029,
											"name": "SWAP4",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "283"
										},
										{
											"begin": 1763,
											"end": 2465,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 1763,
											"end": 2465,
											"name": "tag",
											"source": 33,
											"value": "267"
										},
										{
											"begin": 1763,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2068,
											"end": 2090,
											"name": "PUSH",
											"source": 33,
											"value": "1"
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2058,
											"end": 2090,
											"name": "PUSH",
											"source": 33,
											"value": "2"
										},
										{
											"begin": 2058,
											"end": 2090,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2058,
											"end": 2090,
											"name": "GT",
											"source": 33
										},
										{
											"begin": 2058,
											"end": 2090,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 2058,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "274"
										},
										{
											"begin": 2058,
											"end": 2090,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 2058,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "274"
										},
										{
											"begin": 2058,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "264"
										},
										{
											"begin": 2058,
											"end": 2090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 2058,
											"end": 2090,
											"name": "tag",
											"source": 33,
											"value": "274"
										},
										{
											"begin": 2058,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2058,
											"end": 2090,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 2054,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "275"
										},
										{
											"begin": 2054,
											"end": 2465,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 2114,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "276"
										},
										{
											"begin": 2137,
											"end": 2138,
											"name": "DUP8",
											"source": 33
										},
										{
											"begin": 2140,
											"end": 2148,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 2114,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "277"
										},
										{
											"begin": 2114,
											"end": 2149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 2114,
											"end": 2149,
											"name": "tag",
											"source": 33,
											"value": "276"
										},
										{
											"begin": 2114,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2054,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "283"
										},
										{
											"begin": 2054,
											"end": 2465,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 2054,
											"end": 2465,
											"name": "tag",
											"source": 33,
											"value": "275"
										},
										{
											"begin": 2054,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2188,
											"end": 2209,
											"name": "PUSH",
											"source": 33,
											"value": "2"
										},
										{
											"begin": 2178,
											"end": 2184,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2178,
											"end": 2209,
											"name": "PUSH",
											"source": 33,
											"value": "2"
										},
										{
											"begin": 2178,
											"end": 2209,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2178,
											"end": 2209,
											"name": "GT",
											"source": 33
										},
										{
											"begin": 2178,
											"end": 2209,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 2178,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "282"
										},
										{
											"begin": 2178,
											"end": 2209,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 2178,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "282"
										},
										{
											"begin": 2178,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "264"
										},
										{
											"begin": 2178,
											"end": 2209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 2178,
											"end": 2209,
											"name": "tag",
											"source": 33,
											"value": "282"
										},
										{
											"begin": 2178,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2178,
											"end": 2209,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 2174,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "283"
										},
										{
											"begin": 2174,
											"end": 2465,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 2265,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "284"
										},
										{
											"begin": 2312,
											"end": 2313,
											"name": "DUP8",
											"source": 33
										},
										{
											"begin": 2339,
											"end": 2352,
											"name": "DUP7",
											"source": 33
										},
										{
											"begin": 2378,
											"end": 2390,
											"name": "DUP7",
											"source": 33
										},
										{
											"begin": 2416,
											"end": 2424,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 2265,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "285"
										},
										{
											"begin": 2265,
											"end": 2446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 2265,
											"end": 2446,
											"name": "tag",
											"source": 33,
											"value": "284"
										},
										{
											"begin": 2265,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2233,
											"end": 2446,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 2233,
											"end": 2446,
											"name": "SWAP6",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2233,
											"end": 2446,
											"name": "SWAP4",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2174,
											"end": 2465,
											"name": "tag",
											"source": 33,
											"value": "283"
										},
										{
											"begin": 2174,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1504,
											"end": 1507,
											"name": "PUSH",
											"source": 33,
											"value": "1"
										},
										{
											"begin": 1504,
											"end": 1507,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 1466,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "256"
										},
										{
											"begin": 1466,
											"end": 2479,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 1466,
											"end": 2479,
											"name": "tag",
											"source": 33,
											"value": "257"
										},
										{
											"begin": 1466,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1466,
											"end": 2479,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 2514,
											"end": 2535,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 2497,
											"end": 2510,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 2497,
											"end": 2535,
											"name": "EQ",
											"source": 33
										},
										{
											"begin": 2493,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "286"
										},
										{
											"begin": 2493,
											"end": 2609,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 2555,
											"end": 2570,
											"name": "PUSH",
											"source": 33,
											"value": "1"
										},
										{
											"begin": 2555,
											"end": 2570,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 2555,
											"end": 2570,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2555,
											"end": 2594,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 2555,
											"end": 2594,
											"name": "SLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2555,
											"end": 2594,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 2555,
											"end": 2594,
											"name": "PUSH",
											"source": 33,
											"value": "FFFF"
										},
										{
											"begin": 2555,
											"end": 2594,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 2555,
											"end": 2594,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 2555,
											"end": 2594,
											"name": "OR",
											"source": 33
										},
										{
											"begin": 2555,
											"end": 2594,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 2555,
											"end": 2594,
											"name": "SSTORE",
											"source": 33
										},
										{
											"begin": 2493,
											"end": 2609,
											"name": "tag",
											"source": 33,
											"value": "286"
										},
										{
											"begin": 2493,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2692,
											"end": 2693,
											"name": "PUSH",
											"source": 33,
											"value": "7"
										},
										{
											"begin": 2676,
											"end": 2693,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 2676,
											"end": 2693,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 2676,
											"end": 2697,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 2672,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "287"
										},
										{
											"begin": 2672,
											"end": 2782,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 2750,
											"end": 2751,
											"name": "PUSH",
											"source": 33,
											"value": "3"
										},
										{
											"begin": 2733,
											"end": 2751,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 2733,
											"end": 2751,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 2733,
											"end": 2751,
											"name": "SHR",
											"source": 33
										},
										{
											"begin": 2717,
											"end": 2752,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 2717,
											"end": 2752,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 2717,
											"end": 2752,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2717,
											"end": 2752,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 2717,
											"end": 2732,
											"name": "PUSH",
											"source": 33,
											"value": "2"
										},
										{
											"begin": 2717,
											"end": 2732,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 2717,
											"end": 2732,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 2717,
											"end": 2752,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2752,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 2717,
											"end": 2752,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2752,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 2717,
											"end": 2752,
											"name": "KECCAK256",
											"source": 33
										},
										{
											"begin": 2717,
											"end": 2767,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 2717,
											"end": 2767,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 2717,
											"end": 2767,
											"name": "SSTORE",
											"source": 33
										},
										{
											"begin": 2672,
											"end": 2782,
											"name": "tag",
											"source": 33,
											"value": "287"
										},
										{
											"begin": 2672,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2801,
											"end": 2836,
											"name": "PUSH",
											"source": 33,
											"value": "8FAA70878671CCD212D20771B795C50AF8FD3FF6CF27F4BDE57E5D4DE0AEB673"
										},
										{
											"begin": 2812,
											"end": 2821,
											"name": "DUP8",
											"source": 33
										},
										{
											"begin": 2823,
											"end": 2829,
											"name": "DUP8",
											"source": 33
										},
										{
											"begin": 2831,
											"end": 2835,
											"name": "DUP8",
											"source": 33
										},
										{
											"begin": 2801,
											"end": 2836,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 2801,
											"end": 2836,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 2801,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "288"
										},
										{
											"begin": 2801,
											"end": 2836,
											"name": "SWAP4",
											"source": 33
										},
										{
											"begin": 2801,
											"end": 2836,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 2801,
											"end": 2836,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 2801,
											"end": 2836,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 2801,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "289"
										},
										{
											"begin": 2801,
											"end": 2836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 2801,
											"end": 2836,
											"name": "tag",
											"source": 33,
											"value": "288"
										},
										{
											"begin": 2801,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 2801,
											"end": 2836,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 2801,
											"end": 2836,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 2801,
											"end": 2836,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 2801,
											"end": 2836,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 2801,
											"end": 2836,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 2801,
											"end": 2836,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 2801,
											"end": 2836,
											"name": "LOG1",
											"source": 33
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "290"
										},
										{
											"begin": 2862,
											"end": 2868,
											"name": "DUP7",
											"source": 33
										},
										{
											"begin": 2870,
											"end": 2874,
											"name": "DUP7",
											"source": 33
										},
										{
											"begin": 2850,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "291"
										},
										{
											"begin": 2850,
											"end": 2875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "tag",
											"source": 33,
											"value": "290"
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 1067,
											"end": 2886,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1067,
											"end": 2886,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 1067,
											"end": 2886,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 981,
											"end": 2892,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 849,
											"end": 2892,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 849,
											"end": 2892,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 849,
											"end": 2892,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 849,
											"end": 2892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 575,
											"end": 704,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 575,
											"end": 704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 631,
											"end": 638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 250,
											"name": "PUSH",
											"source": 11,
											"value": "24AA1F7B31FD188A8D3ECFB06BC55C806040E59B03BD4396283442FCE6617890"
										},
										{
											"begin": 657,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 257,
											"end": 416,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 779,
											"end": 919,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 779,
											"end": 919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 834,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 844,
											"end": 854,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 834,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 834,
											"end": 855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 834,
											"end": 855,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 834,
											"end": 855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 250,
											"name": "PUSH",
											"source": 11,
											"value": "24AA1F7B31FD188A8D3ECFB06BC55C806040E59B03BD4396283442FCE6617890"
										},
										{
											"begin": 865,
											"end": 912,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 865,
											"end": 912,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 865,
											"end": 912,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 865,
											"end": 912,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 865,
											"end": 912,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 779,
											"end": 919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3059,
											"end": 3224,
											"name": "tag",
											"source": 24,
											"value": "241"
										},
										{
											"begin": 3059,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 197,
											"end": 250,
											"name": "PUSH",
											"source": 11,
											"value": "24AA1F7B31FD188A8D3ECFB06BC55C806040E59B03BD4396283442FCE6617890"
										},
										{
											"begin": 1256,
											"end": 1306,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1256,
											"end": 1306,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1256,
											"end": 1306,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1256,
											"end": 1306,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1256,
											"end": 1306,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1256,
											"end": 1306,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1256,
											"end": 1306,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1256,
											"end": 1306,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "213"
										},
										{
											"begin": 3209,
											"end": 3216,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 3184,
											"end": 3217,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 3209,
											"end": 3216,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 3184,
											"end": 3217,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1186,
											"end": 1313,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2898,
											"end": 4493,
											"name": "tag",
											"source": 33,
											"value": "269"
										},
										{
											"begin": 2898,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 3163,
											"end": 3178,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 3163,
											"end": 3178,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 3090,
											"end": 3097,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3097,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 3090,
											"end": 3097,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 3090,
											"end": 3097,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3163,
											"end": 3195,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 3190,
											"end": 3194,
											"name": "ADDRESS",
											"source": 33
										},
										{
											"begin": 3163,
											"end": 3195,
											"name": "EQ",
											"source": 33
										},
										{
											"begin": 3163,
											"end": 3195,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 3163,
											"end": 3195,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 3163,
											"end": 3195,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 3163,
											"end": 3244,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "311"
										},
										{
											"begin": 3163,
											"end": 3244,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3216,
											"end": 3231,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 3216,
											"end": 3231,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3216,
											"end": 3242,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 568,
											"end": 588,
											"name": "EXTCODESIZE",
											"source": 36
										},
										{
											"begin": 614,
											"end": 622,
											"name": "ISZERO",
											"source": 36
										},
										{
											"begin": 3163,
											"end": 3244,
											"name": "tag",
											"source": 33,
											"value": "311"
										},
										{
											"begin": 3163,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 3142,
											"end": 3300,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 3142,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "313"
										},
										{
											"begin": 3142,
											"end": 3300,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 3266,
											"end": 3300,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 3266,
											"end": 3300,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3DDC5CAB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3266,
											"end": 3300,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 3266,
											"end": 3300,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 3266,
											"end": 3300,
											"name": "PUSH",
											"source": 33,
											"value": "4"
										},
										{
											"begin": 3266,
											"end": 3300,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3266,
											"end": 3300,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 3266,
											"end": 3300,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 3266,
											"end": 3300,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 3266,
											"end": 3300,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 3266,
											"end": 3300,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 3266,
											"end": 3300,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 3266,
											"end": 3300,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 3142,
											"end": 3300,
											"name": "tag",
											"source": 33,
											"value": "313"
										},
										{
											"begin": 3142,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 3320,
											"end": 3329,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 4426,
											"name": "tag",
											"source": 33,
											"value": "314"
										},
										{
											"begin": 3315,
											"end": 4426,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 3335,
											"end": 3343,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 3335,
											"end": 3353,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 3335,
											"end": 3353,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3335,
											"end": 3353,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 3335,
											"end": 3360,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 3331,
											"end": 3332,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 3331,
											"end": 3360,
											"name": "LT",
											"source": 33
										},
										{
											"begin": 3315,
											"end": 4426,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 3315,
											"end": 4426,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "315"
										},
										{
											"begin": 3315,
											"end": 4426,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 3385,
											"end": 3400,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3411,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 3403,
											"end": 3421,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 3403,
											"end": 3421,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3403,
											"end": 3421,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 3422,
											"end": 3423,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 3403,
											"end": 3424,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 3403,
											"end": 3424,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 3403,
											"end": 3424,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 3403,
											"end": 3424,
											"name": "LT",
											"source": 33
										},
										{
											"begin": 3403,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "318"
										},
										{
											"begin": 3403,
											"end": 3424,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 3403,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "318"
										},
										{
											"begin": 3403,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "125"
										},
										{
											"begin": 3403,
											"end": 3424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 3403,
											"end": 3424,
											"name": "tag",
											"source": 33,
											"value": "318"
										},
										{
											"begin": 3403,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 3403,
											"end": 3424,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 3403,
											"end": 3424,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 3403,
											"end": 3424,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 3403,
											"end": 3424,
											"name": "MUL",
											"source": 33
										},
										{
											"begin": 3403,
											"end": 3424,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 3403,
											"end": 3424,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 3403,
											"end": 3424,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 3403,
											"end": 3424,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3403,
											"end": 3424,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 3403,
											"end": 3424,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3403,
											"end": 3424,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 3442,
											"end": 3458,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "DUP11",
											"source": 33
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "KECCAK256",
											"source": 33
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "SLOAD",
											"source": 33
										},
										{
											"begin": 3403,
											"end": 3424,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 3403,
											"end": 3424,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3502,
											"end": 3528,
											"name": "PUSH",
											"source": 33,
											"value": "60"
										},
										{
											"begin": 3502,
											"end": 3528,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 3502,
											"end": 3528,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 3502,
											"end": 3528,
											"name": "SHR",
											"source": 33
										},
										{
											"begin": 3502,
											"end": 3542,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 3498,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "319"
										},
										{
											"begin": 3498,
											"end": 3610,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 3571,
											"end": 3610,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 3571,
											"end": 3610,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4923A771"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3571,
											"end": 3610,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 3571,
											"end": 3610,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 3571,
											"end": 3610,
											"name": "PUSH",
											"source": 33,
											"value": "4"
										},
										{
											"begin": 3571,
											"end": 3610,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3571,
											"end": 3610,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 3571,
											"end": 3610,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 3571,
											"end": 3610,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 3571,
											"end": 3610,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 3571,
											"end": 3610,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 3571,
											"end": 3610,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 3571,
											"end": 3610,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 3498,
											"end": 3610,
											"name": "tag",
											"source": 33,
											"value": "319"
										},
										{
											"begin": 3498,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 3720,
											"end": 3735,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 3720,
											"end": 3735,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 3759,
											"end": 3781,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "DUP14",
											"source": 33
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "KECCAK256",
											"source": 33
										},
										{
											"begin": 3712,
											"end": 3736,
											"name": "PUSH",
											"source": 33,
											"value": "60"
										},
										{
											"begin": 3712,
											"end": 3736,
											"name": "SWAP4",
											"source": 33
										},
										{
											"begin": 3712,
											"end": 3736,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 3712,
											"end": 3736,
											"name": "SWAP4",
											"source": 33
										},
										{
											"begin": 3712,
											"end": 3736,
											"name": "SHL",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3712,
											"end": 3781,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 3712,
											"end": 3781,
											"name": "DUP12",
											"source": 33
										},
										{
											"begin": 3712,
											"end": 3781,
											"name": "OR",
											"source": 33
										},
										{
											"begin": 3671,
											"end": 3781,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 3671,
											"end": 3781,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 3671,
											"end": 3781,
											"name": "SSTORE",
											"source": 33
										},
										{
											"begin": 3855,
											"end": 3856,
											"name": "PUSH",
											"source": 33,
											"value": "5"
										},
										{
											"begin": 3832,
											"end": 3856,
											"name": "DUP11",
											"source": 33
										},
										{
											"begin": 3832,
											"end": 3856,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 3832,
											"end": 3856,
											"name": "SHL",
											"source": 33
										},
										{
											"begin": 3832,
											"end": 3856,
											"name": "PUSH",
											"source": 33,
											"value": "E0"
										},
										{
											"begin": 3832,
											"end": 3856,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 3832,
											"end": 3856,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 3832,
											"end": 3856,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 4091,
											"end": 4134,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 4091,
											"end": 4134,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 4091,
											"end": 4134,
											"name": "SHR",
											"source": 33
										},
										{
											"begin": 4020,
											"end": 4065,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 4020,
											"end": 4065,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 4020,
											"end": 4065,
											"name": "SHR",
											"source": 33
										},
										{
											"begin": 4018,
											"end": 4066,
											"name": "NOT",
											"source": 33
										},
										{
											"begin": 3979,
											"end": 4066,
											"name": "SWAP10",
											"source": 33
										},
										{
											"begin": 3979,
											"end": 4066,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 3979,
											"end": 4066,
											"name": "SWAP10",
											"source": 33
										},
										{
											"begin": 3979,
											"end": 4066,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 3978,
											"end": 4135,
											"name": "OR",
											"source": 33
										},
										{
											"begin": 3978,
											"end": 4135,
											"name": "SWAP8",
											"source": 33
										},
										{
											"begin": 4218,
											"end": 4247,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 4218,
											"end": 4247,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 4218,
											"end": 4247,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 4214,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "320"
										},
										{
											"begin": 4214,
											"end": 4378,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 4304,
											"end": 4305,
											"name": "PUSH",
											"source": 33,
											"value": "3"
										},
										{
											"begin": 4287,
											"end": 4305,
											"name": "DUP10",
											"source": 33
										},
										{
											"begin": 4287,
											"end": 4305,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 4287,
											"end": 4305,
											"name": "SHR",
											"source": 33
										},
										{
											"begin": 4271,
											"end": 4306,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 4271,
											"end": 4306,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 4271,
											"end": 4306,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 4271,
											"end": 4306,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 4271,
											"end": 4286,
											"name": "PUSH",
											"source": 33,
											"value": "2"
										},
										{
											"begin": 4271,
											"end": 4286,
											"name": "DUP12",
											"source": 33
										},
										{
											"begin": 4271,
											"end": 4286,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 4271,
											"end": 4306,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 4271,
											"end": 4306,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 4271,
											"end": 4306,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 4271,
											"end": 4306,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 4271,
											"end": 4306,
											"name": "KECCAK256",
											"source": 33
										},
										{
											"begin": 4271,
											"end": 4321,
											"name": "SWAP9",
											"source": 33
										},
										{
											"begin": 4271,
											"end": 4321,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 4271,
											"end": 4321,
											"name": "SWAP9",
											"source": 33
										},
										{
											"begin": 4271,
											"end": 4321,
											"name": "SSTORE",
											"source": 33
										},
										{
											"begin": 4214,
											"end": 4378,
											"name": "tag",
											"source": 33,
											"value": "320"
										},
										{
											"begin": 4214,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4396,
											"end": 4411,
											"name": "PUSH",
											"source": 33,
											"value": "1"
										},
										{
											"begin": 4396,
											"end": 4411,
											"name": "SWAP6",
											"source": 33
										},
										{
											"begin": 4396,
											"end": 4411,
											"name": "DUP7",
											"source": 33
										},
										{
											"begin": 4396,
											"end": 4411,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 4396,
											"end": 4411,
											"name": "SWAP6",
											"source": 33
										},
										{
											"begin": 3362,
											"end": 3365,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 3315,
											"end": 4426,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "314"
										},
										{
											"begin": 3315,
											"end": 4426,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 3315,
											"end": 4426,
											"name": "tag",
											"source": 33,
											"value": "315"
										},
										{
											"begin": 3315,
											"end": 4426,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4448,
											"end": 4461,
											"name": "SWAP4",
											"source": 33
										},
										{
											"begin": 4448,
											"end": 4461,
											"name": "SWAP6",
											"source": 33
										},
										{
											"begin": 4463,
											"end": 4475,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 4463,
											"end": 4475,
											"name": "SWAP5",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2898,
											"end": 4493,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 2898,
											"end": 4493,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2898,
											"end": 4493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 8179,
											"end": 9259,
											"name": "tag",
											"source": 33,
											"value": "277"
										},
										{
											"begin": 8179,
											"end": 9259,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 8344,
											"end": 8359,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 8344,
											"end": 8359,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8344,
											"end": 8370,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 568,
											"end": 588,
											"name": "EXTCODESIZE",
											"source": 36
										},
										{
											"begin": 8339,
											"end": 8431,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "323"
										},
										{
											"begin": 8339,
											"end": 8431,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 8397,
											"end": 8431,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 8397,
											"end": 8431,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3DDC5CAB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8397,
											"end": 8431,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 8397,
											"end": 8431,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 8397,
											"end": 8431,
											"name": "PUSH",
											"source": 33,
											"value": "4"
										},
										{
											"begin": 8397,
											"end": 8431,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 8397,
											"end": 8431,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 8397,
											"end": 8431,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 8397,
											"end": 8431,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 8397,
											"end": 8431,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 8397,
											"end": 8431,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 8397,
											"end": 8431,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 8397,
											"end": 8431,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 8339,
											"end": 8431,
											"name": "tag",
											"source": 33,
											"value": "323"
										},
										{
											"begin": 8339,
											"end": 8431,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 8451,
											"end": 8460,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 8446,
											"end": 9243,
											"name": "tag",
											"source": 33,
											"value": "324"
										},
										{
											"begin": 8446,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 8466,
											"end": 8474,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 8466,
											"end": 8484,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 8466,
											"end": 8484,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 8466,
											"end": 8484,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 8466,
											"end": 8491,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 8462,
											"end": 8463,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 8462,
											"end": 8491,
											"name": "LT",
											"source": 33
										},
										{
											"begin": 8446,
											"end": 9243,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 8446,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "325"
										},
										{
											"begin": 8446,
											"end": 9243,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 8516,
											"end": 8531,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 8534,
											"end": 8542,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 8534,
											"end": 8552,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 8534,
											"end": 8552,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 8534,
											"end": 8552,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 8553,
											"end": 8554,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 8534,
											"end": 8555,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 8534,
											"end": 8555,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 8534,
											"end": 8555,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 8534,
											"end": 8555,
											"name": "LT",
											"source": 33
										},
										{
											"begin": 8534,
											"end": 8555,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "328"
										},
										{
											"begin": 8534,
											"end": 8555,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 8534,
											"end": 8555,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "328"
										},
										{
											"begin": 8534,
											"end": 8555,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "125"
										},
										{
											"begin": 8534,
											"end": 8555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 8534,
											"end": 8555,
											"name": "tag",
											"source": 33,
											"value": "328"
										},
										{
											"begin": 8534,
											"end": 8555,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 8534,
											"end": 8555,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 8534,
											"end": 8555,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 8534,
											"end": 8555,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 8534,
											"end": 8555,
											"name": "MUL",
											"source": 33
										},
										{
											"begin": 8534,
											"end": 8555,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 8534,
											"end": 8555,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 8534,
											"end": 8555,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 8534,
											"end": 8555,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 8534,
											"end": 8555,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 8534,
											"end": 8555,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 8534,
											"end": 8555,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8592,
											"end": 8610,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 8592,
											"end": 8610,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 8573,
											"end": 8589,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 8592,
											"end": 8610,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 8592,
											"end": 8610,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 8592,
											"end": 8610,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 8592,
											"end": 8610,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 8592,
											"end": 8610,
											"name": "DUP7",
											"source": 33
										},
										{
											"begin": 8592,
											"end": 8610,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 8592,
											"end": 8610,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 8592,
											"end": 8610,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 8592,
											"end": 8610,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 8592,
											"end": 8610,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 8592,
											"end": 8610,
											"name": "KECCAK256",
											"source": 33
										},
										{
											"begin": 8592,
											"end": 8610,
											"name": "SLOAD",
											"source": 33
										},
										{
											"begin": 8534,
											"end": 8555,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 8534,
											"end": 8555,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8654,
											"end": 8680,
											"name": "PUSH",
											"source": 33,
											"value": "60"
										},
										{
											"begin": 8654,
											"end": 8680,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 8654,
											"end": 8680,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 8654,
											"end": 8680,
											"name": "SHR",
											"source": 33
										},
										{
											"begin": 8654,
											"end": 8680,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 8699,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "329"
										},
										{
											"begin": 8699,
											"end": 8796,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 8761,
											"end": 8796,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 8761,
											"end": 8796,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37E25A97"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8761,
											"end": 8796,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 8761,
											"end": 8796,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 8761,
											"end": 8796,
											"name": "PUSH",
											"source": 33,
											"value": "4"
										},
										{
											"begin": 8761,
											"end": 8796,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 8761,
											"end": 8796,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 8761,
											"end": 8796,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 8761,
											"end": 8796,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 8761,
											"end": 8796,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 8761,
											"end": 8796,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 8761,
											"end": 8796,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 8761,
											"end": 8796,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 8699,
											"end": 8796,
											"name": "tag",
											"source": 33,
											"value": "329"
										},
										{
											"begin": 8699,
											"end": 8796,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 8845,
											"end": 8849,
											"name": "ADDRESS",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8818,
											"end": 8850,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 8818,
											"end": 8850,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 8818,
											"end": 8850,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 8814,
											"end": 8917,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "330"
										},
										{
											"begin": 8814,
											"end": 8917,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 8879,
											"end": 8917,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 8879,
											"end": 8917,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E9835731"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8879,
											"end": 8917,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 8879,
											"end": 8917,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 8879,
											"end": 8917,
											"name": "PUSH",
											"source": 33,
											"value": "4"
										},
										{
											"begin": 8879,
											"end": 8917,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 8879,
											"end": 8917,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 8879,
											"end": 8917,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 8879,
											"end": 8917,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 8879,
											"end": 8917,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 8879,
											"end": 8917,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 8879,
											"end": 8917,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 8879,
											"end": 8917,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 8814,
											"end": 8917,
											"name": "tag",
											"source": 33,
											"value": "330"
										},
										{
											"begin": 8814,
											"end": 8917,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 8958,
											"end": 8973,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 8958,
											"end": 8973,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 8958,
											"end": 8973,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8939,
											"end": 8973,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 8939,
											"end": 8954,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8939,
											"end": 8973,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 8939,
											"end": 8973,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 8935,
											"end": 9045,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "331"
										},
										{
											"begin": 8935,
											"end": 9045,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 9002,
											"end": 9045,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 9002,
											"end": 9045,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30BAABF3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9002,
											"end": 9045,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 9002,
											"end": 9045,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 9002,
											"end": 9045,
											"name": "PUSH",
											"source": 33,
											"value": "4"
										},
										{
											"begin": 9002,
											"end": 9045,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 9002,
											"end": 9045,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 9002,
											"end": 9045,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 9002,
											"end": 9045,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 9002,
											"end": 9045,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 9002,
											"end": 9045,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 9002,
											"end": 9045,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 9002,
											"end": 9045,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 8935,
											"end": 9045,
											"name": "tag",
											"source": 33,
											"value": "331"
										},
										{
											"begin": 8935,
											"end": 9045,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9212,
											"end": 9227,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 9212,
											"end": 9227,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9109,
											"end": 9127,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 9109,
											"end": 9127,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 9109,
											"end": 9127,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 9109,
											"end": 9127,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 9212,
											"end": 9227,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 9109,
											"end": 9127,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 9109,
											"end": 9127,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 9109,
											"end": 9127,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 9109,
											"end": 9127,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 9109,
											"end": 9127,
											"name": "DUP7",
											"source": 33
										},
										{
											"begin": 9109,
											"end": 9127,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 9109,
											"end": 9127,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 9109,
											"end": 9127,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 9109,
											"end": 9127,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 9109,
											"end": 9127,
											"name": "KECCAK256",
											"source": 33
										},
										{
											"begin": 9204,
											"end": 9228,
											"name": "PUSH",
											"source": 33,
											"value": "60"
										},
										{
											"begin": 9204,
											"end": 9228,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 9204,
											"end": 9228,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 9204,
											"end": 9228,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 9204,
											"end": 9228,
											"name": "SHL",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9150,
											"end": 9228,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 9150,
											"end": 9228,
											"name": "PUSH",
											"source": 33,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9151,
											"end": 9180,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 9151,
											"end": 9180,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 9151,
											"end": 9180,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 9151,
											"end": 9180,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 9150,
											"end": 9228,
											"name": "OR",
											"source": 33
										},
										{
											"begin": 9109,
											"end": 9228,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 9109,
											"end": 9228,
											"name": "SSTORE",
											"source": 33
										},
										{
											"begin": 8493,
											"end": 8496,
											"name": "PUSH",
											"source": 33,
											"value": "1"
										},
										{
											"begin": 8493,
											"end": 8496,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 8446,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "324"
										},
										{
											"begin": 8446,
											"end": 9243,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 8446,
											"end": 9243,
											"name": "tag",
											"source": 33,
											"value": "325"
										},
										{
											"begin": 8446,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 8446,
											"end": 9243,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 8179,
											"end": 9259,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 8179,
											"end": 9259,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 8179,
											"end": 9259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 4499,
											"end": 8173,
											"name": "tag",
											"source": 33,
											"value": "285"
										},
										{
											"begin": 4499,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 4750,
											"end": 4765,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 4750,
											"end": 4765,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 4694,
											"end": 4701,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 4694,
											"end": 4701,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 4694,
											"end": 4701,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 4694,
											"end": 4701,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4750,
											"end": 4779,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 4750,
											"end": 4779,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 4746,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "333"
										},
										{
											"begin": 4746,
											"end": 4849,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 4804,
											"end": 4849,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 4804,
											"end": 4849,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3AB34909"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4804,
											"end": 4849,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 4804,
											"end": 4849,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 4804,
											"end": 4849,
											"name": "PUSH",
											"source": 33,
											"value": "4"
										},
										{
											"begin": 4804,
											"end": 4849,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 4804,
											"end": 4849,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 4804,
											"end": 4849,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 4804,
											"end": 4849,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 4804,
											"end": 4849,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 4804,
											"end": 4849,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 4804,
											"end": 4849,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 4804,
											"end": 4849,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 4746,
											"end": 4849,
											"name": "tag",
											"source": 33,
											"value": "333"
										},
										{
											"begin": 4746,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 4909,
											"end": 4910,
											"name": "PUSH",
											"source": 33,
											"value": "3"
										},
										{
											"begin": 4892,
											"end": 4910,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 4892,
											"end": 4910,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 4892,
											"end": 4910,
											"name": "SHR",
											"source": 33
										},
										{
											"begin": 4970,
											"end": 4971,
											"name": "PUSH",
											"source": 33,
											"value": "7"
										},
										{
											"begin": 4954,
											"end": 4971,
											"name": "DUP7",
											"source": 33
										},
										{
											"begin": 4954,
											"end": 4971,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 4864,
											"end": 4889,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 4986,
											"end": 8029,
											"name": "tag",
											"source": 33,
											"value": "334"
										},
										{
											"begin": 4986,
											"end": 8029,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 5006,
											"end": 5014,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 5006,
											"end": 5024,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 5006,
											"end": 5024,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 5006,
											"end": 5024,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 5006,
											"end": 5031,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 5002,
											"end": 5003,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 5002,
											"end": 5031,
											"name": "LT",
											"source": 33
										},
										{
											"begin": 4986,
											"end": 8029,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 4986,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "335"
										},
										{
											"begin": 4986,
											"end": 8029,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 5056,
											"end": 5071,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 5074,
											"end": 5082,
											"name": "DUP7",
											"source": 33
										},
										{
											"begin": 5074,
											"end": 5092,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 5074,
											"end": 5092,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 5074,
											"end": 5092,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 5074,
											"end": 5095,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 5074,
											"end": 5095,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 5074,
											"end": 5095,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 5074,
											"end": 5095,
											"name": "LT",
											"source": 33
										},
										{
											"begin": 5074,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "338"
										},
										{
											"begin": 5074,
											"end": 5095,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 5074,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "338"
										},
										{
											"begin": 5074,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "125"
										},
										{
											"begin": 5074,
											"end": 5095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 5074,
											"end": 5095,
											"name": "tag",
											"source": 33,
											"value": "338"
										},
										{
											"begin": 5074,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 5074,
											"end": 5095,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 5074,
											"end": 5095,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 5074,
											"end": 5095,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 5074,
											"end": 5095,
											"name": "MUL",
											"source": 33
										},
										{
											"begin": 5074,
											"end": 5095,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 5074,
											"end": 5095,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 5074,
											"end": 5095,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 5074,
											"end": 5095,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 5074,
											"end": 5095,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 5074,
											"end": 5095,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 5074,
											"end": 5095,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5132,
											"end": 5150,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 5132,
											"end": 5150,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 5113,
											"end": 5129,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 5132,
											"end": 5150,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 5132,
											"end": 5150,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 5132,
											"end": 5150,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 5132,
											"end": 5150,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 5132,
											"end": 5150,
											"name": "DUP13",
											"source": 33
										},
										{
											"begin": 5132,
											"end": 5150,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 5132,
											"end": 5150,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 5132,
											"end": 5150,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 5132,
											"end": 5150,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 5132,
											"end": 5150,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 5132,
											"end": 5150,
											"name": "KECCAK256",
											"source": 33
										},
										{
											"begin": 5132,
											"end": 5150,
											"name": "SLOAD",
											"source": 33
										},
										{
											"begin": 5074,
											"end": 5095,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 5074,
											"end": 5095,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5173,
											"end": 5199,
											"name": "PUSH",
											"source": 33,
											"value": "60"
										},
										{
											"begin": 5173,
											"end": 5199,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 5173,
											"end": 5199,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 5173,
											"end": 5199,
											"name": "SHR",
											"source": 33
										},
										{
											"begin": 5169,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "339"
										},
										{
											"begin": 5169,
											"end": 5277,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 5242,
											"end": 5277,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 5242,
											"end": 5277,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37E25A97"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5242,
											"end": 5277,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 5242,
											"end": 5277,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 5242,
											"end": 5277,
											"name": "PUSH",
											"source": 33,
											"value": "4"
										},
										{
											"begin": 5242,
											"end": 5277,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 5242,
											"end": 5277,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 5242,
											"end": 5277,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 5242,
											"end": 5277,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 5242,
											"end": 5277,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 5242,
											"end": 5277,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 5242,
											"end": 5277,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 5242,
											"end": 5277,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 5169,
											"end": 5277,
											"name": "tag",
											"source": 33,
											"value": "339"
										},
										{
											"begin": 5169,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 5338,
											"end": 5342,
											"name": "ADDRESS",
											"source": 33
										},
										{
											"begin": 5300,
											"end": 5326,
											"name": "PUSH",
											"source": 33,
											"value": "60"
										},
										{
											"begin": 5300,
											"end": 5326,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 5300,
											"end": 5326,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 5300,
											"end": 5326,
											"name": "SHR",
											"source": 33
										},
										{
											"begin": 5300,
											"end": 5343,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 5296,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "340"
										},
										{
											"begin": 5296,
											"end": 5410,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 5372,
											"end": 5410,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 5372,
											"end": 5410,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E9835731"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5372,
											"end": 5410,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 5372,
											"end": 5410,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 5372,
											"end": 5410,
											"name": "PUSH",
											"source": 33,
											"value": "4"
										},
										{
											"begin": 5372,
											"end": 5410,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 5372,
											"end": 5410,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 5372,
											"end": 5410,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 5372,
											"end": 5410,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 5372,
											"end": 5410,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 5372,
											"end": 5410,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 5372,
											"end": 5410,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 5372,
											"end": 5410,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 5296,
											"end": 5410,
											"name": "tag",
											"source": 33,
											"value": "340"
										},
										{
											"begin": 5296,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 5449,
											"end": 5450,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 5433,
											"end": 5450,
											"name": "DUP10",
											"source": 33
										},
										{
											"begin": 5433,
											"end": 5450,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 5433,
											"end": 5450,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 5429,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "341"
										},
										{
											"begin": 5429,
											"end": 5696,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5474,
											"end": 5493,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 5474,
											"end": 5493,
											"name": "SWAP5",
											"source": 33
										},
										{
											"begin": 5474,
											"end": 5493,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 5530,
											"end": 5564,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 5530,
											"end": 5564,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 5530,
											"end": 5564,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 5530,
											"end": 5564,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 5530,
											"end": 5545,
											"name": "PUSH",
											"source": 33,
											"value": "2"
										},
										{
											"begin": 5530,
											"end": 5545,
											"name": "DUP13",
											"source": 33
										},
										{
											"begin": 5530,
											"end": 5545,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 5530,
											"end": 5564,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 5530,
											"end": 5564,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 5530,
											"end": 5564,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 5530,
											"end": 5564,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 5530,
											"end": 5564,
											"name": "KECCAK256",
											"source": 33
										},
										{
											"begin": 5530,
											"end": 5564,
											"name": "SLOAD",
											"source": 33
										},
										{
											"begin": 5530,
											"end": 5564,
											"name": "SWAP9",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5474,
											"end": 5493,
											"name": "SWAP4",
											"source": 33
										},
										{
											"begin": 5608,
											"end": 5609,
											"name": "PUSH",
											"source": 33,
											"value": "7"
										},
										{
											"begin": 5608,
											"end": 5609,
											"name": "SWAP4",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5429,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "342"
										},
										{
											"begin": 5429,
											"end": 5696,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 5429,
											"end": 5696,
											"name": "tag",
											"source": 33,
											"value": "341"
										},
										{
											"begin": 5429,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5656,
											"end": 5677,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 5656,
											"end": 5677,
											"name": "SWAP4",
											"source": 33
										},
										{
											"begin": 5656,
											"end": 5677,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 5656,
											"end": 5677,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 5429,
											"end": 5696,
											"name": "tag",
											"source": 33,
											"value": "342"
										},
										{
											"begin": 5429,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 6099,
											"end": 6100,
											"name": "PUSH",
											"source": 33,
											"value": "5"
										},
										{
											"begin": 6076,
											"end": 6100,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 6076,
											"end": 6100,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 6076,
											"end": 6100,
											"name": "SHL",
											"source": 33
										},
										{
											"begin": 6059,
											"end": 6101,
											"name": "DUP10",
											"source": 33
										},
										{
											"begin": 6059,
											"end": 6101,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 6059,
											"end": 6101,
											"name": "SHL",
											"source": 33
										},
										{
											"begin": 5714,
											"end": 5733,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 5714,
											"end": 5733,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6150,
											"end": 6174,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 6150,
											"end": 6174,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 6150,
											"end": 6174,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 6150,
											"end": 6174,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 6150,
											"end": 6174,
											"name": "DUP7",
											"source": 33
										},
										{
											"begin": 6150,
											"end": 6174,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 6150,
											"end": 6174,
											"name": "EQ",
											"source": 33
										},
										{
											"begin": 6146,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "343"
										},
										{
											"begin": 6146,
											"end": 6438,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6392,
											"end": 6414,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 6392,
											"end": 6414,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 6392,
											"end": 6400,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 6392,
											"end": 6414,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 6392,
											"end": 6414,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 6392,
											"end": 6414,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 6392,
											"end": 6414,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 6392,
											"end": 6414,
											"name": "DUP16",
											"source": 33
										},
										{
											"begin": 6392,
											"end": 6414,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 6392,
											"end": 6414,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 6392,
											"end": 6414,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 6392,
											"end": 6414,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 6392,
											"end": 6414,
											"name": "KECCAK256",
											"source": 33
										},
										{
											"begin": 6392,
											"end": 6414,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 6392,
											"end": 6414,
											"name": "SLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6322,
											"end": 6415,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 6322,
											"end": 6415,
											"name": "PUSH",
											"source": 33,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6323,
											"end": 6352,
											"name": "DUP7",
											"source": 33
										},
										{
											"begin": 6323,
											"end": 6352,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 6322,
											"end": 6415,
											"name": "OR",
											"source": 33
										},
										{
											"begin": 6269,
											"end": 6415,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 6269,
											"end": 6415,
											"name": "SSTORE",
											"source": 33
										},
										{
											"begin": 6146,
											"end": 6438,
											"name": "tag",
											"source": 33,
											"value": "343"
										},
										{
											"begin": 6146,
											"end": 6438,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6467,
											"end": 6485,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 6467,
											"end": 6485,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 6467,
											"end": 6475,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 6467,
											"end": 6485,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 6467,
											"end": 6485,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 6467,
											"end": 6485,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 6467,
											"end": 6485,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 6467,
											"end": 6485,
											"name": "DUP14",
											"source": 33
										},
										{
											"begin": 6467,
											"end": 6485,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 6467,
											"end": 6485,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 6467,
											"end": 6485,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 6467,
											"end": 6485,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 6467,
											"end": 6485,
											"name": "KECCAK256",
											"source": 33
										},
										{
											"begin": 6460,
											"end": 6485,
											"name": "SSTORE",
											"source": 33
										},
										{
											"begin": 6605,
											"end": 6626,
											"name": "PUSH",
											"source": 33,
											"value": "1FFF"
										},
										{
											"begin": 6625,
											"end": 6626,
											"name": "PUSH",
											"source": 33,
											"value": "3"
										},
										{
											"begin": 6605,
											"end": 6626,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 6605,
											"end": 6626,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 6605,
											"end": 6626,
											"name": "SHR",
											"source": 33
										},
										{
											"begin": 6605,
											"end": 6626,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 6676,
											"end": 6703,
											"name": "PUSH",
											"source": 33,
											"value": "E0"
										},
										{
											"begin": 6702,
											"end": 6703,
											"name": "PUSH",
											"source": 33,
											"value": "5"
										},
										{
											"begin": 6676,
											"end": 6703,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 6676,
											"end": 6703,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 6676,
											"end": 6703,
											"name": "SHL",
											"source": 33
										},
										{
											"begin": 6676,
											"end": 6703,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 6744,
											"end": 6786,
											"name": "DUP8",
											"source": 33
										},
										{
											"begin": 6744,
											"end": 6786,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 6744,
											"end": 6786,
											"name": "EQ",
											"source": 33
										},
										{
											"begin": 6740,
											"end": 7847,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "344"
										},
										{
											"begin": 6740,
											"end": 7847,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 6810,
											"end": 6833,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 6836,
											"end": 6920,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 6836,
											"end": 6920,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 6836,
											"end": 6920,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 6836,
											"end": 6851,
											"name": "PUSH",
											"source": 33,
											"value": "2"
										},
										{
											"begin": 6836,
											"end": 6851,
											"name": "DUP16",
											"source": 33
										},
										{
											"begin": 6836,
											"end": 6851,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 6836,
											"end": 6920,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 6836,
											"end": 6920,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 6836,
											"end": 6920,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 6836,
											"end": 6920,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 6836,
											"end": 6920,
											"name": "KECCAK256",
											"source": 33
										},
										{
											"begin": 6836,
											"end": 6920,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 6836,
											"end": 6920,
											"name": "SLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 7134,
											"end": 7214,
											"name": "SHR",
											"source": 33
										},
										{
											"begin": 7132,
											"end": 7215,
											"name": "NOT",
											"source": 33
										},
										{
											"begin": 7086,
											"end": 7215,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 7086,
											"end": 7215,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 7086,
											"end": 7215,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 7244,
											"end": 7265,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 7244,
											"end": 7265,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 7244,
											"end": 7265,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 7244,
											"end": 7294,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 7244,
											"end": 7294,
											"name": "SHR",
											"source": 33
										},
										{
											"begin": 7085,
											"end": 7295,
											"name": "OR",
											"source": 33
										},
										{
											"begin": 7379,
											"end": 7435,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 7379,
											"end": 7435,
											"name": "SSTORE",
											"source": 33
										},
										{
											"begin": 6740,
											"end": 7847,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "345"
										},
										{
											"begin": 6740,
											"end": 7847,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 6740,
											"end": 7847,
											"name": "tag",
											"source": 33,
											"value": "344"
										},
										{
											"begin": 6740,
											"end": 7847,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 7802,
											"end": 7827,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 7785,
											"end": 7797,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7777,
											"end": 7798,
											"name": "NOT",
											"source": 33
										},
										{
											"begin": 7777,
											"end": 7798,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 7777,
											"end": 7827,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 7777,
											"end": 7827,
											"name": "SHR",
											"source": 33
										},
										{
											"begin": 7722,
											"end": 7747,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 539,
											"end": 574,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 574,
											"name": "SHL",
											"source": 33
										},
										{
											"begin": 7667,
											"end": 7747,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 7667,
											"end": 7747,
											"name": "SHR",
											"source": 33
										},
										{
											"begin": 7665,
											"end": 7748,
											"name": "NOT",
											"source": 33
										},
										{
											"begin": 7622,
											"end": 7634,
											"name": "DUP14",
											"source": 33
										},
										{
											"begin": 7622,
											"end": 7748,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 7621,
											"end": 7828,
											"name": "OR",
											"source": 33
										},
										{
											"begin": 7582,
											"end": 7828,
											"name": "SWAP12",
											"source": 33
										},
										{
											"begin": 7582,
											"end": 7828,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 6740,
											"end": 7847,
											"name": "tag",
											"source": 33,
											"value": "345"
										},
										{
											"begin": 6740,
											"end": 7847,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 7869,
											"end": 7888,
											"name": "DUP7",
											"source": 33
										},
										{
											"begin": 7892,
											"end": 7893,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 7869,
											"end": 7893,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 7865,
											"end": 8015,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "346"
										},
										{
											"begin": 7865,
											"end": 8015,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 7924,
											"end": 7958,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 7924,
											"end": 7958,
											"name": "DUP9",
											"source": 33
										},
										{
											"begin": 7924,
											"end": 7958,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 7924,
											"end": 7958,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 7924,
											"end": 7939,
											"name": "PUSH",
											"source": 33,
											"value": "2"
										},
										{
											"begin": 7924,
											"end": 7939,
											"name": "DUP16",
											"source": 33
										},
										{
											"begin": 7924,
											"end": 7939,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 7924,
											"end": 7958,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 7924,
											"end": 7958,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 7924,
											"end": 7958,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 7924,
											"end": 7958,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 7924,
											"end": 7958,
											"name": "KECCAK256",
											"source": 33
										},
										{
											"begin": 7917,
											"end": 7958,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 7917,
											"end": 7958,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 7917,
											"end": 7958,
											"name": "SSTORE",
											"source": 33
										},
										{
											"begin": 7924,
											"end": 7958,
											"name": "SWAP12",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7865,
											"end": 8015,
											"name": "tag",
											"source": 33,
											"value": "346"
										},
										{
											"begin": 7865,
											"end": 8015,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5033,
											"end": 5036,
											"name": "PUSH",
											"source": 33,
											"value": "1"
										},
										{
											"begin": 5033,
											"end": 5036,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 5033,
											"end": 5036,
											"name": "SWAP4",
											"source": 33
										},
										{
											"begin": 5033,
											"end": 5036,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 5033,
											"end": 5036,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4986,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "334"
										},
										{
											"begin": 4986,
											"end": 8029,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4986,
											"end": 8029,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 4986,
											"end": 8029,
											"name": "tag",
											"source": 33,
											"value": "335"
										},
										{
											"begin": 4986,
											"end": 8029,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8081,
											"end": 8082,
											"name": "PUSH",
											"source": 33,
											"value": "3"
										},
										{
											"begin": 8060,
											"end": 8082,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 8060,
											"end": 8082,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 8060,
											"end": 8082,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 8060,
											"end": 8082,
											"name": "SHL",
											"source": 33
										},
										{
											"begin": 8059,
											"end": 8105,
											"name": "OR",
											"source": 33
										},
										{
											"begin": 8059,
											"end": 8105,
											"name": "SWAP7",
											"source": 33
										},
										{
											"begin": 8143,
											"end": 8155,
											"name": "SWAP4",
											"source": 33
										},
										{
											"begin": 8143,
											"end": 8155,
											"name": "SWAP6",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4499,
											"end": 8173,
											"name": "SWAP3",
											"source": 33
										},
										{
											"begin": 4499,
											"end": 8173,
											"name": "SWAP4",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4499,
											"end": 8173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 9265,
											"end": 9928,
											"name": "tag",
											"source": 33,
											"value": "291"
										},
										{
											"begin": 9265,
											"end": 9928,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 9370,
											"end": 9381,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 9370,
											"end": 9381,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 9370,
											"end": 9386,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9344,
											"end": 9364,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 9344,
											"end": 9364,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 9344,
											"end": 9364,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 9343,
											"end": 9387,
											"name": "EQ",
											"source": 33
										},
										{
											"begin": 9339,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "348"
										},
										{
											"begin": 9339,
											"end": 9458,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 9408,
											"end": 9458,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 9408,
											"end": 9458,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "26DF4CCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9408,
											"end": 9458,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 9408,
											"end": 9458,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 9408,
											"end": 9458,
											"name": "PUSH",
											"source": 33,
											"value": "4"
										},
										{
											"begin": 9408,
											"end": 9458,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 9408,
											"end": 9458,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 9408,
											"end": 9458,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 9408,
											"end": 9458,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 9408,
											"end": 9458,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 9408,
											"end": 9458,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 9408,
											"end": 9458,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 9408,
											"end": 9458,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 9339,
											"end": 9458,
											"name": "tag",
											"source": 33,
											"value": "348"
										},
										{
											"begin": 9339,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9473,
											"end": 9493,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 9473,
											"end": 9493,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 9473,
											"end": 9493,
											"name": "ISZERO",
											"source": 33
										},
										{
											"begin": 9469,
											"end": 9922,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "349"
										},
										{
											"begin": 9469,
											"end": 9922,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9513,
											"end": 9536,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 9513,
											"end": 9536,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 9531,
											"end": 9535,
											"name": "ADDRESS",
											"source": 33
										},
										{
											"begin": 9513,
											"end": 9536,
											"name": "EQ",
											"source": 33
										},
										{
											"begin": 9509,
											"end": 9658,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "352"
										},
										{
											"begin": 9509,
											"end": 9658,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9561,
											"end": 9578,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 9561,
											"end": 9578,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 568,
											"end": 588,
											"name": "EXTCODESIZE",
											"source": 36
										},
										{
											"begin": 9556,
											"end": 9643,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "352"
										},
										{
											"begin": 9556,
											"end": 9643,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 9609,
											"end": 9643,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 9609,
											"end": 9643,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3DDC5CAB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9609,
											"end": 9643,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 9609,
											"end": 9643,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 9609,
											"end": 9643,
											"name": "PUSH",
											"source": 33,
											"value": "4"
										},
										{
											"begin": 9609,
											"end": 9643,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 9609,
											"end": 9643,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 9609,
											"end": 9643,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 9609,
											"end": 9643,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 9609,
											"end": 9643,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 9609,
											"end": 9643,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 9609,
											"end": 9643,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 9609,
											"end": 9643,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 9556,
											"end": 9643,
											"name": "tag",
											"source": 33,
											"value": "352"
										},
										{
											"begin": 9556,
											"end": 9643,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 9673,
											"end": 9685,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 9691,
											"end": 9697,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9691,
											"end": 9710,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 9711,
											"end": 9715,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "353"
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "354"
										},
										{
											"begin": 9691,
											"end": 9716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "tag",
											"source": 33,
											"value": "353"
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "DUP4",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "SUB",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "DUP6",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "GAS",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "DELEGATECALL",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "RETURNDATASIZE",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "DUP2",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "EQ",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "357"
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "MLOAD",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "PUSH",
											"source": 33,
											"value": "1F"
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "NOT",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "PUSH",
											"source": 33,
											"value": "3F"
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "RETURNDATASIZE",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "AND",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "RETURNDATASIZE",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "DUP3",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "RETURNDATASIZE",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "PUSH",
											"source": 33,
											"value": "20"
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "DUP5",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "ADD",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "RETURNDATACOPY",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "356"
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "tag",
											"source": 33,
											"value": "357"
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "PUSH",
											"source": 33,
											"value": "60"
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "SWAP2",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "tag",
											"source": 33,
											"value": "356"
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 9672,
											"end": 9716,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 9672,
											"end": 9716,
											"name": "SWAP1",
											"source": 33
										},
										{
											"begin": 9672,
											"end": 9716,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 9736,
											"end": 9743,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 9731,
											"end": 9912,
											"name": "PUSH [tag]",
											"source": 33,
											"value": "325"
										},
										{
											"begin": 9731,
											"end": 9912,
											"name": "JUMPI",
											"source": 33
										},
										{
											"begin": 9815,
											"end": 9831,
											"name": "RETURNDATASIZE",
											"source": 33
										},
										{
											"begin": 9812,
											"end": 9813,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 9812,
											"end": 9813,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 9794,
											"end": 9832,
											"name": "RETURNDATACOPY",
											"source": 33
										},
										{
											"begin": 9863,
											"end": 9879,
											"name": "RETURNDATASIZE",
											"source": 33
										},
										{
											"begin": 9812,
											"end": 9813,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 9853,
											"end": 9880,
											"name": "REVERT",
											"source": 33
										},
										{
											"begin": 9469,
											"end": 9922,
											"name": "tag",
											"source": 33,
											"value": "349"
										},
										{
											"begin": 9469,
											"end": 9922,
											"name": "JUMPDEST",
											"source": 33
										},
										{
											"begin": 9265,
											"end": 9928,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 9265,
											"end": 9928,
											"name": "POP",
											"source": 33
										},
										{
											"begin": 9265,
											"end": 9928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 33
										},
										{
											"begin": 1203,
											"end": 1410,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 1203,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 186,
											"end": 235,
											"name": "PUSH",
											"source": 8,
											"value": "8A22373512790C48B83A1FE2EFDD2888D4A917BCDC24D0ADF63E60F671680460"
										},
										{
											"begin": 1359,
											"end": 1366,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1366,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1338,
											"end": 1376,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1376,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1338,
											"end": 1376,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1338,
											"end": 1376,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1338,
											"end": 1376,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1338,
											"end": 1376,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1366,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1366,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1338,
											"end": 1376,
											"name": "PUSH",
											"source": 7,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1338,
											"end": 1376,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1266,
											"end": 1297,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1297,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1338,
											"end": 1376,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1403,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1403,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1386,
											"end": 1403,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1386,
											"end": 1403,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1403,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1403,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1403,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1403,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1403,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1403,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1403,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1403,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1403,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1203,
											"end": 1410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 38,
											"value": "370"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 81,
											"end": 101,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 81,
											"end": 101,
											"name": "CALLDATALOAD",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 130,
											"end": 162,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 130,
											"end": 162,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 120,
											"end": 163,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 120,
											"end": 163,
											"name": "EQ",
											"source": 38
										},
										{
											"begin": 110,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "383"
										},
										{
											"begin": 110,
											"end": 181,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 110,
											"end": 181,
											"name": "tag",
											"source": 38,
											"value": "383"
										},
										{
											"begin": 110,
											"end": 181,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 192,
											"end": 376,
											"name": "tag",
											"source": 38,
											"value": "30"
										},
										{
											"begin": 192,
											"end": 376,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 250,
											"end": 256,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 305,
											"name": "PUSH",
											"source": 38,
											"value": "20"
										},
										{
											"begin": 291,
											"end": 300,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 282,
											"end": 289,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 278,
											"end": 301,
											"name": "SUB",
											"source": 38
										},
										{
											"begin": 274,
											"end": 306,
											"name": "SLT",
											"source": 38
										},
										{
											"begin": 271,
											"end": 323,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 271,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "385"
										},
										{
											"begin": 271,
											"end": 323,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 319,
											"end": 320,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 317,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 309,
											"end": 321,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 271,
											"end": 323,
											"name": "tag",
											"source": 38,
											"value": "385"
										},
										{
											"begin": 271,
											"end": 323,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 342,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "386"
										},
										{
											"begin": 360,
											"end": 369,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 342,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "370"
										},
										{
											"begin": 342,
											"end": 370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 342,
											"end": 370,
											"name": "tag",
											"source": 38,
											"value": "386"
										},
										{
											"begin": 342,
											"end": 370,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 332,
											"end": 370,
											"name": "SWAP4",
											"source": 38
										},
										{
											"begin": 192,
											"end": 376,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 573,
											"end": 746,
											"name": "tag",
											"source": 38,
											"value": "371"
										},
										{
											"begin": 573,
											"end": 746,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 641,
											"end": 661,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 641,
											"end": 661,
											"name": "CALLDATALOAD",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 690,
											"end": 721,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 690,
											"end": 721,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 680,
											"end": 722,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 680,
											"end": 722,
											"name": "EQ",
											"source": 38
										},
										{
											"begin": 670,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "383"
										},
										{
											"begin": 670,
											"end": 740,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 736,
											"end": 737,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 734,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 726,
											"end": 738,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 751,
											"end": 1098,
											"name": "tag",
											"source": 38,
											"value": "372"
										},
										{
											"begin": 751,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 802,
											"end": 810,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 818,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 866,
											"end": 869,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 859,
											"end": 863,
											"name": "PUSH",
											"source": 38,
											"value": "1F"
										},
										{
											"begin": 851,
											"end": 857,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 847,
											"end": 864,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 843,
											"end": 870,
											"name": "SLT",
											"source": 38
										},
										{
											"begin": 833,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "391"
										},
										{
											"begin": 833,
											"end": 888,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 884,
											"end": 885,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 881,
											"end": 882,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 874,
											"end": 886,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 833,
											"end": 888,
											"name": "tag",
											"source": 38,
											"value": "391"
										},
										{
											"begin": 833,
											"end": 888,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 907,
											"end": 927,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 907,
											"end": 927,
											"name": "CALLDATALOAD",
											"source": 38
										},
										{
											"begin": 950,
											"end": 968,
											"name": "PUSH",
											"source": 38,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 939,
											"end": 969,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 939,
											"end": 969,
											"name": "GT",
											"source": 38
										},
										{
											"begin": 936,
											"end": 986,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 936,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "392"
										},
										{
											"begin": 936,
											"end": 986,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 982,
											"end": 983,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 979,
											"end": 980,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 972,
											"end": 984,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 936,
											"end": 986,
											"name": "tag",
											"source": 38,
											"value": "392"
										},
										{
											"begin": 936,
											"end": 986,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 1019,
											"end": 1023,
											"name": "PUSH",
											"source": 38,
											"value": "20"
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 1007,
											"end": 1024,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 995,
											"end": 1024,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 995,
											"end": 1024,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 1071,
											"end": 1074,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 1064,
											"end": 1068,
											"name": "PUSH",
											"source": 38,
											"value": "20"
										},
										{
											"begin": 1055,
											"end": 1061,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 1047,
											"end": 1053,
											"name": "DUP6",
											"source": 38
										},
										{
											"begin": 1043,
											"end": 1062,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 1039,
											"end": 1069,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 1036,
											"end": 1075,
											"name": "GT",
											"source": 38
										},
										{
											"begin": 1033,
											"end": 1092,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 1033,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "393"
										},
										{
											"begin": 1033,
											"end": 1092,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1088,
											"end": 1089,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 1086,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1078,
											"end": 1090,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 1033,
											"end": 1092,
											"name": "tag",
											"source": 38,
											"value": "393"
										},
										{
											"begin": 1033,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 751,
											"end": 1098,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": 751,
											"end": 1098,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 751,
											"end": 1098,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": 751,
											"end": 1098,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 751,
											"end": 1098,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 751,
											"end": 1098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 1103,
											"end": 2113,
											"name": "tag",
											"source": 38,
											"value": "37"
										},
										{
											"begin": 1103,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 1246,
											"end": 1252,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1260,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1262,
											"end": 1268,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1278,
											"end": 1284,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 1331,
											"end": 1333,
											"name": "PUSH",
											"source": 38,
											"value": "60"
										},
										{
											"begin": 1319,
											"end": 1328,
											"name": "DUP7",
											"source": 38
										},
										{
											"begin": 1310,
											"end": 1317,
											"name": "DUP9",
											"source": 38
										},
										{
											"begin": 1306,
											"end": 1329,
											"name": "SUB",
											"source": 38
										},
										{
											"begin": 1302,
											"end": 1334,
											"name": "SLT",
											"source": 38
										},
										{
											"begin": 1299,
											"end": 1351,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 1299,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "395"
										},
										{
											"begin": 1299,
											"end": 1351,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1347,
											"end": 1348,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 1344,
											"end": 1345,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1337,
											"end": 1349,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 1299,
											"end": 1351,
											"name": "tag",
											"source": 38,
											"value": "395"
										},
										{
											"begin": 1299,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 1387,
											"end": 1396,
											"name": "DUP6",
											"source": 38
										},
										{
											"begin": 1374,
											"end": 1397,
											"name": "CALLDATALOAD",
											"source": 38
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "PUSH",
											"source": 38,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1457,
											"end": 1459,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1449,
											"end": 1455,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 1446,
											"end": 1460,
											"name": "GT",
											"source": 38
										},
										{
											"begin": 1443,
											"end": 1477,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 1443,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "396"
										},
										{
											"begin": 1443,
											"end": 1477,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1471,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1463,
											"end": 1475,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 1443,
											"end": 1477,
											"name": "tag",
											"source": 38,
											"value": "396"
										},
										{
											"begin": 1443,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 1511,
											"end": 1517,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "DUP9",
											"source": 38
										},
										{
											"begin": 1496,
											"end": 1518,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 1486,
											"end": 1518,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 1486,
											"end": 1518,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 1556,
											"end": 1563,
											"name": "DUP9",
											"source": 38
										},
										{
											"begin": 1549,
											"end": 1553,
											"name": "PUSH",
											"source": 38,
											"value": "1F"
										},
										{
											"begin": 1545,
											"end": 1547,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 1541,
											"end": 1554,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 1537,
											"end": 1564,
											"name": "SLT",
											"source": 38
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "397"
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1578,
											"end": 1579,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1576,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1568,
											"end": 1580,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "tag",
											"source": 38,
											"value": "397"
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 1618,
											"end": 1620,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 1605,
											"end": 1621,
											"name": "CALLDATALOAD",
											"source": 38
										},
										{
											"begin": 1644,
											"end": 1646,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 1636,
											"end": 1642,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 1633,
											"end": 1647,
											"name": "GT",
											"source": 38
										},
										{
											"begin": 1630,
											"end": 1664,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 1630,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "398"
										},
										{
											"begin": 1630,
											"end": 1664,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1660,
											"end": 1661,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 1657,
											"end": 1658,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1650,
											"end": 1662,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 1630,
											"end": 1664,
											"name": "tag",
											"source": 38,
											"value": "398"
										},
										{
											"begin": 1630,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "DUP10",
											"source": 38
										},
										{
											"begin": 1708,
											"end": 1712,
											"name": "PUSH",
											"source": 38,
											"value": "20"
										},
										{
											"begin": 1698,
											"end": 1704,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 1695,
											"end": 1696,
											"name": "PUSH",
											"source": 38,
											"value": "5"
										},
										{
											"begin": 1691,
											"end": 1705,
											"name": "SHL",
											"source": 38
										},
										{
											"begin": 1687,
											"end": 1689,
											"name": "DUP6",
											"source": 38
										},
										{
											"begin": 1683,
											"end": 1706,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 1679,
											"end": 1713,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 1676,
											"end": 1723,
											"name": "GT",
											"source": 38
										},
										{
											"begin": 1673,
											"end": 1740,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 1673,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "399"
										},
										{
											"begin": 1673,
											"end": 1740,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1736,
											"end": 1737,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1734,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1726,
											"end": 1738,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 1673,
											"end": 1740,
											"name": "tag",
											"source": 38,
											"value": "399"
										},
										{
											"begin": 1673,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 1767,
											"end": 1771,
											"name": "PUSH",
											"source": 38,
											"value": "20"
										},
										{
											"begin": 1763,
											"end": 1765,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 1749,
											"end": 1772,
											"name": "SWAP8",
											"source": 38
										},
										{
											"begin": 1749,
											"end": 1772,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 1791,
											"end": 1797,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1781,
											"end": 1797,
											"name": "SWAP7",
											"source": 38
										},
										{
											"begin": 1781,
											"end": 1797,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 1781,
											"end": 1797,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 1816,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "400"
										},
										{
											"begin": 1850,
											"end": 1854,
											"name": "PUSH",
											"source": 38,
											"value": "20"
										},
										{
											"begin": 1839,
											"end": 1848,
											"name": "DUP10",
											"source": 38
										},
										{
											"begin": 1835,
											"end": 1855,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 1816,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "371"
										},
										{
											"begin": 1816,
											"end": 1856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 1816,
											"end": 1856,
											"name": "tag",
											"source": 38,
											"value": "400"
										},
										{
											"begin": 1816,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 1806,
											"end": 1856,
											"name": "SWAP5",
											"source": 38
										},
										{
											"begin": 1806,
											"end": 1856,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 1909,
											"end": 1911,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 1898,
											"end": 1907,
											"name": "DUP9",
											"source": 38
										},
										{
											"begin": 1894,
											"end": 1912,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 1881,
											"end": 1913,
											"name": "CALLDATALOAD",
											"source": 38
										},
										{
											"begin": 1865,
											"end": 1913,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 1865,
											"end": 1913,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 1938,
											"end": 1940,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1928,
											"end": 1936,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 1925,
											"end": 1941,
											"name": "GT",
											"source": 38
										},
										{
											"begin": 1922,
											"end": 1958,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 1922,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "401"
										},
										{
											"begin": 1922,
											"end": 1958,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 1954,
											"end": 1955,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1952,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 1944,
											"end": 1956,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 1922,
											"end": 1958,
											"name": "tag",
											"source": 38,
											"value": "401"
										},
										{
											"begin": 1922,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 1922,
											"end": 1958,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 1993,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "402"
										},
										{
											"begin": 2045,
											"end": 2052,
											"name": "DUP9",
											"source": 38
										},
										{
											"begin": 2034,
											"end": 2042,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 2023,
											"end": 2032,
											"name": "DUP10",
											"source": 38
										},
										{
											"begin": 2019,
											"end": 2043,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 1993,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "372"
										},
										{
											"begin": 1993,
											"end": 2053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 1993,
											"end": 2053,
											"name": "tag",
											"source": 38,
											"value": "402"
										},
										{
											"begin": 1993,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 1103,
											"end": 2113,
											"name": "SWAP7",
											"source": 38
										},
										{
											"begin": 1103,
											"end": 2113,
											"name": "SWAP10",
											"source": 38
										},
										{
											"begin": 1103,
											"end": 2113,
											"name": "SWAP6",
											"source": 38
										},
										{
											"begin": 1103,
											"end": 2113,
											"name": "SWAP9",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1103,
											"end": 2113,
											"name": "SWAP4",
											"source": 38
										},
										{
											"begin": 1103,
											"end": 2113,
											"name": "SWAP7",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2072,
											"end": 2080,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": 2072,
											"end": 2080,
											"name": "SWAP5",
											"source": 38
										},
										{
											"begin": 1967,
											"end": 2053,
											"name": "SWAP4",
											"source": 38
										},
										{
											"begin": 1103,
											"end": 2113,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1103,
											"end": 2113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 2435,
											"end": 3093,
											"name": "tag",
											"source": 38,
											"value": "48"
										},
										{
											"begin": 2435,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 38,
											"value": "20"
										},
										{
											"begin": 2658,
											"end": 2679,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 2658,
											"end": 2679,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 2658,
											"end": 2679,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 2728,
											"end": 2741,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 2728,
											"end": 2741,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": 2631,
											"end": 2649,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 2631,
											"end": 2649,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 2631,
											"end": 2649,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 2750,
											"end": 2772,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 2750,
											"end": 2772,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 2750,
											"end": 2772,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 2577,
											"end": 2581,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2581,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 2829,
											"end": 2844,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 2829,
											"end": 2844,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 2829,
											"end": 2844,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 2829,
											"end": 2844,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 2803,
											"end": 2805,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 2788,
											"end": 2806,
											"name": "DUP6",
											"source": 38
										},
										{
											"begin": 2788,
											"end": 2806,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 2788,
											"end": 2806,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 2577,
											"end": 2581,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 2872,
											"end": 3067,
											"name": "tag",
											"source": 38,
											"value": "406"
										},
										{
											"begin": 2872,
											"end": 3067,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 2886,
											"end": 2892,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 2883,
											"end": 2884,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 2880,
											"end": 2893,
											"name": "LT",
											"source": 38
										},
										{
											"begin": 2872,
											"end": 3067,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 2872,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "408"
										},
										{
											"begin": 2872,
											"end": 3067,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 2951,
											"end": 2964,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 2951,
											"end": 2964,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2947,
											"end": 2986,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 2935,
											"end": 2987,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 2935,
											"end": 2987,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 3042,
											"end": 3057,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": 3042,
											"end": 3057,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 3042,
											"end": 3057,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 3042,
											"end": 3057,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 2983,
											"end": 2984,
											"name": "PUSH",
											"source": 38,
											"value": "1"
										},
										{
											"begin": 2901,
											"end": 2910,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 2872,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "406"
										},
										{
											"begin": 2872,
											"end": 3067,
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 2872,
											"end": 3067,
											"name": "tag",
											"source": 38,
											"value": "408"
										},
										{
											"begin": 2872,
											"end": 3067,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "SWAP7",
											"source": 38
										},
										{
											"begin": 2435,
											"end": 3093,
											"name": "SWAP6",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2435,
											"end": 3093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 3098,
											"end": 3559,
											"name": "tag",
											"source": 38,
											"value": "374"
										},
										{
											"begin": 3098,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 3150,
											"end": 3153,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 3188,
											"end": 3193,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": 3215,
											"end": 3221,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 3210,
											"end": 3213,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 3203,
											"end": 3222,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 3241,
											"end": 3245,
											"name": "PUSH",
											"source": 38,
											"value": "20"
										},
										{
											"begin": 3270,
											"end": 3272,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 3265,
											"end": 3268,
											"name": "DUP6",
											"source": 38
										},
										{
											"begin": 3261,
											"end": 3273,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 3254,
											"end": 3273,
											"name": "SWAP5",
											"source": 38
										},
										{
											"begin": 3254,
											"end": 3273,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 3307,
											"end": 3309,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 3300,
											"end": 3305,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 3296,
											"end": 3310,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 3328,
											"end": 3329,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 3338,
											"end": 3534,
											"name": "tag",
											"source": 38,
											"value": "410"
										},
										{
											"begin": 3338,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 3352,
											"end": 3358,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 3349,
											"end": 3350,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 3346,
											"end": 3359,
											"name": "LT",
											"source": 38
										},
										{
											"begin": 3338,
											"end": 3534,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 3338,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "412"
										},
										{
											"begin": 3338,
											"end": 3534,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 3417,
											"end": 3430,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 3417,
											"end": 3430,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3413,
											"end": 3453,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 3401,
											"end": 3454,
											"name": "DUP8",
											"source": 38
										},
										{
											"begin": 3401,
											"end": 3454,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 3474,
											"end": 3486,
											"name": "SWAP6",
											"source": 38
										},
										{
											"begin": 3474,
											"end": 3486,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 3474,
											"end": 3486,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 3474,
											"end": 3486,
											"name": "SWAP6",
											"source": 38
										},
										{
											"begin": 3509,
											"end": 3524,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 3509,
											"end": 3524,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 3509,
											"end": 3524,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 3509,
											"end": 3524,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 3374,
											"end": 3375,
											"name": "PUSH",
											"source": 38,
											"value": "1"
										},
										{
											"begin": 3367,
											"end": 3376,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 3338,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "410"
										},
										{
											"begin": 3338,
											"end": 3534,
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 3338,
											"end": 3534,
											"name": "tag",
											"source": 38,
											"value": "412"
										},
										{
											"begin": 3338,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3550,
											"end": 3553,
											"name": "SWAP5",
											"source": 38
										},
										{
											"begin": 3550,
											"end": 3553,
											"name": "SWAP6",
											"source": 38
										},
										{
											"begin": 3098,
											"end": 3559,
											"name": "SWAP5",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3098,
											"end": 3559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 3564,
											"end": 4623,
											"name": "tag",
											"source": 38,
											"value": "56"
										},
										{
											"begin": 3564,
											"end": 4623,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 3752,
											"end": 3756,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 3781,
											"end": 3783,
											"name": "PUSH",
											"source": 38,
											"value": "20"
										},
										{
											"begin": 3821,
											"end": 3823,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 3810,
											"end": 3819,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 3851,
											"end": 3853,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 3840,
											"end": 3849,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 3833,
											"end": 3854,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 3874,
											"end": 3880,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 3909,
											"end": 3915,
											"name": "DUP6",
											"source": 38
										},
										{
											"begin": 3903,
											"end": 3916,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": 3940,
											"end": 3946,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 3932,
											"end": 3938,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 3925,
											"end": 3947,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 3966,
											"end": 3968,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 3956,
											"end": 3968,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": 3956,
											"end": 3968,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 3999,
											"end": 4001,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 3988,
											"end": 3997,
											"name": "DUP7",
											"source": 38
										},
										{
											"begin": 3984,
											"end": 4002,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 3977,
											"end": 4002,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 3977,
											"end": 4002,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 4061,
											"end": 4063,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 4051,
											"end": 4057,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 4048,
											"end": 4049,
											"name": "PUSH",
											"source": 38,
											"value": "5"
										},
										{
											"begin": 4044,
											"end": 4058,
											"name": "SHL",
											"source": 38
										},
										{
											"begin": 4033,
											"end": 4042,
											"name": "DUP8",
											"source": 38
										},
										{
											"begin": 4029,
											"end": 4059,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 4025,
											"end": 4064,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 4099,
											"end": 4101,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 4091,
											"end": 4097,
											"name": "DUP9",
											"source": 38
										},
										{
											"begin": 4087,
											"end": 4102,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 4120,
											"end": 4121,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 4130,
											"end": 4594,
											"name": "tag",
											"source": 38,
											"value": "414"
										},
										{
											"begin": 4130,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 4144,
											"end": 4150,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 4141,
											"end": 4142,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 4138,
											"end": 4151,
											"name": "LT",
											"source": 38
										},
										{
											"begin": 4130,
											"end": 4594,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 4130,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "416"
										},
										{
											"begin": 4130,
											"end": 4594,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 4209,
											"end": 4231,
											"name": "DUP9",
											"source": 38
										},
										{
											"begin": 4209,
											"end": 4231,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 4209,
											"end": 4231,
											"name": "SUB",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4205,
											"end": 4241,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 4193,
											"end": 4242,
											"name": "DUP6",
											"source": 38
										},
										{
											"begin": 4193,
											"end": 4242,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 4265,
											"end": 4278,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 4265,
											"end": 4278,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": 4310,
											"end": 4319,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 4310,
											"end": 4319,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4306,
											"end": 4341,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 4291,
											"end": 4342,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 4291,
											"end": 4342,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 4381,
											"end": 4392,
											"name": "DUP8",
											"source": 38
										},
										{
											"begin": 4381,
											"end": 4392,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 4375,
											"end": 4393,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": 4413,
											"end": 4428,
											"name": "DUP8",
											"source": 38
										},
										{
											"begin": 4413,
											"end": 4428,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 4413,
											"end": 4428,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 4406,
											"end": 4433,
											"name": "DUP8",
											"source": 38
										},
										{
											"begin": 4406,
											"end": 4433,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 4406,
											"end": 4433,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 4456,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "417"
										},
										{
											"begin": 4498,
											"end": 4513,
											"name": "DUP8",
											"source": 38
										},
										{
											"begin": 4498,
											"end": 4513,
											"name": "DUP6",
											"source": 38
										},
										{
											"begin": 4498,
											"end": 4513,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 4375,
											"end": 4393,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 4456,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "374"
										},
										{
											"begin": 4456,
											"end": 4514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 4456,
											"end": 4514,
											"name": "tag",
											"source": 38,
											"value": "417"
										},
										{
											"begin": 4456,
											"end": 4514,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 4572,
											"end": 4584,
											"name": "SWAP6",
											"source": 38
										},
										{
											"begin": 4572,
											"end": 4584,
											"name": "DUP9",
											"source": 38
										},
										{
											"begin": 4572,
											"end": 4584,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 4572,
											"end": 4584,
											"name": "SWAP6",
											"source": 38
										},
										{
											"begin": 4446,
											"end": 4514,
											"name": "SWAP4",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4537,
											"end": 4552,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 4537,
											"end": 4552,
											"name": "DUP7",
											"source": 38
										},
										{
											"begin": 4537,
											"end": 4552,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 4537,
											"end": 4552,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 4166,
											"end": 4167,
											"name": "PUSH",
											"source": 38,
											"value": "1"
										},
										{
											"begin": 4159,
											"end": 4168,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 4130,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "414"
										},
										{
											"begin": 4130,
											"end": 4594,
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 4130,
											"end": 4594,
											"name": "tag",
											"source": 38,
											"value": "416"
										},
										{
											"begin": 4130,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "SWAP9",
											"source": 38
										},
										{
											"begin": 3564,
											"end": 4623,
											"name": "SWAP8",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3564,
											"end": 4623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 4628,
											"end": 4814,
											"name": "tag",
											"source": 38,
											"value": "68"
										},
										{
											"begin": 4628,
											"end": 4814,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 4687,
											"end": 4693,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 4740,
											"end": 4742,
											"name": "PUSH",
											"source": 38,
											"value": "20"
										},
										{
											"begin": 4728,
											"end": 4737,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 4719,
											"end": 4726,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 4715,
											"end": 4738,
											"name": "SUB",
											"source": 38
										},
										{
											"begin": 4711,
											"end": 4743,
											"name": "SLT",
											"source": 38
										},
										{
											"begin": 4708,
											"end": 4760,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 4708,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "419"
										},
										{
											"begin": 4708,
											"end": 4760,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 4756,
											"end": 4757,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 4753,
											"end": 4754,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 4746,
											"end": 4758,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 4708,
											"end": 4760,
											"name": "tag",
											"source": 38,
											"value": "419"
										},
										{
											"begin": 4708,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 4779,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "386"
										},
										{
											"begin": 4798,
											"end": 4807,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 4779,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "371"
										},
										{
											"begin": 4779,
											"end": 4808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 4819,
											"end": 5476,
											"name": "tag",
											"source": 38,
											"value": "75"
										},
										{
											"begin": 4819,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 38,
											"value": "20"
										},
										{
											"begin": 5040,
											"end": 5061,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 5040,
											"end": 5061,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 5040,
											"end": 5061,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 5110,
											"end": 5123,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 5110,
											"end": 5123,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": 5013,
											"end": 5031,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 5013,
											"end": 5031,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 5013,
											"end": 5031,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 5132,
											"end": 5154,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 5132,
											"end": 5154,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 5132,
											"end": 5154,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 4959,
											"end": 4963,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 4959,
											"end": 4963,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 5211,
											"end": 5226,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 5211,
											"end": 5226,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 5211,
											"end": 5226,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 5211,
											"end": 5226,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 5185,
											"end": 5187,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 5170,
											"end": 5188,
											"name": "DUP6",
											"source": 38
										},
										{
											"begin": 5170,
											"end": 5188,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 5170,
											"end": 5188,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 4959,
											"end": 4963,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 5254,
											"end": 5450,
											"name": "tag",
											"source": 38,
											"value": "422"
										},
										{
											"begin": 5254,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 5268,
											"end": 5274,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 5262,
											"end": 5275,
											"name": "LT",
											"source": 38
										},
										{
											"begin": 5254,
											"end": 5450,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 5254,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "408"
										},
										{
											"begin": 5254,
											"end": 5450,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 5333,
											"end": 5346,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 5333,
											"end": 5346,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5329,
											"end": 5369,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 5317,
											"end": 5370,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 5317,
											"end": 5370,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 5425,
											"end": 5440,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": 5425,
											"end": 5440,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 5425,
											"end": 5440,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 5425,
											"end": 5440,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": 5390,
											"end": 5402,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 5390,
											"end": 5402,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 5390,
											"end": 5402,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 5390,
											"end": 5402,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 5290,
											"end": 5291,
											"name": "PUSH",
											"source": 38,
											"value": "1"
										},
										{
											"begin": 5283,
											"end": 5292,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 5254,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "422"
										},
										{
											"begin": 5254,
											"end": 5450,
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 5481,
											"end": 5608,
											"name": "tag",
											"source": 38,
											"value": "109"
										},
										{
											"begin": 5481,
											"end": 5608,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 5542,
											"end": 5552,
											"name": "PUSH",
											"source": 38,
											"value": "4E487B71"
										},
										{
											"begin": 5537,
											"end": 5540,
											"name": "PUSH",
											"source": 38,
											"value": "E0"
										},
										{
											"begin": 5533,
											"end": 5553,
											"name": "SHL",
											"source": 38
										},
										{
											"begin": 5530,
											"end": 5531,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5554,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 5573,
											"end": 5577,
											"name": "PUSH",
											"source": 38,
											"value": "41"
										},
										{
											"begin": 5570,
											"end": 5571,
											"name": "PUSH",
											"source": 38,
											"value": "4"
										},
										{
											"begin": 5563,
											"end": 5578,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 5597,
											"end": 5601,
											"name": "PUSH",
											"source": 38,
											"value": "24"
										},
										{
											"begin": 5594,
											"end": 5595,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 5587,
											"end": 5602,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 5613,
											"end": 5866,
											"name": "tag",
											"source": 38,
											"value": "375"
										},
										{
											"begin": 5613,
											"end": 5866,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 5685,
											"end": 5687,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 5679,
											"end": 5688,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": 5727,
											"end": 5731,
											"name": "PUSH",
											"source": 38,
											"value": "60"
										},
										{
											"begin": 5715,
											"end": 5732,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 5715,
											"end": 5732,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 5762,
											"end": 5780,
											"name": "PUSH",
											"source": 38,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 5747,
											"end": 5781,
											"name": "GT",
											"source": 38
										},
										{
											"begin": 5783,
											"end": 5805,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 5783,
											"end": 5805,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 5783,
											"end": 5805,
											"name": "LT",
											"source": 38
										},
										{
											"begin": 5744,
											"end": 5806,
											"name": "OR",
											"source": 38
										},
										{
											"begin": 5741,
											"end": 5829,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 5741,
											"end": 5829,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "428"
										},
										{
											"begin": 5741,
											"end": 5829,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 5809,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "428"
										},
										{
											"begin": 5809,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "109"
										},
										{
											"begin": 5809,
											"end": 5827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 5809,
											"end": 5827,
											"name": "tag",
											"source": 38,
											"value": "428"
										},
										{
											"begin": 5809,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 5845,
											"end": 5847,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 5838,
											"end": 5860,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 5613,
											"end": 5866,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 5613,
											"end": 5866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 5871,
											"end": 6146,
											"name": "tag",
											"source": 38,
											"value": "376"
										},
										{
											"begin": 5871,
											"end": 6146,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 5942,
											"end": 5944,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 5936,
											"end": 5945,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": 6007,
											"end": 6009,
											"name": "PUSH",
											"source": 38,
											"value": "1F"
										},
										{
											"begin": 5988,
											"end": 6001,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 5988,
											"end": 6001,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5984,
											"end": 6011,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 5972,
											"end": 6012,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 5972,
											"end": 6012,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 6042,
											"end": 6060,
											"name": "PUSH",
											"source": 38,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6027,
											"end": 6061,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 6027,
											"end": 6061,
											"name": "GT",
											"source": 38
										},
										{
											"begin": 6063,
											"end": 6085,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 6063,
											"end": 6085,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 6063,
											"end": 6085,
											"name": "LT",
											"source": 38
										},
										{
											"begin": 6024,
											"end": 6086,
											"name": "OR",
											"source": 38
										},
										{
											"begin": 6021,
											"end": 6109,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 6021,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "431"
										},
										{
											"begin": 6021,
											"end": 6109,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 6089,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "431"
										},
										{
											"begin": 6089,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "109"
										},
										{
											"begin": 6089,
											"end": 6107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 6089,
											"end": 6107,
											"name": "tag",
											"source": 38,
											"value": "431"
										},
										{
											"begin": 6089,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 6125,
											"end": 6127,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 6118,
											"end": 6140,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 5871,
											"end": 6146,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 5871,
											"end": 6146,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5871,
											"end": 6146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "tag",
											"source": 38,
											"value": "377"
										},
										{
											"begin": 6151,
											"end": 6342,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 6219,
											"end": 6223,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 6252,
											"end": 6270,
											"name": "PUSH",
											"source": 38,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6244,
											"end": 6250,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 6241,
											"end": 6271,
											"name": "GT",
											"source": 38
										},
										{
											"begin": 6238,
											"end": 6294,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 6238,
											"end": 6294,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "434"
										},
										{
											"begin": 6238,
											"end": 6294,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "434"
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "109"
										},
										{
											"begin": 6274,
											"end": 6292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "tag",
											"source": 38,
											"value": "434"
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6319,
											"end": 6320,
											"name": "PUSH",
											"source": 38,
											"value": "5"
										},
										{
											"begin": 6315,
											"end": 6329,
											"name": "SHL",
											"source": 38
										},
										{
											"begin": 6331,
											"end": 6335,
											"name": "PUSH",
											"source": 38,
											"value": "20"
										},
										{
											"begin": 6311,
											"end": 6336,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 6311,
											"end": 6336,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 6151,
											"end": 6342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 6347,
											"end": 8857,
											"name": "tag",
											"source": 38,
											"value": "99"
										},
										{
											"begin": 6347,
											"end": 8857,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 6517,
											"end": 6526,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "436"
										},
										{
											"begin": 6568,
											"end": 6623,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "437"
										},
										{
											"begin": 6616,
											"end": 6622,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 6568,
											"end": 6623,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "377"
										},
										{
											"begin": 6568,
											"end": 6623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 6568,
											"end": 6623,
											"name": "tag",
											"source": 38,
											"value": "437"
										},
										{
											"begin": 6568,
											"end": 6623,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 6552,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "376"
										},
										{
											"begin": 6552,
											"end": 6624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 6552,
											"end": 6624,
											"name": "tag",
											"source": 38,
											"value": "436"
										},
										{
											"begin": 6552,
											"end": 6624,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 6658,
											"end": 6677,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 6658,
											"end": 6677,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 6658,
											"end": 6677,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 6696,
											"end": 6700,
											"name": "PUSH",
											"source": 38,
											"value": "20"
										},
										{
											"begin": 6716,
											"end": 6728,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 6716,
											"end": 6728,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 6716,
											"end": 6728,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 6716,
											"end": 6728,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 6646,
											"end": 6649,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 6747,
											"end": 6748,
											"name": "PUSH",
											"source": 38,
											"value": "5"
										},
										{
											"begin": 6782,
											"end": 6797,
											"name": "DUP7",
											"source": 38
										},
										{
											"begin": 6782,
											"end": 6797,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 6782,
											"end": 6797,
											"name": "SHL",
											"source": 38
										},
										{
											"begin": 6771,
											"end": 6798,
											"name": "DUP7",
											"source": 38
										},
										{
											"begin": 6771,
											"end": 6798,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 6821,
											"end": 6835,
											"name": "CALLDATASIZE",
											"source": 38
										},
										{
											"begin": 6810,
											"end": 6836,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 6810,
											"end": 6836,
											"name": "GT",
											"source": 38
										},
										{
											"begin": 6807,
											"end": 6853,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 6807,
											"end": 6853,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "438"
										},
										{
											"begin": 6807,
											"end": 6853,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 6849,
											"end": 6850,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 6846,
											"end": 6847,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 6839,
											"end": 6851,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 6807,
											"end": 6853,
											"name": "tag",
											"source": 38,
											"value": "438"
										},
										{
											"begin": 6807,
											"end": 6853,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 6873,
											"end": 6878,
											"name": "DUP7",
											"source": 38
										},
										{
											"begin": 6887,
											"end": 8824,
											"name": "tag",
											"source": 38,
											"value": "439"
										},
										{
											"begin": 6887,
											"end": 8824,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 6903,
											"end": 6909,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 6898,
											"end": 6901,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 6895,
											"end": 6910,
											"name": "LT",
											"source": 38
										},
										{
											"begin": 6887,
											"end": 8824,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 6887,
											"end": 8824,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "441"
										},
										{
											"begin": 6887,
											"end": 8824,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 6989,
											"end": 6992,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 6976,
											"end": 6993,
											"name": "CALLDATALOAD",
											"source": 38
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "PUSH",
											"source": 38,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7066,
											"end": 7068,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 7053,
											"end": 7064,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 7050,
											"end": 7069,
											"name": "GT",
											"source": 38
										},
										{
											"begin": 7047,
											"end": 7156,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 7047,
											"end": 7156,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "442"
										},
										{
											"begin": 7047,
											"end": 7156,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 7110,
											"end": 7111,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 7139,
											"end": 7141,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 7135,
											"end": 7137,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 7128,
											"end": 7142,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 7047,
											"end": 7156,
											"name": "tag",
											"source": 38,
											"value": "442"
										},
										{
											"begin": 7047,
											"end": 7156,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 7190,
											"end": 7201,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 7183,
											"end": 7188,
											"name": "DUP11",
											"source": 38
										},
										{
											"begin": 7179,
											"end": 7202,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 7169,
											"end": 7202,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 7169,
											"end": 7202,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 7247,
											"end": 7251,
											"name": "PUSH",
											"source": 38,
											"value": "60"
										},
										{
											"begin": 7242,
											"end": 7244,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 7226,
											"end": 7240,
											"name": "CALLDATASIZE",
											"source": 38
										},
										{
											"begin": 7222,
											"end": 7245,
											"name": "SUB",
											"source": 38
										},
										{
											"begin": 7218,
											"end": 7252,
											"name": "SLT",
											"source": 38
										},
										{
											"begin": 7215,
											"end": 7339,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 7215,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "443"
										},
										{
											"begin": 7215,
											"end": 7339,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 7293,
											"end": 7294,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 7322,
											"end": 7324,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 7318,
											"end": 7320,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 7311,
											"end": 7325,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 7215,
											"end": 7339,
											"name": "tag",
											"source": 38,
											"value": "443"
										},
										{
											"begin": 7215,
											"end": 7339,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 7367,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "444"
										},
										{
											"begin": 7367,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "375"
										},
										{
											"begin": 7367,
											"end": 7389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 7367,
											"end": 7389,
											"name": "tag",
											"source": 38,
											"value": "444"
										},
										{
											"begin": 7367,
											"end": 7389,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 7418,
											"end": 7440,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "445"
										},
										{
											"begin": 7437,
											"end": 7439,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 7418,
											"end": 7440,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "371"
										},
										{
											"begin": 7418,
											"end": 7440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 7418,
											"end": 7440,
											"name": "tag",
											"source": 38,
											"value": "445"
										},
										{
											"begin": 7418,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 7409,
											"end": 7416,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 7402,
											"end": 7441,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 7490,
											"end": 7492,
											"name": "DUP7",
											"source": 38
										},
										{
											"begin": 7486,
											"end": 7488,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 7482,
											"end": 7493,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 7469,
											"end": 7494,
											"name": "CALLDATALOAD",
											"source": 38
										},
										{
											"begin": 7529,
											"end": 7530,
											"name": "PUSH",
											"source": 38,
											"value": "3"
										},
										{
											"begin": 7520,
											"end": 7527,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 7517,
											"end": 7531,
											"name": "LT",
											"source": 38
										},
										{
											"begin": 7507,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "446"
										},
										{
											"begin": 7507,
											"end": 7619,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 7573,
											"end": 7574,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 7602,
											"end": 7604,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 7598,
											"end": 7600,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 7591,
											"end": 7605,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 7507,
											"end": 7619,
											"name": "tag",
											"source": 38,
											"value": "446"
										},
										{
											"begin": 7507,
											"end": 7619,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 7639,
											"end": 7655,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 7639,
											"end": 7655,
											"name": "DUP9",
											"source": 38
										},
										{
											"begin": 7639,
											"end": 7655,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 7632,
											"end": 7665,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 7688,
											"end": 7690,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 7730,
											"end": 7741,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 7730,
											"end": 7741,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 7730,
											"end": 7741,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 7717,
											"end": 7742,
											"name": "CALLDATALOAD",
											"source": 38
										},
										{
											"begin": 7758,
											"end": 7772,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 7758,
											"end": 7772,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 7758,
											"end": 7772,
											"name": "GT",
											"source": 38
										},
										{
											"begin": 7755,
											"end": 7859,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 7755,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "447"
										},
										{
											"begin": 7755,
											"end": 7859,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 7813,
											"end": 7814,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 7842,
											"end": 7844,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 7838,
											"end": 7840,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 7831,
											"end": 7845,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 7755,
											"end": 7859,
											"name": "tag",
											"source": 38,
											"value": "447"
										},
										{
											"begin": 7755,
											"end": 7859,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 7883,
											"end": 7898,
											"name": "SWAP4",
											"source": 38
										},
										{
											"begin": 7883,
											"end": 7898,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 7883,
											"end": 7898,
											"name": "SWAP4",
											"source": 38
										},
										{
											"begin": 7883,
											"end": 7898,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 7883,
											"end": 7898,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": 7941,
											"end": 7955,
											"name": "CALLDATASIZE",
											"source": 38
										},
										{
											"begin": 7934,
											"end": 7938,
											"name": "PUSH",
											"source": 38,
											"value": "1F"
										},
										{
											"begin": 7925,
											"end": 7939,
											"name": "DUP6",
											"source": 38
										},
										{
											"begin": 7925,
											"end": 7939,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 7921,
											"end": 7956,
											"name": "SLT",
											"source": 38
										},
										{
											"begin": 7911,
											"end": 8047,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "448"
										},
										{
											"begin": 7911,
											"end": 8047,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 7999,
											"end": 8000,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 7988,
											"end": 8000,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": 7988,
											"end": 8000,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 8029,
											"end": 8032,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 8024,
											"end": 8027,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 8017,
											"end": 8033,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 7911,
											"end": 8047,
											"name": "tag",
											"source": 38,
											"value": "448"
										},
										{
											"begin": 7911,
											"end": 8047,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 8084,
											"end": 8087,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 8071,
											"end": 8088,
											"name": "CALLDATALOAD",
											"source": 38
										},
										{
											"begin": 8060,
											"end": 8088,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": 8060,
											"end": 8088,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 8114,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "449"
										},
										{
											"begin": 8130,
											"end": 8182,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "437"
										},
										{
											"begin": 8178,
											"end": 8181,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 8130,
											"end": 8182,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "377"
										},
										{
											"begin": 8130,
											"end": 8182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 8114,
											"end": 8183,
											"name": "tag",
											"source": 38,
											"value": "449"
										},
										{
											"begin": 8114,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 8227,
											"end": 8245,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 8227,
											"end": 8245,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 8227,
											"end": 8245,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 8323,
											"end": 8335,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": 8323,
											"end": 8335,
											"name": "DUP8",
											"source": 38
										},
										{
											"begin": 8323,
											"end": 8335,
											"name": "SHL",
											"source": 38
										},
										{
											"begin": 8314,
											"end": 8336,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 8314,
											"end": 8336,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 8310,
											"end": 8341,
											"name": "DUP9",
											"source": 38
										},
										{
											"begin": 8310,
											"end": 8341,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 8310,
											"end": 8341,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": 8267,
											"end": 8281,
											"name": "DUP9",
											"source": 38
										},
										{
											"begin": 8267,
											"end": 8281,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 8267,
											"end": 8281,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 8267,
											"end": 8281,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 8370,
											"end": 8384,
											"name": "CALLDATASIZE",
											"source": 38
										},
										{
											"begin": 8357,
											"end": 8385,
											"name": "DUP6",
											"source": 38
										},
										{
											"begin": 8357,
											"end": 8385,
											"name": "GT",
											"source": 38
										},
										{
											"begin": 8354,
											"end": 8475,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 8354,
											"end": 8475,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "451"
										},
										{
											"begin": 8354,
											"end": 8475,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 8427,
											"end": 8428,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 8457,
											"end": 8460,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 8452,
											"end": 8455,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 8445,
											"end": 8461,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 8354,
											"end": 8475,
											"name": "tag",
											"source": 38,
											"value": "451"
										},
										{
											"begin": 8354,
											"end": 8475,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 8501,
											"end": 8513,
											"name": "SWAP5",
											"source": 38
										},
										{
											"begin": 8501,
											"end": 8513,
											"name": "DUP10",
											"source": 38
										},
										{
											"begin": 8501,
											"end": 8513,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 8501,
											"end": 8513,
											"name": "SWAP5",
											"source": 38
										},
										{
											"begin": 8526,
											"end": 8705,
											"name": "tag",
											"source": 38,
											"value": "452"
										},
										{
											"begin": 8526,
											"end": 8705,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 8544,
											"end": 8552,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 8537,
											"end": 8542,
											"name": "DUP7",
											"source": 38
										},
										{
											"begin": 8534,
											"end": 8553,
											"name": "LT",
											"source": 38
										},
										{
											"begin": 8526,
											"end": 8705,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 8526,
											"end": 8705,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "454"
										},
										{
											"begin": 8526,
											"end": 8705,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 8626,
											"end": 8650,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "455"
										},
										{
											"begin": 8644,
											"end": 8649,
											"name": "DUP7",
											"source": 38
										},
										{
											"begin": 8626,
											"end": 8650,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "370"
										},
										{
											"begin": 8626,
											"end": 8650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 8626,
											"end": 8650,
											"name": "tag",
											"source": 38,
											"value": "455"
										},
										{
											"begin": 8626,
											"end": 8650,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 8612,
											"end": 8651,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 8612,
											"end": 8651,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 8565,
											"end": 8579,
											"name": "SWAP5",
											"source": 38
										},
										{
											"begin": 8565,
											"end": 8579,
											"name": "DUP10",
											"source": 38
										},
										{
											"begin": 8565,
											"end": 8579,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 8565,
											"end": 8579,
											"name": "SWAP5",
											"source": 38
										},
										{
											"begin": 8677,
											"end": 8691,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 8677,
											"end": 8691,
											"name": "DUP10",
											"source": 38
										},
										{
											"begin": 8677,
											"end": 8691,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 8677,
											"end": 8691,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 8526,
											"end": 8705,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "452"
										},
										{
											"begin": 8526,
											"end": 8705,
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 8526,
											"end": 8705,
											"name": "tag",
											"source": 38,
											"value": "454"
										},
										{
											"begin": 8526,
											"end": 8705,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 8725,
											"end": 8741,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 8725,
											"end": 8741,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 8725,
											"end": 8741,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 8718,
											"end": 8749,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 8718,
											"end": 8749,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 8718,
											"end": 8749,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 8718,
											"end": 8749,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8762,
											"end": 8782,
											"name": "DUP9",
											"source": 38
										},
										{
											"begin": 8762,
											"end": 8782,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8802,
											"end": 8814,
											"name": "SWAP5",
											"source": 38
										},
										{
											"begin": 8802,
											"end": 8814,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 8802,
											"end": 8814,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 8802,
											"end": 8814,
											"name": "SWAP5",
											"source": 38
										},
										{
											"begin": 6920,
											"end": 6932,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 6920,
											"end": 6932,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 6887,
											"end": 8824,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "439"
										},
										{
											"begin": 6887,
											"end": 8824,
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 6887,
											"end": 8824,
											"name": "tag",
											"source": 38,
											"value": "441"
										},
										{
											"begin": 6887,
											"end": 8824,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8846,
											"end": 8851,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": 8846,
											"end": 8851,
											"name": "SWAP8",
											"source": 38
										},
										{
											"begin": 6347,
											"end": 8857,
											"name": "SWAP7",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6347,
											"end": 8857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 8862,
											"end": 8989,
											"name": "tag",
											"source": 38,
											"value": "378"
										},
										{
											"begin": 8862,
											"end": 8989,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 8923,
											"end": 8933,
											"name": "PUSH",
											"source": 38,
											"value": "4E487B71"
										},
										{
											"begin": 8918,
											"end": 8921,
											"name": "PUSH",
											"source": 38,
											"value": "E0"
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "SHL",
											"source": 38
										},
										{
											"begin": 8911,
											"end": 8912,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 8904,
											"end": 8935,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 8954,
											"end": 8958,
											"name": "PUSH",
											"source": 38,
											"value": "11"
										},
										{
											"begin": 8951,
											"end": 8952,
											"name": "PUSH",
											"source": 38,
											"value": "4"
										},
										{
											"begin": 8944,
											"end": 8959,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 8978,
											"end": 8982,
											"name": "PUSH",
											"source": 38,
											"value": "24"
										},
										{
											"begin": 8975,
											"end": 8976,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8983,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 8994,
											"end": 9129,
											"name": "tag",
											"source": 38,
											"value": "118"
										},
										{
											"begin": 8994,
											"end": 9129,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 9033,
											"end": 9036,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 9054,
											"end": 9071,
											"name": "PUSH",
											"source": 38,
											"value": "1"
										},
										{
											"begin": 9054,
											"end": 9071,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 9054,
											"end": 9071,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 9051,
											"end": 9094,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "459"
										},
										{
											"begin": 9051,
											"end": 9094,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 9074,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "459"
										},
										{
											"begin": 9074,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "378"
										},
										{
											"begin": 9074,
											"end": 9092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 9074,
											"end": 9092,
											"name": "tag",
											"source": 38,
											"value": "459"
										},
										{
											"begin": 9074,
											"end": 9092,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9121,
											"end": 9122,
											"name": "PUSH",
											"source": 38,
											"value": "1"
										},
										{
											"begin": 9110,
											"end": 9123,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 9110,
											"end": 9123,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 8994,
											"end": 9129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 9134,
											"end": 9261,
											"name": "tag",
											"source": 38,
											"value": "125"
										},
										{
											"begin": 9134,
											"end": 9261,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 9195,
											"end": 9205,
											"name": "PUSH",
											"source": 38,
											"value": "4E487B71"
										},
										{
											"begin": 9190,
											"end": 9193,
											"name": "PUSH",
											"source": 38,
											"value": "E0"
										},
										{
											"begin": 9186,
											"end": 9206,
											"name": "SHL",
											"source": 38
										},
										{
											"begin": 9183,
											"end": 9184,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 9176,
											"end": 9207,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 9226,
											"end": 9230,
											"name": "PUSH",
											"source": 38,
											"value": "32"
										},
										{
											"begin": 9223,
											"end": 9224,
											"name": "PUSH",
											"source": 38,
											"value": "4"
										},
										{
											"begin": 9216,
											"end": 9231,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 9250,
											"end": 9254,
											"name": "PUSH",
											"source": 38,
											"value": "24"
										},
										{
											"begin": 9247,
											"end": 9248,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 9240,
											"end": 9255,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 9266,
											"end": 9441,
											"name": "tag",
											"source": 38,
											"value": "178"
										},
										{
											"begin": 9266,
											"end": 9441,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 9303,
											"end": 9306,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 9347,
											"end": 9351,
											"name": "PUSH",
											"source": 38,
											"value": "FF"
										},
										{
											"begin": 9340,
											"end": 9345,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 9336,
											"end": 9352,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 9376,
											"end": 9380,
											"name": "PUSH",
											"source": 38,
											"value": "FF"
										},
										{
											"begin": 9367,
											"end": 9374,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 9364,
											"end": 9381,
											"name": "SUB",
											"source": 38
										},
										{
											"begin": 9361,
											"end": 9404,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "463"
										},
										{
											"begin": 9361,
											"end": 9404,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 9384,
											"end": 9402,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "463"
										},
										{
											"begin": 9384,
											"end": 9402,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "378"
										},
										{
											"begin": 9384,
											"end": 9402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 9384,
											"end": 9402,
											"name": "tag",
											"source": 38,
											"value": "463"
										},
										{
											"begin": 9384,
											"end": 9402,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 9433,
											"end": 9434,
											"name": "PUSH",
											"source": 38,
											"value": "1"
										},
										{
											"begin": 9420,
											"end": 9435,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 9420,
											"end": 9435,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": 9266,
											"end": 9441,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9266,
											"end": 9441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 9446,
											"end": 9573,
											"name": "tag",
											"source": 38,
											"value": "264"
										},
										{
											"begin": 9446,
											"end": 9573,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 9507,
											"end": 9517,
											"name": "PUSH",
											"source": 38,
											"value": "4E487B71"
										},
										{
											"begin": 9502,
											"end": 9505,
											"name": "PUSH",
											"source": 38,
											"value": "E0"
										},
										{
											"begin": 9498,
											"end": 9518,
											"name": "SHL",
											"source": 38
										},
										{
											"begin": 9495,
											"end": 9496,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 9488,
											"end": 9519,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 9538,
											"end": 9542,
											"name": "PUSH",
											"source": 38,
											"value": "21"
										},
										{
											"begin": 9535,
											"end": 9536,
											"name": "PUSH",
											"source": 38,
											"value": "4"
										},
										{
											"begin": 9528,
											"end": 9543,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 9562,
											"end": 9566,
											"name": "PUSH",
											"source": 38,
											"value": "24"
										},
										{
											"begin": 9559,
											"end": 9560,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 9552,
											"end": 9567,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 9578,
											"end": 9828,
											"name": "tag",
											"source": 38,
											"value": "379"
										},
										{
											"begin": 9578,
											"end": 9828,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 9663,
											"end": 9664,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 9673,
											"end": 9786,
											"name": "tag",
											"source": 38,
											"value": "466"
										},
										{
											"begin": 9673,
											"end": 9786,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 9687,
											"end": 9693,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 9684,
											"end": 9685,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 9681,
											"end": 9694,
											"name": "LT",
											"source": 38
										},
										{
											"begin": 9673,
											"end": 9786,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 9673,
											"end": 9786,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "468"
										},
										{
											"begin": 9673,
											"end": 9786,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 9763,
											"end": 9774,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 9763,
											"end": 9774,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 9763,
											"end": 9774,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 9757,
											"end": 9775,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": 9744,
											"end": 9755,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 9744,
											"end": 9755,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 9744,
											"end": 9755,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 9737,
											"end": 9776,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 9709,
											"end": 9711,
											"name": "PUSH",
											"source": 38,
											"value": "20"
										},
										{
											"begin": 9702,
											"end": 9712,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 9673,
											"end": 9786,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "466"
										},
										{
											"begin": 9673,
											"end": 9786,
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 9673,
											"end": 9786,
											"name": "tag",
											"source": 38,
											"value": "468"
										},
										{
											"begin": 9673,
											"end": 9786,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9820,
											"end": 9821,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 9802,
											"end": 9818,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 9802,
											"end": 9818,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 9795,
											"end": 9822,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 9578,
											"end": 9828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 9833,
											"end": 10103,
											"name": "tag",
											"source": 38,
											"value": "380"
										},
										{
											"begin": 9833,
											"end": 10103,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 9874,
											"end": 9877,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 9912,
											"end": 9917,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": 9939,
											"end": 9945,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 9934,
											"end": 9937,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 9927,
											"end": 9946,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "470"
										},
										{
											"begin": 10024,
											"end": 10030,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 10017,
											"end": 10021,
											"name": "PUSH",
											"source": 38,
											"value": "20"
										},
										{
											"begin": 10012,
											"end": 10015,
											"name": "DUP7",
											"source": 38
										},
										{
											"begin": 10008,
											"end": 10022,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 10001,
											"end": 10005,
											"name": "PUSH",
											"source": 38,
											"value": "20"
										},
										{
											"begin": 9994,
											"end": 9999,
											"name": "DUP7",
											"source": 38
										},
										{
											"begin": 9990,
											"end": 10006,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "379"
										},
										{
											"begin": 9955,
											"end": 10031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "tag",
											"source": 38,
											"value": "470"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 10085,
											"end": 10087,
											"name": "PUSH",
											"source": 38,
											"value": "1F"
										},
										{
											"begin": 10064,
											"end": 10079,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10060,
											"end": 10089,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 10051,
											"end": 10090,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": 10051,
											"end": 10090,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 10051,
											"end": 10090,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": 10051,
											"end": 10090,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 10092,
											"end": 10096,
											"name": "PUSH",
											"source": 38,
											"value": "20"
										},
										{
											"begin": 10047,
											"end": 10097,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 10047,
											"end": 10097,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": 9833,
											"end": 10103,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9833,
											"end": 10103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 10108,
											"end": 11736,
											"name": "tag",
											"source": 38,
											"value": "289"
										},
										{
											"begin": 10108,
											"end": 11736,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 10376,
											"end": 10380,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 10405,
											"end": 10407,
											"name": "PUSH",
											"source": 38,
											"value": "60"
										},
										{
											"begin": 10445,
											"end": 10447,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 10434,
											"end": 10443,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 10430,
											"end": 10448,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 10475,
											"end": 10477,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 10464,
											"end": 10473,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 10457,
											"end": 10478,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 10498,
											"end": 10504,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 10533,
											"end": 10539,
											"name": "DUP8",
											"source": 38
										},
										{
											"begin": 10527,
											"end": 10540,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": 10564,
											"end": 10570,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 10556,
											"end": 10562,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 10549,
											"end": 10571,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 10602,
											"end": 10605,
											"name": "PUSH",
											"source": 38,
											"value": "80"
										},
										{
											"begin": 10591,
											"end": 10600,
											"name": "DUP7",
											"source": 38
										},
										{
											"begin": 10587,
											"end": 10606,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 10580,
											"end": 10606,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 10580,
											"end": 10606,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 10665,
											"end": 10668,
											"name": "PUSH",
											"source": 38,
											"value": "80"
										},
										{
											"begin": 10655,
											"end": 10661,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 10652,
											"end": 10653,
											"name": "PUSH",
											"source": 38,
											"value": "5"
										},
										{
											"begin": 10648,
											"end": 10662,
											"name": "SHL",
											"source": 38
										},
										{
											"begin": 10637,
											"end": 10646,
											"name": "DUP8",
											"source": 38
										},
										{
											"begin": 10633,
											"end": 10663,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 10629,
											"end": 10669,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 10615,
											"end": 10669,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": 10615,
											"end": 10669,
											"name": "POP",
											"source": 38
										},
										{
											"begin": 10688,
											"end": 10692,
											"name": "PUSH",
											"source": 38,
											"value": "20"
										},
										{
											"begin": 10727,
											"end": 10729,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 10719,
											"end": 10725,
											"name": "DUP11",
											"source": 38
										},
										{
											"begin": 10715,
											"end": 10730,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 10748,
											"end": 10749,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 10769,
											"end": 10770,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 10779,
											"end": 11565,
											"name": "tag",
											"source": 38,
											"value": "472"
										},
										{
											"begin": 10779,
											"end": 11565,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 10795,
											"end": 10801,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 10790,
											"end": 10793,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 10787,
											"end": 10802,
											"name": "LT",
											"source": 38
										},
										{
											"begin": 10779,
											"end": 11565,
											"name": "ISZERO",
											"source": 38
										},
										{
											"begin": 10779,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "474"
										},
										{
											"begin": 10779,
											"end": 11565,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": 10864,
											"end": 10886,
											"name": "DUP10",
											"source": 38
										},
										{
											"begin": 10864,
											"end": 10886,
											"name": "DUP8",
											"source": 38
										},
										{
											"begin": 10864,
											"end": 10886,
											"name": "SUB",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10860,
											"end": 10897,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 10848,
											"end": 10898,
											"name": "DUP7",
											"source": 38
										},
										{
											"begin": 10848,
											"end": 10898,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 10921,
											"end": 10934,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 10921,
											"end": 10934,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": 10966,
											"end": 10975,
											"name": "DUP1",
											"source": 38
										},
										{
											"begin": 10966,
											"end": 10975,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10962,
											"end": 10997,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 10947,
											"end": 10998,
											"name": "DUP9",
											"source": 38
										},
										{
											"begin": 10947,
											"end": 10998,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 11037,
											"end": 11048,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 11037,
											"end": 11048,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 11037,
											"end": 11048,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 11031,
											"end": 11049,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": 11089,
											"end": 11090,
											"name": "PUSH",
											"source": 38,
											"value": "3"
										},
										{
											"begin": 11072,
											"end": 11091,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 11072,
											"end": 11091,
											"name": "LT",
											"source": 38
										},
										{
											"begin": 11062,
											"end": 11232,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "475"
										},
										{
											"begin": 11062,
											"end": 11232,
											"name": "JUMPI",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11123,
											"end": 11154,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 11123,
											"end": 11154,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 11181,
											"end": 11185,
											"name": "PUSH",
											"source": 38,
											"value": "21"
										},
										{
											"begin": 11178,
											"end": 11179,
											"name": "PUSH",
											"source": 38,
											"value": "4"
										},
										{
											"begin": 11171,
											"end": 11186,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 11213,
											"end": 11217,
											"name": "PUSH",
											"source": 38,
											"value": "24"
										},
										{
											"begin": 11130,
											"end": 11131,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 11203,
											"end": 11218,
											"name": "REVERT",
											"source": 38
										},
										{
											"begin": 11062,
											"end": 11232,
											"name": "tag",
											"source": 38,
											"value": "475"
										},
										{
											"begin": 11062,
											"end": 11232,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 11252,
											"end": 11267,
											"name": "DUP9",
											"source": 38
										},
										{
											"begin": 11252,
											"end": 11267,
											"name": "DUP7",
											"source": 38
										},
										{
											"begin": 11252,
											"end": 11267,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 11245,
											"end": 11282,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 11305,
											"end": 11309,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 11350,
											"end": 11361,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 11350,
											"end": 11361,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 11350,
											"end": 11361,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 11344,
											"end": 11362,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": 11382,
											"end": 11397,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 11382,
											"end": 11397,
											"name": "DUP9",
											"source": 38
										},
										{
											"begin": 11382,
											"end": 11397,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 11375,
											"end": 11402,
											"name": "DUP10",
											"source": 38
										},
										{
											"begin": 11375,
											"end": 11402,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 11375,
											"end": 11402,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 11425,
											"end": 11485,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "476"
										},
										{
											"begin": 11469,
											"end": 11484,
											"name": "DUP10",
											"source": 38
										},
										{
											"begin": 11469,
											"end": 11484,
											"name": "DUP10",
											"source": 38
										},
										{
											"begin": 11469,
											"end": 11484,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 11344,
											"end": 11362,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 11425,
											"end": 11485,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "374"
										},
										{
											"begin": 11425,
											"end": 11485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 11425,
											"end": 11485,
											"name": "tag",
											"source": 38,
											"value": "476"
										},
										{
											"begin": 11425,
											"end": 11485,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 11415,
											"end": 11485,
											"name": "SWAP8",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11543,
											"end": 11555,
											"name": "SWAP5",
											"source": 38
										},
										{
											"begin": 11543,
											"end": 11555,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 11543,
											"end": 11555,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 11543,
											"end": 11555,
											"name": "SWAP5",
											"source": 38
										},
										{
											"begin": 11508,
											"end": 11523,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 11508,
											"end": 11523,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 11508,
											"end": 11523,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 11508,
											"end": 11523,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 10821,
											"end": 10822,
											"name": "PUSH",
											"source": 38,
											"value": "1"
										},
										{
											"begin": 10812,
											"end": 10823,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 10779,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "472"
										},
										{
											"begin": 10779,
											"end": 11565,
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 10779,
											"end": 11565,
											"name": "tag",
											"source": 38,
											"value": "474"
										},
										{
											"begin": 10779,
											"end": 11565,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2184,
											"end": 2215,
											"name": "DUP10",
											"source": 38
										},
										{
											"begin": 2184,
											"end": 2215,
											"name": "AND",
											"source": 38
										},
										{
											"begin": 11601,
											"end": 11619,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 11601,
											"end": 11619,
											"name": "DUP8",
											"source": 38
										},
										{
											"begin": 11601,
											"end": 11619,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 2172,
											"end": 2216,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11658,
											"end": 11680,
											"name": "DUP4",
											"source": 38
										},
										{
											"begin": 11658,
											"end": 11680,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 11658,
											"end": 11680,
											"name": "SUB",
											"source": 38
										},
										{
											"begin": 11651,
											"end": 11655,
											"name": "PUSH",
											"source": 38,
											"value": "40"
										},
										{
											"begin": 11636,
											"end": 11656,
											"name": "DUP6",
											"source": 38
										},
										{
											"begin": 11636,
											"end": 11656,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 11629,
											"end": 11681,
											"name": "MSTORE",
											"source": 38
										},
										{
											"begin": 11698,
											"end": 11730,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "478"
										},
										{
											"begin": 11662,
											"end": 11668,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 11715,
											"end": 11721,
											"name": "DUP7",
											"source": 38
										},
										{
											"begin": 11698,
											"end": 11730,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "380"
										},
										{
											"begin": 11698,
											"end": 11730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 11698,
											"end": 11730,
											"name": "tag",
											"source": 38,
											"value": "478"
										},
										{
											"begin": 11698,
											"end": 11730,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 11690,
											"end": 11730,
											"name": "SWAP8",
											"source": 38
										},
										{
											"begin": 10108,
											"end": 11736,
											"name": "SWAP7",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10108,
											"end": 11736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 11741,
											"end": 12028,
											"name": "tag",
											"source": 38,
											"value": "354"
										},
										{
											"begin": 11741,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 11870,
											"end": 11873,
											"name": "PUSH",
											"source": 38,
											"value": "0"
										},
										{
											"begin": 11908,
											"end": 11914,
											"name": "DUP3",
											"source": 38
										},
										{
											"begin": 11902,
											"end": 11915,
											"name": "MLOAD",
											"source": 38
										},
										{
											"begin": 11924,
											"end": 11990,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "480"
										},
										{
											"begin": 11983,
											"end": 11989,
											"name": "DUP2",
											"source": 38
										},
										{
											"begin": 11978,
											"end": 11981,
											"name": "DUP5",
											"source": 38
										},
										{
											"begin": 11971,
											"end": 11975,
											"name": "PUSH",
											"source": 38,
											"value": "20"
										},
										{
											"begin": 11963,
											"end": 11969,
											"name": "DUP8",
											"source": 38
										},
										{
											"begin": 11959,
											"end": 11976,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 11924,
											"end": 11990,
											"name": "PUSH [tag]",
											"source": 38,
											"value": "379"
										},
										{
											"begin": 11924,
											"end": 11990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 38
										},
										{
											"begin": 11924,
											"end": 11990,
											"name": "tag",
											"source": 38,
											"value": "480"
										},
										{
											"begin": 11924,
											"end": 11990,
											"name": "JUMPDEST",
											"source": 38
										},
										{
											"begin": 12006,
											"end": 12022,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 12006,
											"end": 12022,
											"name": "SWAP1",
											"source": 38
										},
										{
											"begin": 12006,
											"end": 12022,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": 12006,
											"end": 12022,
											"name": "ADD",
											"source": 38
										},
										{
											"begin": 12006,
											"end": 12022,
											"name": "SWAP3",
											"source": 38
										},
										{
											"begin": 11741,
											"end": 12028,
											"name": "SWAP2",
											"source": 38
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11741,
											"end": 12028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 38
										}
									],
									".data": {
										"A5E74BF718C7D6929BF8F422C8BE92118782759ABAC1BF7601C5A938D6F306A1": "177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc94",
										"B4A3F1194FF204DF3421C76163FF361A7821792777BFC1DCB14FA8D3EB97E7F5": "177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc93"
									}
								}
							},
							"sourceList": [
								"abstracts/ERC2535.sol",
								"diamonds/Diamond.sol",
								"imports/solidstate/contracts/access/ownable/IOwnable.sol",
								"imports/solidstate/contracts/access/ownable/IOwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/ISafeOwnable.sol",
								"imports/solidstate/contracts/access/ownable/ISafeOwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/Ownable.sol",
								"imports/solidstate/contracts/access/ownable/OwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/OwnableStorage.sol",
								"imports/solidstate/contracts/access/ownable/SafeOwnable.sol",
								"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/SafeOwnableStorage.sol",
								"imports/solidstate/contracts/interfaces/IERC165.sol",
								"imports/solidstate/contracts/interfaces/IERC165Internal.sol",
								"imports/solidstate/contracts/interfaces/IERC173.sol",
								"imports/solidstate/contracts/interfaces/IERC173Internal.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/ERC165Base.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/IERC165Base.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol",
								"imports/solidstate/contracts/proxy/IProxy.sol",
								"imports/solidstate/contracts/proxy/Proxy.sol",
								"imports/solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol",
								"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol",
								"imports/solidstate/contracts/proxy/diamond/base/DiamondBase.sol",
								"imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol",
								"imports/solidstate/contracts/proxy/diamond/base/IDiamondBase.sol",
								"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol",
								"imports/solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol",
								"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol",
								"imports/solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol",
								"imports/solidstate/contracts/utils/AddressUtils.sol",
								"imports/solidstate/contracts/utils/UintUtils.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": "1f931c1c",
							"facetAddress(bytes4)": "cdffacc6",
							"facetAddresses()": "52ef6b2c",
							"facetFunctionSelectors(address)": "adfca15e",
							"facets()": "7a0ed627",
							"getFallbackAddress()": "2c408059",
							"nomineeOwner()": "8ab5150a",
							"owner()": "8da5cb5b",
							"setFallbackAddress(address)": "91423765",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DiamondWritable__InvalidInitializationParameters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__RemoveTargetNotZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__ReplaceTargetIsIdentical\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorAlreadyAdded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorIsImmutable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__TargetHasNoCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC165Base__InvalidInterfaceId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Proxy__ImplementationIsNotContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeOwnable__NotNomineeOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondWritableInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamondWritableInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondWritableInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondWritableInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"diamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"facetAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"facet\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facetAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"facet\",\"type\":\"address\"}],\"name\":\"facetFunctionSelectors\",\"outputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondReadable.Facet[]\",\"name\":\"diamondFacets\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFallbackAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"fallbackAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nomineeOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fallbackAddress\",\"type\":\"address\"}],\"name\":\"setFallbackAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"params\":{\"data\":\"optional initialization function call data\",\"facetCuts\":\"array of structured Diamond facet update data\",\"target\":\"optional target of initialization delegatecall\"}},\"facetAddress(bytes4)\":{\"params\":{\"selector\":\"function selector to query\"},\"returns\":{\"facet\":\"facet address (zero address if not found)\"}},\"facetAddresses()\":{\"returns\":{\"addresses\":\"array of facet addresses\"}},\"facetFunctionSelectors(address)\":{\"params\":{\"facet\":\"address of facet to query\"},\"returns\":{\"selectors\":\"array of function selectors\"}},\"facets()\":{\"returns\":{\"diamondFacets\":\"array of structured facet data\"}},\"getFallbackAddress()\":{\"returns\":{\"fallbackAddress\":\"address of fallback implementation\"}},\"owner()\":{\"returns\":{\"_0\":\"contract owner\"}},\"setFallbackAddress(address)\":{\"params\":{\"fallbackAddress\":\"address of fallback implementation\"}},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"interface id\"},\"returns\":{\"_0\":\"bool whether interface is supported\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"accept transfer of contract ownership\"},\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"notice\":\"update diamond facets and optionally execute arbitrary initialization function\"},\"facetAddress(bytes4)\":{\"notice\":\"get the address of the facet associated with given selector\"},\"facetAddresses()\":{\"notice\":\"get addresses of all facets used by diamond\"},\"facetFunctionSelectors(address)\":{\"notice\":\"get all selectors for given facet address\"},\"facets()\":{\"notice\":\"get all facets and their selectors\"},\"getFallbackAddress()\":{\"notice\":\"query the address of the fallback implementation\"},\"nomineeOwner()\":{\"notice\":\"get the nominated owner who has permission to call acceptOwnership\"},\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"setFallbackAddress(address)\":{\"notice\":\"set the address of the fallback implementation\"},\"supportsInterface(bytes4)\":{\"notice\":\"query whether contract has registered support for given interface\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"}},\"notice\":\"ref https://eips.ethereum.org/EIPS/eip-2535#abstract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"diamonds/Diamond.sol\":\"Diamond\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"abstracts/ERC2535.sol\":{\"keccak256\":\"0x718ddecd62e0c40c6bcc2a9f0288f412b5ddda267203eaba937475939d762033\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ccd618925fceb5bb442fd1d2e7d667ef4e92aba4027d3ba3497328bcdf1b05\",\"dweb:/ipfs/QmbZtR8j8iiR1Xe22eLrJdwVBYkdabJ2XfQKGCP561WBrC\"]},\"diamonds/Diamond.sol\":{\"keccak256\":\"0x19c511c34db77b2ade5e4694cf6e87589e0d9950e3107e1ea64ec17b0288df6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96025d34ee045f076d30a2b11ef418ecf1d8028255a9471a0be42dc422924b48\",\"dweb:/ipfs/QmbmvKUuWLWzGwyq4Vvkf5DNMGkji7UTWQG6RMZ8adWwMg\"]},\"imports/solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0xee77272fcf35108e2103ebb4f5d68d46844c447d9d2e411f8f9136298ae1bc2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fef49f85af45dbadb55c259528e33fb91ecd74942305c101ee33120211b6dc0d\",\"dweb:/ipfs/QmVRVH7aWFQrSqWvku3E9LQAEar9L7bmxXrPoXLCpZDkLb\"]},\"imports/solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"]},\"imports/solidstate/contracts/access/ownable/ISafeOwnable.sol\":{\"keccak256\":\"0xfb9a7920498ab2bb3d493c292c40223eb3a6631431ea381ca39274b165c60102\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d720242e56f4aedf2975f4deba5ff4a177668d3b8c9c40c1a240a17a2f8a7c38\",\"dweb:/ipfs/QmfCcZ4ACMDULUjmPcrUNUY88i17pHYEkDFpxyKCcHsUP3\"]},\"imports/solidstate/contracts/access/ownable/ISafeOwnableInternal.sol\":{\"keccak256\":\"0xd5d44576a2f82b4ffdcf29feec6043e82436011784d92567a968609aa49a0f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43961ad59d89c044a403ebb3fdd8c9be9b01a59d5e549ef205423725dcfb9889\",\"dweb:/ipfs/QmeatkxGznGMCHXAz2CHTTSbk5HjUXzrjEtMc8CppNxnTZ\"]},\"imports/solidstate/contracts/access/ownable/Ownable.sol\":{\"keccak256\":\"0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc\",\"dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79\"]},\"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52\",\"dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF\"]},\"imports/solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995\",\"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM\"]},\"imports/solidstate/contracts/access/ownable/SafeOwnable.sol\":{\"keccak256\":\"0x84d5694ad1f6cc77170ec667b02080dca1ccdde26eddaf46960d95971df1a5f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd6b07d586dd3365884d48fb0dde9a46d03b4d5ee7508b1c817e261820bf29b9\",\"dweb:/ipfs/QmUwnEW2oK91S54MosgKk4YA44qhruMSFeGB6yLP58xByZ\"]},\"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":{\"keccak256\":\"0x1ab5cbb63b897d2bef48d4437ef9519fc15cd49ed976539c1d0fd262f087786f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e348b34065e6297fc7485f52d4671add3abc4c4329c9c907c30f315d91c80dd0\",\"dweb:/ipfs/Qmc7dvy2roTkJyi6G51Aoay8Mai7hGxBSBWHeXWSDwA9dL\"]},\"imports/solidstate/contracts/access/ownable/SafeOwnableStorage.sol\":{\"keccak256\":\"0x4818afb0b39e0770f881cbeaea1b1c77fba0daaa64bd8c1361d6e3a197628e93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db4cb17939eb9bf2d1ae1d8aec3c95495991a75b760a3ff211fb485ac4aeb1cb\",\"dweb:/ipfs/Qme93NCwDTb7B6MYCxLedZreEAjpEe9NCQFpPLsaT823jq\"]},\"imports/solidstate/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xc250e493770feaa0da8e5a55d241712c1c6526caa7d8df2455c3e5fa25124c0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://768e47d9ddeb15daeab0c8c1109ae43a4c2a0633bd9e4bf141488dfc9252f7ba\",\"dweb:/ipfs/QmWMTTRTncar9LptrxU7WK7WG5hHp8KsYnBGfm3cYowuP8\"]},\"imports/solidstate/contracts/interfaces/IERC165Internal.sol\":{\"keccak256\":\"0xf4d4708a60ed04887849509a258db49d4eb686f33214cb9c9643325cd8dae89d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66e7ade64c12edf7adbc0f20c1195b3c635ea2df67b836215441a4fe22ae17da\",\"dweb:/ipfs/QmUAbU31ZYg3FrKzXCk8CE1FbCg6LNoB5HpR4pU2QwZc7p\"]},\"imports/solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0xf1c1fbf0ec82110c29d549db1fbd8ec728ba0b995dc5f087e0a5464243135dce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16c7f3eba0547576833d0c1fddb7ec34aeba4f28b4ce9e878c3bd3ebc9c8d3d1\",\"dweb:/ipfs/Qme79eYLo7dinnhotgC4bvYnCg4doBDShHeCajrf5zpAUF\"]},\"imports/solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]},\"imports/solidstate/contracts/introspection/ERC165/base/ERC165Base.sol\":{\"keccak256\":\"0x3f2268856fdd9b27946adc65010bc83992069a90034bf692ab630802a926a9c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8f4aa0a9d369054fa3241abbf4a937eff32e42f7984ec2c11efe84b3536bdfd\",\"dweb:/ipfs/QmdL9cjvBLa5yszgCdxsqoh5BMYj6tJ2YWKPfLcRSzkA9c\"]},\"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":{\"keccak256\":\"0xad163d89454d9c8a018880253c5be156ee0f847f05a392a12b2a7061c7fa8682\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f76be2455986e64dd5108360e42087c7f5d87552d60a256ff616d3258c01fa7d\",\"dweb:/ipfs/QmZEYtAya7yeZQ6BWBUYeCetm5Wem3vaxiq3mdx4DLLtUJ\"]},\"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol\":{\"keccak256\":\"0xfd1cfba40f8aabda5898ffe21adeeea8c7011da12bfdad7f7aa0cf87b3635653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b80596a94faae265ecd9e03875ccebf5c1e45d94d8119dcf04e3a1cd92f5fb6\",\"dweb:/ipfs/QmVK8xje6PeEwVoZfFcugAdy43kLx59D9UHr4m8Qu9GgV9\"]},\"imports/solidstate/contracts/introspection/ERC165/base/IERC165Base.sol\":{\"keccak256\":\"0x288c50013c735cf30be90eb084589fc54bc0ee77a88ec69c3cc1efb11d7dccf4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://857c5836ad7808d13a87afa482af6ef2adbb26616767b2dd558b33ccb9569a28\",\"dweb:/ipfs/QmdptfxicGQUfsXFHpTW1y8NDV6k6oCuk5r9UqgGuv49Tk\"]},\"imports/solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol\":{\"keccak256\":\"0xccda4b118c8c09c276a0e577168aa404ea6207aad6b384b04f5f3a8923316422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcbafa161920a2a39ac001c76ee166ae4b345bef3ee6a0c5ca505504c0e9c052\",\"dweb:/ipfs/QmTF3DPJQPLsiYTmGNZXGBkmVRs14g2bUb1QJDH4ywwMq5\"]},\"imports/solidstate/contracts/proxy/IProxy.sol\":{\"keccak256\":\"0x2a06657ce005059e60a0765fe090240732d910fc38de43ca8fd48804bb86c5e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f893e1d80c28099c028560f96fdbc77fb28c5f3a5d30197e8274a130aa50c20b\",\"dweb:/ipfs/QmQ2WReybvHmivdwmSdZa4G3sCPJnJ4Ars9fYvb1byUPrw\"]},\"imports/solidstate/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x4d6ba63d71b8cddb57746d564cc904931d1ee479052a19f902787417ee5d97a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a13877552ba5a5678585fddd45ead718e195454a65b525a9fa21bc8bc6b1d317\",\"dweb:/ipfs/QmQ2jbrRE2JJKYo9baXvhU17X4URkYYPSXUud62UpDZn2k\"]},\"imports/solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol\":{\"keccak256\":\"0x541fe148acc6b9331149498d6f66308761a650da10c9bd8f9e933bdfec52f730\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca4739de22c9d58ff72fbd29c5a9a3072eb0ede8fc66a4f9345ba25f6d1e80cc\",\"dweb:/ipfs/Qmbo93KbYF1K7pUpjZKkUP2ABLhayyLAzVs9AnZ9vwZHUA\"]},\"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":{\"keccak256\":\"0xaa948c0ce846c4d4cec638b1b12580217b4782bbd1b25274d89bce5e2df14713\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6994f606378439530c8a902f448c3dd0d47a0592aa52a859d4344e9ebe6c7a4\",\"dweb:/ipfs/QmRbYWfMyVKEvNJNkwgrHGQd9tWmznhUrPaUzvW7vsv2iw\"]},\"imports/solidstate/contracts/proxy/diamond/base/DiamondBase.sol\":{\"keccak256\":\"0x6712d6c7bee937ac07ee00eeaa30895634fbd3cda7f5b5c179a2331ad05623df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c659c518ba877963adad6693287acdc9cc579603290df9ccf3d0c2a93af955e1\",\"dweb:/ipfs/QmPx59k37388TGXDT6EA2VZzBRWJQiT5F6H7Qt3cnPpQ3M\"]},\"imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":{\"keccak256\":\"0x74365666c0e9917d742bbab21e174dea6bc6ccf6146153e43dd9d9fe8417a36a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0328f0cee62d871c2ff5696384e213941623cd7d85e932205396c01416ceb77f\",\"dweb:/ipfs/QmR46DxncG2WVjxSBPAHziv2yXEknwm5tTHkd2nkv9neJD\"]},\"imports/solidstate/contracts/proxy/diamond/base/IDiamondBase.sol\":{\"keccak256\":\"0x3329852027ffb50519a245376a1dee8f828223c0fa439bbb16a80a1bc226c2fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4343964d070386d12d9e663607ad96e5134d4edd12234cb6412911ba77bcc5a9\",\"dweb:/ipfs/Qmbhp7gZRWRdryatZbjbgcxT4aWy9siaLWDXNoB1oCRWis\"]},\"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":{\"keccak256\":\"0x12dccd7f0e714012ac5e2746ea9c74c0eb990efab580ff45e1e3eef268b3fe54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b613f5140cae84540193a276a94e1b9959be2b51a57c3db5ea83ae8d16cc0f64\",\"dweb:/ipfs/QmPbbckwcC84kt6237L5829cXAcqvVfR91QLV684yfT9gk\"]},\"imports/solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol\":{\"keccak256\":\"0x1b52280562511510101b03ea1c73d64645770582ba72aad8bb1633ccc8ae6d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://730e215de2e4fd1e401716d4bdf1c4a3d6c5c9bdce9b8000a18fa3b48a69857d\",\"dweb:/ipfs/QmPyC5QYjLBZikRwYUTxENz3nX26KDUKSsCvhvg5wbAv6r\"]},\"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":{\"keccak256\":\"0x03fd06c9bd8642a42ece1d9f75c9e99869a06f4310fa9fe80df924ff68984036\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5f13b8c513694b11a7aca91cfb4e7cc0f025360c49f4ab5cdb7451a460bef38\",\"dweb:/ipfs/QmPpzhGud3ujg8tPygdMggpVzKThF7T9uVz5uuVJ9Yvp35\"]},\"imports/solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol\":{\"keccak256\":\"0xe3536079514a210e74f6e93b62525d451ed75c50c82773f9574c24e886ebe1ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f815154b93cf0619d01f779f0b7b88e2bae701adb1f92a36bbe6132e5321b656\",\"dweb:/ipfs/QmYhYKEuVEEHD2hc5P1iegppfNHMUAvdqsA22RS1Nh16wr\"]},\"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol\":{\"keccak256\":\"0xf481debe21720da2aa6a26492a57469b3592da44867935bc432f9ac8ffcdddd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b08ae74d3adc1415a0c1d34fd78b1b7bfdcf91c3b40123822cf33b28fe9f2aa\",\"dweb:/ipfs/Qmad6tp6wV3dKbqi2Mmaw4U89SvkXUEZ3EnD2NbQSwer5Y\"]},\"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":{\"keccak256\":\"0x741bbca02cacee6dab8dac18416f58200d75675600d7f6db7813e8385c4719e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ace0e6809a0b134b9697cbec3e2e3630828ff0b58c29cd0779eb50527c3b804d\",\"dweb:/ipfs/QmUvLY1kL8oAgCD7rQciRpq4mmKAANkzrtvPJo3m56e3BS\"]},\"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol\":{\"keccak256\":\"0x3d7dd0fa5d4cef8889d507880fe68d0b1558f6c21c5855170c44ef7e2b05bcef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://641081382a63beee3cae8b0f40b3146710f5377a964843160bf79921815e528c\",\"dweb:/ipfs/QmfWcAeDRtcvnCTnv3PE7er7WD73n9ct1YvrmxYDQFt9wP\"]},\"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol\":{\"keccak256\":\"0x82e0eeb28c8b8bd1ee9c5dd3247fa3d4062d5c6d43061833714c88741ecb5605\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4488dbd8056f270930da3ecae6f42037274fcac0444cacc25a57153541acb740\",\"dweb:/ipfs/QmURtgVddgar1YecAXZDEDStGaX7tBZTmcuZQJkeiA9NzZ\"]},\"imports/solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"]},\"imports/solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "accept transfer of contract ownership"
							},
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"notice": "update diamond facets and optionally execute arbitrary initialization function"
							},
							"facetAddress(bytes4)": {
								"notice": "get the address of the facet associated with given selector"
							},
							"facetAddresses()": {
								"notice": "get addresses of all facets used by diamond"
							},
							"facetFunctionSelectors(address)": {
								"notice": "get all selectors for given facet address"
							},
							"facets()": {
								"notice": "get all facets and their selectors"
							},
							"getFallbackAddress()": {
								"notice": "query the address of the fallback implementation"
							},
							"nomineeOwner()": {
								"notice": "get the nominated owner who has permission to call acceptOwnership"
							},
							"owner()": {
								"notice": "get the ERC173 contract owner"
							},
							"setFallbackAddress(address)": {
								"notice": "set the address of the fallback implementation"
							},
							"supportsInterface(bytes4)": {
								"notice": "query whether contract has registered support for given interface"
							},
							"transferOwnership(address)": {
								"notice": "transfer contract ownership to new account"
							}
						},
						"notice": "ref https://eips.ethereum.org/EIPS/eip-2535#abstract",
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/access/ownable/IOwnable.sol": {
				"IOwnable": {
					"abi": [
						{
							"inputs": [],
							"name": "Ownable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotTransitiveOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"returns": {
									"_0": "contract owner"
								}
							},
							"transferOwnership(address)": {
								"params": {
									"account": "address of new owner"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"returns\":{\"_0\":\"contract owner\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/access/ownable/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0xee77272fcf35108e2103ebb4f5d68d46844c447d9d2e411f8f9136298ae1bc2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fef49f85af45dbadb55c259528e33fb91ecd74942305c101ee33120211b6dc0d\",\"dweb:/ipfs/QmVRVH7aWFQrSqWvku3E9LQAEar9L7bmxXrPoXLCpZDkLb\"]},\"imports/solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"]},\"imports/solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0xf1c1fbf0ec82110c29d549db1fbd8ec728ba0b995dc5f087e0a5464243135dce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16c7f3eba0547576833d0c1fddb7ec34aeba4f28b4ce9e878c3bd3ebc9c8d3d1\",\"dweb:/ipfs/Qme79eYLo7dinnhotgC4bvYnCg4doBDShHeCajrf5zpAUF\"]},\"imports/solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"owner()": {
								"notice": "get the ERC173 contract owner"
							},
							"transferOwnership(address)": {
								"notice": "transfer contract ownership to new account"
							}
						},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/access/ownable/IOwnableInternal.sol": {
				"IOwnableInternal": {
					"abi": [
						{
							"inputs": [],
							"name": "Ownable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotTransitiveOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/access/ownable/IOwnableInternal.sol\":\"IOwnableInternal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"]},\"imports/solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/access/ownable/ISafeOwnable.sol": {
				"ISafeOwnable": {
					"abi": [
						{
							"inputs": [],
							"name": "Ownable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotTransitiveOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SafeOwnable__NotNomineeOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nomineeOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"returns": {
									"_0": "contract owner"
								}
							},
							"transferOwnership(address)": {
								"params": {
									"account": "address of new owner"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"nomineeOwner()": "8ab5150a",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeOwnable__NotNomineeOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nomineeOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"returns\":{\"_0\":\"contract owner\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"accept transfer of contract ownership\"},\"nomineeOwner()\":{\"notice\":\"get the nominated owner who has permission to call acceptOwnership\"},\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/access/ownable/ISafeOwnable.sol\":\"ISafeOwnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0xee77272fcf35108e2103ebb4f5d68d46844c447d9d2e411f8f9136298ae1bc2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fef49f85af45dbadb55c259528e33fb91ecd74942305c101ee33120211b6dc0d\",\"dweb:/ipfs/QmVRVH7aWFQrSqWvku3E9LQAEar9L7bmxXrPoXLCpZDkLb\"]},\"imports/solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"]},\"imports/solidstate/contracts/access/ownable/ISafeOwnable.sol\":{\"keccak256\":\"0xfb9a7920498ab2bb3d493c292c40223eb3a6631431ea381ca39274b165c60102\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d720242e56f4aedf2975f4deba5ff4a177668d3b8c9c40c1a240a17a2f8a7c38\",\"dweb:/ipfs/QmfCcZ4ACMDULUjmPcrUNUY88i17pHYEkDFpxyKCcHsUP3\"]},\"imports/solidstate/contracts/access/ownable/ISafeOwnableInternal.sol\":{\"keccak256\":\"0xd5d44576a2f82b4ffdcf29feec6043e82436011784d92567a968609aa49a0f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43961ad59d89c044a403ebb3fdd8c9be9b01a59d5e549ef205423725dcfb9889\",\"dweb:/ipfs/QmeatkxGznGMCHXAz2CHTTSbk5HjUXzrjEtMc8CppNxnTZ\"]},\"imports/solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0xf1c1fbf0ec82110c29d549db1fbd8ec728ba0b995dc5f087e0a5464243135dce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16c7f3eba0547576833d0c1fddb7ec34aeba4f28b4ce9e878c3bd3ebc9c8d3d1\",\"dweb:/ipfs/Qme79eYLo7dinnhotgC4bvYnCg4doBDShHeCajrf5zpAUF\"]},\"imports/solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "accept transfer of contract ownership"
							},
							"nomineeOwner()": {
								"notice": "get the nominated owner who has permission to call acceptOwnership"
							},
							"owner()": {
								"notice": "get the ERC173 contract owner"
							},
							"transferOwnership(address)": {
								"notice": "transfer contract ownership to new account"
							}
						},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/access/ownable/ISafeOwnableInternal.sol": {
				"ISafeOwnableInternal": {
					"abi": [
						{
							"inputs": [],
							"name": "Ownable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotTransitiveOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SafeOwnable__NotNomineeOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeOwnable__NotNomineeOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/access/ownable/ISafeOwnableInternal.sol\":\"ISafeOwnableInternal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"]},\"imports/solidstate/contracts/access/ownable/ISafeOwnableInternal.sol\":{\"keccak256\":\"0xd5d44576a2f82b4ffdcf29feec6043e82436011784d92567a968609aa49a0f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43961ad59d89c044a403ebb3fdd8c9be9b01a59d5e549ef205423725dcfb9889\",\"dweb:/ipfs/QmeatkxGznGMCHXAz2CHTTSbk5HjUXzrjEtMc8CppNxnTZ\"]},\"imports/solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/access/ownable/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"name": "Ownable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotTransitiveOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"returns": {
									"_0": "contract owner"
								}
							},
							"transferOwnership(address)": {
								"params": {
									"account": "address of new owner"
								}
							}
						},
						"title": "Ownership access control based on ERC173",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"returns\":{\"_0\":\"contract owner\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}}},\"title\":\"Ownership access control based on ERC173\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/access/ownable/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0xee77272fcf35108e2103ebb4f5d68d46844c447d9d2e411f8f9136298ae1bc2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fef49f85af45dbadb55c259528e33fb91ecd74942305c101ee33120211b6dc0d\",\"dweb:/ipfs/QmVRVH7aWFQrSqWvku3E9LQAEar9L7bmxXrPoXLCpZDkLb\"]},\"imports/solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"]},\"imports/solidstate/contracts/access/ownable/Ownable.sol\":{\"keccak256\":\"0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc\",\"dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79\"]},\"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52\",\"dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF\"]},\"imports/solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995\",\"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM\"]},\"imports/solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0xf1c1fbf0ec82110c29d549db1fbd8ec728ba0b995dc5f087e0a5464243135dce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16c7f3eba0547576833d0c1fddb7ec34aeba4f28b4ce9e878c3bd3ebc9c8d3d1\",\"dweb:/ipfs/Qme79eYLo7dinnhotgC4bvYnCg4doBDShHeCajrf5zpAUF\"]},\"imports/solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]},\"imports/solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"]},\"imports/solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"owner()": {
								"notice": "get the ERC173 contract owner"
							},
							"transferOwnership(address)": {
								"notice": "transfer contract ownership to new account"
							}
						},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/access/ownable/OwnableInternal.sol": {
				"OwnableInternal": {
					"abi": [
						{
							"inputs": [],
							"name": "Ownable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotTransitiveOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":\"OwnableInternal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"]},\"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52\",\"dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF\"]},\"imports/solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995\",\"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM\"]},\"imports/solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0xf1c1fbf0ec82110c29d549db1fbd8ec728ba0b995dc5f087e0a5464243135dce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16c7f3eba0547576833d0c1fddb7ec34aeba4f28b4ce9e878c3bd3ebc9c8d3d1\",\"dweb:/ipfs/Qme79eYLo7dinnhotgC4bvYnCg4doBDShHeCajrf5zpAUF\"]},\"imports/solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]},\"imports/solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"]},\"imports/solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/access/ownable/OwnableStorage.sol": {
				"OwnableStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"imports/solidstate/contracts/access/ownable/OwnableStorage.sol\":58:403  library OwnableStorage {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"imports/solidstate/contracts/access/ownable/OwnableStorage.sol\":58:403  library OwnableStorage {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122012b10a08c9e8332a2f3cdf83735a4981a5df6424d82035064bc10545051921e664736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122012b10a08c9e8332a2f3cdf83735a4981a5df6424d82035064bc10545051921e664736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xB1 EXP ADDMOD 0xC9 0xE8 CALLER 0x2A 0x2F EXTCODECOPY 0xDF DUP4 PUSH20 0x5A4981A5DF6424D82035064BC10545051921E664 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "58:345:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;58:345:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122012b10a08c9e8332a2f3cdf83735a4981a5df6424d82035064bc10545051921e664736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xB1 EXP ADDMOD 0xC9 0xE8 CALLER 0x2A 0x2F EXTCODECOPY 0xDF DUP4 PUSH20 0x5A4981A5DF6424D82035064BC10545051921E664 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "58:345:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"layout()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 403,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 403,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 403,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 58,
									"end": 403,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 58,
									"end": 403,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 58,
									"end": 403,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 58,
									"end": 403,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 58,
									"end": 403,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 58,
									"end": 403,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 58,
									"end": 403,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 403,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 58,
									"end": 403,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 403,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 58,
									"end": 403,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 403,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 58,
									"end": 403,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 403,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 58,
									"end": 403,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 403,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 58,
									"end": 403,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 58,
									"end": 403,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 58,
									"end": 403,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 403,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 58,
									"end": 403,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 403,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 58,
									"end": 403,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 58,
									"end": 403,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 403,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 58,
									"end": 403,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 403,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 58,
									"end": 403,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 58,
									"end": 403,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 58,
									"end": 403,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 58,
									"end": 403,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122012b10a08c9e8332a2f3cdf83735a4981a5df6424d82035064bc10545051921e664736f6c63430008130033",
									".code": [
										{
											"begin": 58,
											"end": 403,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 58,
											"end": 403,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 58,
											"end": 403,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 58,
											"end": 403,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 403,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 403,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 58,
											"end": 403,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 403,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 58,
											"end": 403,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"abstracts/ERC2535.sol",
								"diamonds/Diamond.sol",
								"imports/solidstate/contracts/access/ownable/IOwnable.sol",
								"imports/solidstate/contracts/access/ownable/IOwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/ISafeOwnable.sol",
								"imports/solidstate/contracts/access/ownable/ISafeOwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/Ownable.sol",
								"imports/solidstate/contracts/access/ownable/OwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/OwnableStorage.sol",
								"imports/solidstate/contracts/access/ownable/SafeOwnable.sol",
								"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/SafeOwnableStorage.sol",
								"imports/solidstate/contracts/interfaces/IERC165.sol",
								"imports/solidstate/contracts/interfaces/IERC165Internal.sol",
								"imports/solidstate/contracts/interfaces/IERC173.sol",
								"imports/solidstate/contracts/interfaces/IERC173Internal.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/ERC165Base.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/IERC165Base.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol",
								"imports/solidstate/contracts/proxy/IProxy.sol",
								"imports/solidstate/contracts/proxy/Proxy.sol",
								"imports/solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol",
								"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol",
								"imports/solidstate/contracts/proxy/diamond/base/DiamondBase.sol",
								"imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol",
								"imports/solidstate/contracts/proxy/diamond/base/IDiamondBase.sol",
								"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol",
								"imports/solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol",
								"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol",
								"imports/solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol",
								"imports/solidstate/contracts/utils/AddressUtils.sol",
								"imports/solidstate/contracts/utils/UintUtils.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/access/ownable/OwnableStorage.sol\":\"OwnableStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995\",\"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/access/ownable/SafeOwnable.sol": {
				"SafeOwnable": {
					"abi": [
						{
							"inputs": [],
							"name": "Ownable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotTransitiveOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SafeOwnable__NotNomineeOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nomineeOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"returns": {
									"_0": "contract owner"
								}
							},
							"transferOwnership(address)": {
								"params": {
									"account": "address of new owner"
								}
							}
						},
						"title": "Ownership access control based on ERC173 with ownership transfer safety check",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"nomineeOwner()": "8ab5150a",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeOwnable__NotNomineeOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nomineeOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"returns\":{\"_0\":\"contract owner\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}}},\"title\":\"Ownership access control based on ERC173 with ownership transfer safety check\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"accept transfer of contract ownership\"},\"nomineeOwner()\":{\"notice\":\"get the nominated owner who has permission to call acceptOwnership\"},\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/access/ownable/SafeOwnable.sol\":\"SafeOwnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0xee77272fcf35108e2103ebb4f5d68d46844c447d9d2e411f8f9136298ae1bc2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fef49f85af45dbadb55c259528e33fb91ecd74942305c101ee33120211b6dc0d\",\"dweb:/ipfs/QmVRVH7aWFQrSqWvku3E9LQAEar9L7bmxXrPoXLCpZDkLb\"]},\"imports/solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"]},\"imports/solidstate/contracts/access/ownable/ISafeOwnable.sol\":{\"keccak256\":\"0xfb9a7920498ab2bb3d493c292c40223eb3a6631431ea381ca39274b165c60102\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d720242e56f4aedf2975f4deba5ff4a177668d3b8c9c40c1a240a17a2f8a7c38\",\"dweb:/ipfs/QmfCcZ4ACMDULUjmPcrUNUY88i17pHYEkDFpxyKCcHsUP3\"]},\"imports/solidstate/contracts/access/ownable/ISafeOwnableInternal.sol\":{\"keccak256\":\"0xd5d44576a2f82b4ffdcf29feec6043e82436011784d92567a968609aa49a0f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43961ad59d89c044a403ebb3fdd8c9be9b01a59d5e549ef205423725dcfb9889\",\"dweb:/ipfs/QmeatkxGznGMCHXAz2CHTTSbk5HjUXzrjEtMc8CppNxnTZ\"]},\"imports/solidstate/contracts/access/ownable/Ownable.sol\":{\"keccak256\":\"0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc\",\"dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79\"]},\"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52\",\"dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF\"]},\"imports/solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995\",\"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM\"]},\"imports/solidstate/contracts/access/ownable/SafeOwnable.sol\":{\"keccak256\":\"0x84d5694ad1f6cc77170ec667b02080dca1ccdde26eddaf46960d95971df1a5f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd6b07d586dd3365884d48fb0dde9a46d03b4d5ee7508b1c817e261820bf29b9\",\"dweb:/ipfs/QmUwnEW2oK91S54MosgKk4YA44qhruMSFeGB6yLP58xByZ\"]},\"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":{\"keccak256\":\"0x1ab5cbb63b897d2bef48d4437ef9519fc15cd49ed976539c1d0fd262f087786f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e348b34065e6297fc7485f52d4671add3abc4c4329c9c907c30f315d91c80dd0\",\"dweb:/ipfs/Qmc7dvy2roTkJyi6G51Aoay8Mai7hGxBSBWHeXWSDwA9dL\"]},\"imports/solidstate/contracts/access/ownable/SafeOwnableStorage.sol\":{\"keccak256\":\"0x4818afb0b39e0770f881cbeaea1b1c77fba0daaa64bd8c1361d6e3a197628e93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db4cb17939eb9bf2d1ae1d8aec3c95495991a75b760a3ff211fb485ac4aeb1cb\",\"dweb:/ipfs/Qme93NCwDTb7B6MYCxLedZreEAjpEe9NCQFpPLsaT823jq\"]},\"imports/solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0xf1c1fbf0ec82110c29d549db1fbd8ec728ba0b995dc5f087e0a5464243135dce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16c7f3eba0547576833d0c1fddb7ec34aeba4f28b4ce9e878c3bd3ebc9c8d3d1\",\"dweb:/ipfs/Qme79eYLo7dinnhotgC4bvYnCg4doBDShHeCajrf5zpAUF\"]},\"imports/solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]},\"imports/solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"]},\"imports/solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "accept transfer of contract ownership"
							},
							"nomineeOwner()": {
								"notice": "get the nominated owner who has permission to call acceptOwnership"
							},
							"owner()": {
								"notice": "get the ERC173 contract owner"
							},
							"transferOwnership(address)": {
								"notice": "transfer contract ownership to new account"
							}
						},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol": {
				"SafeOwnableInternal": {
					"abi": [
						{
							"inputs": [],
							"name": "Ownable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotTransitiveOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SafeOwnable__NotNomineeOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeOwnable__NotNomineeOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":\"SafeOwnableInternal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"]},\"imports/solidstate/contracts/access/ownable/ISafeOwnableInternal.sol\":{\"keccak256\":\"0xd5d44576a2f82b4ffdcf29feec6043e82436011784d92567a968609aa49a0f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43961ad59d89c044a403ebb3fdd8c9be9b01a59d5e549ef205423725dcfb9889\",\"dweb:/ipfs/QmeatkxGznGMCHXAz2CHTTSbk5HjUXzrjEtMc8CppNxnTZ\"]},\"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52\",\"dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF\"]},\"imports/solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995\",\"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM\"]},\"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":{\"keccak256\":\"0x1ab5cbb63b897d2bef48d4437ef9519fc15cd49ed976539c1d0fd262f087786f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e348b34065e6297fc7485f52d4671add3abc4c4329c9c907c30f315d91c80dd0\",\"dweb:/ipfs/Qmc7dvy2roTkJyi6G51Aoay8Mai7hGxBSBWHeXWSDwA9dL\"]},\"imports/solidstate/contracts/access/ownable/SafeOwnableStorage.sol\":{\"keccak256\":\"0x4818afb0b39e0770f881cbeaea1b1c77fba0daaa64bd8c1361d6e3a197628e93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db4cb17939eb9bf2d1ae1d8aec3c95495991a75b760a3ff211fb485ac4aeb1cb\",\"dweb:/ipfs/Qme93NCwDTb7B6MYCxLedZreEAjpEe9NCQFpPLsaT823jq\"]},\"imports/solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0xf1c1fbf0ec82110c29d549db1fbd8ec728ba0b995dc5f087e0a5464243135dce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16c7f3eba0547576833d0c1fddb7ec34aeba4f28b4ce9e878c3bd3ebc9c8d3d1\",\"dweb:/ipfs/Qme79eYLo7dinnhotgC4bvYnCg4doBDShHeCajrf5zpAUF\"]},\"imports/solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]},\"imports/solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"]},\"imports/solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/access/ownable/SafeOwnableStorage.sol": {
				"SafeOwnableStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"imports/solidstate/contracts/access/ownable/SafeOwnableStorage.sol\":58:418  library SafeOwnableStorage {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"imports/solidstate/contracts/access/ownable/SafeOwnableStorage.sol\":58:418  library SafeOwnableStorage {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220904dfa21c6ca9cdd39dcb0c06fe11e6de5986aca9a6adc386613fae5572d441d64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220904dfa21c6ca9cdd39dcb0c06fe11e6de5986aca9a6adc386613fae5572d441d64736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x4D STATICCALL 0x21 0xC6 0xCA SWAP13 0xDD CODECOPY 0xDC 0xB0 0xC0 PUSH16 0xE11E6DE5986ACA9A6ADC386613FAE557 0x2D PREVRANDAO SAR PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "58:360:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;58:360:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220904dfa21c6ca9cdd39dcb0c06fe11e6de5986aca9a6adc386613fae5572d441d64736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x4D STATICCALL 0x21 0xC6 0xCA SWAP13 0xDD CODECOPY 0xDC 0xB0 0xC0 PUSH16 0xE11E6DE5986ACA9A6ADC386613FAE557 0x2D PREVRANDAO SAR PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "58:360:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"layout()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 418,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 418,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 418,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 58,
									"end": 418,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 58,
									"end": 418,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 58,
									"end": 418,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 58,
									"end": 418,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 58,
									"end": 418,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 58,
									"end": 418,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 58,
									"end": 418,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 418,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 58,
									"end": 418,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 418,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 58,
									"end": 418,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 418,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 58,
									"end": 418,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 418,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 58,
									"end": 418,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 418,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 58,
									"end": 418,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 58,
									"end": 418,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 58,
									"end": 418,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 418,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 58,
									"end": 418,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 418,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 58,
									"end": 418,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 58,
									"end": 418,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 418,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 58,
									"end": 418,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 418,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 58,
									"end": 418,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 58,
									"end": 418,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 58,
									"end": 418,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 58,
									"end": 418,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220904dfa21c6ca9cdd39dcb0c06fe11e6de5986aca9a6adc386613fae5572d441d64736f6c63430008130033",
									".code": [
										{
											"begin": 58,
											"end": 418,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 58,
											"end": 418,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 58,
											"end": 418,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 58,
											"end": 418,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 418,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 418,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 58,
											"end": 418,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 418,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 58,
											"end": 418,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"abstracts/ERC2535.sol",
								"diamonds/Diamond.sol",
								"imports/solidstate/contracts/access/ownable/IOwnable.sol",
								"imports/solidstate/contracts/access/ownable/IOwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/ISafeOwnable.sol",
								"imports/solidstate/contracts/access/ownable/ISafeOwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/Ownable.sol",
								"imports/solidstate/contracts/access/ownable/OwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/OwnableStorage.sol",
								"imports/solidstate/contracts/access/ownable/SafeOwnable.sol",
								"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/SafeOwnableStorage.sol",
								"imports/solidstate/contracts/interfaces/IERC165.sol",
								"imports/solidstate/contracts/interfaces/IERC165Internal.sol",
								"imports/solidstate/contracts/interfaces/IERC173.sol",
								"imports/solidstate/contracts/interfaces/IERC173Internal.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/ERC165Base.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/IERC165Base.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol",
								"imports/solidstate/contracts/proxy/IProxy.sol",
								"imports/solidstate/contracts/proxy/Proxy.sol",
								"imports/solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol",
								"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol",
								"imports/solidstate/contracts/proxy/diamond/base/DiamondBase.sol",
								"imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol",
								"imports/solidstate/contracts/proxy/diamond/base/IDiamondBase.sol",
								"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol",
								"imports/solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol",
								"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol",
								"imports/solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol",
								"imports/solidstate/contracts/utils/AddressUtils.sol",
								"imports/solidstate/contracts/utils/UintUtils.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/access/ownable/SafeOwnableStorage.sol\":\"SafeOwnableStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/access/ownable/SafeOwnableStorage.sol\":{\"keccak256\":\"0x4818afb0b39e0770f881cbeaea1b1c77fba0daaa64bd8c1361d6e3a197628e93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db4cb17939eb9bf2d1ae1d8aec3c95495991a75b760a3ff211fb485ac4aeb1cb\",\"dweb:/ipfs/Qme93NCwDTb7B6MYCxLedZreEAjpEe9NCQFpPLsaT823jq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/interfaces/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "see https://eips.ethereum.org/EIPS/eip-165",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"params": {
									"interfaceId": "interface id"
								},
								"returns": {
									"_0": "bool whether interface is supported"
								}
							}
						},
						"title": "ERC165 interface registration interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"see https://eips.ethereum.org/EIPS/eip-165\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"interface id\"},\"returns\":{\"_0\":\"bool whether interface is supported\"}}},\"title\":\"ERC165 interface registration interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"query whether contract has registered support for given interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/interfaces/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xc250e493770feaa0da8e5a55d241712c1c6526caa7d8df2455c3e5fa25124c0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://768e47d9ddeb15daeab0c8c1109ae43a4c2a0633bd9e4bf141488dfc9252f7ba\",\"dweb:/ipfs/QmWMTTRTncar9LptrxU7WK7WG5hHp8KsYnBGfm3cYowuP8\"]},\"imports/solidstate/contracts/interfaces/IERC165Internal.sol\":{\"keccak256\":\"0xf4d4708a60ed04887849509a258db49d4eb686f33214cb9c9643325cd8dae89d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66e7ade64c12edf7adbc0f20c1195b3c635ea2df67b836215441a4fe22ae17da\",\"dweb:/ipfs/QmUAbU31ZYg3FrKzXCk8CE1FbCg6LNoB5HpR4pU2QwZc7p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"supportsInterface(bytes4)": {
								"notice": "query whether contract has registered support for given interface"
							}
						},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/interfaces/IERC165Internal.sol": {
				"IERC165Internal": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "ERC165 interface registration interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"ERC165 interface registration interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/interfaces/IERC165Internal.sol\":\"IERC165Internal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/interfaces/IERC165Internal.sol\":{\"keccak256\":\"0xf4d4708a60ed04887849509a258db49d4eb686f33214cb9c9643325cd8dae89d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66e7ade64c12edf7adbc0f20c1195b3c635ea2df67b836215441a4fe22ae17da\",\"dweb:/ipfs/QmUAbU31ZYg3FrKzXCk8CE1FbCg6LNoB5HpR4pU2QwZc7p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/interfaces/IERC173.sol": {
				"IERC173": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "see https://eips.ethereum.org/EIPS/eip-173",
						"kind": "dev",
						"methods": {
							"owner()": {
								"returns": {
									"_0": "contract owner"
								}
							},
							"transferOwnership(address)": {
								"params": {
									"account": "address of new owner"
								}
							}
						},
						"title": "Contract ownership standard interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"see https://eips.ethereum.org/EIPS/eip-173\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"returns\":{\"_0\":\"contract owner\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}}},\"title\":\"Contract ownership standard interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/interfaces/IERC173.sol\":\"IERC173\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0xf1c1fbf0ec82110c29d549db1fbd8ec728ba0b995dc5f087e0a5464243135dce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16c7f3eba0547576833d0c1fddb7ec34aeba4f28b4ce9e878c3bd3ebc9c8d3d1\",\"dweb:/ipfs/Qme79eYLo7dinnhotgC4bvYnCg4doBDShHeCajrf5zpAUF\"]},\"imports/solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"owner()": {
								"notice": "get the ERC173 contract owner"
							},
							"transferOwnership(address)": {
								"notice": "transfer contract ownership to new account"
							}
						},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/interfaces/IERC173Internal.sol": {
				"IERC173Internal": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Partial ERC173 interface needed by internal functions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Partial ERC173 interface needed by internal functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/interfaces/IERC173Internal.sol\":\"IERC173Internal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/introspection/ERC165/base/ERC165Base.sol": {
				"ERC165Base": {
					"abi": [
						{
							"inputs": [],
							"name": "ERC165Base__InvalidInterfaceId",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"params": {
									"interfaceId": "interface id"
								},
								"returns": {
									"_0": "bool whether interface is supported"
								}
							}
						},
						"title": "ERC165 implementation",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC165Base__InvalidInterfaceId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"interface id\"},\"returns\":{\"_0\":\"bool whether interface is supported\"}}},\"title\":\"ERC165 implementation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"query whether contract has registered support for given interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/introspection/ERC165/base/ERC165Base.sol\":\"ERC165Base\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xc250e493770feaa0da8e5a55d241712c1c6526caa7d8df2455c3e5fa25124c0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://768e47d9ddeb15daeab0c8c1109ae43a4c2a0633bd9e4bf141488dfc9252f7ba\",\"dweb:/ipfs/QmWMTTRTncar9LptrxU7WK7WG5hHp8KsYnBGfm3cYowuP8\"]},\"imports/solidstate/contracts/interfaces/IERC165Internal.sol\":{\"keccak256\":\"0xf4d4708a60ed04887849509a258db49d4eb686f33214cb9c9643325cd8dae89d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66e7ade64c12edf7adbc0f20c1195b3c635ea2df67b836215441a4fe22ae17da\",\"dweb:/ipfs/QmUAbU31ZYg3FrKzXCk8CE1FbCg6LNoB5HpR4pU2QwZc7p\"]},\"imports/solidstate/contracts/introspection/ERC165/base/ERC165Base.sol\":{\"keccak256\":\"0x3f2268856fdd9b27946adc65010bc83992069a90034bf692ab630802a926a9c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8f4aa0a9d369054fa3241abbf4a937eff32e42f7984ec2c11efe84b3536bdfd\",\"dweb:/ipfs/QmdL9cjvBLa5yszgCdxsqoh5BMYj6tJ2YWKPfLcRSzkA9c\"]},\"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":{\"keccak256\":\"0xad163d89454d9c8a018880253c5be156ee0f847f05a392a12b2a7061c7fa8682\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f76be2455986e64dd5108360e42087c7f5d87552d60a256ff616d3258c01fa7d\",\"dweb:/ipfs/QmZEYtAya7yeZQ6BWBUYeCetm5Wem3vaxiq3mdx4DLLtUJ\"]},\"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol\":{\"keccak256\":\"0xfd1cfba40f8aabda5898ffe21adeeea8c7011da12bfdad7f7aa0cf87b3635653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b80596a94faae265ecd9e03875ccebf5c1e45d94d8119dcf04e3a1cd92f5fb6\",\"dweb:/ipfs/QmVK8xje6PeEwVoZfFcugAdy43kLx59D9UHr4m8Qu9GgV9\"]},\"imports/solidstate/contracts/introspection/ERC165/base/IERC165Base.sol\":{\"keccak256\":\"0x288c50013c735cf30be90eb084589fc54bc0ee77a88ec69c3cc1efb11d7dccf4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://857c5836ad7808d13a87afa482af6ef2adbb26616767b2dd558b33ccb9569a28\",\"dweb:/ipfs/QmdptfxicGQUfsXFHpTW1y8NDV6k6oCuk5r9UqgGuv49Tk\"]},\"imports/solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol\":{\"keccak256\":\"0xccda4b118c8c09c276a0e577168aa404ea6207aad6b384b04f5f3a8923316422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcbafa161920a2a39ac001c76ee166ae4b345bef3ee6a0c5ca505504c0e9c052\",\"dweb:/ipfs/QmTF3DPJQPLsiYTmGNZXGBkmVRs14g2bUb1QJDH4ywwMq5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"supportsInterface(bytes4)": {
								"notice": "query whether contract has registered support for given interface"
							}
						},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol": {
				"ERC165BaseInternal": {
					"abi": [
						{
							"inputs": [],
							"name": "ERC165Base__InvalidInterfaceId",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "ERC165 implementation",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC165Base__InvalidInterfaceId\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"ERC165 implementation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":\"ERC165BaseInternal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/interfaces/IERC165Internal.sol\":{\"keccak256\":\"0xf4d4708a60ed04887849509a258db49d4eb686f33214cb9c9643325cd8dae89d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66e7ade64c12edf7adbc0f20c1195b3c635ea2df67b836215441a4fe22ae17da\",\"dweb:/ipfs/QmUAbU31ZYg3FrKzXCk8CE1FbCg6LNoB5HpR4pU2QwZc7p\"]},\"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":{\"keccak256\":\"0xad163d89454d9c8a018880253c5be156ee0f847f05a392a12b2a7061c7fa8682\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f76be2455986e64dd5108360e42087c7f5d87552d60a256ff616d3258c01fa7d\",\"dweb:/ipfs/QmZEYtAya7yeZQ6BWBUYeCetm5Wem3vaxiq3mdx4DLLtUJ\"]},\"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol\":{\"keccak256\":\"0xfd1cfba40f8aabda5898ffe21adeeea8c7011da12bfdad7f7aa0cf87b3635653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b80596a94faae265ecd9e03875ccebf5c1e45d94d8119dcf04e3a1cd92f5fb6\",\"dweb:/ipfs/QmVK8xje6PeEwVoZfFcugAdy43kLx59D9UHr4m8Qu9GgV9\"]},\"imports/solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol\":{\"keccak256\":\"0xccda4b118c8c09c276a0e577168aa404ea6207aad6b384b04f5f3a8923316422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcbafa161920a2a39ac001c76ee166ae4b345bef3ee6a0c5ca505504c0e9c052\",\"dweb:/ipfs/QmTF3DPJQPLsiYTmGNZXGBkmVRs14g2bUb1QJDH4ywwMq5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol": {
				"ERC165BaseStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol\":58:439  library ERC165BaseStorage {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol\":58:439  library ERC165BaseStorage {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204c8e80620294b97b865e2f631390d1efb4ccc85c13350a307ca914584bcf813264736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204c8e80620294b97b865e2f631390d1efb4ccc85c13350a307ca914584bcf813264736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C DUP15 DUP1 PUSH3 0x294B9 PUSH28 0x865E2F631390D1EFB4CCC85C13350A307CA914584BCF813264736F6C PUSH4 0x43000813 STOP CALLER ",
							"sourceMap": "58:381:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;58:381:18;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204c8e80620294b97b865e2f631390d1efb4ccc85c13350a307ca914584bcf813264736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C DUP15 DUP1 PUSH3 0x294B9 PUSH28 0x865E2F631390D1EFB4CCC85C13350A307CA914584BCF813264736F6C PUSH4 0x43000813 STOP CALLER ",
							"sourceMap": "58:381:18:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"layout()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 439,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 439,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 439,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 58,
									"end": 439,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 58,
									"end": 439,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 58,
									"end": 439,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 58,
									"end": 439,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 58,
									"end": 439,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 58,
									"end": 439,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 58,
									"end": 439,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 439,
									"name": "BYTE",
									"source": 18
								},
								{
									"begin": 58,
									"end": 439,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 439,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 58,
									"end": 439,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 439,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 58,
									"end": 439,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 439,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 58,
									"end": 439,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 439,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 58,
									"end": 439,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 58,
									"end": 439,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 58,
									"end": 439,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 439,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 58,
									"end": 439,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 439,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 58,
									"end": 439,
									"name": "ADDRESS",
									"source": 18
								},
								{
									"begin": 58,
									"end": 439,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 439,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 58,
									"end": 439,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 439,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 58,
									"end": 439,
									"name": "MSTORE8",
									"source": 18
								},
								{
									"begin": 58,
									"end": 439,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 58,
									"end": 439,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 58,
									"end": 439,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204c8e80620294b97b865e2f631390d1efb4ccc85c13350a307ca914584bcf813264736f6c63430008130033",
									".code": [
										{
											"begin": 58,
											"end": 439,
											"name": "PUSHDEPLOYADDRESS",
											"source": 18
										},
										{
											"begin": 58,
											"end": 439,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 58,
											"end": 439,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 58,
											"end": 439,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 439,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 439,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 58,
											"end": 439,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 439,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 58,
											"end": 439,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"abstracts/ERC2535.sol",
								"diamonds/Diamond.sol",
								"imports/solidstate/contracts/access/ownable/IOwnable.sol",
								"imports/solidstate/contracts/access/ownable/IOwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/ISafeOwnable.sol",
								"imports/solidstate/contracts/access/ownable/ISafeOwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/Ownable.sol",
								"imports/solidstate/contracts/access/ownable/OwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/OwnableStorage.sol",
								"imports/solidstate/contracts/access/ownable/SafeOwnable.sol",
								"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/SafeOwnableStorage.sol",
								"imports/solidstate/contracts/interfaces/IERC165.sol",
								"imports/solidstate/contracts/interfaces/IERC165Internal.sol",
								"imports/solidstate/contracts/interfaces/IERC173.sol",
								"imports/solidstate/contracts/interfaces/IERC173Internal.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/ERC165Base.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/IERC165Base.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol",
								"imports/solidstate/contracts/proxy/IProxy.sol",
								"imports/solidstate/contracts/proxy/Proxy.sol",
								"imports/solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol",
								"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol",
								"imports/solidstate/contracts/proxy/diamond/base/DiamondBase.sol",
								"imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol",
								"imports/solidstate/contracts/proxy/diamond/base/IDiamondBase.sol",
								"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol",
								"imports/solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol",
								"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol",
								"imports/solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol",
								"imports/solidstate/contracts/utils/AddressUtils.sol",
								"imports/solidstate/contracts/utils/UintUtils.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol\":\"ERC165BaseStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol\":{\"keccak256\":\"0xfd1cfba40f8aabda5898ffe21adeeea8c7011da12bfdad7f7aa0cf87b3635653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b80596a94faae265ecd9e03875ccebf5c1e45d94d8119dcf04e3a1cd92f5fb6\",\"dweb:/ipfs/QmVK8xje6PeEwVoZfFcugAdy43kLx59D9UHr4m8Qu9GgV9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/introspection/ERC165/base/IERC165Base.sol": {
				"IERC165Base": {
					"abi": [
						{
							"inputs": [],
							"name": "ERC165Base__InvalidInterfaceId",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"params": {
									"interfaceId": "interface id"
								},
								"returns": {
									"_0": "bool whether interface is supported"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC165Base__InvalidInterfaceId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"interface id\"},\"returns\":{\"_0\":\"bool whether interface is supported\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"query whether contract has registered support for given interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/introspection/ERC165/base/IERC165Base.sol\":\"IERC165Base\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xc250e493770feaa0da8e5a55d241712c1c6526caa7d8df2455c3e5fa25124c0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://768e47d9ddeb15daeab0c8c1109ae43a4c2a0633bd9e4bf141488dfc9252f7ba\",\"dweb:/ipfs/QmWMTTRTncar9LptrxU7WK7WG5hHp8KsYnBGfm3cYowuP8\"]},\"imports/solidstate/contracts/interfaces/IERC165Internal.sol\":{\"keccak256\":\"0xf4d4708a60ed04887849509a258db49d4eb686f33214cb9c9643325cd8dae89d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66e7ade64c12edf7adbc0f20c1195b3c635ea2df67b836215441a4fe22ae17da\",\"dweb:/ipfs/QmUAbU31ZYg3FrKzXCk8CE1FbCg6LNoB5HpR4pU2QwZc7p\"]},\"imports/solidstate/contracts/introspection/ERC165/base/IERC165Base.sol\":{\"keccak256\":\"0x288c50013c735cf30be90eb084589fc54bc0ee77a88ec69c3cc1efb11d7dccf4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://857c5836ad7808d13a87afa482af6ef2adbb26616767b2dd558b33ccb9569a28\",\"dweb:/ipfs/QmdptfxicGQUfsXFHpTW1y8NDV6k6oCuk5r9UqgGuv49Tk\"]},\"imports/solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol\":{\"keccak256\":\"0xccda4b118c8c09c276a0e577168aa404ea6207aad6b384b04f5f3a8923316422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcbafa161920a2a39ac001c76ee166ae4b345bef3ee6a0c5ca505504c0e9c052\",\"dweb:/ipfs/QmTF3DPJQPLsiYTmGNZXGBkmVRs14g2bUb1QJDH4ywwMq5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"supportsInterface(bytes4)": {
								"notice": "query whether contract has registered support for given interface"
							}
						},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol": {
				"IERC165BaseInternal": {
					"abi": [
						{
							"inputs": [],
							"name": "ERC165Base__InvalidInterfaceId",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC165Base__InvalidInterfaceId\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol\":\"IERC165BaseInternal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/interfaces/IERC165Internal.sol\":{\"keccak256\":\"0xf4d4708a60ed04887849509a258db49d4eb686f33214cb9c9643325cd8dae89d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66e7ade64c12edf7adbc0f20c1195b3c635ea2df67b836215441a4fe22ae17da\",\"dweb:/ipfs/QmUAbU31ZYg3FrKzXCk8CE1FbCg6LNoB5HpR4pU2QwZc7p\"]},\"imports/solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol\":{\"keccak256\":\"0xccda4b118c8c09c276a0e577168aa404ea6207aad6b384b04f5f3a8923316422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcbafa161920a2a39ac001c76ee166ae4b345bef3ee6a0c5ca505504c0e9c052\",\"dweb:/ipfs/QmTF3DPJQPLsiYTmGNZXGBkmVRs14g2bUb1QJDH4ywwMq5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/proxy/IProxy.sol": {
				"IProxy": {
					"abi": [
						{
							"inputs": [],
							"name": "Proxy__ImplementationIsNotContract",
							"type": "error"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Proxy__ImplementationIsNotContract\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/proxy/IProxy.sol\":\"IProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/proxy/IProxy.sol\":{\"keccak256\":\"0x2a06657ce005059e60a0765fe090240732d910fc38de43ca8fd48804bb86c5e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f893e1d80c28099c028560f96fdbc77fb28c5f3a5d30197e8274a130aa50c20b\",\"dweb:/ipfs/QmQ2WReybvHmivdwmSdZa4G3sCPJnJ4Ars9fYvb1byUPrw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/proxy/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"inputs": [],
							"name": "Proxy__ImplementationIsNotContract",
							"type": "error"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Base proxy contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Proxy__ImplementationIsNotContract\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Base proxy contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/proxy/IProxy.sol\":{\"keccak256\":\"0x2a06657ce005059e60a0765fe090240732d910fc38de43ca8fd48804bb86c5e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f893e1d80c28099c028560f96fdbc77fb28c5f3a5d30197e8274a130aa50c20b\",\"dweb:/ipfs/QmQ2WReybvHmivdwmSdZa4G3sCPJnJ4Ars9fYvb1byUPrw\"]},\"imports/solidstate/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x4d6ba63d71b8cddb57746d564cc904931d1ee479052a19f902787417ee5d97a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a13877552ba5a5678585fddd45ead718e195454a65b525a9fa21bc8bc6b1d317\",\"dweb:/ipfs/QmQ2jbrRE2JJKYo9baXvhU17X4URkYYPSXUud62UpDZn2k\"]},\"imports/solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"]},\"imports/solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol": {
				"ISolidStateDiamond": {
					"abi": [
						{
							"inputs": [],
							"name": "DiamondWritable__InvalidInitializationParameters",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__RemoveTargetNotZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__ReplaceTargetIsIdentical",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorAlreadyAdded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorIsImmutable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotSpecified",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__TargetHasNoCode",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotTransitiveOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Proxy__ImplementationIsNotContract",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SafeOwnable__NotNomineeOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "enum IDiamondWritableInternal.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"indexed": false,
									"internalType": "struct IDiamondWritableInternal.FacetCut[]",
									"name": "facetCuts",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "DiamondCut",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "enum IDiamondWritableInternal.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"internalType": "struct IDiamondWritableInternal.FacetCut[]",
									"name": "facetCuts",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "diamondCut",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "selector",
									"type": "bytes4"
								}
							],
							"name": "facetAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "facet",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "facetAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "addresses",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "facet",
									"type": "address"
								}
							],
							"name": "facetFunctionSelectors",
							"outputs": [
								{
									"internalType": "bytes4[]",
									"name": "selectors",
									"type": "bytes4[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "facets",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"internalType": "struct IDiamondReadable.Facet[]",
									"name": "diamondFacets",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFallbackAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "fallbackAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nomineeOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "fallbackAddress",
									"type": "address"
								}
							],
							"name": "setFallbackAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"params": {
									"data": "optional initialization function call data",
									"facetCuts": "array of structured Diamond facet update data",
									"target": "optional target of initialization delegatecall"
								}
							},
							"facetAddress(bytes4)": {
								"params": {
									"selector": "function selector to query"
								},
								"returns": {
									"facet": "facet address (zero address if not found)"
								}
							},
							"facetAddresses()": {
								"returns": {
									"addresses": "array of facet addresses"
								}
							},
							"facetFunctionSelectors(address)": {
								"params": {
									"facet": "address of facet to query"
								},
								"returns": {
									"selectors": "array of function selectors"
								}
							},
							"facets()": {
								"returns": {
									"diamondFacets": "array of structured facet data"
								}
							},
							"getFallbackAddress()": {
								"returns": {
									"fallbackAddress": "address of fallback implementation"
								}
							},
							"owner()": {
								"returns": {
									"_0": "contract owner"
								}
							},
							"setFallbackAddress(address)": {
								"params": {
									"fallbackAddress": "address of fallback implementation"
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"interfaceId": "interface id"
								},
								"returns": {
									"_0": "bool whether interface is supported"
								}
							},
							"transferOwnership(address)": {
								"params": {
									"account": "address of new owner"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": "1f931c1c",
							"facetAddress(bytes4)": "cdffacc6",
							"facetAddresses()": "52ef6b2c",
							"facetFunctionSelectors(address)": "adfca15e",
							"facets()": "7a0ed627",
							"getFallbackAddress()": "2c408059",
							"nomineeOwner()": "8ab5150a",
							"owner()": "8da5cb5b",
							"setFallbackAddress(address)": "91423765",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DiamondWritable__InvalidInitializationParameters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__RemoveTargetNotZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__ReplaceTargetIsIdentical\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorAlreadyAdded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorIsImmutable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__TargetHasNoCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Proxy__ImplementationIsNotContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeOwnable__NotNomineeOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondWritableInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamondWritableInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondWritableInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondWritableInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"diamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"facetAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"facet\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facetAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"facet\",\"type\":\"address\"}],\"name\":\"facetFunctionSelectors\",\"outputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondReadable.Facet[]\",\"name\":\"diamondFacets\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFallbackAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"fallbackAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nomineeOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fallbackAddress\",\"type\":\"address\"}],\"name\":\"setFallbackAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"params\":{\"data\":\"optional initialization function call data\",\"facetCuts\":\"array of structured Diamond facet update data\",\"target\":\"optional target of initialization delegatecall\"}},\"facetAddress(bytes4)\":{\"params\":{\"selector\":\"function selector to query\"},\"returns\":{\"facet\":\"facet address (zero address if not found)\"}},\"facetAddresses()\":{\"returns\":{\"addresses\":\"array of facet addresses\"}},\"facetFunctionSelectors(address)\":{\"params\":{\"facet\":\"address of facet to query\"},\"returns\":{\"selectors\":\"array of function selectors\"}},\"facets()\":{\"returns\":{\"diamondFacets\":\"array of structured facet data\"}},\"getFallbackAddress()\":{\"returns\":{\"fallbackAddress\":\"address of fallback implementation\"}},\"owner()\":{\"returns\":{\"_0\":\"contract owner\"}},\"setFallbackAddress(address)\":{\"params\":{\"fallbackAddress\":\"address of fallback implementation\"}},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"interface id\"},\"returns\":{\"_0\":\"bool whether interface is supported\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"accept transfer of contract ownership\"},\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"notice\":\"update diamond facets and optionally execute arbitrary initialization function\"},\"facetAddress(bytes4)\":{\"notice\":\"get the address of the facet associated with given selector\"},\"facetAddresses()\":{\"notice\":\"get addresses of all facets used by diamond\"},\"facetFunctionSelectors(address)\":{\"notice\":\"get all selectors for given facet address\"},\"facets()\":{\"notice\":\"get all facets and their selectors\"},\"getFallbackAddress()\":{\"notice\":\"query the address of the fallback implementation\"},\"nomineeOwner()\":{\"notice\":\"get the nominated owner who has permission to call acceptOwnership\"},\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"setFallbackAddress(address)\":{\"notice\":\"set the address of the fallback implementation\"},\"supportsInterface(bytes4)\":{\"notice\":\"query whether contract has registered support for given interface\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol\":\"ISolidStateDiamond\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0xee77272fcf35108e2103ebb4f5d68d46844c447d9d2e411f8f9136298ae1bc2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fef49f85af45dbadb55c259528e33fb91ecd74942305c101ee33120211b6dc0d\",\"dweb:/ipfs/QmVRVH7aWFQrSqWvku3E9LQAEar9L7bmxXrPoXLCpZDkLb\"]},\"imports/solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"]},\"imports/solidstate/contracts/access/ownable/ISafeOwnable.sol\":{\"keccak256\":\"0xfb9a7920498ab2bb3d493c292c40223eb3a6631431ea381ca39274b165c60102\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d720242e56f4aedf2975f4deba5ff4a177668d3b8c9c40c1a240a17a2f8a7c38\",\"dweb:/ipfs/QmfCcZ4ACMDULUjmPcrUNUY88i17pHYEkDFpxyKCcHsUP3\"]},\"imports/solidstate/contracts/access/ownable/ISafeOwnableInternal.sol\":{\"keccak256\":\"0xd5d44576a2f82b4ffdcf29feec6043e82436011784d92567a968609aa49a0f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43961ad59d89c044a403ebb3fdd8c9be9b01a59d5e549ef205423725dcfb9889\",\"dweb:/ipfs/QmeatkxGznGMCHXAz2CHTTSbk5HjUXzrjEtMc8CppNxnTZ\"]},\"imports/solidstate/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xc250e493770feaa0da8e5a55d241712c1c6526caa7d8df2455c3e5fa25124c0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://768e47d9ddeb15daeab0c8c1109ae43a4c2a0633bd9e4bf141488dfc9252f7ba\",\"dweb:/ipfs/QmWMTTRTncar9LptrxU7WK7WG5hHp8KsYnBGfm3cYowuP8\"]},\"imports/solidstate/contracts/interfaces/IERC165Internal.sol\":{\"keccak256\":\"0xf4d4708a60ed04887849509a258db49d4eb686f33214cb9c9643325cd8dae89d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66e7ade64c12edf7adbc0f20c1195b3c635ea2df67b836215441a4fe22ae17da\",\"dweb:/ipfs/QmUAbU31ZYg3FrKzXCk8CE1FbCg6LNoB5HpR4pU2QwZc7p\"]},\"imports/solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0xf1c1fbf0ec82110c29d549db1fbd8ec728ba0b995dc5f087e0a5464243135dce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16c7f3eba0547576833d0c1fddb7ec34aeba4f28b4ce9e878c3bd3ebc9c8d3d1\",\"dweb:/ipfs/Qme79eYLo7dinnhotgC4bvYnCg4doBDShHeCajrf5zpAUF\"]},\"imports/solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]},\"imports/solidstate/contracts/proxy/IProxy.sol\":{\"keccak256\":\"0x2a06657ce005059e60a0765fe090240732d910fc38de43ca8fd48804bb86c5e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f893e1d80c28099c028560f96fdbc77fb28c5f3a5d30197e8274a130aa50c20b\",\"dweb:/ipfs/QmQ2WReybvHmivdwmSdZa4G3sCPJnJ4Ars9fYvb1byUPrw\"]},\"imports/solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol\":{\"keccak256\":\"0x541fe148acc6b9331149498d6f66308761a650da10c9bd8f9e933bdfec52f730\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca4739de22c9d58ff72fbd29c5a9a3072eb0ede8fc66a4f9345ba25f6d1e80cc\",\"dweb:/ipfs/Qmbo93KbYF1K7pUpjZKkUP2ABLhayyLAzVs9AnZ9vwZHUA\"]},\"imports/solidstate/contracts/proxy/diamond/base/IDiamondBase.sol\":{\"keccak256\":\"0x3329852027ffb50519a245376a1dee8f828223c0fa439bbb16a80a1bc226c2fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4343964d070386d12d9e663607ad96e5134d4edd12234cb6412911ba77bcc5a9\",\"dweb:/ipfs/Qmbhp7gZRWRdryatZbjbgcxT4aWy9siaLWDXNoB1oCRWis\"]},\"imports/solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol\":{\"keccak256\":\"0x1b52280562511510101b03ea1c73d64645770582ba72aad8bb1633ccc8ae6d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://730e215de2e4fd1e401716d4bdf1c4a3d6c5c9bdce9b8000a18fa3b48a69857d\",\"dweb:/ipfs/QmPyC5QYjLBZikRwYUTxENz3nX26KDUKSsCvhvg5wbAv6r\"]},\"imports/solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol\":{\"keccak256\":\"0xe3536079514a210e74f6e93b62525d451ed75c50c82773f9574c24e886ebe1ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f815154b93cf0619d01f779f0b7b88e2bae701adb1f92a36bbe6132e5321b656\",\"dweb:/ipfs/QmYhYKEuVEEHD2hc5P1iegppfNHMUAvdqsA22RS1Nh16wr\"]},\"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol\":{\"keccak256\":\"0x3d7dd0fa5d4cef8889d507880fe68d0b1558f6c21c5855170c44ef7e2b05bcef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://641081382a63beee3cae8b0f40b3146710f5377a964843160bf79921815e528c\",\"dweb:/ipfs/QmfWcAeDRtcvnCTnv3PE7er7WD73n9ct1YvrmxYDQFt9wP\"]},\"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol\":{\"keccak256\":\"0x82e0eeb28c8b8bd1ee9c5dd3247fa3d4062d5c6d43061833714c88741ecb5605\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4488dbd8056f270930da3ecae6f42037274fcac0444cacc25a57153541acb740\",\"dweb:/ipfs/QmURtgVddgar1YecAXZDEDStGaX7tBZTmcuZQJkeiA9NzZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "accept transfer of contract ownership"
							},
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"notice": "update diamond facets and optionally execute arbitrary initialization function"
							},
							"facetAddress(bytes4)": {
								"notice": "get the address of the facet associated with given selector"
							},
							"facetAddresses()": {
								"notice": "get addresses of all facets used by diamond"
							},
							"facetFunctionSelectors(address)": {
								"notice": "get all selectors for given facet address"
							},
							"facets()": {
								"notice": "get all facets and their selectors"
							},
							"getFallbackAddress()": {
								"notice": "query the address of the fallback implementation"
							},
							"nomineeOwner()": {
								"notice": "get the nominated owner who has permission to call acceptOwnership"
							},
							"owner()": {
								"notice": "get the ERC173 contract owner"
							},
							"setFallbackAddress(address)": {
								"notice": "set the address of the fallback implementation"
							},
							"supportsInterface(bytes4)": {
								"notice": "query whether contract has registered support for given interface"
							},
							"transferOwnership(address)": {
								"notice": "transfer contract ownership to new account"
							}
						},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol": {
				"SolidStateDiamond": {
					"abi": [
						{
							"inputs": [],
							"name": "DiamondWritable__InvalidInitializationParameters",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__RemoveTargetNotZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__ReplaceTargetIsIdentical",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorAlreadyAdded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorIsImmutable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotSpecified",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__TargetHasNoCode",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC165Base__InvalidInterfaceId",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotTransitiveOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Proxy__ImplementationIsNotContract",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SafeOwnable__NotNomineeOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "enum IDiamondWritableInternal.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"indexed": false,
									"internalType": "struct IDiamondWritableInternal.FacetCut[]",
									"name": "facetCuts",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "DiamondCut",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "enum IDiamondWritableInternal.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"internalType": "struct IDiamondWritableInternal.FacetCut[]",
									"name": "facetCuts",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "diamondCut",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "selector",
									"type": "bytes4"
								}
							],
							"name": "facetAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "facet",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "facetAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "addresses",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "facet",
									"type": "address"
								}
							],
							"name": "facetFunctionSelectors",
							"outputs": [
								{
									"internalType": "bytes4[]",
									"name": "selectors",
									"type": "bytes4[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "facets",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"internalType": "struct IDiamondReadable.Facet[]",
									"name": "diamondFacets",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFallbackAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "fallbackAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nomineeOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "fallbackAddress",
									"type": "address"
								}
							],
							"name": "setFallbackAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"params": {
									"data": "optional initialization function call data",
									"facetCuts": "array of structured Diamond facet update data",
									"target": "optional target of initialization delegatecall"
								}
							},
							"facetAddress(bytes4)": {
								"params": {
									"selector": "function selector to query"
								},
								"returns": {
									"facet": "facet address (zero address if not found)"
								}
							},
							"facetAddresses()": {
								"returns": {
									"addresses": "array of facet addresses"
								}
							},
							"facetFunctionSelectors(address)": {
								"params": {
									"facet": "address of facet to query"
								},
								"returns": {
									"selectors": "array of function selectors"
								}
							},
							"facets()": {
								"returns": {
									"diamondFacets": "array of structured facet data"
								}
							},
							"getFallbackAddress()": {
								"returns": {
									"fallbackAddress": "address of fallback implementation"
								}
							},
							"owner()": {
								"returns": {
									"_0": "contract owner"
								}
							},
							"setFallbackAddress(address)": {
								"params": {
									"fallbackAddress": "address of fallback implementation"
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"interfaceId": "interface id"
								},
								"returns": {
									"_0": "bool whether interface is supported"
								}
							},
							"transferOwnership(address)": {
								"params": {
									"account": "address of new owner"
								}
							}
						},
						"title": "SolidState \"Diamond\" proxy reference implementation",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": "1f931c1c",
							"facetAddress(bytes4)": "cdffacc6",
							"facetAddresses()": "52ef6b2c",
							"facetFunctionSelectors(address)": "adfca15e",
							"facets()": "7a0ed627",
							"getFallbackAddress()": "2c408059",
							"nomineeOwner()": "8ab5150a",
							"owner()": "8da5cb5b",
							"setFallbackAddress(address)": "91423765",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DiamondWritable__InvalidInitializationParameters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__RemoveTargetNotZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__ReplaceTargetIsIdentical\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorAlreadyAdded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorIsImmutable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__TargetHasNoCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC165Base__InvalidInterfaceId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Proxy__ImplementationIsNotContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeOwnable__NotNomineeOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondWritableInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamondWritableInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondWritableInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondWritableInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"diamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"facetAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"facet\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facetAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"facet\",\"type\":\"address\"}],\"name\":\"facetFunctionSelectors\",\"outputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondReadable.Facet[]\",\"name\":\"diamondFacets\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFallbackAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"fallbackAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nomineeOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fallbackAddress\",\"type\":\"address\"}],\"name\":\"setFallbackAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"params\":{\"data\":\"optional initialization function call data\",\"facetCuts\":\"array of structured Diamond facet update data\",\"target\":\"optional target of initialization delegatecall\"}},\"facetAddress(bytes4)\":{\"params\":{\"selector\":\"function selector to query\"},\"returns\":{\"facet\":\"facet address (zero address if not found)\"}},\"facetAddresses()\":{\"returns\":{\"addresses\":\"array of facet addresses\"}},\"facetFunctionSelectors(address)\":{\"params\":{\"facet\":\"address of facet to query\"},\"returns\":{\"selectors\":\"array of function selectors\"}},\"facets()\":{\"returns\":{\"diamondFacets\":\"array of structured facet data\"}},\"getFallbackAddress()\":{\"returns\":{\"fallbackAddress\":\"address of fallback implementation\"}},\"owner()\":{\"returns\":{\"_0\":\"contract owner\"}},\"setFallbackAddress(address)\":{\"params\":{\"fallbackAddress\":\"address of fallback implementation\"}},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"interface id\"},\"returns\":{\"_0\":\"bool whether interface is supported\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}}},\"title\":\"SolidState \\\"Diamond\\\" proxy reference implementation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"accept transfer of contract ownership\"},\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"notice\":\"update diamond facets and optionally execute arbitrary initialization function\"},\"facetAddress(bytes4)\":{\"notice\":\"get the address of the facet associated with given selector\"},\"facetAddresses()\":{\"notice\":\"get addresses of all facets used by diamond\"},\"facetFunctionSelectors(address)\":{\"notice\":\"get all selectors for given facet address\"},\"facets()\":{\"notice\":\"get all facets and their selectors\"},\"getFallbackAddress()\":{\"notice\":\"query the address of the fallback implementation\"},\"nomineeOwner()\":{\"notice\":\"get the nominated owner who has permission to call acceptOwnership\"},\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"setFallbackAddress(address)\":{\"notice\":\"set the address of the fallback implementation\"},\"supportsInterface(bytes4)\":{\"notice\":\"query whether contract has registered support for given interface\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":\"SolidStateDiamond\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0xee77272fcf35108e2103ebb4f5d68d46844c447d9d2e411f8f9136298ae1bc2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fef49f85af45dbadb55c259528e33fb91ecd74942305c101ee33120211b6dc0d\",\"dweb:/ipfs/QmVRVH7aWFQrSqWvku3E9LQAEar9L7bmxXrPoXLCpZDkLb\"]},\"imports/solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"]},\"imports/solidstate/contracts/access/ownable/ISafeOwnable.sol\":{\"keccak256\":\"0xfb9a7920498ab2bb3d493c292c40223eb3a6631431ea381ca39274b165c60102\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d720242e56f4aedf2975f4deba5ff4a177668d3b8c9c40c1a240a17a2f8a7c38\",\"dweb:/ipfs/QmfCcZ4ACMDULUjmPcrUNUY88i17pHYEkDFpxyKCcHsUP3\"]},\"imports/solidstate/contracts/access/ownable/ISafeOwnableInternal.sol\":{\"keccak256\":\"0xd5d44576a2f82b4ffdcf29feec6043e82436011784d92567a968609aa49a0f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43961ad59d89c044a403ebb3fdd8c9be9b01a59d5e549ef205423725dcfb9889\",\"dweb:/ipfs/QmeatkxGznGMCHXAz2CHTTSbk5HjUXzrjEtMc8CppNxnTZ\"]},\"imports/solidstate/contracts/access/ownable/Ownable.sol\":{\"keccak256\":\"0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc\",\"dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79\"]},\"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52\",\"dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF\"]},\"imports/solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995\",\"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM\"]},\"imports/solidstate/contracts/access/ownable/SafeOwnable.sol\":{\"keccak256\":\"0x84d5694ad1f6cc77170ec667b02080dca1ccdde26eddaf46960d95971df1a5f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd6b07d586dd3365884d48fb0dde9a46d03b4d5ee7508b1c817e261820bf29b9\",\"dweb:/ipfs/QmUwnEW2oK91S54MosgKk4YA44qhruMSFeGB6yLP58xByZ\"]},\"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":{\"keccak256\":\"0x1ab5cbb63b897d2bef48d4437ef9519fc15cd49ed976539c1d0fd262f087786f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e348b34065e6297fc7485f52d4671add3abc4c4329c9c907c30f315d91c80dd0\",\"dweb:/ipfs/Qmc7dvy2roTkJyi6G51Aoay8Mai7hGxBSBWHeXWSDwA9dL\"]},\"imports/solidstate/contracts/access/ownable/SafeOwnableStorage.sol\":{\"keccak256\":\"0x4818afb0b39e0770f881cbeaea1b1c77fba0daaa64bd8c1361d6e3a197628e93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db4cb17939eb9bf2d1ae1d8aec3c95495991a75b760a3ff211fb485ac4aeb1cb\",\"dweb:/ipfs/Qme93NCwDTb7B6MYCxLedZreEAjpEe9NCQFpPLsaT823jq\"]},\"imports/solidstate/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xc250e493770feaa0da8e5a55d241712c1c6526caa7d8df2455c3e5fa25124c0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://768e47d9ddeb15daeab0c8c1109ae43a4c2a0633bd9e4bf141488dfc9252f7ba\",\"dweb:/ipfs/QmWMTTRTncar9LptrxU7WK7WG5hHp8KsYnBGfm3cYowuP8\"]},\"imports/solidstate/contracts/interfaces/IERC165Internal.sol\":{\"keccak256\":\"0xf4d4708a60ed04887849509a258db49d4eb686f33214cb9c9643325cd8dae89d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66e7ade64c12edf7adbc0f20c1195b3c635ea2df67b836215441a4fe22ae17da\",\"dweb:/ipfs/QmUAbU31ZYg3FrKzXCk8CE1FbCg6LNoB5HpR4pU2QwZc7p\"]},\"imports/solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0xf1c1fbf0ec82110c29d549db1fbd8ec728ba0b995dc5f087e0a5464243135dce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16c7f3eba0547576833d0c1fddb7ec34aeba4f28b4ce9e878c3bd3ebc9c8d3d1\",\"dweb:/ipfs/Qme79eYLo7dinnhotgC4bvYnCg4doBDShHeCajrf5zpAUF\"]},\"imports/solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]},\"imports/solidstate/contracts/introspection/ERC165/base/ERC165Base.sol\":{\"keccak256\":\"0x3f2268856fdd9b27946adc65010bc83992069a90034bf692ab630802a926a9c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8f4aa0a9d369054fa3241abbf4a937eff32e42f7984ec2c11efe84b3536bdfd\",\"dweb:/ipfs/QmdL9cjvBLa5yszgCdxsqoh5BMYj6tJ2YWKPfLcRSzkA9c\"]},\"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":{\"keccak256\":\"0xad163d89454d9c8a018880253c5be156ee0f847f05a392a12b2a7061c7fa8682\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f76be2455986e64dd5108360e42087c7f5d87552d60a256ff616d3258c01fa7d\",\"dweb:/ipfs/QmZEYtAya7yeZQ6BWBUYeCetm5Wem3vaxiq3mdx4DLLtUJ\"]},\"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol\":{\"keccak256\":\"0xfd1cfba40f8aabda5898ffe21adeeea8c7011da12bfdad7f7aa0cf87b3635653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b80596a94faae265ecd9e03875ccebf5c1e45d94d8119dcf04e3a1cd92f5fb6\",\"dweb:/ipfs/QmVK8xje6PeEwVoZfFcugAdy43kLx59D9UHr4m8Qu9GgV9\"]},\"imports/solidstate/contracts/introspection/ERC165/base/IERC165Base.sol\":{\"keccak256\":\"0x288c50013c735cf30be90eb084589fc54bc0ee77a88ec69c3cc1efb11d7dccf4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://857c5836ad7808d13a87afa482af6ef2adbb26616767b2dd558b33ccb9569a28\",\"dweb:/ipfs/QmdptfxicGQUfsXFHpTW1y8NDV6k6oCuk5r9UqgGuv49Tk\"]},\"imports/solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol\":{\"keccak256\":\"0xccda4b118c8c09c276a0e577168aa404ea6207aad6b384b04f5f3a8923316422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcbafa161920a2a39ac001c76ee166ae4b345bef3ee6a0c5ca505504c0e9c052\",\"dweb:/ipfs/QmTF3DPJQPLsiYTmGNZXGBkmVRs14g2bUb1QJDH4ywwMq5\"]},\"imports/solidstate/contracts/proxy/IProxy.sol\":{\"keccak256\":\"0x2a06657ce005059e60a0765fe090240732d910fc38de43ca8fd48804bb86c5e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f893e1d80c28099c028560f96fdbc77fb28c5f3a5d30197e8274a130aa50c20b\",\"dweb:/ipfs/QmQ2WReybvHmivdwmSdZa4G3sCPJnJ4Ars9fYvb1byUPrw\"]},\"imports/solidstate/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x4d6ba63d71b8cddb57746d564cc904931d1ee479052a19f902787417ee5d97a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a13877552ba5a5678585fddd45ead718e195454a65b525a9fa21bc8bc6b1d317\",\"dweb:/ipfs/QmQ2jbrRE2JJKYo9baXvhU17X4URkYYPSXUud62UpDZn2k\"]},\"imports/solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol\":{\"keccak256\":\"0x541fe148acc6b9331149498d6f66308761a650da10c9bd8f9e933bdfec52f730\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca4739de22c9d58ff72fbd29c5a9a3072eb0ede8fc66a4f9345ba25f6d1e80cc\",\"dweb:/ipfs/Qmbo93KbYF1K7pUpjZKkUP2ABLhayyLAzVs9AnZ9vwZHUA\"]},\"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":{\"keccak256\":\"0xaa948c0ce846c4d4cec638b1b12580217b4782bbd1b25274d89bce5e2df14713\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6994f606378439530c8a902f448c3dd0d47a0592aa52a859d4344e9ebe6c7a4\",\"dweb:/ipfs/QmRbYWfMyVKEvNJNkwgrHGQd9tWmznhUrPaUzvW7vsv2iw\"]},\"imports/solidstate/contracts/proxy/diamond/base/DiamondBase.sol\":{\"keccak256\":\"0x6712d6c7bee937ac07ee00eeaa30895634fbd3cda7f5b5c179a2331ad05623df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c659c518ba877963adad6693287acdc9cc579603290df9ccf3d0c2a93af955e1\",\"dweb:/ipfs/QmPx59k37388TGXDT6EA2VZzBRWJQiT5F6H7Qt3cnPpQ3M\"]},\"imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":{\"keccak256\":\"0x74365666c0e9917d742bbab21e174dea6bc6ccf6146153e43dd9d9fe8417a36a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0328f0cee62d871c2ff5696384e213941623cd7d85e932205396c01416ceb77f\",\"dweb:/ipfs/QmR46DxncG2WVjxSBPAHziv2yXEknwm5tTHkd2nkv9neJD\"]},\"imports/solidstate/contracts/proxy/diamond/base/IDiamondBase.sol\":{\"keccak256\":\"0x3329852027ffb50519a245376a1dee8f828223c0fa439bbb16a80a1bc226c2fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4343964d070386d12d9e663607ad96e5134d4edd12234cb6412911ba77bcc5a9\",\"dweb:/ipfs/Qmbhp7gZRWRdryatZbjbgcxT4aWy9siaLWDXNoB1oCRWis\"]},\"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":{\"keccak256\":\"0x12dccd7f0e714012ac5e2746ea9c74c0eb990efab580ff45e1e3eef268b3fe54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b613f5140cae84540193a276a94e1b9959be2b51a57c3db5ea83ae8d16cc0f64\",\"dweb:/ipfs/QmPbbckwcC84kt6237L5829cXAcqvVfR91QLV684yfT9gk\"]},\"imports/solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol\":{\"keccak256\":\"0x1b52280562511510101b03ea1c73d64645770582ba72aad8bb1633ccc8ae6d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://730e215de2e4fd1e401716d4bdf1c4a3d6c5c9bdce9b8000a18fa3b48a69857d\",\"dweb:/ipfs/QmPyC5QYjLBZikRwYUTxENz3nX26KDUKSsCvhvg5wbAv6r\"]},\"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":{\"keccak256\":\"0x03fd06c9bd8642a42ece1d9f75c9e99869a06f4310fa9fe80df924ff68984036\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5f13b8c513694b11a7aca91cfb4e7cc0f025360c49f4ab5cdb7451a460bef38\",\"dweb:/ipfs/QmPpzhGud3ujg8tPygdMggpVzKThF7T9uVz5uuVJ9Yvp35\"]},\"imports/solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol\":{\"keccak256\":\"0xe3536079514a210e74f6e93b62525d451ed75c50c82773f9574c24e886ebe1ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f815154b93cf0619d01f779f0b7b88e2bae701adb1f92a36bbe6132e5321b656\",\"dweb:/ipfs/QmYhYKEuVEEHD2hc5P1iegppfNHMUAvdqsA22RS1Nh16wr\"]},\"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol\":{\"keccak256\":\"0xf481debe21720da2aa6a26492a57469b3592da44867935bc432f9ac8ffcdddd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b08ae74d3adc1415a0c1d34fd78b1b7bfdcf91c3b40123822cf33b28fe9f2aa\",\"dweb:/ipfs/Qmad6tp6wV3dKbqi2Mmaw4U89SvkXUEZ3EnD2NbQSwer5Y\"]},\"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":{\"keccak256\":\"0x741bbca02cacee6dab8dac18416f58200d75675600d7f6db7813e8385c4719e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ace0e6809a0b134b9697cbec3e2e3630828ff0b58c29cd0779eb50527c3b804d\",\"dweb:/ipfs/QmUvLY1kL8oAgCD7rQciRpq4mmKAANkzrtvPJo3m56e3BS\"]},\"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol\":{\"keccak256\":\"0x3d7dd0fa5d4cef8889d507880fe68d0b1558f6c21c5855170c44ef7e2b05bcef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://641081382a63beee3cae8b0f40b3146710f5377a964843160bf79921815e528c\",\"dweb:/ipfs/QmfWcAeDRtcvnCTnv3PE7er7WD73n9ct1YvrmxYDQFt9wP\"]},\"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol\":{\"keccak256\":\"0x82e0eeb28c8b8bd1ee9c5dd3247fa3d4062d5c6d43061833714c88741ecb5605\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4488dbd8056f270930da3ecae6f42037274fcac0444cacc25a57153541acb740\",\"dweb:/ipfs/QmURtgVddgar1YecAXZDEDStGaX7tBZTmcuZQJkeiA9NzZ\"]},\"imports/solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"]},\"imports/solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "accept transfer of contract ownership"
							},
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"notice": "update diamond facets and optionally execute arbitrary initialization function"
							},
							"facetAddress(bytes4)": {
								"notice": "get the address of the facet associated with given selector"
							},
							"facetAddresses()": {
								"notice": "get addresses of all facets used by diamond"
							},
							"facetFunctionSelectors(address)": {
								"notice": "get all selectors for given facet address"
							},
							"facets()": {
								"notice": "get all facets and their selectors"
							},
							"getFallbackAddress()": {
								"notice": "query the address of the fallback implementation"
							},
							"nomineeOwner()": {
								"notice": "get the nominated owner who has permission to call acceptOwnership"
							},
							"owner()": {
								"notice": "get the ERC173 contract owner"
							},
							"setFallbackAddress(address)": {
								"notice": "set the address of the fallback implementation"
							},
							"supportsInterface(bytes4)": {
								"notice": "query whether contract has registered support for given interface"
							},
							"transferOwnership(address)": {
								"notice": "transfer contract ownership to new account"
							}
						},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/proxy/diamond/base/DiamondBase.sol": {
				"DiamondBase": {
					"abi": [
						{
							"inputs": [],
							"name": "Proxy__ImplementationIsNotContract",
							"type": "error"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "see https://eips.ethereum.org/EIPS/eip-2535",
						"kind": "dev",
						"methods": {},
						"title": "EIP-2535 \"Diamond\" proxy base contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Proxy__ImplementationIsNotContract\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"see https://eips.ethereum.org/EIPS/eip-2535\",\"kind\":\"dev\",\"methods\":{},\"title\":\"EIP-2535 \\\"Diamond\\\" proxy base contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/proxy/diamond/base/DiamondBase.sol\":\"DiamondBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/proxy/IProxy.sol\":{\"keccak256\":\"0x2a06657ce005059e60a0765fe090240732d910fc38de43ca8fd48804bb86c5e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f893e1d80c28099c028560f96fdbc77fb28c5f3a5d30197e8274a130aa50c20b\",\"dweb:/ipfs/QmQ2WReybvHmivdwmSdZa4G3sCPJnJ4Ars9fYvb1byUPrw\"]},\"imports/solidstate/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x4d6ba63d71b8cddb57746d564cc904931d1ee479052a19f902787417ee5d97a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a13877552ba5a5678585fddd45ead718e195454a65b525a9fa21bc8bc6b1d317\",\"dweb:/ipfs/QmQ2jbrRE2JJKYo9baXvhU17X4URkYYPSXUud62UpDZn2k\"]},\"imports/solidstate/contracts/proxy/diamond/base/DiamondBase.sol\":{\"keccak256\":\"0x6712d6c7bee937ac07ee00eeaa30895634fbd3cda7f5b5c179a2331ad05623df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c659c518ba877963adad6693287acdc9cc579603290df9ccf3d0c2a93af955e1\",\"dweb:/ipfs/QmPx59k37388TGXDT6EA2VZzBRWJQiT5F6H7Qt3cnPpQ3M\"]},\"imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":{\"keccak256\":\"0x74365666c0e9917d742bbab21e174dea6bc6ccf6146153e43dd9d9fe8417a36a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0328f0cee62d871c2ff5696384e213941623cd7d85e932205396c01416ceb77f\",\"dweb:/ipfs/QmR46DxncG2WVjxSBPAHziv2yXEknwm5tTHkd2nkv9neJD\"]},\"imports/solidstate/contracts/proxy/diamond/base/IDiamondBase.sol\":{\"keccak256\":\"0x3329852027ffb50519a245376a1dee8f828223c0fa439bbb16a80a1bc226c2fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4343964d070386d12d9e663607ad96e5134d4edd12234cb6412911ba77bcc5a9\",\"dweb:/ipfs/Qmbhp7gZRWRdryatZbjbgcxT4aWy9siaLWDXNoB1oCRWis\"]},\"imports/solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"]},\"imports/solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol": {
				"DiamondBaseStorage": {
					"abi": [],
					"devdoc": {
						"details": "derived from https://github.com/mudgen/diamond-2 (MIT license)",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":137:805  library DiamondBaseStorage {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":137:805  library DiamondBaseStorage {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207f217e8089771eb1df84f188f9e819e43f913de451889bb037e0dfb1d846bee464736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207f217e8089771eb1df84f188f9e819e43f913de451889bb037e0dfb1d846bee464736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x217E8089771EB1DF84F188F9E819E43F913DE451889BB037E0DFB1D846BEE464 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "137:668:26:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;137:668:26;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207f217e8089771eb1df84f188f9e819e43f913de451889bb037e0dfb1d846bee464736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x217E8089771EB1DF84F188F9E819E43F913DE451889BB037E0DFB1D846BEE464 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "137:668:26:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"layout()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 137,
									"end": 805,
									"name": "PUSH #[$]",
									"source": 26,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 137,
									"end": 805,
									"name": "PUSH [$]",
									"source": 26,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 137,
									"end": 805,
									"name": "PUSH",
									"source": 26,
									"value": "B"
								},
								{
									"begin": 137,
									"end": 805,
									"name": "DUP3",
									"source": 26
								},
								{
									"begin": 137,
									"end": 805,
									"name": "DUP3",
									"source": 26
								},
								{
									"begin": 137,
									"end": 805,
									"name": "DUP3",
									"source": 26
								},
								{
									"begin": 137,
									"end": 805,
									"name": "CODECOPY",
									"source": 26
								},
								{
									"begin": 137,
									"end": 805,
									"name": "DUP1",
									"source": 26
								},
								{
									"begin": 137,
									"end": 805,
									"name": "MLOAD",
									"source": 26
								},
								{
									"begin": 137,
									"end": 805,
									"name": "PUSH",
									"source": 26,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 805,
									"name": "BYTE",
									"source": 26
								},
								{
									"begin": 137,
									"end": 805,
									"name": "PUSH",
									"source": 26,
									"value": "73"
								},
								{
									"begin": 137,
									"end": 805,
									"name": "EQ",
									"source": 26
								},
								{
									"begin": 137,
									"end": 805,
									"name": "PUSH [tag]",
									"source": 26,
									"value": "1"
								},
								{
									"begin": 137,
									"end": 805,
									"name": "JUMPI",
									"source": 26
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 137,
									"end": 805,
									"name": "PUSH",
									"source": 26,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 805,
									"name": "MSTORE",
									"source": 26
								},
								{
									"begin": 137,
									"end": 805,
									"name": "PUSH",
									"source": 26,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 805,
									"name": "PUSH",
									"source": 26,
									"value": "4"
								},
								{
									"begin": 137,
									"end": 805,
									"name": "MSTORE",
									"source": 26
								},
								{
									"begin": 137,
									"end": 805,
									"name": "PUSH",
									"source": 26,
									"value": "24"
								},
								{
									"begin": 137,
									"end": 805,
									"name": "PUSH",
									"source": 26,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 805,
									"name": "REVERT",
									"source": 26
								},
								{
									"begin": 137,
									"end": 805,
									"name": "tag",
									"source": 26,
									"value": "1"
								},
								{
									"begin": 137,
									"end": 805,
									"name": "JUMPDEST",
									"source": 26
								},
								{
									"begin": 137,
									"end": 805,
									"name": "ADDRESS",
									"source": 26
								},
								{
									"begin": 137,
									"end": 805,
									"name": "PUSH",
									"source": 26,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 805,
									"name": "MSTORE",
									"source": 26
								},
								{
									"begin": 137,
									"end": 805,
									"name": "PUSH",
									"source": 26,
									"value": "73"
								},
								{
									"begin": 137,
									"end": 805,
									"name": "DUP2",
									"source": 26
								},
								{
									"begin": 137,
									"end": 805,
									"name": "MSTORE8",
									"source": 26
								},
								{
									"begin": 137,
									"end": 805,
									"name": "DUP3",
									"source": 26
								},
								{
									"begin": 137,
									"end": 805,
									"name": "DUP2",
									"source": 26
								},
								{
									"begin": 137,
									"end": 805,
									"name": "RETURN",
									"source": 26
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207f217e8089771eb1df84f188f9e819e43f913de451889bb037e0dfb1d846bee464736f6c63430008130033",
									".code": [
										{
											"begin": 137,
											"end": 805,
											"name": "PUSHDEPLOYADDRESS",
											"source": 26
										},
										{
											"begin": 137,
											"end": 805,
											"name": "ADDRESS",
											"source": 26
										},
										{
											"begin": 137,
											"end": 805,
											"name": "EQ",
											"source": 26
										},
										{
											"begin": 137,
											"end": 805,
											"name": "PUSH",
											"source": 26,
											"value": "80"
										},
										{
											"begin": 137,
											"end": 805,
											"name": "PUSH",
											"source": 26,
											"value": "40"
										},
										{
											"begin": 137,
											"end": 805,
											"name": "MSTORE",
											"source": 26
										},
										{
											"begin": 137,
											"end": 805,
											"name": "PUSH",
											"source": 26,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 805,
											"name": "DUP1",
											"source": 26
										},
										{
											"begin": 137,
											"end": 805,
											"name": "REVERT",
											"source": 26
										}
									]
								}
							},
							"sourceList": [
								"abstracts/ERC2535.sol",
								"diamonds/Diamond.sol",
								"imports/solidstate/contracts/access/ownable/IOwnable.sol",
								"imports/solidstate/contracts/access/ownable/IOwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/ISafeOwnable.sol",
								"imports/solidstate/contracts/access/ownable/ISafeOwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/Ownable.sol",
								"imports/solidstate/contracts/access/ownable/OwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/OwnableStorage.sol",
								"imports/solidstate/contracts/access/ownable/SafeOwnable.sol",
								"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/SafeOwnableStorage.sol",
								"imports/solidstate/contracts/interfaces/IERC165.sol",
								"imports/solidstate/contracts/interfaces/IERC165Internal.sol",
								"imports/solidstate/contracts/interfaces/IERC173.sol",
								"imports/solidstate/contracts/interfaces/IERC173Internal.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/ERC165Base.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/IERC165Base.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol",
								"imports/solidstate/contracts/proxy/IProxy.sol",
								"imports/solidstate/contracts/proxy/Proxy.sol",
								"imports/solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol",
								"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol",
								"imports/solidstate/contracts/proxy/diamond/base/DiamondBase.sol",
								"imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol",
								"imports/solidstate/contracts/proxy/diamond/base/IDiamondBase.sol",
								"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol",
								"imports/solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol",
								"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol",
								"imports/solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol",
								"imports/solidstate/contracts/utils/AddressUtils.sol",
								"imports/solidstate/contracts/utils/UintUtils.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"derived from https://github.com/mudgen/diamond-2 (MIT license)\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":\"DiamondBaseStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":{\"keccak256\":\"0x74365666c0e9917d742bbab21e174dea6bc6ccf6146153e43dd9d9fe8417a36a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0328f0cee62d871c2ff5696384e213941623cd7d85e932205396c01416ceb77f\",\"dweb:/ipfs/QmR46DxncG2WVjxSBPAHziv2yXEknwm5tTHkd2nkv9neJD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/proxy/diamond/base/IDiamondBase.sol": {
				"IDiamondBase": {
					"abi": [
						{
							"inputs": [],
							"name": "Proxy__ImplementationIsNotContract",
							"type": "error"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Proxy__ImplementationIsNotContract\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/proxy/diamond/base/IDiamondBase.sol\":\"IDiamondBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/proxy/IProxy.sol\":{\"keccak256\":\"0x2a06657ce005059e60a0765fe090240732d910fc38de43ca8fd48804bb86c5e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f893e1d80c28099c028560f96fdbc77fb28c5f3a5d30197e8274a130aa50c20b\",\"dweb:/ipfs/QmQ2WReybvHmivdwmSdZa4G3sCPJnJ4Ars9fYvb1byUPrw\"]},\"imports/solidstate/contracts/proxy/diamond/base/IDiamondBase.sol\":{\"keccak256\":\"0x3329852027ffb50519a245376a1dee8f828223c0fa439bbb16a80a1bc226c2fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4343964d070386d12d9e663607ad96e5134d4edd12234cb6412911ba77bcc5a9\",\"dweb:/ipfs/Qmbhp7gZRWRdryatZbjbgcxT4aWy9siaLWDXNoB1oCRWis\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol": {
				"DiamondFallback": {
					"abi": [
						{
							"inputs": [],
							"name": "Ownable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotTransitiveOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Proxy__ImplementationIsNotContract",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "getFallbackAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "fallbackAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "fallbackAddress",
									"type": "address"
								}
							],
							"name": "setFallbackAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getFallbackAddress()": {
								"returns": {
									"fallbackAddress": "address of fallback implementation"
								}
							},
							"setFallbackAddress(address)": {
								"params": {
									"fallbackAddress": "address of fallback implementation"
								}
							}
						},
						"title": "Fallback feature for EIP-2535 \"Diamond\" proxy",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getFallbackAddress()": "2c408059",
							"setFallbackAddress(address)": "91423765"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Proxy__ImplementationIsNotContract\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"getFallbackAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"fallbackAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fallbackAddress\",\"type\":\"address\"}],\"name\":\"setFallbackAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getFallbackAddress()\":{\"returns\":{\"fallbackAddress\":\"address of fallback implementation\"}},\"setFallbackAddress(address)\":{\"params\":{\"fallbackAddress\":\"address of fallback implementation\"}}},\"title\":\"Fallback feature for EIP-2535 \\\"Diamond\\\" proxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getFallbackAddress()\":{\"notice\":\"query the address of the fallback implementation\"},\"setFallbackAddress(address)\":{\"notice\":\"set the address of the fallback implementation\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":\"DiamondFallback\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"]},\"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52\",\"dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF\"]},\"imports/solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995\",\"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM\"]},\"imports/solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0xf1c1fbf0ec82110c29d549db1fbd8ec728ba0b995dc5f087e0a5464243135dce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16c7f3eba0547576833d0c1fddb7ec34aeba4f28b4ce9e878c3bd3ebc9c8d3d1\",\"dweb:/ipfs/Qme79eYLo7dinnhotgC4bvYnCg4doBDShHeCajrf5zpAUF\"]},\"imports/solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]},\"imports/solidstate/contracts/proxy/IProxy.sol\":{\"keccak256\":\"0x2a06657ce005059e60a0765fe090240732d910fc38de43ca8fd48804bb86c5e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f893e1d80c28099c028560f96fdbc77fb28c5f3a5d30197e8274a130aa50c20b\",\"dweb:/ipfs/QmQ2WReybvHmivdwmSdZa4G3sCPJnJ4Ars9fYvb1byUPrw\"]},\"imports/solidstate/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x4d6ba63d71b8cddb57746d564cc904931d1ee479052a19f902787417ee5d97a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a13877552ba5a5678585fddd45ead718e195454a65b525a9fa21bc8bc6b1d317\",\"dweb:/ipfs/QmQ2jbrRE2JJKYo9baXvhU17X4URkYYPSXUud62UpDZn2k\"]},\"imports/solidstate/contracts/proxy/diamond/base/DiamondBase.sol\":{\"keccak256\":\"0x6712d6c7bee937ac07ee00eeaa30895634fbd3cda7f5b5c179a2331ad05623df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c659c518ba877963adad6693287acdc9cc579603290df9ccf3d0c2a93af955e1\",\"dweb:/ipfs/QmPx59k37388TGXDT6EA2VZzBRWJQiT5F6H7Qt3cnPpQ3M\"]},\"imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":{\"keccak256\":\"0x74365666c0e9917d742bbab21e174dea6bc6ccf6146153e43dd9d9fe8417a36a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0328f0cee62d871c2ff5696384e213941623cd7d85e932205396c01416ceb77f\",\"dweb:/ipfs/QmR46DxncG2WVjxSBPAHziv2yXEknwm5tTHkd2nkv9neJD\"]},\"imports/solidstate/contracts/proxy/diamond/base/IDiamondBase.sol\":{\"keccak256\":\"0x3329852027ffb50519a245376a1dee8f828223c0fa439bbb16a80a1bc226c2fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4343964d070386d12d9e663607ad96e5134d4edd12234cb6412911ba77bcc5a9\",\"dweb:/ipfs/Qmbhp7gZRWRdryatZbjbgcxT4aWy9siaLWDXNoB1oCRWis\"]},\"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":{\"keccak256\":\"0x12dccd7f0e714012ac5e2746ea9c74c0eb990efab580ff45e1e3eef268b3fe54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b613f5140cae84540193a276a94e1b9959be2b51a57c3db5ea83ae8d16cc0f64\",\"dweb:/ipfs/QmPbbckwcC84kt6237L5829cXAcqvVfR91QLV684yfT9gk\"]},\"imports/solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol\":{\"keccak256\":\"0x1b52280562511510101b03ea1c73d64645770582ba72aad8bb1633ccc8ae6d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://730e215de2e4fd1e401716d4bdf1c4a3d6c5c9bdce9b8000a18fa3b48a69857d\",\"dweb:/ipfs/QmPyC5QYjLBZikRwYUTxENz3nX26KDUKSsCvhvg5wbAv6r\"]},\"imports/solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"]},\"imports/solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getFallbackAddress()": {
								"notice": "query the address of the fallback implementation"
							},
							"setFallbackAddress(address)": {
								"notice": "set the address of the fallback implementation"
							}
						},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol": {
				"IDiamondFallback": {
					"abi": [
						{
							"inputs": [],
							"name": "Proxy__ImplementationIsNotContract",
							"type": "error"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "getFallbackAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "fallbackAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "fallbackAddress",
									"type": "address"
								}
							],
							"name": "setFallbackAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getFallbackAddress()": {
								"returns": {
									"fallbackAddress": "address of fallback implementation"
								}
							},
							"setFallbackAddress(address)": {
								"params": {
									"fallbackAddress": "address of fallback implementation"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getFallbackAddress()": "2c408059",
							"setFallbackAddress(address)": "91423765"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Proxy__ImplementationIsNotContract\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"getFallbackAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"fallbackAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fallbackAddress\",\"type\":\"address\"}],\"name\":\"setFallbackAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getFallbackAddress()\":{\"returns\":{\"fallbackAddress\":\"address of fallback implementation\"}},\"setFallbackAddress(address)\":{\"params\":{\"fallbackAddress\":\"address of fallback implementation\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getFallbackAddress()\":{\"notice\":\"query the address of the fallback implementation\"},\"setFallbackAddress(address)\":{\"notice\":\"set the address of the fallback implementation\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol\":\"IDiamondFallback\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/proxy/IProxy.sol\":{\"keccak256\":\"0x2a06657ce005059e60a0765fe090240732d910fc38de43ca8fd48804bb86c5e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f893e1d80c28099c028560f96fdbc77fb28c5f3a5d30197e8274a130aa50c20b\",\"dweb:/ipfs/QmQ2WReybvHmivdwmSdZa4G3sCPJnJ4Ars9fYvb1byUPrw\"]},\"imports/solidstate/contracts/proxy/diamond/base/IDiamondBase.sol\":{\"keccak256\":\"0x3329852027ffb50519a245376a1dee8f828223c0fa439bbb16a80a1bc226c2fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4343964d070386d12d9e663607ad96e5134d4edd12234cb6412911ba77bcc5a9\",\"dweb:/ipfs/Qmbhp7gZRWRdryatZbjbgcxT4aWy9siaLWDXNoB1oCRWis\"]},\"imports/solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol\":{\"keccak256\":\"0x1b52280562511510101b03ea1c73d64645770582ba72aad8bb1633ccc8ae6d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://730e215de2e4fd1e401716d4bdf1c4a3d6c5c9bdce9b8000a18fa3b48a69857d\",\"dweb:/ipfs/QmPyC5QYjLBZikRwYUTxENz3nX26KDUKSsCvhvg5wbAv6r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getFallbackAddress()": {
								"notice": "query the address of the fallback implementation"
							},
							"setFallbackAddress(address)": {
								"notice": "set the address of the fallback implementation"
							}
						},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol": {
				"DiamondReadable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "selector",
									"type": "bytes4"
								}
							],
							"name": "facetAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "facet",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "facetAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "addresses",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "facet",
									"type": "address"
								}
							],
							"name": "facetFunctionSelectors",
							"outputs": [
								{
									"internalType": "bytes4[]",
									"name": "selectors",
									"type": "bytes4[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "facets",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"internalType": "struct IDiamondReadable.Facet[]",
									"name": "diamondFacets",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "derived from https://github.com/mudgen/diamond-2 (MIT license)",
						"kind": "dev",
						"methods": {
							"facetAddress(bytes4)": {
								"params": {
									"selector": "function selector to query"
								},
								"returns": {
									"facet": "facet address (zero address if not found)"
								}
							},
							"facetAddresses()": {
								"returns": {
									"addresses": "array of facet addresses"
								}
							},
							"facetFunctionSelectors(address)": {
								"params": {
									"facet": "address of facet to query"
								},
								"returns": {
									"selectors": "array of function selectors"
								}
							},
							"facets()": {
								"returns": {
									"diamondFacets": "array of structured facet data"
								}
							}
						},
						"title": "EIP-2535 \"Diamond\" proxy introspection contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"facetAddress(bytes4)": "cdffacc6",
							"facetAddresses()": "52ef6b2c",
							"facetFunctionSelectors(address)": "adfca15e",
							"facets()": "7a0ed627"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"facetAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"facet\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facetAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"facet\",\"type\":\"address\"}],\"name\":\"facetFunctionSelectors\",\"outputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondReadable.Facet[]\",\"name\":\"diamondFacets\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"derived from https://github.com/mudgen/diamond-2 (MIT license)\",\"kind\":\"dev\",\"methods\":{\"facetAddress(bytes4)\":{\"params\":{\"selector\":\"function selector to query\"},\"returns\":{\"facet\":\"facet address (zero address if not found)\"}},\"facetAddresses()\":{\"returns\":{\"addresses\":\"array of facet addresses\"}},\"facetFunctionSelectors(address)\":{\"params\":{\"facet\":\"address of facet to query\"},\"returns\":{\"selectors\":\"array of function selectors\"}},\"facets()\":{\"returns\":{\"diamondFacets\":\"array of structured facet data\"}}},\"title\":\"EIP-2535 \\\"Diamond\\\" proxy introspection contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"facetAddress(bytes4)\":{\"notice\":\"get the address of the facet associated with given selector\"},\"facetAddresses()\":{\"notice\":\"get addresses of all facets used by diamond\"},\"facetFunctionSelectors(address)\":{\"notice\":\"get all selectors for given facet address\"},\"facets()\":{\"notice\":\"get all facets and their selectors\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":\"DiamondReadable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":{\"keccak256\":\"0x74365666c0e9917d742bbab21e174dea6bc6ccf6146153e43dd9d9fe8417a36a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0328f0cee62d871c2ff5696384e213941623cd7d85e932205396c01416ceb77f\",\"dweb:/ipfs/QmR46DxncG2WVjxSBPAHziv2yXEknwm5tTHkd2nkv9neJD\"]},\"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":{\"keccak256\":\"0x03fd06c9bd8642a42ece1d9f75c9e99869a06f4310fa9fe80df924ff68984036\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5f13b8c513694b11a7aca91cfb4e7cc0f025360c49f4ab5cdb7451a460bef38\",\"dweb:/ipfs/QmPpzhGud3ujg8tPygdMggpVzKThF7T9uVz5uuVJ9Yvp35\"]},\"imports/solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol\":{\"keccak256\":\"0xe3536079514a210e74f6e93b62525d451ed75c50c82773f9574c24e886ebe1ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f815154b93cf0619d01f779f0b7b88e2bae701adb1f92a36bbe6132e5321b656\",\"dweb:/ipfs/QmYhYKEuVEEHD2hc5P1iegppfNHMUAvdqsA22RS1Nh16wr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"facetAddress(bytes4)": {
								"notice": "get the address of the facet associated with given selector"
							},
							"facetAddresses()": {
								"notice": "get addresses of all facets used by diamond"
							},
							"facetFunctionSelectors(address)": {
								"notice": "get all selectors for given facet address"
							},
							"facets()": {
								"notice": "get all facets and their selectors"
							}
						},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol": {
				"IDiamondReadable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "selector",
									"type": "bytes4"
								}
							],
							"name": "facetAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "facet",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "facetAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "addresses",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "facet",
									"type": "address"
								}
							],
							"name": "facetFunctionSelectors",
							"outputs": [
								{
									"internalType": "bytes4[]",
									"name": "selectors",
									"type": "bytes4[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "facets",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"internalType": "struct IDiamondReadable.Facet[]",
									"name": "diamondFacets",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "see https://eips.ethereum.org/EIPS/eip-2535",
						"kind": "dev",
						"methods": {
							"facetAddress(bytes4)": {
								"params": {
									"selector": "function selector to query"
								},
								"returns": {
									"facet": "facet address (zero address if not found)"
								}
							},
							"facetAddresses()": {
								"returns": {
									"addresses": "array of facet addresses"
								}
							},
							"facetFunctionSelectors(address)": {
								"params": {
									"facet": "address of facet to query"
								},
								"returns": {
									"selectors": "array of function selectors"
								}
							},
							"facets()": {
								"returns": {
									"diamondFacets": "array of structured facet data"
								}
							}
						},
						"title": "Diamond proxy introspection interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"facetAddress(bytes4)": "cdffacc6",
							"facetAddresses()": "52ef6b2c",
							"facetFunctionSelectors(address)": "adfca15e",
							"facets()": "7a0ed627"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"facetAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"facet\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facetAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"facet\",\"type\":\"address\"}],\"name\":\"facetFunctionSelectors\",\"outputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondReadable.Facet[]\",\"name\":\"diamondFacets\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"see https://eips.ethereum.org/EIPS/eip-2535\",\"kind\":\"dev\",\"methods\":{\"facetAddress(bytes4)\":{\"params\":{\"selector\":\"function selector to query\"},\"returns\":{\"facet\":\"facet address (zero address if not found)\"}},\"facetAddresses()\":{\"returns\":{\"addresses\":\"array of facet addresses\"}},\"facetFunctionSelectors(address)\":{\"params\":{\"facet\":\"address of facet to query\"},\"returns\":{\"selectors\":\"array of function selectors\"}},\"facets()\":{\"returns\":{\"diamondFacets\":\"array of structured facet data\"}}},\"title\":\"Diamond proxy introspection interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"facetAddress(bytes4)\":{\"notice\":\"get the address of the facet associated with given selector\"},\"facetAddresses()\":{\"notice\":\"get addresses of all facets used by diamond\"},\"facetFunctionSelectors(address)\":{\"notice\":\"get all selectors for given facet address\"},\"facets()\":{\"notice\":\"get all facets and their selectors\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol\":\"IDiamondReadable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol\":{\"keccak256\":\"0xe3536079514a210e74f6e93b62525d451ed75c50c82773f9574c24e886ebe1ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f815154b93cf0619d01f779f0b7b88e2bae701adb1f92a36bbe6132e5321b656\",\"dweb:/ipfs/QmYhYKEuVEEHD2hc5P1iegppfNHMUAvdqsA22RS1Nh16wr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"facetAddress(bytes4)": {
								"notice": "get the address of the facet associated with given selector"
							},
							"facetAddresses()": {
								"notice": "get addresses of all facets used by diamond"
							},
							"facetFunctionSelectors(address)": {
								"notice": "get all selectors for given facet address"
							},
							"facets()": {
								"notice": "get all facets and their selectors"
							}
						},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol": {
				"DiamondWritable": {
					"abi": [
						{
							"inputs": [],
							"name": "DiamondWritable__InvalidInitializationParameters",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__RemoveTargetNotZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__ReplaceTargetIsIdentical",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorAlreadyAdded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorIsImmutable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotSpecified",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__TargetHasNoCode",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotTransitiveOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "enum IDiamondWritableInternal.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"indexed": false,
									"internalType": "struct IDiamondWritableInternal.FacetCut[]",
									"name": "facetCuts",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "DiamondCut",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "enum IDiamondWritableInternal.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"internalType": "struct IDiamondWritableInternal.FacetCut[]",
									"name": "facetCuts",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "diamondCut",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"params": {
									"data": "optional initialization function call data",
									"facetCuts": "array of structured Diamond facet update data",
									"target": "optional target of initialization delegatecall"
								}
							}
						},
						"title": "EIP-2535 \"Diamond\" proxy update contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": "1f931c1c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DiamondWritable__InvalidInitializationParameters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__RemoveTargetNotZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__ReplaceTargetIsIdentical\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorAlreadyAdded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorIsImmutable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__TargetHasNoCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondWritableInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamondWritableInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondWritableInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondWritableInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"diamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"params\":{\"data\":\"optional initialization function call data\",\"facetCuts\":\"array of structured Diamond facet update data\",\"target\":\"optional target of initialization delegatecall\"}}},\"title\":\"EIP-2535 \\\"Diamond\\\" proxy update contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"notice\":\"update diamond facets and optionally execute arbitrary initialization function\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol\":\"DiamondWritable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"]},\"imports/solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52\",\"dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF\"]},\"imports/solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995\",\"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM\"]},\"imports/solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0xf1c1fbf0ec82110c29d549db1fbd8ec728ba0b995dc5f087e0a5464243135dce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16c7f3eba0547576833d0c1fddb7ec34aeba4f28b4ce9e878c3bd3ebc9c8d3d1\",\"dweb:/ipfs/Qme79eYLo7dinnhotgC4bvYnCg4doBDShHeCajrf5zpAUF\"]},\"imports/solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]},\"imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":{\"keccak256\":\"0x74365666c0e9917d742bbab21e174dea6bc6ccf6146153e43dd9d9fe8417a36a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0328f0cee62d871c2ff5696384e213941623cd7d85e932205396c01416ceb77f\",\"dweb:/ipfs/QmR46DxncG2WVjxSBPAHziv2yXEknwm5tTHkd2nkv9neJD\"]},\"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol\":{\"keccak256\":\"0xf481debe21720da2aa6a26492a57469b3592da44867935bc432f9ac8ffcdddd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b08ae74d3adc1415a0c1d34fd78b1b7bfdcf91c3b40123822cf33b28fe9f2aa\",\"dweb:/ipfs/Qmad6tp6wV3dKbqi2Mmaw4U89SvkXUEZ3EnD2NbQSwer5Y\"]},\"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":{\"keccak256\":\"0x741bbca02cacee6dab8dac18416f58200d75675600d7f6db7813e8385c4719e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ace0e6809a0b134b9697cbec3e2e3630828ff0b58c29cd0779eb50527c3b804d\",\"dweb:/ipfs/QmUvLY1kL8oAgCD7rQciRpq4mmKAANkzrtvPJo3m56e3BS\"]},\"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol\":{\"keccak256\":\"0x3d7dd0fa5d4cef8889d507880fe68d0b1558f6c21c5855170c44ef7e2b05bcef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://641081382a63beee3cae8b0f40b3146710f5377a964843160bf79921815e528c\",\"dweb:/ipfs/QmfWcAeDRtcvnCTnv3PE7er7WD73n9ct1YvrmxYDQFt9wP\"]},\"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol\":{\"keccak256\":\"0x82e0eeb28c8b8bd1ee9c5dd3247fa3d4062d5c6d43061833714c88741ecb5605\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4488dbd8056f270930da3ecae6f42037274fcac0444cacc25a57153541acb740\",\"dweb:/ipfs/QmURtgVddgar1YecAXZDEDStGaX7tBZTmcuZQJkeiA9NzZ\"]},\"imports/solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"]},\"imports/solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"notice": "update diamond facets and optionally execute arbitrary initialization function"
							}
						},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol": {
				"DiamondWritableInternal": {
					"abi": [
						{
							"inputs": [],
							"name": "DiamondWritable__InvalidInitializationParameters",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__RemoveTargetNotZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__ReplaceTargetIsIdentical",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorAlreadyAdded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorIsImmutable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotSpecified",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__TargetHasNoCode",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "enum IDiamondWritableInternal.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"indexed": false,
									"internalType": "struct IDiamondWritableInternal.FacetCut[]",
									"name": "facetCuts",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "DiamondCut",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DiamondWritable__InvalidInitializationParameters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__RemoveTargetNotZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__ReplaceTargetIsIdentical\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorAlreadyAdded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorIsImmutable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__TargetHasNoCode\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondWritableInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamondWritableInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":\"DiamondWritableInternal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":{\"keccak256\":\"0x74365666c0e9917d742bbab21e174dea6bc6ccf6146153e43dd9d9fe8417a36a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0328f0cee62d871c2ff5696384e213941623cd7d85e932205396c01416ceb77f\",\"dweb:/ipfs/QmR46DxncG2WVjxSBPAHziv2yXEknwm5tTHkd2nkv9neJD\"]},\"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":{\"keccak256\":\"0x741bbca02cacee6dab8dac18416f58200d75675600d7f6db7813e8385c4719e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ace0e6809a0b134b9697cbec3e2e3630828ff0b58c29cd0779eb50527c3b804d\",\"dweb:/ipfs/QmUvLY1kL8oAgCD7rQciRpq4mmKAANkzrtvPJo3m56e3BS\"]},\"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol\":{\"keccak256\":\"0x82e0eeb28c8b8bd1ee9c5dd3247fa3d4062d5c6d43061833714c88741ecb5605\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4488dbd8056f270930da3ecae6f42037274fcac0444cacc25a57153541acb740\",\"dweb:/ipfs/QmURtgVddgar1YecAXZDEDStGaX7tBZTmcuZQJkeiA9NzZ\"]},\"imports/solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"]},\"imports/solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol": {
				"IDiamondWritable": {
					"abi": [
						{
							"inputs": [],
							"name": "DiamondWritable__InvalidInitializationParameters",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__RemoveTargetNotZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__ReplaceTargetIsIdentical",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorAlreadyAdded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorIsImmutable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotSpecified",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__TargetHasNoCode",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "enum IDiamondWritableInternal.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"indexed": false,
									"internalType": "struct IDiamondWritableInternal.FacetCut[]",
									"name": "facetCuts",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "DiamondCut",
							"type": "event"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "enum IDiamondWritableInternal.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"internalType": "struct IDiamondWritableInternal.FacetCut[]",
									"name": "facetCuts",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "diamondCut",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "see https://eips.ethereum.org/EIPS/eip-2535",
						"kind": "dev",
						"methods": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"params": {
									"data": "optional initialization function call data",
									"facetCuts": "array of structured Diamond facet update data",
									"target": "optional target of initialization delegatecall"
								}
							}
						},
						"title": "Diamond proxy upgrade interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": "1f931c1c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DiamondWritable__InvalidInitializationParameters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__RemoveTargetNotZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__ReplaceTargetIsIdentical\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorAlreadyAdded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorIsImmutable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__TargetHasNoCode\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondWritableInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamondWritableInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondWritableInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondWritableInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"diamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"see https://eips.ethereum.org/EIPS/eip-2535\",\"kind\":\"dev\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"params\":{\"data\":\"optional initialization function call data\",\"facetCuts\":\"array of structured Diamond facet update data\",\"target\":\"optional target of initialization delegatecall\"}}},\"title\":\"Diamond proxy upgrade interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"notice\":\"update diamond facets and optionally execute arbitrary initialization function\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol\":\"IDiamondWritable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol\":{\"keccak256\":\"0x3d7dd0fa5d4cef8889d507880fe68d0b1558f6c21c5855170c44ef7e2b05bcef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://641081382a63beee3cae8b0f40b3146710f5377a964843160bf79921815e528c\",\"dweb:/ipfs/QmfWcAeDRtcvnCTnv3PE7er7WD73n9ct1YvrmxYDQFt9wP\"]},\"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol\":{\"keccak256\":\"0x82e0eeb28c8b8bd1ee9c5dd3247fa3d4062d5c6d43061833714c88741ecb5605\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4488dbd8056f270930da3ecae6f42037274fcac0444cacc25a57153541acb740\",\"dweb:/ipfs/QmURtgVddgar1YecAXZDEDStGaX7tBZTmcuZQJkeiA9NzZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"notice": "update diamond facets and optionally execute arbitrary initialization function"
							}
						},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol": {
				"IDiamondWritableInternal": {
					"abi": [
						{
							"inputs": [],
							"name": "DiamondWritable__InvalidInitializationParameters",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__RemoveTargetNotZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__ReplaceTargetIsIdentical",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorAlreadyAdded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorIsImmutable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotSpecified",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__TargetHasNoCode",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "enum IDiamondWritableInternal.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"indexed": false,
									"internalType": "struct IDiamondWritableInternal.FacetCut[]",
									"name": "facetCuts",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "DiamondCut",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DiamondWritable__InvalidInitializationParameters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__RemoveTargetNotZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__ReplaceTargetIsIdentical\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorAlreadyAdded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorIsImmutable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__TargetHasNoCode\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondWritableInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamondWritableInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol\":\"IDiamondWritableInternal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol\":{\"keccak256\":\"0x82e0eeb28c8b8bd1ee9c5dd3247fa3d4062d5c6d43061833714c88741ecb5605\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4488dbd8056f270930da3ecae6f42037274fcac0444cacc25a57153541acb740\",\"dweb:/ipfs/QmURtgVddgar1YecAXZDEDStGaX7tBZTmcuZQJkeiA9NzZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/utils/AddressUtils.sol": {
				"AddressUtils": {
					"abi": [
						{
							"inputs": [],
							"name": "AddressUtils__InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AddressUtils__NotContract",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AddressUtils__SendValueFailed",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"imports/solidstate/contracts/utils/AddressUtils.sol\":104:4215  library AddressUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"imports/solidstate/contracts/utils/AddressUtils.sol\":104:4215  library AddressUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b6256e6f1a9e4f1bc768f4516d3df0c840915d13b3be77d285f7c5997a2ebf3164736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b6256e6f1a9e4f1bc768f4516d3df0c840915d13b3be77d285f7c5997a2ebf3164736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 0x25 PUSH15 0x6F1A9E4F1BC768F4516D3DF0C84091 0x5D SGT 0xB3 0xBE PUSH24 0xD285F7C5997A2EBF3164736F6C6343000813003300000000 ",
							"sourceMap": "104:4111:36:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;104:4111:36;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b6256e6f1a9e4f1bc768f4516d3df0c840915d13b3be77d285f7c5997a2ebf3164736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 0x25 PUSH15 0x6F1A9E4F1BC768F4516D3DF0C84091 0x5D SGT 0xB3 0xBE PUSH24 0xD285F7C5997A2EBF3164736F6C6343000813003300000000 ",
							"sourceMap": "104:4111:36:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"excessivelySafeCall(address,uint256,uint256,uint16,bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"toString(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 104,
									"end": 4215,
									"name": "PUSH #[$]",
									"source": 36,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "PUSH [$]",
									"source": 36,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "PUSH",
									"source": 36,
									"value": "B"
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "DUP3",
									"source": 36
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "DUP3",
									"source": 36
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "DUP3",
									"source": 36
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "CODECOPY",
									"source": 36
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "DUP1",
									"source": 36
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "MLOAD",
									"source": 36
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "PUSH",
									"source": 36,
									"value": "0"
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "BYTE",
									"source": 36
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "PUSH",
									"source": 36,
									"value": "73"
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "EQ",
									"source": 36
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "PUSH [tag]",
									"source": 36,
									"value": "1"
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "JUMPI",
									"source": 36
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "PUSH",
									"source": 36,
									"value": "0"
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "MSTORE",
									"source": 36
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "PUSH",
									"source": 36,
									"value": "0"
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "PUSH",
									"source": 36,
									"value": "4"
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "MSTORE",
									"source": 36
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "PUSH",
									"source": 36,
									"value": "24"
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "PUSH",
									"source": 36,
									"value": "0"
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "REVERT",
									"source": 36
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "tag",
									"source": 36,
									"value": "1"
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "JUMPDEST",
									"source": 36
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "ADDRESS",
									"source": 36
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "PUSH",
									"source": 36,
									"value": "0"
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "MSTORE",
									"source": 36
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "PUSH",
									"source": 36,
									"value": "73"
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "DUP2",
									"source": 36
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "MSTORE8",
									"source": 36
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "DUP3",
									"source": 36
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "DUP2",
									"source": 36
								},
								{
									"begin": 104,
									"end": 4215,
									"name": "RETURN",
									"source": 36
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b6256e6f1a9e4f1bc768f4516d3df0c840915d13b3be77d285f7c5997a2ebf3164736f6c63430008130033",
									".code": [
										{
											"begin": 104,
											"end": 4215,
											"name": "PUSHDEPLOYADDRESS",
											"source": 36
										},
										{
											"begin": 104,
											"end": 4215,
											"name": "ADDRESS",
											"source": 36
										},
										{
											"begin": 104,
											"end": 4215,
											"name": "EQ",
											"source": 36
										},
										{
											"begin": 104,
											"end": 4215,
											"name": "PUSH",
											"source": 36,
											"value": "80"
										},
										{
											"begin": 104,
											"end": 4215,
											"name": "PUSH",
											"source": 36,
											"value": "40"
										},
										{
											"begin": 104,
											"end": 4215,
											"name": "MSTORE",
											"source": 36
										},
										{
											"begin": 104,
											"end": 4215,
											"name": "PUSH",
											"source": 36,
											"value": "0"
										},
										{
											"begin": 104,
											"end": 4215,
											"name": "DUP1",
											"source": 36
										},
										{
											"begin": 104,
											"end": 4215,
											"name": "REVERT",
											"source": 36
										}
									]
								}
							},
							"sourceList": [
								"abstracts/ERC2535.sol",
								"diamonds/Diamond.sol",
								"imports/solidstate/contracts/access/ownable/IOwnable.sol",
								"imports/solidstate/contracts/access/ownable/IOwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/ISafeOwnable.sol",
								"imports/solidstate/contracts/access/ownable/ISafeOwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/Ownable.sol",
								"imports/solidstate/contracts/access/ownable/OwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/OwnableStorage.sol",
								"imports/solidstate/contracts/access/ownable/SafeOwnable.sol",
								"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/SafeOwnableStorage.sol",
								"imports/solidstate/contracts/interfaces/IERC165.sol",
								"imports/solidstate/contracts/interfaces/IERC165Internal.sol",
								"imports/solidstate/contracts/interfaces/IERC173.sol",
								"imports/solidstate/contracts/interfaces/IERC173Internal.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/ERC165Base.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/IERC165Base.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol",
								"imports/solidstate/contracts/proxy/IProxy.sol",
								"imports/solidstate/contracts/proxy/Proxy.sol",
								"imports/solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol",
								"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol",
								"imports/solidstate/contracts/proxy/diamond/base/DiamondBase.sol",
								"imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol",
								"imports/solidstate/contracts/proxy/diamond/base/IDiamondBase.sol",
								"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol",
								"imports/solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol",
								"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol",
								"imports/solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol",
								"imports/solidstate/contracts/utils/AddressUtils.sol",
								"imports/solidstate/contracts/utils/UintUtils.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AddressUtils__InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AddressUtils__NotContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AddressUtils__SendValueFailed\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/utils/AddressUtils.sol\":\"AddressUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"]},\"imports/solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/solidstate/contracts/utils/UintUtils.sol": {
				"UintUtils": {
					"abi": [
						{
							"inputs": [],
							"name": "UintUtils__InsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "derived from https://github.com/OpenZeppelin/openzeppelin-contracts/ (MIT license)",
						"kind": "dev",
						"methods": {},
						"title": "utility functions for uint256 operations",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"imports/solidstate/contracts/utils/UintUtils.sol\":208:2004  library UintUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"imports/solidstate/contracts/utils/UintUtils.sol\":208:2004  library UintUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201e171b4db73b02fdbba84bf6ee198125b090653092c27c7315e0fac48b25a56064736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e171b4db73b02fdbba84bf6ee198125b090653092c27c7315e0fac48b25a56064736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E OR SHL 0x4D 0xB7 EXTCODESIZE MUL REVERT 0xBB 0xA8 0x4B 0xF6 0xEE NOT DUP2 0x25 0xB0 SWAP1 PUSH6 0x3092C27C7315 0xE0 STATICCALL 0xC4 DUP12 0x25 0xA5 PUSH1 0x64 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "208:1796:37:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;208:1796:37;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e171b4db73b02fdbba84bf6ee198125b090653092c27c7315e0fac48b25a56064736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E OR SHL 0x4D 0xB7 EXTCODESIZE MUL REVERT 0xBB 0xA8 0x4B 0xF6 0xEE NOT DUP2 0x25 0xB0 SWAP1 PUSH6 0x3092C27C7315 0xE0 STATICCALL 0xC4 DUP12 0x25 0xA5 PUSH1 0x64 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "208:1796:37:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,int256)": "infinite",
								"sub(uint256,int256)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 208,
									"end": 2004,
									"name": "PUSH #[$]",
									"source": 37,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "PUSH [$]",
									"source": 37,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "PUSH",
									"source": 37,
									"value": "B"
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "DUP3",
									"source": 37
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "DUP3",
									"source": 37
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "DUP3",
									"source": 37
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "CODECOPY",
									"source": 37
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "DUP1",
									"source": 37
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "MLOAD",
									"source": 37
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "PUSH",
									"source": 37,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "BYTE",
									"source": 37
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "PUSH",
									"source": 37,
									"value": "73"
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "EQ",
									"source": 37
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "PUSH [tag]",
									"source": 37,
									"value": "1"
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "JUMPI",
									"source": 37
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "PUSH",
									"source": 37,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "MSTORE",
									"source": 37
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "PUSH",
									"source": 37,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "PUSH",
									"source": 37,
									"value": "4"
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "MSTORE",
									"source": 37
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "PUSH",
									"source": 37,
									"value": "24"
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "PUSH",
									"source": 37,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "REVERT",
									"source": 37
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "tag",
									"source": 37,
									"value": "1"
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "JUMPDEST",
									"source": 37
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "ADDRESS",
									"source": 37
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "PUSH",
									"source": 37,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "MSTORE",
									"source": 37
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "PUSH",
									"source": 37,
									"value": "73"
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "DUP2",
									"source": 37
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "MSTORE8",
									"source": 37
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "DUP3",
									"source": 37
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "DUP2",
									"source": 37
								},
								{
									"begin": 208,
									"end": 2004,
									"name": "RETURN",
									"source": 37
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201e171b4db73b02fdbba84bf6ee198125b090653092c27c7315e0fac48b25a56064736f6c63430008130033",
									".code": [
										{
											"begin": 208,
											"end": 2004,
											"name": "PUSHDEPLOYADDRESS",
											"source": 37
										},
										{
											"begin": 208,
											"end": 2004,
											"name": "ADDRESS",
											"source": 37
										},
										{
											"begin": 208,
											"end": 2004,
											"name": "EQ",
											"source": 37
										},
										{
											"begin": 208,
											"end": 2004,
											"name": "PUSH",
											"source": 37,
											"value": "80"
										},
										{
											"begin": 208,
											"end": 2004,
											"name": "PUSH",
											"source": 37,
											"value": "40"
										},
										{
											"begin": 208,
											"end": 2004,
											"name": "MSTORE",
											"source": 37
										},
										{
											"begin": 208,
											"end": 2004,
											"name": "PUSH",
											"source": 37,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 2004,
											"name": "DUP1",
											"source": 37
										},
										{
											"begin": 208,
											"end": 2004,
											"name": "REVERT",
											"source": 37
										}
									]
								}
							},
							"sourceList": [
								"abstracts/ERC2535.sol",
								"diamonds/Diamond.sol",
								"imports/solidstate/contracts/access/ownable/IOwnable.sol",
								"imports/solidstate/contracts/access/ownable/IOwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/ISafeOwnable.sol",
								"imports/solidstate/contracts/access/ownable/ISafeOwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/Ownable.sol",
								"imports/solidstate/contracts/access/ownable/OwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/OwnableStorage.sol",
								"imports/solidstate/contracts/access/ownable/SafeOwnable.sol",
								"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol",
								"imports/solidstate/contracts/access/ownable/SafeOwnableStorage.sol",
								"imports/solidstate/contracts/interfaces/IERC165.sol",
								"imports/solidstate/contracts/interfaces/IERC165Internal.sol",
								"imports/solidstate/contracts/interfaces/IERC173.sol",
								"imports/solidstate/contracts/interfaces/IERC173Internal.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/ERC165Base.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/IERC165Base.sol",
								"imports/solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol",
								"imports/solidstate/contracts/proxy/IProxy.sol",
								"imports/solidstate/contracts/proxy/Proxy.sol",
								"imports/solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol",
								"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol",
								"imports/solidstate/contracts/proxy/diamond/base/DiamondBase.sol",
								"imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol",
								"imports/solidstate/contracts/proxy/diamond/base/IDiamondBase.sol",
								"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol",
								"imports/solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol",
								"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol",
								"imports/solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol",
								"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol",
								"imports/solidstate/contracts/utils/AddressUtils.sol",
								"imports/solidstate/contracts/utils/UintUtils.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"UintUtils__InsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"derived from https://github.com/OpenZeppelin/openzeppelin-contracts/ (MIT license)\",\"kind\":\"dev\",\"methods\":{},\"title\":\"utility functions for uint256 operations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/solidstate/contracts/utils/UintUtils.sol\":\"UintUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n --> imports/solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol:7:1:\n  |\n7 | interface IDiamondFallback is IDiamondBase {\n  | ^ (Relevant source part starts here and spans across multiple lines).\nNote: The payable fallback function is defined here.\n --> imports/solidstate/contracts/proxy/IProxy.sol:8:5:\n  |\n8 |     fallback() external payable;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 158,
						"file": "imports/solidstate/contracts/proxy/IProxy.sol",
						"message": "The payable fallback function is defined here.",
						"start": 130
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 626,
					"file": "imports/solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol",
					"start": 116
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n  --> imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol:13:1:\n   |\n13 | abstract contract DiamondFallback is\n   | ^ (Relevant source part starts here and spans across multiple lines).\nNote: The payable fallback function is defined here.\n  --> imports/solidstate/contracts/proxy/Proxy.sol:19:5:\n   |\n19 |     fallback() external payable virtual {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 1245,
						"file": "imports/solidstate/contracts/proxy/Proxy.sol",
						"message": "The payable fallback function is defined here.",
						"start": 536
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 1970,
					"file": "imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol",
					"start": 385
				},
				"type": "Warning"
			}
		],
		"sources": {
			"abstracts/ERC2535.sol": {
				"ast": {
					"absolutePath": "abstracts/ERC2535.sol",
					"exportedSymbols": {
						"DiamondBase": [
							991
						],
						"DiamondFallback": [
							1131
						],
						"DiamondReadable": [
							1663
						],
						"DiamondWritable": [
							1742
						],
						"ERC165Base": [
							484
						],
						"ERC165BaseStorage": [
							561
						],
						"ERC2535": [
							5
						],
						"IDiamondFallback": [
							1150
						],
						"IDiamondReadable": [
							1705
						],
						"IDiamondWritable": [
							2569
						],
						"IERC165": [
							421
						],
						"IERC173": [
							445
						],
						"IOwnable": [
							23
						],
						"ISafeOwnable": [
							55
						],
						"ISolidStateDiamond": [
							657
						],
						"Ownable": [
							101
						],
						"OwnableInternal": [
							225
						],
						"SafeOwnable": [
							301
						],
						"SolidStateDiamond": [
							943
						]
					},
					"id": 6,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol",
							"file": "imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 6,
							"sourceUnit": 944,
							"src": "56:74:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "SolidStateDiamond",
										"nameLocations": [
											"161:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 943,
										"src": "161:17:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "161:17:0"
								}
							],
							"canonicalName": "ERC2535",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 5,
							"linearizedBaseContracts": [
								5,
								943,
								484,
								536,
								572,
								581,
								301,
								382,
								101,
								1742,
								1663,
								1131,
								991,
								627,
								225,
								657,
								421,
								425,
								55,
								23,
								445,
								64,
								34,
								455,
								2549,
								2569,
								2611,
								1705,
								1150,
								1032,
								589
							],
							"name": "ERC2535",
							"nameLocation": "150:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 6,
							"src": "132:49:0",
							"usedErrors": [
								31,
								33,
								63,
								580,
								585,
								2587,
								2589,
								2591,
								2593,
								2595,
								2597,
								2599,
								2601
							]
						}
					],
					"src": "32:149:0"
				},
				"id": 0
			},
			"diamonds/Diamond.sol": {
				"ast": {
					"absolutePath": "diamonds/Diamond.sol",
					"exportedSymbols": {
						"Diamond": [
							12
						],
						"DiamondBase": [
							991
						],
						"DiamondFallback": [
							1131
						],
						"DiamondReadable": [
							1663
						],
						"DiamondWritable": [
							1742
						],
						"ERC165Base": [
							484
						],
						"ERC165BaseStorage": [
							561
						],
						"ERC2535": [
							5
						],
						"IDiamondFallback": [
							1150
						],
						"IDiamondReadable": [
							1705
						],
						"IDiamondWritable": [
							2569
						],
						"IERC165": [
							421
						],
						"IERC173": [
							445
						],
						"IOwnable": [
							23
						],
						"ISafeOwnable": [
							55
						],
						"ISolidStateDiamond": [
							657
						],
						"Ownable": [
							101
						],
						"OwnableInternal": [
							225
						],
						"SafeOwnable": [
							301
						],
						"SolidStateDiamond": [
							943
						]
					},
					"id": 13,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 7,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "abstracts/ERC2535.sol",
							"file": "abstracts/ERC2535.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 13,
							"sourceUnit": 6,
							"src": "56:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "ERC2535",
										"nameLocations": [
											"172:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 5,
										"src": "172:7:1"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "172:7:1"
								}
							],
							"canonicalName": "Diamond",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "89:62:1",
								"text": " ref https://eips.ethereum.org/EIPS/eip-2535#abstract"
							},
							"fullyImplemented": true,
							"id": 12,
							"linearizedBaseContracts": [
								12,
								5,
								943,
								484,
								536,
								572,
								581,
								301,
								382,
								101,
								1742,
								1663,
								1131,
								991,
								627,
								225,
								657,
								421,
								425,
								55,
								23,
								445,
								64,
								34,
								455,
								2549,
								2569,
								2611,
								1705,
								1150,
								1032,
								589
							],
							"name": "Diamond",
							"nameLocation": "161:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 13,
							"src": "152:30:1",
							"usedErrors": [
								31,
								33,
								63,
								580,
								585,
								2587,
								2589,
								2591,
								2593,
								2595,
								2597,
								2599,
								2601
							]
						}
					],
					"src": "32:150:1"
				},
				"id": 1
			},
			"imports/solidstate/contracts/access/ownable/IOwnable.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/access/ownable/IOwnable.sol",
					"exportedSymbols": {
						"IERC173": [
							445
						],
						"IOwnable": [
							23
						],
						"IOwnableInternal": [
							34
						]
					},
					"id": 24,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 14,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "imports/solidstate/contracts/interfaces/IERC173.sol",
							"file": "../../interfaces/IERC173.sol",
							"id": 16,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 24,
							"sourceUnit": 446,
							"src": "58:55:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 15,
										"name": "IERC173",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 445,
										"src": "67:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/access/ownable/IOwnableInternal.sol",
							"file": "./IOwnableInternal.sol",
							"id": 18,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 24,
							"sourceUnit": 35,
							"src": "114:58:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 17,
										"name": "IOwnableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 34,
										"src": "123:16:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 19,
										"name": "IOwnableInternal",
										"nameLocations": [
											"196:16:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 34,
										"src": "196:16:2"
									},
									"id": 20,
									"nodeType": "InheritanceSpecifier",
									"src": "196:16:2"
								},
								{
									"baseName": {
										"id": 21,
										"name": "IERC173",
										"nameLocations": [
											"214:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 445,
										"src": "214:7:2"
									},
									"id": 22,
									"nodeType": "InheritanceSpecifier",
									"src": "214:7:2"
								}
							],
							"canonicalName": "IOwnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 23,
							"linearizedBaseContracts": [
								23,
								445,
								34,
								455
							],
							"name": "IOwnable",
							"nameLocation": "184:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 24,
							"src": "174:50:2",
							"usedErrors": [
								31,
								33
							]
						}
					],
					"src": "33:192:2"
				},
				"id": 2
			},
			"imports/solidstate/contracts/access/ownable/IOwnableInternal.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/access/ownable/IOwnableInternal.sol",
					"exportedSymbols": {
						"IERC173Internal": [
							455
						],
						"IOwnableInternal": [
							34
						]
					},
					"id": 35,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 25,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "imports/solidstate/contracts/interfaces/IERC173Internal.sol",
							"file": "../../interfaces/IERC173Internal.sol",
							"id": 27,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 35,
							"sourceUnit": 456,
							"src": "58:71:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 26,
										"name": "IERC173Internal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 455,
										"src": "67:15:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 28,
										"name": "IERC173Internal",
										"nameLocations": [
											"161:15:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 455,
										"src": "161:15:3"
									},
									"id": 29,
									"nodeType": "InheritanceSpecifier",
									"src": "161:15:3"
								}
							],
							"canonicalName": "IOwnableInternal",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 34,
							"linearizedBaseContracts": [
								34,
								455
							],
							"name": "IOwnableInternal",
							"nameLocation": "141:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "2f7a8ee1",
									"id": 31,
									"name": "Ownable__NotOwner",
									"nameLocation": "189:17:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "206:2:3"
									},
									"src": "183:26:3"
								},
								{
									"errorSelector": "d0b49847",
									"id": 33,
									"name": "Ownable__NotTransitiveOwner",
									"nameLocation": "220:27:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "247:2:3"
									},
									"src": "214:36:3"
								}
							],
							"scope": 35,
							"src": "131:121:3",
							"usedErrors": [
								31,
								33
							]
						}
					],
					"src": "33:220:3"
				},
				"id": 3
			},
			"imports/solidstate/contracts/access/ownable/ISafeOwnable.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/access/ownable/ISafeOwnable.sol",
					"exportedSymbols": {
						"IOwnable": [
							23
						],
						"ISafeOwnable": [
							55
						],
						"ISafeOwnableInternal": [
							64
						]
					},
					"id": 56,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 36,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "imports/solidstate/contracts/access/ownable/IOwnable.sol",
							"file": "./IOwnable.sol",
							"id": 38,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 56,
							"sourceUnit": 24,
							"src": "58:42:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 37,
										"name": "IOwnable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 23,
										"src": "67:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/access/ownable/ISafeOwnableInternal.sol",
							"file": "./ISafeOwnableInternal.sol",
							"id": 40,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 56,
							"sourceUnit": 65,
							"src": "101:66:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 39,
										"name": "ISafeOwnableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 64,
										"src": "110:20:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 41,
										"name": "ISafeOwnableInternal",
										"nameLocations": [
											"195:20:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 64,
										"src": "195:20:4"
									},
									"id": 42,
									"nodeType": "InheritanceSpecifier",
									"src": "195:20:4"
								},
								{
									"baseName": {
										"id": 43,
										"name": "IOwnable",
										"nameLocations": [
											"217:8:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 23,
										"src": "217:8:4"
									},
									"id": 44,
									"nodeType": "InheritanceSpecifier",
									"src": "217:8:4"
								}
							],
							"canonicalName": "ISafeOwnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 55,
							"linearizedBaseContracts": [
								55,
								23,
								445,
								64,
								34,
								455
							],
							"name": "ISafeOwnable",
							"nameLocation": "179:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "232:93:4",
										"text": " @notice get the nominated owner who has permission to call acceptOwnership"
									},
									"functionSelector": "8ab5150a",
									"id": 50,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nomineeOwner",
									"nameLocation": "339:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "351:2:4"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "377:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "377:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "376:9:4"
									},
									"scope": 55,
									"src": "330:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "392:64:4",
										"text": " @notice accept transfer of contract ownership"
									},
									"functionSelector": "79ba5097",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nameLocation": "470:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "485:2:4"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "496:0:4"
									},
									"scope": 55,
									"src": "461:36:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 56,
							"src": "169:330:4",
							"usedErrors": [
								31,
								33,
								63
							]
						}
					],
					"src": "33:467:4"
				},
				"id": 4
			},
			"imports/solidstate/contracts/access/ownable/ISafeOwnableInternal.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/access/ownable/ISafeOwnableInternal.sol",
					"exportedSymbols": {
						"IOwnableInternal": [
							34
						],
						"ISafeOwnableInternal": [
							64
						]
					},
					"id": 65,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 57,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "imports/solidstate/contracts/access/ownable/IOwnableInternal.sol",
							"file": "./IOwnableInternal.sol",
							"id": 59,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 65,
							"sourceUnit": 35,
							"src": "58:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 58,
										"name": "IOwnableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 34,
										"src": "67:16:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 60,
										"name": "IOwnableInternal",
										"nameLocations": [
											"152:16:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 34,
										"src": "152:16:5"
									},
									"id": 61,
									"nodeType": "InheritanceSpecifier",
									"src": "152:16:5"
								}
							],
							"canonicalName": "ISafeOwnableInternal",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 64,
							"linearizedBaseContracts": [
								64,
								34,
								455
							],
							"name": "ISafeOwnableInternal",
							"nameLocation": "128:20:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "efd1052d",
									"id": 63,
									"name": "SafeOwnable__NotNomineeOwner",
									"nameLocation": "181:28:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "209:2:5"
									},
									"src": "175:37:5"
								}
							],
							"scope": 65,
							"src": "118:96:5",
							"usedErrors": [
								31,
								33,
								63
							]
						}
					],
					"src": "33:182:5"
				},
				"id": 5
			},
			"imports/solidstate/contracts/access/ownable/Ownable.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/access/ownable/Ownable.sol",
					"exportedSymbols": {
						"IERC173": [
							445
						],
						"IOwnable": [
							23
						],
						"Ownable": [
							101
						],
						"OwnableInternal": [
							225
						]
					},
					"id": 102,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 66,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "imports/solidstate/contracts/interfaces/IERC173.sol",
							"file": "../../interfaces/IERC173.sol",
							"id": 68,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 102,
							"sourceUnit": 446,
							"src": "58:55:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 67,
										"name": "IERC173",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 445,
										"src": "67:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/access/ownable/IOwnable.sol",
							"file": "./IOwnable.sol",
							"id": 70,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 102,
							"sourceUnit": 24,
							"src": "114:42:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 69,
										"name": "IOwnable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 23,
										"src": "123:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/access/ownable/OwnableInternal.sol",
							"file": "./OwnableInternal.sol",
							"id": 72,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 102,
							"sourceUnit": 226,
							"src": "157:56:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 71,
										"name": "OwnableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 225,
										"src": "166:15:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 74,
										"name": "IOwnable",
										"nameLocations": [
											"303:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 23,
										"src": "303:8:6"
									},
									"id": 75,
									"nodeType": "InheritanceSpecifier",
									"src": "303:8:6"
								},
								{
									"baseName": {
										"id": 76,
										"name": "OwnableInternal",
										"nameLocations": [
											"313:15:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 225,
										"src": "313:15:6"
									},
									"id": 77,
									"nodeType": "InheritanceSpecifier",
									"src": "313:15:6"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 73,
								"nodeType": "StructuredDocumentation",
								"src": "215:58:6",
								"text": " @title Ownership access control based on ERC173"
							},
							"fullyImplemented": true,
							"id": 101,
							"linearizedBaseContracts": [
								101,
								225,
								23,
								445,
								34,
								455
							],
							"name": "Ownable",
							"nameLocation": "292:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										438
									],
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "433:32:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 83,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "450:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "450:8:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 82,
												"id": 85,
												"nodeType": "Return",
												"src": "443:15:6"
											}
										]
									},
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "335:38:6",
										"text": " @inheritdoc IERC173"
									},
									"functionSelector": "8da5cb5b",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "387:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "392:2:6"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "424:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "423:9:6"
									},
									"scope": 101,
									"src": "378:87:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										444
									],
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "583:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 96,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "612:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 95,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "593:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "593:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "593:27:6"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "471:38:6",
										"text": " @inheritdoc IERC173"
									},
									"functionSelector": "f2fde38b",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 93,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 92,
												"name": "onlyOwner",
												"nameLocations": [
													"573:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 129,
												"src": "573:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "573:9:6"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "523:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "549:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "541:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "541:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "540:17:6"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "583:0:6"
									},
									"scope": 101,
									"src": "514:113:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 102,
							"src": "274:355:6",
							"usedErrors": [
								31,
								33
							]
						}
					],
					"src": "33:597:6"
				},
				"id": 6
			},
			"imports/solidstate/contracts/access/ownable/OwnableInternal.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/access/ownable/OwnableInternal.sol",
					"exportedSymbols": {
						"AddressUtils": [
							2846
						],
						"IERC173": [
							445
						],
						"IOwnableInternal": [
							34
						],
						"OwnableInternal": [
							225
						],
						"OwnableStorage": [
							248
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 103,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "imports/solidstate/contracts/interfaces/IERC173.sol",
							"file": "../../interfaces/IERC173.sol",
							"id": 105,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 226,
							"sourceUnit": 446,
							"src": "58:55:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 104,
										"name": "IERC173",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 445,
										"src": "67:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/utils/AddressUtils.sol",
							"file": "../../utils/AddressUtils.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 226,
							"sourceUnit": 2847,
							"src": "114:60:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 106,
										"name": "AddressUtils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2846,
										"src": "123:12:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/access/ownable/IOwnableInternal.sol",
							"file": "./IOwnableInternal.sol",
							"id": 109,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 226,
							"sourceUnit": 35,
							"src": "175:58:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 108,
										"name": "IOwnableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 34,
										"src": "184:16:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/access/ownable/OwnableStorage.sol",
							"file": "./OwnableStorage.sol",
							"id": 111,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 226,
							"sourceUnit": 249,
							"src": "234:54:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 110,
										"name": "OwnableStorage",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 248,
										"src": "243:14:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 112,
										"name": "IOwnableInternal",
										"nameLocations": [
											"327:16:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 34,
										"src": "327:16:7"
									},
									"id": 113,
									"nodeType": "InheritanceSpecifier",
									"src": "327:16:7"
								}
							],
							"canonicalName": "OwnableInternal",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 225,
							"linearizedBaseContracts": [
								225,
								34,
								455
							],
							"name": "OwnableInternal",
							"nameLocation": "308:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 116,
									"libraryName": {
										"id": 114,
										"name": "AddressUtils",
										"nameLocations": [
											"356:12:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2846,
										"src": "356:12:7"
									},
									"nodeType": "UsingForDirective",
									"src": "350:31:7",
									"typeName": {
										"id": 115,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "373:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "408:82:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 118,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "422:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "426:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "422:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 120,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "436:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "436:8:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "422:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 126,
												"nodeType": "IfStatement",
												"src": "418:54:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 123,
															"name": "Ownable__NotOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "453:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "453:19:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 125,
													"nodeType": "RevertStatement",
													"src": "446:26:7"
												}
											},
											{
												"id": 127,
												"nodeType": "PlaceholderStatement",
												"src": "482:1:7"
											}
										]
									},
									"id": 129,
									"name": "onlyOwner",
									"nameLocation": "396:9:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "405:2:7"
									},
									"src": "387:103:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "527:114:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 131,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "541:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "545:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "541:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 133,
															"name": "_transitiveOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "555:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "555:18:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "541:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 139,
												"nodeType": "IfStatement",
												"src": "537:86:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 136,
															"name": "Ownable__NotTransitiveOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "594:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "594:29:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 138,
													"nodeType": "RevertStatement",
													"src": "587:36:7"
												}
											},
											{
												"id": 140,
												"nodeType": "PlaceholderStatement",
												"src": "633:1:7"
											}
										]
									},
									"id": 142,
									"name": "onlyTransitiveOwner",
									"nameLocation": "505:19:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "524:2:7"
									},
									"src": "496:145:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "705:53:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 147,
																"name": "OwnableStorage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "722:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_OwnableStorage_$248_$",
																	"typeString": "type(library OwnableStorage)"
																}
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "737:6:7",
															"memberName": "layout",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 247,
															"src": "722:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$230_storage_ptr_$",
																"typeString": "function () pure returns (struct OwnableStorage.Layout storage pointer)"
															}
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "722:23:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Layout_$230_storage_ptr",
															"typeString": "struct OwnableStorage.Layout storage pointer"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "746:5:7",
													"memberName": "owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 229,
													"src": "722:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 146,
												"id": 151,
												"nodeType": "Return",
												"src": "715:36:7"
											}
										]
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_owner",
									"nameLocation": "656:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:2:7"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "696:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "695:9:7"
									},
									"scope": 225,
									"src": "647:111:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "838:256:7",
										"statements": [
											{
												"expression": {
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 158,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "848:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 159,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "856:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "856:8:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "848:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "848:16:7"
											},
											{
												"body": {
													"id": 184,
													"nodeType": "Block",
													"src": "902:186:7",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 178,
																		"nodeType": "Block",
																		"src": "977:56:7",
																		"statements": [
																			{
																				"expression": {
																					"id": 176,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 174,
																						"name": "owner",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 156,
																						"src": "995:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 175,
																						"name": "transitiveOwner",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 172,
																						"src": "1003:15:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "995:23:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 177,
																				"nodeType": "ExpressionStatement",
																				"src": "995:23:7"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 179,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 173,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 172,
																				"mutability": "mutable",
																				"name": "transitiveOwner",
																				"nameLocation": "960:15:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 179,
																				"src": "952:23:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"typeName": {
																					"id": 171,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "952:7:7",
																					"stateMutability": "nonpayable",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "951:25:7"
																	},
																	"src": "943:90:7"
																},
																{
																	"block": {
																		"id": 181,
																		"nodeType": "Block",
																		"src": "1040:38:7",
																		"statements": [
																			{
																				"id": 180,
																				"nodeType": "Break",
																				"src": "1058:5:7"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 182,
																	"nodeType": "TryCatchClause",
																	"src": "1034:44:7"
																}
															],
															"externalCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 167,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 156,
																				"src": "928:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 166,
																			"name": "IERC173",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 445,
																			"src": "920:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC173_$445_$",
																				"typeString": "type(contract IERC173)"
																			}
																		},
																		"id": 168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "920:14:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC173_$445",
																			"typeString": "contract IERC173"
																		}
																	},
																	"id": 169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "935:5:7",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 438,
																	"src": "920:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "920:22:7",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 183,
															"nodeType": "TryStatement",
															"src": "916:162:7"
														}
													]
												},
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 163,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "882:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "888:10:7",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2659,
														"src": "882:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "882:18:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 185,
												"nodeType": "WhileStatement",
												"src": "875:213:7"
											}
										]
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transitiveOwner",
									"nameLocation": "773:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "789:2:7"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "831:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "823:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:7"
									},
									"scope": 225,
									"src": "764:330:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1162:35:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 193,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "1182:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 192,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "1172:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1172:18:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "1172:18:7"
											}
										]
									},
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "1109:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1136:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1128:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1128:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1127:17:7"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1162:0:7"
									},
									"scope": 225,
									"src": "1100:97:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "1256:154:7",
										"statements": [
											{
												"assignments": [
													206
												],
												"declarations": [
													{
														"constant": false,
														"id": 206,
														"mutability": "mutable",
														"name": "l",
														"nameLocation": "1296:1:7",
														"nodeType": "VariableDeclaration",
														"scope": 223,
														"src": "1266:31:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Layout_$230_storage_ptr",
															"typeString": "struct OwnableStorage.Layout"
														},
														"typeName": {
															"id": 205,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 204,
																"name": "OwnableStorage.Layout",
																"nameLocations": [
																	"1266:14:7",
																	"1281:6:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 230,
																"src": "1266:21:7"
															},
															"referencedDeclaration": 230,
															"src": "1266:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$230_storage_ptr",
																"typeString": "struct OwnableStorage.Layout"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 210,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 207,
															"name": "OwnableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "1300:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_OwnableStorage_$248_$",
																"typeString": "type(library OwnableStorage)"
															}
														},
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1315:6:7",
														"memberName": "layout",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 247,
														"src": "1300:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$230_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableStorage.Layout storage pointer)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1300:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Layout_$230_storage_ptr",
														"typeString": "struct OwnableStorage.Layout storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1266:57:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 212,
																"name": "l",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "1359:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$230_storage_ptr",
																	"typeString": "struct OwnableStorage.Layout storage pointer"
																}
															},
															"id": 213,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1361:5:7",
															"memberName": "owner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 229,
															"src": "1359:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 214,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "1368:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 211,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "1338:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1338:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "EmitStatement",
												"src": "1333:43:7"
											},
											{
												"expression": {
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 217,
															"name": "l",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "1386:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$230_storage_ptr",
																"typeString": "struct OwnableStorage.Layout storage pointer"
															}
														},
														"id": 219,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1388:5:7",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 229,
														"src": "1386:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 220,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "1396:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1386:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "1386:17:7"
											}
										]
									},
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setOwner",
									"nameLocation": "1212:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1230:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "1222:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:17:7"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1256:0:7"
									},
									"scope": 225,
									"src": "1203:207:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 226,
							"src": "290:1122:7",
							"usedErrors": [
								31,
								33
							]
						}
					],
					"src": "33:1380:7"
				},
				"id": 7
			},
			"imports/solidstate/contracts/access/ownable/OwnableStorage.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/access/ownable/OwnableStorage.sol",
					"exportedSymbols": {
						"OwnableStorage": [
							248
						]
					},
					"id": 249,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "OwnableStorage",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 248,
							"linearizedBaseContracts": [
								248
							],
							"name": "OwnableStorage",
							"nameLocation": "66:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableStorage.Layout",
									"id": 230,
									"members": [
										{
											"constant": false,
											"id": 229,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "119:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 230,
											"src": "111:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 228,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "111:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Layout",
									"nameLocation": "94:6:8",
									"nodeType": "StructDefinition",
									"scope": 248,
									"src": "87:44:8",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 235,
									"mutability": "constant",
									"name": "STORAGE_SLOT",
									"nameLocation": "163:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 248,
									"src": "137:98:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 231,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "137:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "736f6c696473746174652e636f6e7472616374732e73746f726167652e4f776e61626c65",
												"id": 233,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "196:38:8",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460",
													"typeString": "literal_string \"solidstate.contracts.storage.Ownable\""
												},
												"value": "solidstate.contracts.storage.Ownable"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460",
													"typeString": "literal_string \"solidstate.contracts.storage.Ownable\""
												}
											],
											"id": 232,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "186:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 234,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "186:49:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "301:100:8",
										"statements": [
											{
												"assignments": [
													242
												],
												"declarations": [
													{
														"constant": false,
														"id": 242,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "319:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 246,
														"src": "311:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 241,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "311:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 244,
												"initialValue": {
													"id": 243,
													"name": "STORAGE_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 235,
													"src": "326:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "311:27:8"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "357:38:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "371:14:8",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "381:4:8"
															},
															"variableNames": [
																{
																	"name": "l.slot",
																	"nodeType": "YulIdentifier",
																	"src": "371:6:8"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 239,
														"isOffset": false,
														"isSlot": true,
														"src": "371:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 242,
														"isOffset": false,
														"isSlot": false,
														"src": "381:4:8",
														"valueSize": 1
													}
												],
												"id": 245,
												"nodeType": "InlineAssembly",
												"src": "348:47:8"
											}
										]
									},
									"id": 247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "layout",
									"nameLocation": "251:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "257:2:8"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "l",
												"nameLocation": "298:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "283:16:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Layout_$230_storage_ptr",
													"typeString": "struct OwnableStorage.Layout"
												},
												"typeName": {
													"id": 238,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 237,
														"name": "Layout",
														"nameLocations": [
															"283:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 230,
														"src": "283:6:8"
													},
													"referencedDeclaration": 230,
													"src": "283:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Layout_$230_storage_ptr",
														"typeString": "struct OwnableStorage.Layout"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "282:18:8"
									},
									"scope": 248,
									"src": "242:159:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 249,
							"src": "58:345:8",
							"usedErrors": []
						}
					],
					"src": "33:371:8"
				},
				"id": 8
			},
			"imports/solidstate/contracts/access/ownable/SafeOwnable.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/access/ownable/SafeOwnable.sol",
					"exportedSymbols": {
						"ISafeOwnable": [
							55
						],
						"Ownable": [
							101
						],
						"OwnableInternal": [
							225
						],
						"SafeOwnable": [
							301
						],
						"SafeOwnableInternal": [
							382
						]
					},
					"id": 302,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 250,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"absolutePath": "imports/solidstate/contracts/access/ownable/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 252,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 302,
							"sourceUnit": 102,
							"src": "58:40:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 251,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 101,
										"src": "67:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/access/ownable/ISafeOwnable.sol",
							"file": "./ISafeOwnable.sol",
							"id": 254,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 302,
							"sourceUnit": 56,
							"src": "99:50:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 253,
										"name": "ISafeOwnable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 55,
										"src": "108:12:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/access/ownable/OwnableInternal.sol",
							"file": "./OwnableInternal.sol",
							"id": 256,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 302,
							"sourceUnit": 226,
							"src": "150:56:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 255,
										"name": "OwnableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 225,
										"src": "159:15:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol",
							"file": "./SafeOwnableInternal.sol",
							"id": 258,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 302,
							"sourceUnit": 383,
							"src": "207:64:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 257,
										"name": "SafeOwnableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 382,
										"src": "216:19:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 260,
										"name": "ISafeOwnable",
										"nameLocations": [
											"402:12:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 55,
										"src": "402:12:9"
									},
									"id": 261,
									"nodeType": "InheritanceSpecifier",
									"src": "402:12:9"
								},
								{
									"baseName": {
										"id": 262,
										"name": "Ownable",
										"nameLocations": [
											"416:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 101,
										"src": "416:7:9"
									},
									"id": 263,
									"nodeType": "InheritanceSpecifier",
									"src": "416:7:9"
								},
								{
									"baseName": {
										"id": 264,
										"name": "SafeOwnableInternal",
										"nameLocations": [
											"425:19:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 382,
										"src": "425:19:9"
									},
									"id": 265,
									"nodeType": "InheritanceSpecifier",
									"src": "425:19:9"
								}
							],
							"canonicalName": "SafeOwnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 259,
								"nodeType": "StructuredDocumentation",
								"src": "273:95:9",
								"text": " @title Ownership access control based on ERC173 with ownership transfer safety check"
							},
							"fullyImplemented": true,
							"id": 301,
							"linearizedBaseContracts": [
								301,
								382,
								101,
								225,
								55,
								23,
								445,
								64,
								34,
								455
							],
							"name": "SafeOwnable",
							"nameLocation": "387:11:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										50
									],
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "561:39:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 271,
														"name": "_nomineeOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "578:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "578:15:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 270,
												"id": 273,
												"nodeType": "Return",
												"src": "571:22:9"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "451:43:9",
										"text": " @inheritdoc ISafeOwnable"
									},
									"functionSelector": "8ab5150a",
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nomineeOwner",
									"nameLocation": "508:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "520:2:9"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "552:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "552:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "551:9:9"
									},
									"scope": 301,
									"src": "499:101:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "713:35:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 281,
														"name": "_acceptOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "723:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "723:18:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "723:18:9"
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "606:43:9",
										"text": " @inheritdoc ISafeOwnable"
									},
									"functionSelector": "79ba5097",
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 279,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 278,
												"name": "onlyNomineeOwner",
												"nameLocations": [
													"696:16:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 326,
												"src": "696:16:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "696:16:9"
										}
									],
									"name": "acceptOwnership",
									"nameLocation": "663:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "678:2:9"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "713:0:9"
									},
									"scope": 301,
									"src": "654:94:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										197,
										366
									],
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "877:50:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 296,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "912:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 293,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "887:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SafeOwnable_$301_$",
																"typeString": "type(contract super SafeOwnable)"
															}
														},
														"id": 295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "893:18:9",
														"memberName": "_transferOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 366,
														"src": "887:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "887:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "887:33:9"
											}
										]
									},
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "763:18:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 291,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 289,
												"name": "OwnableInternal",
												"nameLocations": [
													"839:15:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 225,
												"src": "839:15:9"
											},
											{
												"id": 290,
												"name": "SafeOwnableInternal",
												"nameLocations": [
													"856:19:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 382,
												"src": "856:19:9"
											}
										],
										"src": "830:46:9"
									},
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "799:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "791:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "781:31:9"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "877:0:9"
									},
									"scope": 301,
									"src": "754:173:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 302,
							"src": "369:560:9",
							"usedErrors": [
								31,
								33,
								63
							]
						}
					],
					"src": "33:897:9"
				},
				"id": 9
			},
			"imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/access/ownable/SafeOwnableInternal.sol",
					"exportedSymbols": {
						"ISafeOwnableInternal": [
							64
						],
						"OwnableInternal": [
							225
						],
						"SafeOwnableInternal": [
							382
						],
						"SafeOwnableStorage": [
							405
						]
					},
					"id": 383,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 303,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:10"
						},
						{
							"absolutePath": "imports/solidstate/contracts/access/ownable/ISafeOwnableInternal.sol",
							"file": "./ISafeOwnableInternal.sol",
							"id": 305,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 383,
							"sourceUnit": 65,
							"src": "58:66:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 304,
										"name": "ISafeOwnableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 64,
										"src": "67:20:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/access/ownable/OwnableInternal.sol",
							"file": "./OwnableInternal.sol",
							"id": 307,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 383,
							"sourceUnit": 226,
							"src": "125:56:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 306,
										"name": "OwnableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 225,
										"src": "134:15:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/access/ownable/SafeOwnableStorage.sol",
							"file": "./SafeOwnableStorage.sol",
							"id": 309,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 383,
							"sourceUnit": 406,
							"src": "182:62:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 308,
										"name": "SafeOwnableStorage",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 405,
										"src": "191:18:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 310,
										"name": "ISafeOwnableInternal",
										"nameLocations": [
											"287:20:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 64,
										"src": "287:20:10"
									},
									"id": 311,
									"nodeType": "InheritanceSpecifier",
									"src": "287:20:10"
								},
								{
									"baseName": {
										"id": 312,
										"name": "OwnableInternal",
										"nameLocations": [
											"309:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 225,
										"src": "309:15:10"
									},
									"id": 313,
									"nodeType": "InheritanceSpecifier",
									"src": "309:15:10"
								}
							],
							"canonicalName": "SafeOwnableInternal",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 382,
							"linearizedBaseContracts": [
								382,
								225,
								64,
								34,
								455
							],
							"name": "SafeOwnableInternal",
							"nameLocation": "264:19:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "359:112:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 315,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "373:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "377:6:10",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "373:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 317,
															"name": "_nomineeOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "387:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "387:15:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "373:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 323,
												"nodeType": "IfStatement",
												"src": "369:84:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 320,
															"name": "SafeOwnable__NotNomineeOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "423:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "423:30:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 322,
													"nodeType": "RevertStatement",
													"src": "416:37:10"
												}
											},
											{
												"id": 324,
												"nodeType": "PlaceholderStatement",
												"src": "463:1:10"
											}
										]
									},
									"id": 326,
									"name": "onlyNomineeOwner",
									"nameLocation": "340:16:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "356:2:10"
									},
									"src": "331:140:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "640:64:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 332,
																"name": "SafeOwnableStorage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "657:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeOwnableStorage_$405_$",
																	"typeString": "type(library SafeOwnableStorage)"
																}
															},
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "676:6:10",
															"memberName": "layout",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 404,
															"src": "657:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$387_storage_ptr_$",
																"typeString": "function () pure returns (struct SafeOwnableStorage.Layout storage pointer)"
															}
														},
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "657:27:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Layout_$387_storage_ptr",
															"typeString": "struct SafeOwnableStorage.Layout storage pointer"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "685:12:10",
													"memberName": "nomineeOwner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 386,
													"src": "657:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 331,
												"id": 336,
												"nodeType": "Return",
												"src": "650:47:10"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "477:93:10",
										"text": " @notice get the nominated owner who has permission to call acceptOwnership"
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nomineeOwner",
									"nameLocation": "584:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "597:2:10"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "631:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "630:9:10"
									},
									"scope": 382,
									"src": "575:129:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "824:95:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 343,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "844:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "848:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "844:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 342,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "834:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "834:21:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "834:21:10"
											},
											{
												"expression": {
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "865:47:10",
													"subExpression": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 347,
																	"name": "SafeOwnableStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "872:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeOwnableStorage_$405_$",
																		"typeString": "type(library SafeOwnableStorage)"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "891:6:10",
																"memberName": "layout",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 404,
																"src": "872:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$387_storage_ptr_$",
																	"typeString": "function () pure returns (struct SafeOwnableStorage.Layout storage pointer)"
																}
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "872:27:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$387_storage_ptr",
																"typeString": "struct SafeOwnableStorage.Layout storage pointer"
															}
														},
														"id": 350,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "900:12:10",
														"memberName": "nomineeOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 386,
														"src": "872:40:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "865:47:10"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "710:64:10",
										"text": " @notice accept transfer of contract ownership"
									},
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_acceptOwnership",
									"nameLocation": "788:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "804:2:10"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "824:0:10"
									},
									"scope": 382,
									"src": "779:140:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										197
									],
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "1089:42:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 362,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "1116:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 361,
														"name": "_setNomineeOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "1099:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1099:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "1099:25:10"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "925:88:10",
										"text": " @notice grant permission to given address to claim contract ownership"
									},
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "1027:18:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 359,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1080:8:10"
									},
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1054:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "1046:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1045:17:10"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1089:0:10"
									},
									"scope": 382,
									"src": "1018:113:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "1246:67:10",
										"statements": [
											{
												"expression": {
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 372,
																	"name": "SafeOwnableStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "1256:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeOwnableStorage_$405_$",
																		"typeString": "type(library SafeOwnableStorage)"
																	}
																},
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1275:6:10",
																"memberName": "layout",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 404,
																"src": "1256:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$387_storage_ptr_$",
																	"typeString": "function () pure returns (struct SafeOwnableStorage.Layout storage pointer)"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1256:27:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$387_storage_ptr",
																"typeString": "struct SafeOwnableStorage.Layout storage pointer"
															}
														},
														"id": 376,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1284:12:10",
														"memberName": "nomineeOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 386,
														"src": "1256:40:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 377,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "1299:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1256:50:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "1256:50:10"
											}
										]
									},
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "1137:44:10",
										"text": " @notice set nominee owner"
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setNomineeOwner",
									"nameLocation": "1195:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1220:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "1212:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1211:17:10"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1246:0:10"
									},
									"scope": 382,
									"src": "1186:127:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 383,
							"src": "246:1069:10",
							"usedErrors": [
								31,
								33,
								63
							]
						}
					],
					"src": "33:1283:10"
				},
				"id": 10
			},
			"imports/solidstate/contracts/access/ownable/SafeOwnableStorage.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/access/ownable/SafeOwnableStorage.sol",
					"exportedSymbols": {
						"SafeOwnableStorage": [
							405
						]
					},
					"id": 406,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 384,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeOwnableStorage",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 405,
							"linearizedBaseContracts": [
								405
							],
							"name": "SafeOwnableStorage",
							"nameLocation": "66:18:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "SafeOwnableStorage.Layout",
									"id": 387,
									"members": [
										{
											"constant": false,
											"id": 386,
											"mutability": "mutable",
											"name": "nomineeOwner",
											"nameLocation": "123:12:11",
											"nodeType": "VariableDeclaration",
											"scope": 387,
											"src": "115:20:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 385,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "115:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Layout",
									"nameLocation": "98:6:11",
									"nodeType": "StructDefinition",
									"scope": 405,
									"src": "91:51:11",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 392,
									"mutability": "constant",
									"name": "STORAGE_SLOT",
									"nameLocation": "174:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 405,
									"src": "148:102:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 388,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "148:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "736f6c696473746174652e636f6e7472616374732e73746f726167652e536166654f776e61626c65",
												"id": 390,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "207:42:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_24aa1f7b31fd188a8d3ecfb06bc55c806040e59b03bd4396283442fce6617890",
													"typeString": "literal_string \"solidstate.contracts.storage.SafeOwnable\""
												},
												"value": "solidstate.contracts.storage.SafeOwnable"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_24aa1f7b31fd188a8d3ecfb06bc55c806040e59b03bd4396283442fce6617890",
													"typeString": "literal_string \"solidstate.contracts.storage.SafeOwnable\""
												}
											],
											"id": 389,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "197:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 391,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "197:53:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "316:100:11",
										"statements": [
											{
												"assignments": [
													399
												],
												"declarations": [
													{
														"constant": false,
														"id": 399,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "334:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 403,
														"src": "326:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 398,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "326:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 401,
												"initialValue": {
													"id": 400,
													"name": "STORAGE_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 392,
													"src": "341:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "326:27:11"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "372:38:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "386:14:11",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "396:4:11"
															},
															"variableNames": [
																{
																	"name": "l.slot",
																	"nodeType": "YulIdentifier",
																	"src": "386:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 396,
														"isOffset": false,
														"isSlot": true,
														"src": "386:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 399,
														"isOffset": false,
														"isSlot": false,
														"src": "396:4:11",
														"valueSize": 1
													}
												],
												"id": 402,
												"nodeType": "InlineAssembly",
												"src": "363:47:11"
											}
										]
									},
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "layout",
									"nameLocation": "266:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "272:2:11"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "l",
												"nameLocation": "313:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "298:16:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Layout_$387_storage_ptr",
													"typeString": "struct SafeOwnableStorage.Layout"
												},
												"typeName": {
													"id": 395,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 394,
														"name": "Layout",
														"nameLocations": [
															"298:6:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 387,
														"src": "298:6:11"
													},
													"referencedDeclaration": 387,
													"src": "298:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Layout_$387_storage_ptr",
														"typeString": "struct SafeOwnableStorage.Layout"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "297:18:11"
									},
									"scope": 405,
									"src": "257:159:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 406,
							"src": "58:360:11",
							"usedErrors": []
						}
					],
					"src": "33:386:11"
				},
				"id": 11
			},
			"imports/solidstate/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							421
						],
						"IERC165Internal": [
							425
						]
					},
					"id": 422,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 407,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:12"
						},
						{
							"absolutePath": "imports/solidstate/contracts/interfaces/IERC165Internal.sol",
							"file": "./IERC165Internal.sol",
							"id": 409,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 422,
							"sourceUnit": 426,
							"src": "58:56:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 408,
										"name": "IERC165Internal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 425,
										"src": "67:15:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 411,
										"name": "IERC165Internal",
										"nameLocations": [
											"246:15:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 425,
										"src": "246:15:12"
									},
									"id": 412,
									"nodeType": "InheritanceSpecifier",
									"src": "246:15:12"
								}
							],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 410,
								"nodeType": "StructuredDocumentation",
								"src": "116:108:12",
								"text": " @title ERC165 interface registration interface\n @dev see https://eips.ethereum.org/EIPS/eip-165"
							},
							"fullyImplemented": false,
							"id": 421,
							"linearizedBaseContracts": [
								421,
								425
							],
							"name": "IERC165",
							"nameLocation": "235:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "268:182:12",
										"text": " @notice query whether contract has registered support for given interface\n @param interfaceId interface id\n @return bool whether interface is supported"
									},
									"functionSelector": "01ffc9a7",
									"id": 420,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "464:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "489:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "482:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 414,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "482:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:20:12"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "525:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 417,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "525:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:6:12"
									},
									"scope": 421,
									"src": "455:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 422,
							"src": "225:308:12",
							"usedErrors": []
						}
					],
					"src": "33:501:12"
				},
				"id": 12
			},
			"imports/solidstate/contracts/interfaces/IERC165Internal.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/interfaces/IERC165Internal.sol",
					"exportedSymbols": {
						"IERC165Internal": [
							425
						]
					},
					"id": 426,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 423,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165Internal",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 424,
								"nodeType": "StructuredDocumentation",
								"src": "58:57:13",
								"text": " @title ERC165 interface registration interface"
							},
							"fullyImplemented": true,
							"id": 425,
							"linearizedBaseContracts": [
								425
							],
							"name": "IERC165Internal",
							"nameLocation": "126:15:13",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 426,
							"src": "116:30:13",
							"usedErrors": []
						}
					],
					"src": "33:114:13"
				},
				"id": 13
			},
			"imports/solidstate/contracts/interfaces/IERC173.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/interfaces/IERC173.sol",
					"exportedSymbols": {
						"IERC173": [
							445
						],
						"IERC173Internal": [
							455
						]
					},
					"id": 446,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 427,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:14"
						},
						{
							"absolutePath": "imports/solidstate/contracts/interfaces/IERC173Internal.sol",
							"file": "./IERC173Internal.sol",
							"id": 429,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 446,
							"sourceUnit": 456,
							"src": "58:56:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 428,
										"name": "IERC173Internal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 455,
										"src": "67:15:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 431,
										"name": "IERC173Internal",
										"nameLocations": [
											"244:15:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 455,
										"src": "244:15:14"
									},
									"id": 432,
									"nodeType": "InheritanceSpecifier",
									"src": "244:15:14"
								}
							],
							"canonicalName": "IERC173",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 430,
								"nodeType": "StructuredDocumentation",
								"src": "116:106:14",
								"text": " @title Contract ownership standard interface\n @dev see https://eips.ethereum.org/EIPS/eip-173"
							},
							"fullyImplemented": false,
							"id": 445,
							"linearizedBaseContracts": [
								445,
								455
							],
							"name": "IERC173",
							"nameLocation": "233:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "266:86:14",
										"text": " @notice get the ERC173 contract owner\n @return contract owner"
									},
									"functionSelector": "8da5cb5b",
									"id": 438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "366:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "371:2:14"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "397:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "397:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "396:9:14"
									},
									"scope": 445,
									"src": "357:49:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "412:112:14",
										"text": " @notice transfer contract ownership to new account\n @param account address of new owner"
									},
									"functionSelector": "f2fde38b",
									"id": 444,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferOwnership",
									"nameLocation": "538:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "564:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "556:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "556:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "555:17:14"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "581:0:14"
									},
									"scope": 445,
									"src": "529:53:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 446,
							"src": "223:361:14",
							"usedErrors": []
						}
					],
					"src": "33:552:14"
				},
				"id": 14
			},
			"imports/solidstate/contracts/interfaces/IERC173Internal.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/interfaces/IERC173Internal.sol",
					"exportedSymbols": {
						"IERC173Internal": [
							455
						]
					},
					"id": 456,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 447,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC173Internal",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 448,
								"nodeType": "StructuredDocumentation",
								"src": "58:71:15",
								"text": " @title Partial ERC173 interface needed by internal functions"
							},
							"fullyImplemented": true,
							"id": 455,
							"linearizedBaseContracts": [
								455
							],
							"name": "IERC173Internal",
							"nameLocation": "140:15:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 454,
									"name": "OwnershipTransferred",
									"nameLocation": "168:20:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "214:13:15",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "198:29:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "198:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "253:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "237:24:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:79:15"
									},
									"src": "162:106:15"
								}
							],
							"scope": 456,
							"src": "130:140:15",
							"usedErrors": []
						}
					],
					"src": "33:238:15"
				},
				"id": 15
			},
			"imports/solidstate/contracts/introspection/ERC165/base/ERC165Base.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/introspection/ERC165/base/ERC165Base.sol",
					"exportedSymbols": {
						"ERC165Base": [
							484
						],
						"ERC165BaseInternal": [
							536
						],
						"ERC165BaseStorage": [
							561
						],
						"IERC165": [
							421
						],
						"IERC165Base": [
							572
						]
					},
					"id": 485,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 457,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:16"
						},
						{
							"absolutePath": "imports/solidstate/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 459,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 485,
							"sourceUnit": 422,
							"src": "58:58:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 458,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 421,
										"src": "67:7:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/introspection/ERC165/base/IERC165Base.sol",
							"file": "./IERC165Base.sol",
							"id": 461,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 485,
							"sourceUnit": 573,
							"src": "117:48:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 460,
										"name": "IERC165Base",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 572,
										"src": "126:11:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol",
							"file": "./ERC165BaseInternal.sol",
							"id": 463,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 485,
							"sourceUnit": 537,
							"src": "166:62:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 462,
										"name": "ERC165BaseInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 536,
										"src": "175:18:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol",
							"file": "./ERC165BaseStorage.sol",
							"id": 465,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 485,
							"sourceUnit": 562,
							"src": "229:60:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 464,
										"name": "ERC165BaseStorage",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 561,
										"src": "238:17:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 467,
										"name": "IERC165Base",
										"nameLocations": [
											"363:11:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 572,
										"src": "363:11:16"
									},
									"id": 468,
									"nodeType": "InheritanceSpecifier",
									"src": "363:11:16"
								},
								{
									"baseName": {
										"id": 469,
										"name": "ERC165BaseInternal",
										"nameLocations": [
											"376:18:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 536,
										"src": "376:18:16"
									},
									"id": 470,
									"nodeType": "InheritanceSpecifier",
									"src": "376:18:16"
								}
							],
							"canonicalName": "ERC165Base",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 466,
								"nodeType": "StructuredDocumentation",
								"src": "291:39:16",
								"text": " @title ERC165 implementation"
							},
							"fullyImplemented": true,
							"id": 484,
							"linearizedBaseContracts": [
								484,
								536,
								572,
								581,
								421,
								425
							],
							"name": "ERC165Base",
							"nameLocation": "349:10:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										420
									],
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "518:55:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 479,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "554:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 478,
														"name": "_supportsInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "535:18:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view returns (bool)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "535:31:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 477,
												"id": 481,
												"nodeType": "Return",
												"src": "528:38:16"
											}
										]
									},
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "401:38:16",
										"text": " @inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "453:17:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "478:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "471:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 472,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "471:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:20:16"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "512:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 475,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "512:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "511:6:16"
									},
									"scope": 484,
									"src": "444:129:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 485,
							"src": "331:244:16",
							"usedErrors": [
								580
							]
						}
					],
					"src": "33:543:16"
				},
				"id": 16
			},
			"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol",
					"exportedSymbols": {
						"ERC165BaseInternal": [
							536
						],
						"ERC165BaseStorage": [
							561
						],
						"IERC165BaseInternal": [
							581
						]
					},
					"id": 537,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 486,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:17"
						},
						{
							"absolutePath": "imports/solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol",
							"file": "./IERC165BaseInternal.sol",
							"id": 488,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 537,
							"sourceUnit": 582,
							"src": "58:64:17",
							"symbolAliases": [
								{
									"foreign": {
										"id": 487,
										"name": "IERC165BaseInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 581,
										"src": "67:19:17",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol",
							"file": "./ERC165BaseStorage.sol",
							"id": 490,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 537,
							"sourceUnit": 562,
							"src": "123:60:17",
							"symbolAliases": [
								{
									"foreign": {
										"id": 489,
										"name": "ERC165BaseStorage",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 561,
										"src": "132:17:17",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 492,
										"name": "IERC165BaseInternal",
										"nameLocations": [
											"265:19:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 581,
										"src": "265:19:17"
									},
									"id": 493,
									"nodeType": "InheritanceSpecifier",
									"src": "265:19:17"
								}
							],
							"canonicalName": "ERC165BaseInternal",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 491,
								"nodeType": "StructuredDocumentation",
								"src": "185:39:17",
								"text": " @title ERC165 implementation"
							},
							"fullyImplemented": true,
							"id": 536,
							"linearizedBaseContracts": [
								536,
								581,
								425
							],
							"name": "ERC165BaseInternal",
							"nameLocation": "243:18:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "611:83:17",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 501,
																	"name": "ERC165BaseStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 561,
																	"src": "628:17:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC165BaseStorage_$561_$",
																		"typeString": "type(library ERC165BaseStorage)"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "646:6:17",
																"memberName": "layout",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 560,
																"src": "628:24:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$543_storage_ptr_$",
																	"typeString": "function () pure returns (struct ERC165BaseStorage.Layout storage pointer)"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "628:26:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$543_storage_ptr",
																"typeString": "struct ERC165BaseStorage.Layout storage pointer"
															}
														},
														"id": 504,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "655:19:17",
														"memberName": "supportedInterfaces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 542,
														"src": "628:46:17",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
															"typeString": "mapping(bytes4 => bool)"
														}
													},
													"id": 506,
													"indexExpression": {
														"id": 505,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "675:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "628:59:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 500,
												"id": 507,
												"nodeType": "Return",
												"src": "621:66:17"
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "291:216:17",
										"text": " @notice indicates whether an interface is already supported based on the interfaceId\n @param interfaceId id of interface to check\n @return bool indicating whether interface is supported"
									},
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_supportsInterface",
									"nameLocation": "521:18:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "556:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "549:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 495,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "549:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:34:17"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "605:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "605:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "604:6:17"
									},
									"scope": 536,
									"src": "512:182:17",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "1010:165:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 517,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "1024:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30786666666666666666",
														"id": 518,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1039:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4294967295_by_1",
															"typeString": "int_const 4294967295"
														},
														"value": "0xffffffff"
													},
													"src": "1024:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 523,
												"nodeType": "IfStatement",
												"src": "1020:70:17",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 520,
															"name": "ERC165Base__InvalidInterfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "1058:30:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1058:32:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 522,
													"nodeType": "RevertStatement",
													"src": "1051:39:17"
												}
											},
											{
												"expression": {
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 524,
																		"name": "ERC165BaseStorage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "1100:17:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC165BaseStorage_$561_$",
																			"typeString": "type(library ERC165BaseStorage)"
																		}
																	},
																	"id": 526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1118:6:17",
																	"memberName": "layout",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 560,
																	"src": "1100:24:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$543_storage_ptr_$",
																		"typeString": "function () pure returns (struct ERC165BaseStorage.Layout storage pointer)"
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1100:26:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$543_storage_ptr",
																	"typeString": "struct ERC165BaseStorage.Layout storage pointer"
																}
															},
															"id": 528,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1127:19:17",
															"memberName": "supportedInterfaces",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 542,
															"src": "1100:46:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
																"typeString": "mapping(bytes4 => bool)"
															}
														},
														"id": 530,
														"indexExpression": {
															"id": 529,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "1147:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1100:59:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 531,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "1162:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1100:68:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "1100:68:17"
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "700:202:17",
										"text": " @notice sets status of interface support\n @param interfaceId id of interface to set status for\n @param status boolean indicating whether interface will be set as supported"
									},
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setSupportsInterface",
									"nameLocation": "916:21:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "954:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "947:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 511,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "947:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "980:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "975:11:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 513,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "975:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:55:17"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1010:0:17"
									},
									"scope": 536,
									"src": "907:268:17",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 537,
							"src": "225:952:17",
							"usedErrors": [
								580
							]
						}
					],
					"src": "33:1145:17"
				},
				"id": 17
			},
			"imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol",
					"exportedSymbols": {
						"ERC165BaseStorage": [
							561
						]
					},
					"id": 562,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 538,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC165BaseStorage",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 561,
							"linearizedBaseContracts": [
								561
							],
							"name": "ERC165BaseStorage",
							"nameLocation": "66:17:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC165BaseStorage.Layout",
									"id": 543,
									"members": [
										{
											"constant": false,
											"id": 542,
											"mutability": "mutable",
											"name": "supportedInterfaces",
											"nameLocation": "138:19:18",
											"nodeType": "VariableDeclaration",
											"scope": 543,
											"src": "114:43:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
												"typeString": "mapping(bytes4 => bool)"
											},
											"typeName": {
												"id": 541,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 539,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "122:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"nodeType": "Mapping",
												"src": "114:23:18",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
													"typeString": "mapping(bytes4 => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 540,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "132:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Layout",
									"nameLocation": "97:6:18",
									"nodeType": "StructDefinition",
									"scope": 561,
									"src": "90:74:18",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 548,
									"mutability": "constant",
									"name": "STORAGE_SLOT",
									"nameLocation": "196:12:18",
									"nodeType": "VariableDeclaration",
									"scope": 561,
									"src": "170:101:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 544,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "170:7:18",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "736f6c696473746174652e636f6e7472616374732e73746f726167652e45524331363542617365",
												"id": 546,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "229:41:18",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_fc606c433378e3a7e0a6a531deac289b66caa1b4aa8554fd4ab2c6f1570f92d8",
													"typeString": "literal_string \"solidstate.contracts.storage.ERC165Base\""
												},
												"value": "solidstate.contracts.storage.ERC165Base"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_fc606c433378e3a7e0a6a531deac289b66caa1b4aa8554fd4ab2c6f1570f92d8",
													"typeString": "literal_string \"solidstate.contracts.storage.ERC165Base\""
												}
											],
											"id": 545,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "219:9:18",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 547,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "219:52:18",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "337:100:18",
										"statements": [
											{
												"assignments": [
													555
												],
												"declarations": [
													{
														"constant": false,
														"id": 555,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "355:4:18",
														"nodeType": "VariableDeclaration",
														"scope": 559,
														"src": "347:12:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 554,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "347:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 557,
												"initialValue": {
													"id": 556,
													"name": "STORAGE_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 548,
													"src": "362:12:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "347:27:18"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "393:38:18",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "407:14:18",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "417:4:18"
															},
															"variableNames": [
																{
																	"name": "l.slot",
																	"nodeType": "YulIdentifier",
																	"src": "407:6:18"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 552,
														"isOffset": false,
														"isSlot": true,
														"src": "407:6:18",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 555,
														"isOffset": false,
														"isSlot": false,
														"src": "417:4:18",
														"valueSize": 1
													}
												],
												"id": 558,
												"nodeType": "InlineAssembly",
												"src": "384:47:18"
											}
										]
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "layout",
									"nameLocation": "287:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "293:2:18"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "l",
												"nameLocation": "334:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "319:16:18",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Layout_$543_storage_ptr",
													"typeString": "struct ERC165BaseStorage.Layout"
												},
												"typeName": {
													"id": 551,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 550,
														"name": "Layout",
														"nameLocations": [
															"319:6:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 543,
														"src": "319:6:18"
													},
													"referencedDeclaration": 543,
													"src": "319:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Layout_$543_storage_ptr",
														"typeString": "struct ERC165BaseStorage.Layout"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "318:18:18"
									},
									"scope": 561,
									"src": "278:159:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 562,
							"src": "58:381:18",
							"usedErrors": []
						}
					],
					"src": "33:407:18"
				},
				"id": 18
			},
			"imports/solidstate/contracts/introspection/ERC165/base/IERC165Base.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/introspection/ERC165/base/IERC165Base.sol",
					"exportedSymbols": {
						"IERC165": [
							421
						],
						"IERC165Base": [
							572
						],
						"IERC165BaseInternal": [
							581
						]
					},
					"id": 573,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 563,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:19"
						},
						{
							"absolutePath": "imports/solidstate/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 565,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 573,
							"sourceUnit": 422,
							"src": "58:58:19",
							"symbolAliases": [
								{
									"foreign": {
										"id": 564,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 421,
										"src": "67:7:19",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol",
							"file": "./IERC165BaseInternal.sol",
							"id": 567,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 573,
							"sourceUnit": 582,
							"src": "117:64:19",
							"symbolAliases": [
								{
									"foreign": {
										"id": 566,
										"name": "IERC165BaseInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 581,
										"src": "126:19:19",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 568,
										"name": "IERC165",
										"nameLocations": [
											"208:7:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 421,
										"src": "208:7:19"
									},
									"id": 569,
									"nodeType": "InheritanceSpecifier",
									"src": "208:7:19"
								},
								{
									"baseName": {
										"id": 570,
										"name": "IERC165BaseInternal",
										"nameLocations": [
											"217:19:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 581,
										"src": "217:19:19"
									},
									"id": 571,
									"nodeType": "InheritanceSpecifier",
									"src": "217:19:19"
								}
							],
							"canonicalName": "IERC165Base",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 572,
							"linearizedBaseContracts": [
								572,
								581,
								421,
								425
							],
							"name": "IERC165Base",
							"nameLocation": "193:11:19",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 573,
							"src": "183:56:19",
							"usedErrors": [
								580
							]
						}
					],
					"src": "33:207:19"
				},
				"id": 19
			},
			"imports/solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol",
					"exportedSymbols": {
						"IERC165BaseInternal": [
							581
						],
						"IERC165Internal": [
							425
						]
					},
					"id": 582,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 574,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:20"
						},
						{
							"absolutePath": "imports/solidstate/contracts/interfaces/IERC165Internal.sol",
							"file": "../../../interfaces/IERC165Internal.sol",
							"id": 576,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 582,
							"sourceUnit": 426,
							"src": "58:74:20",
							"symbolAliases": [
								{
									"foreign": {
										"id": 575,
										"name": "IERC165Internal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 425,
										"src": "67:15:20",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 577,
										"name": "IERC165Internal",
										"nameLocations": [
											"167:15:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 425,
										"src": "167:15:20"
									},
									"id": 578,
									"nodeType": "InheritanceSpecifier",
									"src": "167:15:20"
								}
							],
							"canonicalName": "IERC165BaseInternal",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 581,
							"linearizedBaseContracts": [
								581,
								425
							],
							"name": "IERC165BaseInternal",
							"nameLocation": "144:19:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "b0a19dd5",
									"id": 580,
									"name": "ERC165Base__InvalidInterfaceId",
									"nameLocation": "195:30:20",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "225:2:20"
									},
									"src": "189:39:20"
								}
							],
							"scope": 582,
							"src": "134:96:20",
							"usedErrors": [
								580
							]
						}
					],
					"src": "33:198:20"
				},
				"id": 20
			},
			"imports/solidstate/contracts/proxy/IProxy.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/proxy/IProxy.sol",
					"exportedSymbols": {
						"IProxy": [
							589
						]
					},
					"id": 590,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 583,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:21"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IProxy",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 589,
							"linearizedBaseContracts": [
								589
							],
							"name": "IProxy",
							"nameLocation": "68:6:21",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "87c9fc34",
									"id": 585,
									"name": "Proxy__ImplementationIsNotContract",
									"nameLocation": "87:34:21",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "121:2:21"
									},
									"src": "81:43:21"
								},
								{
									"id": 588,
									"implemented": false,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "138:2:21"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "157:0:21"
									},
									"scope": 589,
									"src": "130:28:21",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 590,
							"src": "58:102:21",
							"usedErrors": [
								585
							]
						}
					],
					"src": "33:128:21"
				},
				"id": 21
			},
			"imports/solidstate/contracts/proxy/Proxy.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/proxy/Proxy.sol",
					"exportedSymbols": {
						"AddressUtils": [
							2846
						],
						"IProxy": [
							589
						],
						"Proxy": [
							627
						]
					},
					"id": 628,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 591,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:22"
						},
						{
							"absolutePath": "imports/solidstate/contracts/utils/AddressUtils.sol",
							"file": "../utils/AddressUtils.sol",
							"id": 593,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 628,
							"sourceUnit": 2847,
							"src": "58:57:22",
							"symbolAliases": [
								{
									"foreign": {
										"id": 592,
										"name": "AddressUtils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2846,
										"src": "67:12:22",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/proxy/IProxy.sol",
							"file": "./IProxy.sol",
							"id": 595,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 628,
							"sourceUnit": 590,
							"src": "116:38:22",
							"symbolAliases": [
								{
									"foreign": {
										"id": 594,
										"name": "IProxy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 589,
										"src": "125:6:22",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 597,
										"name": "IProxy",
										"nameLocations": [
											"221:6:22"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 589,
										"src": "221:6:22"
									},
									"id": 598,
									"nodeType": "InheritanceSpecifier",
									"src": "221:6:22"
								}
							],
							"canonicalName": "Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 596,
								"nodeType": "StructuredDocumentation",
								"src": "156:37:22",
								"text": " @title Base proxy contract"
							},
							"fullyImplemented": false,
							"id": 627,
							"linearizedBaseContracts": [
								627,
								589
							],
							"name": "Proxy",
							"nameLocation": "212:5:22",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 601,
									"libraryName": {
										"id": 599,
										"name": "AddressUtils",
										"nameLocations": [
											"240:12:22"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2846,
										"src": "240:12:22"
									},
									"nodeType": "UsingForDirective",
									"src": "234:31:22",
									"typeName": {
										"id": 600,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "257:7:22",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"baseFunctions": [
										588
									],
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "572:673:22",
										"statements": [
											{
												"assignments": [
													606
												],
												"declarations": [
													{
														"constant": false,
														"id": 606,
														"mutability": "mutable",
														"name": "implementation",
														"nameLocation": "590:14:22",
														"nodeType": "VariableDeclaration",
														"scope": 619,
														"src": "582:22:22",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 605,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "582:7:22",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 609,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 607,
														"name": "_getImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "607:18:22",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
															"typeString": "function () returns (address)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "607:20:22",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "582:45:22"
											},
											{
												"condition": {
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "642:28:22",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 610,
																"name": "implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "643:14:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "658:10:22",
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2659,
															"src": "643:25:22",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "643:27:22",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 617,
												"nodeType": "IfStatement",
												"src": "638:89:22",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 614,
															"name": "Proxy__ImplementationIsNotContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "691:34:22",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "691:36:22",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 616,
													"nodeType": "RevertStatement",
													"src": "684:43:22"
												}
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "747:492:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "774:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "777:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "780:12:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "780:14:22"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "761:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "761:34:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "761:34:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "808:184:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "852:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "852:5:22"
																	},
																	{
																		"name": "implementation",
																		"nodeType": "YulIdentifier",
																		"src": "875:14:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "907:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "926:12:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "926:14:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "958:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "977:1:22",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "822:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "822:170:22"
															},
															"variables": [
																{
																	"name": "result",
																	"nodeType": "YulTypedName",
																	"src": "812:6:22",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1020:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1023:1:22",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1026:14:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1026:16:22"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1005:14:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "1005:38:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1005:38:22"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1090:59:22",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1115:1:22",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1118:14:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1118:16:22"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1108:6:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1108:27:22"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1108:27:22"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1083:66:22",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1088:1:22",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1170:59:22",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1195:1:22",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1198:14:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1198:16:22"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "1188:6:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1188:27:22"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1188:27:22"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1162:67:22",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nodeType": "YulIdentifier",
																"src": "1064:6:22"
															},
															"nodeType": "YulSwitch",
															"src": "1057:172:22"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 606,
														"isOffset": false,
														"isSlot": false,
														"src": "875:14:22",
														"valueSize": 1
													}
												],
												"id": 618,
												"nodeType": "InlineAssembly",
												"src": "738:501:22"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "271:260:22",
										"text": " @notice delegate all calls to implementation contract\n @dev reverts if implementation address contains no code, for compatibility with metamorphic contracts\n @dev memory location in use by assembly may be unsafe in other contexts"
									},
									"id": 620,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "544:2:22"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "572:0:22"
									},
									"scope": 627,
									"src": "536:709:22",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "1251:97:22",
										"text": " @notice get logic implementation address\n @return implementation address"
									},
									"id": 626,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "1362:18:22",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1380:2:22"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "1409:7:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:22",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1408:9:22"
									},
									"scope": 627,
									"src": "1353:65:22",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 628,
							"src": "194:1226:22",
							"usedErrors": [
								585
							]
						}
					],
					"src": "33:1388:22"
				},
				"id": 22
			},
			"imports/solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol",
					"exportedSymbols": {
						"IDiamondBase": [
							1032
						],
						"IDiamondFallback": [
							1150
						],
						"IDiamondReadable": [
							1705
						],
						"IDiamondWritable": [
							2569
						],
						"IERC165": [
							421
						],
						"ISafeOwnable": [
							55
						],
						"ISolidStateDiamond": [
							657
						]
					},
					"id": 658,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 629,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:23"
						},
						{
							"absolutePath": "imports/solidstate/contracts/access/ownable/ISafeOwnable.sol",
							"file": "../../access/ownable/ISafeOwnable.sol",
							"id": 631,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 658,
							"sourceUnit": 56,
							"src": "58:69:23",
							"symbolAliases": [
								{
									"foreign": {
										"id": 630,
										"name": "ISafeOwnable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 55,
										"src": "67:12:23",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/interfaces/IERC165.sol",
							"file": "../../interfaces/IERC165.sol",
							"id": 633,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 658,
							"sourceUnit": 422,
							"src": "128:55:23",
							"symbolAliases": [
								{
									"foreign": {
										"id": 632,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 421,
										"src": "137:7:23",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/proxy/diamond/base/IDiamondBase.sol",
							"file": "./base/IDiamondBase.sol",
							"id": 635,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 658,
							"sourceUnit": 1033,
							"src": "184:55:23",
							"symbolAliases": [
								{
									"foreign": {
										"id": 634,
										"name": "IDiamondBase",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1032,
										"src": "193:12:23",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol",
							"file": "./fallback/IDiamondFallback.sol",
							"id": 637,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 658,
							"sourceUnit": 1151,
							"src": "240:67:23",
							"symbolAliases": [
								{
									"foreign": {
										"id": 636,
										"name": "IDiamondFallback",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1150,
										"src": "249:16:23",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol",
							"file": "./readable/IDiamondReadable.sol",
							"id": 639,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 658,
							"sourceUnit": 1706,
							"src": "308:67:23",
							"symbolAliases": [
								{
									"foreign": {
										"id": 638,
										"name": "IDiamondReadable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1705,
										"src": "317:16:23",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol",
							"file": "./writable/IDiamondWritable.sol",
							"id": 641,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 658,
							"sourceUnit": 2570,
							"src": "376:67:23",
							"symbolAliases": [
								{
									"foreign": {
										"id": 640,
										"name": "IDiamondWritable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2569,
										"src": "385:16:23",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 642,
										"name": "IDiamondBase",
										"nameLocations": [
											"481:12:23"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1032,
										"src": "481:12:23"
									},
									"id": 643,
									"nodeType": "InheritanceSpecifier",
									"src": "481:12:23"
								},
								{
									"baseName": {
										"id": 644,
										"name": "IDiamondFallback",
										"nameLocations": [
											"499:16:23"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1150,
										"src": "499:16:23"
									},
									"id": 645,
									"nodeType": "InheritanceSpecifier",
									"src": "499:16:23"
								},
								{
									"baseName": {
										"id": 646,
										"name": "IDiamondReadable",
										"nameLocations": [
											"521:16:23"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1705,
										"src": "521:16:23"
									},
									"id": 647,
									"nodeType": "InheritanceSpecifier",
									"src": "521:16:23"
								},
								{
									"baseName": {
										"id": 648,
										"name": "IDiamondWritable",
										"nameLocations": [
											"543:16:23"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2569,
										"src": "543:16:23"
									},
									"id": 649,
									"nodeType": "InheritanceSpecifier",
									"src": "543:16:23"
								},
								{
									"baseName": {
										"id": 650,
										"name": "ISafeOwnable",
										"nameLocations": [
											"565:12:23"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 55,
										"src": "565:12:23"
									},
									"id": 651,
									"nodeType": "InheritanceSpecifier",
									"src": "565:12:23"
								},
								{
									"baseName": {
										"id": 652,
										"name": "IERC165",
										"nameLocations": [
											"583:7:23"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 421,
										"src": "583:7:23"
									},
									"id": 653,
									"nodeType": "InheritanceSpecifier",
									"src": "583:7:23"
								}
							],
							"canonicalName": "ISolidStateDiamond",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 657,
							"linearizedBaseContracts": [
								657,
								421,
								425,
								55,
								23,
								445,
								64,
								34,
								455,
								2569,
								2611,
								1705,
								1150,
								1032,
								589
							],
							"name": "ISolidStateDiamond",
							"nameLocation": "455:18:23",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 656,
									"implemented": false,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "604:2:23"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "623:0:23"
									},
									"scope": 657,
									"src": "597:27:23",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 658,
							"src": "445:181:23",
							"usedErrors": [
								31,
								33,
								63,
								585,
								2587,
								2589,
								2591,
								2593,
								2595,
								2597,
								2599,
								2601
							]
						}
					],
					"src": "33:594:23"
				},
				"id": 23
			},
			"imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/proxy/diamond/SolidStateDiamond.sol",
					"exportedSymbols": {
						"DiamondBase": [
							991
						],
						"DiamondFallback": [
							1131
						],
						"DiamondReadable": [
							1663
						],
						"DiamondWritable": [
							1742
						],
						"ERC165Base": [
							484
						],
						"ERC165BaseStorage": [
							561
						],
						"IDiamondFallback": [
							1150
						],
						"IDiamondReadable": [
							1705
						],
						"IDiamondWritable": [
							2569
						],
						"IERC165": [
							421
						],
						"IERC173": [
							445
						],
						"IOwnable": [
							23
						],
						"ISafeOwnable": [
							55
						],
						"ISolidStateDiamond": [
							657
						],
						"Ownable": [
							101
						],
						"OwnableInternal": [
							225
						],
						"SafeOwnable": [
							301
						],
						"SolidStateDiamond": [
							943
						]
					},
					"id": 944,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 659,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:24"
						},
						{
							"absolutePath": "imports/solidstate/contracts/access/ownable/Ownable.sol",
							"file": "../../access/ownable/Ownable.sol",
							"id": 663,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 944,
							"sourceUnit": 102,
							"src": "58:86:24",
							"symbolAliases": [
								{
									"foreign": {
										"id": 660,
										"name": "IOwnable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 23,
										"src": "67:8:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 661,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 101,
										"src": "77:7:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 662,
										"name": "OwnableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 225,
										"src": "86:15:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/access/ownable/SafeOwnable.sol",
							"file": "../../access/ownable/SafeOwnable.sol",
							"id": 666,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 944,
							"sourceUnit": 302,
							"src": "145:81:24",
							"symbolAliases": [
								{
									"foreign": {
										"id": 664,
										"name": "ISafeOwnable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 55,
										"src": "154:12:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 665,
										"name": "SafeOwnable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 301,
										"src": "168:11:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/interfaces/IERC165.sol",
							"file": "../../interfaces/IERC165.sol",
							"id": 668,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 944,
							"sourceUnit": 422,
							"src": "227:55:24",
							"symbolAliases": [
								{
									"foreign": {
										"id": 667,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 421,
										"src": "236:7:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/interfaces/IERC173.sol",
							"file": "../../interfaces/IERC173.sol",
							"id": 670,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 944,
							"sourceUnit": 446,
							"src": "283:55:24",
							"symbolAliases": [
								{
									"foreign": {
										"id": 669,
										"name": "IERC173",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 445,
										"src": "292:7:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/introspection/ERC165/base/ERC165Base.sol",
							"file": "../../introspection/ERC165/base/ERC165Base.sol",
							"id": 673,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 944,
							"sourceUnit": 485,
							"src": "339:95:24",
							"symbolAliases": [
								{
									"foreign": {
										"id": 671,
										"name": "ERC165Base",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 484,
										"src": "348:10:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 672,
										"name": "ERC165BaseStorage",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 561,
										"src": "360:17:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/proxy/diamond/base/DiamondBase.sol",
							"file": "./base/DiamondBase.sol",
							"id": 675,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 944,
							"sourceUnit": 992,
							"src": "435:53:24",
							"symbolAliases": [
								{
									"foreign": {
										"id": 674,
										"name": "DiamondBase",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 991,
										"src": "444:11:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol",
							"file": "./fallback/DiamondFallback.sol",
							"id": 678,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 944,
							"sourceUnit": 1132,
							"src": "489:83:24",
							"symbolAliases": [
								{
									"foreign": {
										"id": 676,
										"name": "DiamondFallback",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1131,
										"src": "498:15:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 677,
										"name": "IDiamondFallback",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1150,
										"src": "515:16:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol",
							"file": "./readable/DiamondReadable.sol",
							"id": 681,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 944,
							"sourceUnit": 1664,
							"src": "573:83:24",
							"symbolAliases": [
								{
									"foreign": {
										"id": 679,
										"name": "DiamondReadable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1663,
										"src": "582:15:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 680,
										"name": "IDiamondReadable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1705,
										"src": "599:16:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol",
							"file": "./writable/DiamondWritable.sol",
							"id": 684,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 944,
							"sourceUnit": 1743,
							"src": "657:83:24",
							"symbolAliases": [
								{
									"foreign": {
										"id": 682,
										"name": "DiamondWritable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1742,
										"src": "666:15:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 683,
										"name": "IDiamondWritable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2569,
										"src": "683:16:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol",
							"file": "./ISolidStateDiamond.sol",
							"id": 686,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 944,
							"sourceUnit": 658,
							"src": "741:62:24",
							"symbolAliases": [
								{
									"foreign": {
										"id": 685,
										"name": "ISolidStateDiamond",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 657,
										"src": "750:18:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 688,
										"name": "ISolidStateDiamond",
										"nameLocations": [
											"918:18:24"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 657,
										"src": "918:18:24"
									},
									"id": 689,
									"nodeType": "InheritanceSpecifier",
									"src": "918:18:24"
								},
								{
									"baseName": {
										"id": 690,
										"name": "DiamondBase",
										"nameLocations": [
											"942:11:24"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 991,
										"src": "942:11:24"
									},
									"id": 691,
									"nodeType": "InheritanceSpecifier",
									"src": "942:11:24"
								},
								{
									"baseName": {
										"id": 692,
										"name": "DiamondFallback",
										"nameLocations": [
											"959:15:24"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1131,
										"src": "959:15:24"
									},
									"id": 693,
									"nodeType": "InheritanceSpecifier",
									"src": "959:15:24"
								},
								{
									"baseName": {
										"id": 694,
										"name": "DiamondReadable",
										"nameLocations": [
											"980:15:24"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1663,
										"src": "980:15:24"
									},
									"id": 695,
									"nodeType": "InheritanceSpecifier",
									"src": "980:15:24"
								},
								{
									"baseName": {
										"id": 696,
										"name": "DiamondWritable",
										"nameLocations": [
											"1001:15:24"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1742,
										"src": "1001:15:24"
									},
									"id": 697,
									"nodeType": "InheritanceSpecifier",
									"src": "1001:15:24"
								},
								{
									"baseName": {
										"id": 698,
										"name": "SafeOwnable",
										"nameLocations": [
											"1022:11:24"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 301,
										"src": "1022:11:24"
									},
									"id": 699,
									"nodeType": "InheritanceSpecifier",
									"src": "1022:11:24"
								},
								{
									"baseName": {
										"id": 700,
										"name": "ERC165Base",
										"nameLocations": [
											"1039:10:24"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 484,
										"src": "1039:10:24"
									},
									"id": 701,
									"nodeType": "InheritanceSpecifier",
									"src": "1039:10:24"
								}
							],
							"canonicalName": "SolidStateDiamond",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 687,
								"nodeType": "StructuredDocumentation",
								"src": "805:69:24",
								"text": " @title SolidState \"Diamond\" proxy reference implementation"
							},
							"fullyImplemented": true,
							"id": 943,
							"linearizedBaseContracts": [
								943,
								484,
								536,
								572,
								581,
								301,
								382,
								101,
								1742,
								1663,
								1131,
								991,
								627,
								225,
								657,
								421,
								425,
								55,
								23,
								445,
								64,
								34,
								455,
								2549,
								2569,
								2611,
								1705,
								1150,
								1032,
								589
							],
							"name": "SolidStateDiamond",
							"nameLocation": "893:17:24",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "1070:1948:24",
										"statements": [
											{
												"assignments": [
													708
												],
												"declarations": [
													{
														"constant": false,
														"id": 708,
														"mutability": "mutable",
														"name": "selectors",
														"nameLocation": "1096:9:24",
														"nodeType": "VariableDeclaration",
														"scope": 906,
														"src": "1080:25:24",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
															"typeString": "bytes4[]"
														},
														"typeName": {
															"baseType": {
																"id": 706,
																"name": "bytes4",
																"nodeType": "ElementaryTypeName",
																"src": "1080:6:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 707,
															"nodeType": "ArrayTypeName",
															"src": "1080:8:24",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
																"typeString": "bytes4[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 714,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3132",
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1121:2:24",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_12_by_1",
																"typeString": "int_const 12"
															},
															"value": "12"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_12_by_1",
																"typeString": "int_const 12"
															}
														],
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1108:12:24",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes4[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 709,
																"name": "bytes4",
																"nodeType": "ElementaryTypeName",
																"src": "1112:6:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 710,
															"nodeType": "ArrayTypeName",
															"src": "1112:8:24",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
																"typeString": "bytes4[]"
															}
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1108:16:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
														"typeString": "bytes4[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1080:44:24"
											},
											{
												"assignments": [
													716
												],
												"declarations": [
													{
														"constant": false,
														"id": 716,
														"mutability": "mutable",
														"name": "selectorIndex",
														"nameLocation": "1142:13:24",
														"nodeType": "VariableDeclaration",
														"scope": 906,
														"src": "1134:21:24",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 715,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1134:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 717,
												"nodeType": "VariableDeclarationStatement",
												"src": "1134:21:24"
											},
											{
												"expression": {
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 718,
															"name": "selectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "1203:9:24",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 721,
														"indexExpression": {
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "1213:15:24",
															"subExpression": {
																"id": 719,
																"name": "selectorIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "1213:13:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1203:26:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 722,
																"name": "IDiamondFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1150,
																"src": "1232:16:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDiamondFallback_$1150_$",
																	"typeString": "type(contract IDiamondFallback)"
																}
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1262:18:24",
															"memberName": "getFallbackAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1143,
															"src": "1232:48:24",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_view$__$returns$_t_address_$",
																"typeString": "function IDiamondFallback.getFallbackAddress() view returns (address)"
															}
														},
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1294:8:24",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "1232:70:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1203:99:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "1203:99:24"
											},
											{
												"expression": {
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 727,
															"name": "selectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "1312:9:24",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 730,
														"indexExpression": {
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "1322:15:24",
															"subExpression": {
																"id": 728,
																"name": "selectorIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "1322:13:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1312:26:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 731,
																"name": "IDiamondFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1150,
																"src": "1341:16:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDiamondFallback_$1150_$",
																	"typeString": "type(contract IDiamondFallback)"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1371:18:24",
															"memberName": "setFallbackAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1149,
															"src": "1341:48:24",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
																"typeString": "function IDiamondFallback.setFallbackAddress(address)"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1403:8:24",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "1341:70:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1312:99:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "1312:99:24"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 738,
																		"name": "IDiamondFallback",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1150,
																		"src": "1449:16:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IDiamondFallback_$1150_$",
																			"typeString": "type(contract IDiamondFallback)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IDiamondFallback_$1150_$",
																			"typeString": "type(contract IDiamondFallback)"
																		}
																	],
																	"id": 737,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1444:4:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1444:22:24",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IDiamondFallback_$1150",
																	"typeString": "type(contract IDiamondFallback)"
																}
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1467:11:24",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "1444:34:24",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"hexValue": "74727565",
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1480:4:24",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 736,
														"name": "_setSupportsInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "1422:21:24",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_bool_$returns$__$",
															"typeString": "function (bytes4,bool)"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1422:63:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 743,
												"nodeType": "ExpressionStatement",
												"src": "1422:63:24"
											},
											{
												"expression": {
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 744,
															"name": "selectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "1533:9:24",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 747,
														"indexExpression": {
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "1543:15:24",
															"subExpression": {
																"id": 745,
																"name": "selectorIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "1543:13:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1533:26:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 748,
																"name": "IDiamondWritable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2569,
																"src": "1562:16:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDiamondWritable_$2569_$",
																	"typeString": "type(contract IDiamondWritable)"
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1579:10:24",
															"memberName": "diamondCut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2568,
															"src": "1562:27:24",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_nonpayable$_t_array$_t_struct$_FacetCut_$2610_calldata_ptr_$dyn_calldata_ptr_$_t_address_$_t_bytes_calldata_ptr_$returns$__$",
																"typeString": "function IDiamondWritable.diamondCut(struct IDiamondWritableInternal.FacetCut calldata[] calldata,address,bytes calldata)"
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1590:8:24",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "1562:36:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1533:65:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "1533:65:24"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 755,
																		"name": "IDiamondWritable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2569,
																		"src": "1636:16:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IDiamondWritable_$2569_$",
																			"typeString": "type(contract IDiamondWritable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IDiamondWritable_$2569_$",
																			"typeString": "type(contract IDiamondWritable)"
																		}
																	],
																	"id": 754,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1631:4:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1631:22:24",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IDiamondWritable_$2569",
																	"typeString": "type(contract IDiamondWritable)"
																}
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1654:11:24",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "1631:34:24",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"hexValue": "74727565",
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1667:4:24",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 753,
														"name": "_setSupportsInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "1609:21:24",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_bool_$returns$__$",
															"typeString": "function (bytes4,bool)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1609:63:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "1609:63:24"
											},
											{
												"expression": {
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 761,
															"name": "selectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "1720:9:24",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 764,
														"indexExpression": {
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "1730:15:24",
															"subExpression": {
																"id": 762,
																"name": "selectorIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "1730:13:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1720:26:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 765,
																"name": "IDiamondReadable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "1749:16:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDiamondReadable_$1705_$",
																	"typeString": "type(contract IDiamondReadable)"
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1766:6:24",
															"memberName": "facets",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1680,
															"src": "1749:23:24",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_view$__$returns$_t_array$_t_struct$_Facet_$1672_memory_ptr_$dyn_memory_ptr_$",
																"typeString": "function IDiamondReadable.facets() view returns (struct IDiamondReadable.Facet memory[] memory)"
															}
														},
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1773:8:24",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "1749:32:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1720:61:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "1720:61:24"
											},
											{
												"expression": {
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 770,
															"name": "selectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "1791:9:24",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 773,
														"indexExpression": {
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "1801:15:24",
															"subExpression": {
																"id": 771,
																"name": "selectorIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "1801:13:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1791:26:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 774,
																"name": "IDiamondReadable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "1820:16:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDiamondReadable_$1705_$",
																	"typeString": "type(contract IDiamondReadable)"
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1850:22:24",
															"memberName": "facetFunctionSelectors",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1689,
															"src": "1820:52:24",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_view$_t_address_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
																"typeString": "function IDiamondReadable.facetFunctionSelectors(address) view returns (bytes4[] memory)"
															}
														},
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1886:8:24",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "1820:74:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1791:103:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "1791:103:24"
											},
											{
												"expression": {
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 779,
															"name": "selectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "1904:9:24",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 782,
														"indexExpression": {
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "1914:15:24",
															"subExpression": {
																"id": 780,
																"name": "selectorIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "1914:13:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1904:26:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 783,
																"name": "IDiamondReadable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "1933:16:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDiamondReadable_$1705_$",
																	"typeString": "type(contract IDiamondReadable)"
																}
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1950:14:24",
															"memberName": "facetAddresses",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1696,
															"src": "1933:31:24",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																"typeString": "function IDiamondReadable.facetAddresses() view returns (address[] memory)"
															}
														},
														"id": 785,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1965:8:24",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "1933:40:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1904:69:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "1904:69:24"
											},
											{
												"expression": {
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 788,
															"name": "selectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "1983:9:24",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 791,
														"indexExpression": {
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "1993:15:24",
															"subExpression": {
																"id": 789,
																"name": "selectorIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "1993:13:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1983:26:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 792,
																"name": "IDiamondReadable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "2012:16:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDiamondReadable_$1705_$",
																	"typeString": "type(contract IDiamondReadable)"
																}
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2029:12:24",
															"memberName": "facetAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1704,
															"src": "2012:29:24",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_view$_t_bytes4_$returns$_t_address_$",
																"typeString": "function IDiamondReadable.facetAddress(bytes4) view returns (address)"
															}
														},
														"id": 794,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2042:8:24",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "2012:38:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1983:67:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "1983:67:24"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 799,
																		"name": "IDiamondReadable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1705,
																		"src": "2088:16:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IDiamondReadable_$1705_$",
																			"typeString": "type(contract IDiamondReadable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IDiamondReadable_$1705_$",
																			"typeString": "type(contract IDiamondReadable)"
																		}
																	],
																	"id": 798,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2083:4:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2083:22:24",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IDiamondReadable_$1705",
																	"typeString": "type(contract IDiamondReadable)"
																}
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2106:11:24",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2083:34:24",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"hexValue": "74727565",
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2119:4:24",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 797,
														"name": "_setSupportsInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "2061:21:24",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_bool_$returns$__$",
															"typeString": "function (bytes4,bool)"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2061:63:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "2061:63:24"
											},
											{
												"expression": {
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 805,
															"name": "selectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "2163:9:24",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 808,
														"indexExpression": {
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "2173:15:24",
															"subExpression": {
																"id": 806,
																"name": "selectorIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "2173:13:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2163:26:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 809,
																"name": "IERC165",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "2192:7:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC165_$421_$",
																	"typeString": "type(contract IERC165)"
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2200:17:24",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 420,
															"src": "2192:25:24",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function IERC165.supportsInterface(bytes4) view returns (bool)"
															}
														},
														"id": 811,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2218:8:24",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "2192:34:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "2163:63:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "2163:63:24"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 816,
																		"name": "IERC165",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "2264:7:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC165_$421_$",
																			"typeString": "type(contract IERC165)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC165_$421_$",
																			"typeString": "type(contract IERC165)"
																		}
																	],
																	"id": 815,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2259:4:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2259:13:24",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$421",
																	"typeString": "type(contract IERC165)"
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2273:11:24",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2259:25:24",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"hexValue": "74727565",
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2286:4:24",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 814,
														"name": "_setSupportsInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "2237:21:24",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_bool_$returns$__$",
															"typeString": "function (bytes4,bool)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:54:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "2237:54:24"
											},
											{
												"expression": {
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 822,
															"name": "selectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "2335:9:24",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 825,
														"indexExpression": {
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "2345:15:24",
															"subExpression": {
																"id": 823,
																"name": "selectorIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "2345:13:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2335:26:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 826,
																"name": "Ownable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "2364:7:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Ownable_$101_$",
																	"typeString": "type(contract Ownable)"
																}
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2372:5:24",
															"memberName": "owner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 87,
															"src": "2364:13:24",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2378:8:24",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "2364:22:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "2335:51:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "2335:51:24"
											},
											{
												"expression": {
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 831,
															"name": "selectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "2396:9:24",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 834,
														"indexExpression": {
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "2406:15:24",
															"subExpression": {
																"id": 832,
																"name": "selectorIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "2406:13:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2396:26:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 835,
																"name": "SafeOwnable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "2425:11:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeOwnable_$301_$",
																	"typeString": "type(contract SafeOwnable)"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2437:12:24",
															"memberName": "nomineeOwner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 275,
															"src": "2425:24:24",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2450:8:24",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "2425:33:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "2396:62:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 839,
												"nodeType": "ExpressionStatement",
												"src": "2396:62:24"
											},
											{
												"expression": {
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 840,
															"name": "selectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "2468:9:24",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 843,
														"indexExpression": {
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "2478:15:24",
															"subExpression": {
																"id": 841,
																"name": "selectorIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "2478:13:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2468:26:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 844,
																"name": "Ownable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "2497:7:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Ownable_$101_$",
																	"typeString": "type(contract Ownable)"
																}
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2505:17:24",
															"memberName": "transferOwnership",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 100,
															"src": "2497:25:24",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																"typeString": "function (address)"
															}
														},
														"id": 846,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2523:8:24",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "2497:34:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "2468:63:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "2468:63:24"
											},
											{
												"expression": {
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 849,
															"name": "selectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "2541:9:24",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 852,
														"indexExpression": {
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "2551:15:24",
															"subExpression": {
																"id": 850,
																"name": "selectorIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "2551:13:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2541:26:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 853,
																"name": "SafeOwnable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "2570:11:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeOwnable_$301_$",
																	"typeString": "type(contract SafeOwnable)"
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2582:15:24",
															"memberName": "acceptOwnership",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 285,
															"src": "2570:27:24",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																"typeString": "function ()"
															}
														},
														"id": 855,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2598:8:24",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "2570:36:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "2541:65:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "2541:65:24"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 860,
																		"name": "IERC173",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "2644:7:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC173_$445_$",
																			"typeString": "type(contract IERC173)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC173_$445_$",
																			"typeString": "type(contract IERC173)"
																		}
																	],
																	"id": 859,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2639:4:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2639:13:24",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC173_$445",
																	"typeString": "type(contract IERC173)"
																}
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2653:11:24",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2639:25:24",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"hexValue": "74727565",
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2666:4:24",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 858,
														"name": "_setSupportsInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "2617:21:24",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_bool_$returns$__$",
															"typeString": "function (bytes4,bool)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2617:54:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "2617:54:24"
											},
											{
												"assignments": [
													870
												],
												"declarations": [
													{
														"constant": false,
														"id": 870,
														"mutability": "mutable",
														"name": "facetCuts",
														"nameLocation": "2724:9:24",
														"nodeType": "VariableDeclaration",
														"scope": 906,
														"src": "2706:27:24",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IDiamondWritableInternal.FacetCut[]"
														},
														"typeName": {
															"baseType": {
																"id": 868,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 867,
																	"name": "FacetCut",
																	"nameLocations": [
																		"2706:8:24"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2610,
																	"src": "2706:8:24"
																},
																"referencedDeclaration": 2610,
																"src": "2706:8:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FacetCut_$2610_storage_ptr",
																	"typeString": "struct IDiamondWritableInternal.FacetCut"
																}
															},
															"id": 869,
															"nodeType": "ArrayTypeName",
															"src": "2706:10:24",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$2610_storage_$dyn_storage_ptr",
																"typeString": "struct IDiamondWritableInternal.FacetCut[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 877,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2751:1:24",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2736:14:24",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IDiamondWritableInternal.FacetCut memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 872,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 871,
																	"name": "FacetCut",
																	"nameLocations": [
																		"2740:8:24"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2610,
																	"src": "2740:8:24"
																},
																"referencedDeclaration": 2610,
																"src": "2740:8:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FacetCut_$2610_storage_ptr",
																	"typeString": "struct IDiamondWritableInternal.FacetCut"
																}
															},
															"id": 873,
															"nodeType": "ArrayTypeName",
															"src": "2740:10:24",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$2610_storage_$dyn_storage_ptr",
																"typeString": "struct IDiamondWritableInternal.FacetCut[]"
															}
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2736:17:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IDiamondWritableInternal.FacetCut memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2706:47:24"
											},
											{
												"expression": {
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 878,
															"name": "facetCuts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "2764:9:24",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IDiamondWritableInternal.FacetCut memory[] memory"
															}
														},
														"id": 880,
														"indexExpression": {
															"hexValue": "30",
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2774:1:24",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2764:12:24",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
															"typeString": "struct IDiamondWritableInternal.FacetCut memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 884,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2818:4:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SolidStateDiamond_$943",
																			"typeString": "contract SolidStateDiamond"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SolidStateDiamond_$943",
																			"typeString": "contract SolidStateDiamond"
																		}
																	],
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2810:7:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 882,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2810:7:24",
																		"typeDescriptions": {}
																	}
																},
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2810:13:24",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 886,
																	"name": "FacetCutAction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2575,
																	"src": "2845:14:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_FacetCutAction_$2575_$",
																		"typeString": "type(enum IDiamondWritableInternal.FacetCutAction)"
																	}
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2860:3:24",
																"memberName": "ADD",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2572,
																"src": "2845:18:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_FacetCutAction_$2575",
																	"typeString": "enum IDiamondWritableInternal.FacetCutAction"
																}
															},
															{
																"id": 888,
																"name": "selectors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 708,
																"src": "2888:9:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																	"typeString": "bytes4[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_enum$_FacetCutAction_$2575",
																	"typeString": "enum IDiamondWritableInternal.FacetCutAction"
																},
																{
																	"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																	"typeString": "bytes4[] memory"
																}
															],
															"id": 881,
															"name": "FacetCut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2610,
															"src": "2779:8:24",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_FacetCut_$2610_storage_ptr_$",
																"typeString": "type(struct IDiamondWritableInternal.FacetCut storage pointer)"
															}
														},
														"id": 889,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2802:6:24",
															"2837:6:24",
															"2877:9:24"
														],
														"names": [
															"target",
															"action",
															"selectors"
														],
														"nodeType": "FunctionCall",
														"src": "2779:129:24",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
															"typeString": "struct IDiamondWritableInternal.FacetCut memory"
														}
													},
													"src": "2764:144:24",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
														"typeString": "struct IDiamondWritableInternal.FacetCut memory"
													}
												},
												"id": 891,
												"nodeType": "ExpressionStatement",
												"src": "2764:144:24"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 893,
															"name": "facetCuts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "2931:9:24",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IDiamondWritableInternal.FacetCut memory[] memory"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2950:1:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2942:7:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 894,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2942:7:24",
																	"typeDescriptions": {}
																}
															},
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2942:10:24",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "",
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2954:2:24",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IDiamondWritableInternal.FacetCut memory[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 892,
														"name": "_diamondCut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1947,
														"src": "2919:11:24",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (struct IDiamondWritableInternal.FacetCut memory[] memory,address,bytes memory)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2919:38:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 900,
												"nodeType": "ExpressionStatement",
												"src": "2919:38:24"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 902,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3000:3:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3004:6:24",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3000:10:24",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 901,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "2990:9:24",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2990:21:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "2990:21:24"
											}
										]
									},
									"id": 907,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1067:2:24"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1070:0:24"
									},
									"scope": 943,
									"src": "1056:1962:24",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										656
									],
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "3051:2:24",
										"statements": []
									},
									"id": 911,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3031:2:24"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3051:0:24"
									},
									"scope": 943,
									"src": "3024:29:24",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										197,
										300
									],
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "3174:50:24",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 922,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "3209:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 919,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3184:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SolidStateDiamond_$943_$",
																"typeString": "type(contract super SolidStateDiamond)"
															}
														},
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3190:18:24",
														"memberName": "_transferOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 300,
														"src": "3184:24:24",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3184:33:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "3184:33:24"
											}
										]
									},
									"id": 926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3068:18:24",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 917,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 915,
												"name": "OwnableInternal",
												"nameLocations": [
													"3144:15:24"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 225,
												"src": "3144:15:24"
											},
											{
												"id": 916,
												"name": "SafeOwnable",
												"nameLocations": [
													"3161:11:24"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 301,
												"src": "3161:11:24"
											}
										],
										"src": "3135:38:24"
									},
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3104:7:24",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "3096:15:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3096:7:24",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3086:31:24"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3174:0:24"
									},
									"scope": 943,
									"src": "3059:165:24",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										990,
										1101
									],
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "3433:60:24",
										"statements": [
											{
												"expression": {
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 935,
														"name": "implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "3443:14:24",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 936,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "3460:5:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_SolidStateDiamond_$943_$",
																	"typeString": "type(contract super SolidStateDiamond)"
																}
															},
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3466:18:24",
															"memberName": "_getImplementation",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1101,
															"src": "3460:24:24",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3460:26:24",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3443:43:24",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 940,
												"nodeType": "ExpressionStatement",
												"src": "3443:43:24"
											}
										]
									},
									"documentation": {
										"id": 927,
										"nodeType": "StructuredDocumentation",
										"src": "3230:46:24",
										"text": " @inheritdoc DiamondFallback"
									},
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "3290:18:24",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 931,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 929,
												"name": "DiamondBase",
												"nameLocations": [
													"3358:11:24"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 991,
												"src": "3358:11:24"
											},
											{
												"id": 930,
												"name": "DiamondFallback",
												"nameLocations": [
													"3371:15:24"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1131,
												"src": "3371:15:24"
											}
										],
										"src": "3349:38:24"
									},
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3308:2:24"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3413:14:24",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "3405:22:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3405:7:24",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3404:24:24"
									},
									"scope": 943,
									"src": "3281:212:24",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 944,
							"src": "875:2620:24",
							"usedErrors": [
								31,
								33,
								63,
								580,
								585,
								2587,
								2589,
								2591,
								2593,
								2595,
								2597,
								2599,
								2601
							]
						}
					],
					"src": "33:3463:24"
				},
				"id": 24
			},
			"imports/solidstate/contracts/proxy/diamond/base/DiamondBase.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/proxy/diamond/base/DiamondBase.sol",
					"exportedSymbols": {
						"DiamondBase": [
							991
						],
						"DiamondBaseStorage": [
							1025
						],
						"IDiamondBase": [
							1032
						],
						"Proxy": [
							627
						]
					},
					"id": 992,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 945,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:25"
						},
						{
							"absolutePath": "imports/solidstate/contracts/proxy/Proxy.sol",
							"file": "../../Proxy.sol",
							"id": 947,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 992,
							"sourceUnit": 628,
							"src": "58:40:25",
							"symbolAliases": [
								{
									"foreign": {
										"id": 946,
										"name": "Proxy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 627,
										"src": "67:5:25",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/proxy/diamond/base/IDiamondBase.sol",
							"file": "./IDiamondBase.sol",
							"id": 949,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 992,
							"sourceUnit": 1033,
							"src": "99:50:25",
							"symbolAliases": [
								{
									"foreign": {
										"id": 948,
										"name": "IDiamondBase",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1032,
										"src": "108:12:25",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol",
							"file": "./DiamondBaseStorage.sol",
							"id": 951,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 992,
							"sourceUnit": 1026,
							"src": "150:62:25",
							"symbolAliases": [
								{
									"foreign": {
										"id": 950,
										"name": "DiamondBaseStorage",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1025,
										"src": "159:18:25",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 953,
										"name": "IDiamondBase",
										"nameLocations": [
											"356:12:25"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1032,
										"src": "356:12:25"
									},
									"id": 954,
									"nodeType": "InheritanceSpecifier",
									"src": "356:12:25"
								},
								{
									"baseName": {
										"id": 955,
										"name": "Proxy",
										"nameLocations": [
											"370:5:25"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 627,
										"src": "370:5:25"
									},
									"id": 956,
									"nodeType": "InheritanceSpecifier",
									"src": "370:5:25"
								}
							],
							"canonicalName": "DiamondBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 952,
								"nodeType": "StructuredDocumentation",
								"src": "214:108:25",
								"text": " @title EIP-2535 \"Diamond\" proxy base contract\n @dev see https://eips.ethereum.org/EIPS/eip-2535"
							},
							"fullyImplemented": true,
							"id": 991,
							"linearizedBaseContracts": [
								991,
								627,
								1032,
								589
							],
							"name": "DiamondBase",
							"nameLocation": "341:11:25",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										626
									],
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "561:284:25",
										"statements": [
											{
												"assignments": [
													967
												],
												"declarations": [
													{
														"constant": false,
														"id": 967,
														"mutability": "mutable",
														"name": "l",
														"nameLocation": "662:1:25",
														"nodeType": "VariableDeclaration",
														"scope": 989,
														"src": "628:35:25",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
															"typeString": "struct DiamondBaseStorage.Layout"
														},
														"typeName": {
															"id": 966,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 965,
																"name": "DiamondBaseStorage.Layout",
																"nameLocations": [
																	"628:18:25",
																	"647:6:25"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1007,
																"src": "628:25:25"
															},
															"referencedDeclaration": 1007,
															"src": "628:25:25",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																"typeString": "struct DiamondBaseStorage.Layout"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 968,
												"nodeType": "VariableDeclarationStatement",
												"src": "628:35:25"
											},
											{
												"assignments": [
													970
												],
												"declarations": [
													{
														"constant": false,
														"id": 970,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "681:4:25",
														"nodeType": "VariableDeclaration",
														"scope": 989,
														"src": "673:12:25",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 969,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "673:7:25",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 973,
												"initialValue": {
													"expression": {
														"id": 971,
														"name": "DiamondBaseStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "688:18:25",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_DiamondBaseStorage_$1025_$",
															"typeString": "type(library DiamondBaseStorage)"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "707:12:25",
													"memberName": "STORAGE_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1012,
													"src": "688:31:25",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "673:46:25"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "738:38:25",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "752:14:25",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "762:4:25"
															},
															"variableNames": [
																{
																	"name": "l.slot",
																	"nodeType": "YulIdentifier",
																	"src": "752:6:25"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 967,
														"isOffset": false,
														"isSlot": true,
														"src": "752:6:25",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 970,
														"isOffset": false,
														"isSlot": false,
														"src": "762:4:25",
														"valueSize": 1
													}
												],
												"id": 974,
												"nodeType": "InlineAssembly",
												"src": "729:47:25"
											},
											{
												"expression": {
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 975,
														"name": "implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "786:14:25",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"baseExpression": {
																			"expression": {
																				"id": 980,
																				"name": "l",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 967,
																				"src": "819:1:25",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																					"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																				}
																			},
																			"id": 981,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "821:6:25",
																			"memberName": "facets",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 998,
																			"src": "819:8:25",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
																				"typeString": "mapping(bytes4 => bytes32)"
																			}
																		},
																		"id": 984,
																		"indexExpression": {
																			"expression": {
																				"id": 982,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "828:3:25",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 983,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "832:3:25",
																			"memberName": "sig",
																			"nodeType": "MemberAccess",
																			"src": "828:7:25",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "819:17:25",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "811:7:25",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes20_$",
																		"typeString": "type(bytes20)"
																	},
																	"typeName": {
																		"id": 978,
																		"name": "bytes20",
																		"nodeType": "ElementaryTypeName",
																		"src": "811:7:25",
																		"typeDescriptions": {}
																	}
																},
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "811:26:25",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes20",
																	"typeString": "bytes20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes20",
																	"typeString": "bytes20"
																}
															],
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "803:7:25",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 976,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "803:7:25",
																"typeDescriptions": {}
															}
														},
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "803:35:25",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "786:52:25",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "786:52:25"
											}
										]
									},
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "382:36:25",
										"text": " @inheritdoc Proxy"
									},
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "432:18:25",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 959,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "507:8:25"
									},
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "450:2:25"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "541:14:25",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "533:22:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:25",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:24:25"
									},
									"scope": 991,
									"src": "423:422:25",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 992,
							"src": "323:524:25",
							"usedErrors": [
								585
							]
						}
					],
					"src": "33:815:25"
				},
				"id": 25
			},
			"imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol",
					"exportedSymbols": {
						"DiamondBaseStorage": [
							1025
						]
					},
					"id": 1026,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 993,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:26"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DiamondBaseStorage",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 994,
								"nodeType": "StructuredDocumentation",
								"src": "58:78:26",
								"text": " @dev derived from https://github.com/mudgen/diamond-2 (MIT license)"
							},
							"fullyImplemented": true,
							"id": 1025,
							"linearizedBaseContracts": [
								1025
							],
							"name": "DiamondBaseStorage",
							"nameLocation": "145:18:26",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DiamondBaseStorage.Layout",
									"id": 1007,
									"members": [
										{
											"constant": false,
											"id": 998,
											"mutability": "mutable",
											"name": "facets",
											"nameLocation": "293:6:26",
											"nodeType": "VariableDeclaration",
											"scope": 1007,
											"src": "266:33:26",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
												"typeString": "mapping(bytes4 => bytes32)"
											},
											"typeName": {
												"id": 997,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 995,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "274:6:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"nodeType": "Mapping",
												"src": "266:26:26",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
													"typeString": "mapping(bytes4 => bytes32)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 996,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "284:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1000,
											"mutability": "mutable",
											"name": "selectorCount",
											"nameLocation": "364:13:26",
											"nodeType": "VariableDeclaration",
											"scope": 1007,
											"src": "357:20:26",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 999,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "357:6:26",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1004,
											"mutability": "mutable",
											"name": "selectorSlots",
											"nameLocation": "476:13:26",
											"nodeType": "VariableDeclaration",
											"scope": 1007,
											"src": "448:41:26",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
												"typeString": "mapping(uint256 => bytes32)"
											},
											"typeName": {
												"id": 1003,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "448:27:26",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
													"typeString": "mapping(uint256 => bytes32)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1002,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1006,
											"mutability": "mutable",
											"name": "fallbackAddress",
											"nameLocation": "507:15:26",
											"nodeType": "VariableDeclaration",
											"scope": 1007,
											"src": "499:23:26",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1005,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "499:7:26",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Layout",
									"nameLocation": "177:6:26",
									"nodeType": "StructDefinition",
									"scope": 1025,
									"src": "170:359:26",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1012,
									"mutability": "constant",
									"name": "STORAGE_SLOT",
									"nameLocation": "561:12:26",
									"nodeType": "VariableDeclaration",
									"scope": 1025,
									"src": "535:102:26",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1008,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "535:7:26",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "736f6c696473746174652e636f6e7472616374732e73746f726167652e4469616d6f6e6442617365",
												"id": 1010,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "594:42:26",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc93",
													"typeString": "literal_string \"solidstate.contracts.storage.DiamondBase\""
												},
												"value": "solidstate.contracts.storage.DiamondBase"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc93",
													"typeString": "literal_string \"solidstate.contracts.storage.DiamondBase\""
												}
											],
											"id": 1009,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "584:9:26",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1011,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "584:53:26",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "703:100:26",
										"statements": [
											{
												"assignments": [
													1019
												],
												"declarations": [
													{
														"constant": false,
														"id": 1019,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "721:4:26",
														"nodeType": "VariableDeclaration",
														"scope": 1023,
														"src": "713:12:26",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1018,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "713:7:26",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1021,
												"initialValue": {
													"id": 1020,
													"name": "STORAGE_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1012,
													"src": "728:12:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "713:27:26"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "759:38:26",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "773:14:26",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "783:4:26"
															},
															"variableNames": [
																{
																	"name": "l.slot",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:26"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1016,
														"isOffset": false,
														"isSlot": true,
														"src": "773:6:26",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1019,
														"isOffset": false,
														"isSlot": false,
														"src": "783:4:26",
														"valueSize": 1
													}
												],
												"id": 1022,
												"nodeType": "InlineAssembly",
												"src": "750:47:26"
											}
										]
									},
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "layout",
									"nameLocation": "653:6:26",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:26"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "l",
												"nameLocation": "700:1:26",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "685:16:26",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
													"typeString": "struct DiamondBaseStorage.Layout"
												},
												"typeName": {
													"id": 1015,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1014,
														"name": "Layout",
														"nameLocations": [
															"685:6:26"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1007,
														"src": "685:6:26"
													},
													"referencedDeclaration": 1007,
													"src": "685:6:26",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
														"typeString": "struct DiamondBaseStorage.Layout"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "684:18:26"
									},
									"scope": 1025,
									"src": "644:159:26",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1026,
							"src": "137:668:26",
							"usedErrors": []
						}
					],
					"src": "33:773:26"
				},
				"id": 26
			},
			"imports/solidstate/contracts/proxy/diamond/base/IDiamondBase.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/proxy/diamond/base/IDiamondBase.sol",
					"exportedSymbols": {
						"IDiamondBase": [
							1032
						],
						"IProxy": [
							589
						]
					},
					"id": 1033,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1027,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:27"
						},
						{
							"absolutePath": "imports/solidstate/contracts/proxy/IProxy.sol",
							"file": "../../IProxy.sol",
							"id": 1029,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1033,
							"sourceUnit": 590,
							"src": "58:42:27",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1028,
										"name": "IProxy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 589,
										"src": "67:6:27",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1030,
										"name": "IProxy",
										"nameLocations": [
											"128:6:27"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 589,
										"src": "128:6:27"
									},
									"id": 1031,
									"nodeType": "InheritanceSpecifier",
									"src": "128:6:27"
								}
							],
							"canonicalName": "IDiamondBase",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1032,
							"linearizedBaseContracts": [
								1032,
								589
							],
							"name": "IDiamondBase",
							"nameLocation": "112:12:27",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1033,
							"src": "102:35:27",
							"usedErrors": [
								585
							]
						}
					],
					"src": "33:105:27"
				},
				"id": 27
			},
			"imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol",
					"exportedSymbols": {
						"DiamondBase": [
							991
						],
						"DiamondBaseStorage": [
							1025
						],
						"DiamondFallback": [
							1131
						],
						"IDiamondFallback": [
							1150
						],
						"OwnableInternal": [
							225
						]
					},
					"id": 1132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1034,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:28"
						},
						{
							"absolutePath": "imports/solidstate/contracts/access/ownable/OwnableInternal.sol",
							"file": "../../../access/ownable/OwnableInternal.sol",
							"id": 1036,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1132,
							"sourceUnit": 226,
							"src": "58:78:28",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1035,
										"name": "OwnableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 225,
										"src": "67:15:28",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/proxy/diamond/base/DiamondBase.sol",
							"file": "../base/DiamondBase.sol",
							"id": 1038,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1132,
							"sourceUnit": 992,
							"src": "137:54:28",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1037,
										"name": "DiamondBase",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 991,
										"src": "146:11:28",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol",
							"file": "../base/DiamondBaseStorage.sol",
							"id": 1040,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1132,
							"sourceUnit": 1026,
							"src": "192:68:28",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1039,
										"name": "DiamondBaseStorage",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1025,
										"src": "201:18:28",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol",
							"file": "./IDiamondFallback.sol",
							"id": 1042,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1132,
							"sourceUnit": 1151,
							"src": "261:58:28",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1041,
										"name": "IDiamondFallback",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1150,
										"src": "270:16:28",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1044,
										"name": "IDiamondFallback",
										"nameLocations": [
											"426:16:28"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1150,
										"src": "426:16:28"
									},
									"id": 1045,
									"nodeType": "InheritanceSpecifier",
									"src": "426:16:28"
								},
								{
									"baseName": {
										"id": 1046,
										"name": "OwnableInternal",
										"nameLocations": [
											"448:15:28"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 225,
										"src": "448:15:28"
									},
									"id": 1047,
									"nodeType": "InheritanceSpecifier",
									"src": "448:15:28"
								},
								{
									"baseName": {
										"id": 1048,
										"name": "DiamondBase",
										"nameLocations": [
											"469:11:28"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 991,
										"src": "469:11:28"
									},
									"id": 1049,
									"nodeType": "InheritanceSpecifier",
									"src": "469:11:28"
								}
							],
							"canonicalName": "DiamondFallback",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1043,
								"nodeType": "StructuredDocumentation",
								"src": "321:63:28",
								"text": " @title Fallback feature for EIP-2535 \"Diamond\" proxy"
							},
							"fullyImplemented": true,
							"id": 1131,
							"linearizedBaseContracts": [
								1131,
								991,
								627,
								225,
								34,
								455,
								1150,
								1032,
								589
							],
							"name": "DiamondFallback",
							"nameLocation": "403:15:28",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1143
									],
									"body": {
										"id": 1060,
										"nodeType": "Block",
										"src": "645:56:28",
										"statements": [
											{
												"expression": {
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1055,
														"name": "fallbackAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "655:15:28",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1056,
															"name": "_getFallbackAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "673:19:28",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1057,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "673:21:28",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "655:39:28",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "655:39:28"
											}
										]
									},
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "487:47:28",
										"text": " @inheritdoc IDiamondFallback"
									},
									"functionSelector": "2c408059",
									"id": 1061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFallbackAddress",
									"nameLocation": "548:18:28",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "566:2:28"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "fallbackAddress",
												"nameLocation": "624:15:28",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "616:23:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:28",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "615:25:28"
									},
									"scope": 1131,
									"src": "539:162:28",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1149
									],
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "831:53:28",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1070,
															"name": "fallbackAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "861:15:28",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1069,
														"name": "_setFallbackAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "841:19:28",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "841:36:28",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "841:36:28"
											}
										]
									},
									"documentation": {
										"id": 1062,
										"nodeType": "StructuredDocumentation",
										"src": "707:47:28",
										"text": " @inheritdoc IDiamondFallback"
									},
									"functionSelector": "91423765",
									"id": 1074,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1067,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1066,
												"name": "onlyOwner",
												"nameLocations": [
													"821:9:28"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 129,
												"src": "821:9:28"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:9:28"
										}
									],
									"name": "setFallbackAddress",
									"nameLocation": "768:18:28",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "fallbackAddress",
												"nameLocation": "795:15:28",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "787:23:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "787:7:28",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "786:25:28"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "831:0:28"
									},
									"scope": 1131,
									"src": "759:125:28",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										990
									],
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "1150:167:28",
										"statements": [
											{
												"expression": {
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1081,
														"name": "implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "1160:14:28",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1082,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1177:5:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_DiamondFallback_$1131_$",
																	"typeString": "type(contract super DiamondFallback)"
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1183:18:28",
															"memberName": "_getImplementation",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 990,
															"src": "1177:24:28",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1177:26:28",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1160:43:28",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "1160:43:28"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1087,
														"name": "implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "1218:14:28",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1244:1:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1236:7:28",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1088,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1236:7:28",
																"typeDescriptions": {}
															}
														},
														"id": 1091,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1236:10:28",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1218:28:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1099,
												"nodeType": "IfStatement",
												"src": "1214:97:28",
												"trueBody": {
													"id": 1098,
													"nodeType": "Block",
													"src": "1248:63:28",
													"statements": [
														{
															"expression": {
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1093,
																	"name": "implementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1079,
																	"src": "1262:14:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1094,
																		"name": "_getFallbackAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "1279:19:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1279:21:28",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1262:38:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1097,
															"nodeType": "ExpressionStatement",
															"src": "1262:38:28"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1075,
										"nodeType": "StructuredDocumentation",
										"src": "890:117:28",
										"text": " @inheritdoc DiamondBase\n @notice query custom fallback address is no implementation is found"
									},
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "1021:18:28",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1077,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1096:8:28"
									},
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1039:2:28"
									},
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1130:14:28",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "1122:22:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1122:7:28",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1121:24:28"
									},
									"scope": 1131,
									"src": "1012:305:28",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1114,
										"nodeType": "Block",
										"src": "1592:78:28",
										"statements": [
											{
												"expression": {
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1107,
														"name": "fallbackAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1105,
														"src": "1602:15:28",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1108,
																	"name": "DiamondBaseStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "1620:18:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_DiamondBaseStorage_$1025_$",
																		"typeString": "type(library DiamondBaseStorage)"
																	}
																},
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1639:6:28",
																"memberName": "layout",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1024,
																"src": "1620:25:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$1007_storage_ptr_$",
																	"typeString": "function () pure returns (struct DiamondBaseStorage.Layout storage pointer)"
																}
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1620:27:28",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																"typeString": "struct DiamondBaseStorage.Layout storage pointer"
															}
														},
														"id": 1111,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1648:15:28",
														"memberName": "fallbackAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1006,
														"src": "1620:43:28",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1602:61:28",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "1602:61:28"
											}
										]
									},
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "1323:141:28",
										"text": " @notice query the address of the fallback implementation\n @return fallbackAddress address of fallback implementation"
									},
									"id": 1115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getFallbackAddress",
									"nameLocation": "1478:19:28",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1497:2:28"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "fallbackAddress",
												"nameLocation": "1571:15:28",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "1563:23:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1563:7:28",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1562:25:28"
									},
									"scope": 1131,
									"src": "1469:201:28",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "1890:78:28",
										"statements": [
											{
												"expression": {
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1121,
																	"name": "DiamondBaseStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "1900:18:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_DiamondBaseStorage_$1025_$",
																		"typeString": "type(library DiamondBaseStorage)"
																	}
																},
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1919:6:28",
																"memberName": "layout",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1024,
																"src": "1900:25:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$1007_storage_ptr_$",
																	"typeString": "function () pure returns (struct DiamondBaseStorage.Layout storage pointer)"
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1900:27:28",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																"typeString": "struct DiamondBaseStorage.Layout storage pointer"
															}
														},
														"id": 1125,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1928:15:28",
														"memberName": "fallbackAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1006,
														"src": "1900:43:28",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1126,
														"name": "fallbackAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1118,
														"src": "1946:15:28",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1900:61:28",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1128,
												"nodeType": "ExpressionStatement",
												"src": "1900:61:28"
											}
										]
									},
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "1676:138:28",
										"text": " @notice set the address of the fallback implementation\n @param fallbackAddress address of fallback implementation"
									},
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setFallbackAddress",
									"nameLocation": "1828:19:28",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "fallbackAddress",
												"nameLocation": "1856:15:28",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "1848:23:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1848:7:28",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1847:25:28"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1890:0:28"
									},
									"scope": 1131,
									"src": "1819:149:28",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1132,
							"src": "385:1585:28",
							"usedErrors": [
								31,
								33,
								585
							]
						}
					],
					"src": "33:1938:28"
				},
				"id": 28
			},
			"imports/solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol",
					"exportedSymbols": {
						"IDiamondBase": [
							1032
						],
						"IDiamondFallback": [
							1150
						]
					},
					"id": 1151,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:29"
						},
						{
							"absolutePath": "imports/solidstate/contracts/proxy/diamond/base/IDiamondBase.sol",
							"file": "../base/IDiamondBase.sol",
							"id": 1135,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1151,
							"sourceUnit": 1033,
							"src": "58:56:29",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1134,
										"name": "IDiamondBase",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1032,
										"src": "67:12:29",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1136,
										"name": "IDiamondBase",
										"nameLocations": [
											"146:12:29"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1032,
										"src": "146:12:29"
									},
									"id": 1137,
									"nodeType": "InheritanceSpecifier",
									"src": "146:12:29"
								}
							],
							"canonicalName": "IDiamondFallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1150,
							"linearizedBaseContracts": [
								1150,
								1032,
								589
							],
							"name": "IDiamondFallback",
							"nameLocation": "126:16:29",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "165:141:29",
										"text": " @notice query the address of the fallback implementation\n @return fallbackAddress address of fallback implementation"
									},
									"functionSelector": "2c408059",
									"id": 1143,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFallbackAddress",
									"nameLocation": "320:18:29",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "338:2:29"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "fallbackAddress",
												"nameLocation": "396:15:29",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "388:23:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:29",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "387:25:29"
									},
									"scope": 1150,
									"src": "311:102:29",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "419:138:29",
										"text": " @notice set the address of the fallback implementation\n @param fallbackAddress address of fallback implementation"
									},
									"functionSelector": "91423765",
									"id": 1149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFallbackAddress",
									"nameLocation": "571:18:29",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "fallbackAddress",
												"nameLocation": "598:15:29",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "590:23:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "590:7:29",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "589:25:29"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "623:0:29"
									},
									"scope": 1150,
									"src": "562:62:29",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1151,
							"src": "116:510:29",
							"usedErrors": [
								585
							]
						}
					],
					"src": "33:594:29"
				},
				"id": 29
			},
			"imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol",
					"exportedSymbols": {
						"DiamondBaseStorage": [
							1025
						],
						"DiamondReadable": [
							1663
						],
						"IDiamondReadable": [
							1705
						]
					},
					"id": 1664,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1152,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:30"
						},
						{
							"absolutePath": "imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol",
							"file": "../base/DiamondBaseStorage.sol",
							"id": 1154,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1664,
							"sourceUnit": 1026,
							"src": "58:68:30",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1153,
										"name": "DiamondBaseStorage",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1025,
										"src": "67:18:30",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol",
							"file": "./IDiamondReadable.sol",
							"id": 1156,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1664,
							"sourceUnit": 1706,
							"src": "127:58:30",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1155,
										"name": "IDiamondReadable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1705,
										"src": "136:16:30",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1158,
										"name": "IDiamondReadable",
										"nameLocations": [
											"361:16:30"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1705,
										"src": "361:16:30"
									},
									"id": 1159,
									"nodeType": "InheritanceSpecifier",
									"src": "361:16:30"
								}
							],
							"canonicalName": "DiamondReadable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1157,
								"nodeType": "StructuredDocumentation",
								"src": "187:136:30",
								"text": " @title EIP-2535 \"Diamond\" proxy introspection contract\n @dev derived from https://github.com/mudgen/diamond-2 (MIT license)"
							},
							"fullyImplemented": true,
							"id": 1663,
							"linearizedBaseContracts": [
								1663,
								1705
							],
							"name": "DiamondReadable",
							"nameLocation": "342:15:30",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1680
									],
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "507:2478:30",
										"statements": [
											{
												"assignments": [
													1171
												],
												"declarations": [
													{
														"constant": false,
														"id": 1171,
														"mutability": "mutable",
														"name": "l",
														"nameLocation": "551:1:30",
														"nodeType": "VariableDeclaration",
														"scope": 1390,
														"src": "517:35:30",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
															"typeString": "struct DiamondBaseStorage.Layout"
														},
														"typeName": {
															"id": 1170,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1169,
																"name": "DiamondBaseStorage.Layout",
																"nameLocations": [
																	"517:18:30",
																	"536:6:30"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1007,
																"src": "517:25:30"
															},
															"referencedDeclaration": 1007,
															"src": "517:25:30",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																"typeString": "struct DiamondBaseStorage.Layout"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1172,
															"name": "DiamondBaseStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "555:18:30",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DiamondBaseStorage_$1025_$",
																"typeString": "type(library DiamondBaseStorage)"
															}
														},
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "574:6:30",
														"memberName": "layout",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1024,
														"src": "555:25:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$1007_storage_ptr_$",
															"typeString": "function () pure returns (struct DiamondBaseStorage.Layout storage pointer)"
														}
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "555:27:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
														"typeString": "struct DiamondBaseStorage.Layout storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "517:65:30"
											},
											{
												"expression": {
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1176,
														"name": "diamondFacets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "593:13:30",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Facet_$1672_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IDiamondReadable.Facet memory[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1181,
																	"name": "l",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1171,
																	"src": "621:1:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																		"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																	}
																},
																"id": 1182,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "623:13:30",
																"memberName": "selectorCount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1000,
																"src": "621:15:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															],
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "609:11:30",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Facet_$1672_memory_ptr_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (struct IDiamondReadable.Facet memory[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 1178,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 1177,
																		"name": "Facet",
																		"nameLocations": [
																			"613:5:30"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 1672,
																		"src": "613:5:30"
																	},
																	"referencedDeclaration": 1672,
																	"src": "613:5:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Facet_$1672_storage_ptr",
																		"typeString": "struct IDiamondReadable.Facet"
																	}
																},
																"id": 1179,
																"nodeType": "ArrayTypeName",
																"src": "613:7:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Facet_$1672_storage_$dyn_storage_ptr",
																	"typeString": "struct IDiamondReadable.Facet[]"
																}
															}
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "609:28:30",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Facet_$1672_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IDiamondReadable.Facet memory[] memory"
														}
													},
													"src": "593:44:30",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Facet_$1672_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IDiamondReadable.Facet memory[] memory"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "593:44:30"
											},
											{
												"assignments": [
													1190
												],
												"declarations": [
													{
														"constant": false,
														"id": 1190,
														"mutability": "mutable",
														"name": "numFacetSelectors",
														"nameLocation": "663:17:30",
														"nodeType": "VariableDeclaration",
														"scope": 1390,
														"src": "648:32:30",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
															"typeString": "uint8[]"
														},
														"typeName": {
															"baseType": {
																"id": 1188,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "648:5:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1189,
															"nodeType": "ArrayTypeName",
															"src": "648:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
																"typeString": "uint8[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1197,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1194,
																"name": "l",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1171,
																"src": "695:1:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																	"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																}
															},
															"id": 1195,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "697:13:30",
															"memberName": "selectorCount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1000,
															"src": "695:15:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 1193,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "683:11:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint8[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1191,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "687:5:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1192,
															"nodeType": "ArrayTypeName",
															"src": "687:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
																"typeString": "uint8[]"
															}
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "683:28:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
														"typeString": "uint8[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "648:63:30"
											},
											{
												"assignments": [
													1199
												],
												"declarations": [
													{
														"constant": false,
														"id": 1199,
														"mutability": "mutable",
														"name": "numFacets",
														"nameLocation": "729:9:30",
														"nodeType": "VariableDeclaration",
														"scope": 1390,
														"src": "721:17:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1198,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "721:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1200,
												"nodeType": "VariableDeclarationStatement",
												"src": "721:17:30"
											},
											{
												"assignments": [
													1202
												],
												"declarations": [
													{
														"constant": false,
														"id": 1202,
														"mutability": "mutable",
														"name": "selectorIndex",
														"nameLocation": "756:13:30",
														"nodeType": "VariableDeclaration",
														"scope": 1390,
														"src": "748:21:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1201,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "748:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1203,
												"nodeType": "VariableDeclarationStatement",
												"src": "748:21:30"
											},
											{
												"body": {
													"id": 1359,
													"nodeType": "Block",
													"src": "893:1611:30",
													"statements": [
														{
															"assignments": [
																1215
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1215,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "915:4:30",
																	"nodeType": "VariableDeclaration",
																	"scope": 1359,
																	"src": "907:12:30",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1214,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "907:7:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1220,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 1216,
																		"name": "l",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1171,
																		"src": "922:1:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																			"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																		}
																	},
																	"id": 1217,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "924:13:30",
																	"memberName": "selectorSlots",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1004,
																	"src": "922:15:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																		"typeString": "mapping(uint256 => bytes32)"
																	}
																},
																"id": 1219,
																"indexExpression": {
																	"id": 1218,
																	"name": "slotIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1205,
																	"src": "938:9:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "922:26:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "907:41:30"
														},
														{
															"body": {
																"id": 1357,
																"nodeType": "Block",
																"src": "1101:1393:30",
																"statements": [
																	{
																		"expression": {
																			"id": 1231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "1119:15:30",
																			"subExpression": {
																				"id": 1230,
																				"name": "selectorIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1202,
																				"src": "1119:13:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1232,
																		"nodeType": "ExpressionStatement",
																		"src": "1119:15:30"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1233,
																				"name": "selectorIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1202,
																				"src": "1157:13:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"expression": {
																					"id": 1234,
																					"name": "l",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1171,
																					"src": "1173:1:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																						"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																					}
																				},
																				"id": 1235,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1175:13:30",
																				"memberName": "selectorCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1000,
																				"src": "1173:15:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"src": "1157:31:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1239,
																		"nodeType": "IfStatement",
																		"src": "1153:83:30",
																		"trueBody": {
																			"id": 1238,
																			"nodeType": "Block",
																			"src": "1190:46:30",
																			"statements": [
																				{
																					"id": 1237,
																					"nodeType": "Break",
																					"src": "1212:5:30"
																				}
																			]
																		}
																	},
																	{
																		"assignments": [
																			1241
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1241,
																				"mutability": "mutable",
																				"name": "selector",
																				"nameLocation": "1261:8:30",
																				"nodeType": "VariableDeclaration",
																				"scope": 1357,
																				"src": "1254:15:30",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1240,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "1254:6:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1251,
																		"initialValue": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					"id": 1249,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1244,
																						"name": "slot",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1215,
																						"src": "1279:4:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1247,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1245,
																									"name": "selectorSlotIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1222,
																									"src": "1288:17:30",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "35",
																									"id": 1246,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1309:1:30",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_5_by_1",
																										"typeString": "int_const 5"
																									},
																									"value": "5"
																								},
																								"src": "1288:22:30",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1248,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "1287:24:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1279:32:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 1243,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1272:6:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes4_$",
																					"typeString": "type(bytes4)"
																				},
																				"typeName": {
																					"id": 1242,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "1272:6:30",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1272:40:30",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1254:58:30"
																	},
																	{
																		"assignments": [
																			1253
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1253,
																				"mutability": "mutable",
																				"name": "facet",
																				"nameLocation": "1338:5:30",
																				"nodeType": "VariableDeclaration",
																				"scope": 1357,
																				"src": "1330:13:30",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"typeName": {
																					"id": 1252,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1330:7:30",
																					"stateMutability": "nonpayable",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1264,
																		"initialValue": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"baseExpression": {
																								"expression": {
																									"id": 1258,
																									"name": "l",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1171,
																									"src": "1362:1:30",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																										"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																									}
																								},
																								"id": 1259,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "1364:6:30",
																								"memberName": "facets",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 998,
																								"src": "1362:8:30",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
																									"typeString": "mapping(bytes4 => bytes32)"
																								}
																							},
																							"id": 1261,
																							"indexExpression": {
																								"id": 1260,
																								"name": "selector",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1241,
																								"src": "1371:8:30",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes4",
																									"typeString": "bytes4"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "1362:18:30",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 1257,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1354:7:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes20_$",
																							"typeString": "type(bytes20)"
																						},
																						"typeName": {
																							"id": 1256,
																							"name": "bytes20",
																							"nodeType": "ElementaryTypeName",
																							"src": "1354:7:30",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1262,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1354:27:30",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes20",
																						"typeString": "bytes20"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes20",
																						"typeString": "bytes20"
																					}
																				],
																				"id": 1255,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1346:7:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1254,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1346:7:30",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1346:36:30",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1330:52:30"
																	},
																	{
																		"assignments": [
																			1266
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1266,
																				"mutability": "mutable",
																				"name": "continueLoop",
																				"nameLocation": "1406:12:30",
																				"nodeType": "VariableDeclaration",
																				"scope": 1357,
																				"src": "1401:17:30",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 1265,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "1401:4:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1267,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1401:17:30"
																	},
																	{
																		"body": {
																			"id": 1314,
																			"nodeType": "Block",
																			"src": "1500:570:30",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						"id": 1282,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 1277,
																									"name": "diamondFacets",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1165,
																									"src": "1526:13:30",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Facet_$1672_memory_ptr_$dyn_memory_ptr",
																										"typeString": "struct IDiamondReadable.Facet memory[] memory"
																									}
																								},
																								"id": 1279,
																								"indexExpression": {
																									"id": 1278,
																									"name": "facetIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1269,
																									"src": "1540:10:30",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1526:25:30",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Facet_$1672_memory_ptr",
																									"typeString": "struct IDiamondReadable.Facet memory"
																								}
																							},
																							"id": 1280,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "1552:6:30",
																							"memberName": "target",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1668,
																							"src": "1526:32:30",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"id": 1281,
																							"name": "facet",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1253,
																							"src": "1562:5:30",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"src": "1526:41:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1313,
																					"nodeType": "IfStatement",
																					"src": "1522:530:30",
																					"trueBody": {
																						"id": 1312,
																						"nodeType": "Block",
																						"src": "1569:483:30",
																						"statements": [
																							{
																								"expression": {
																									"id": 1292,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"baseExpression": {
																											"expression": {
																												"baseExpression": {
																													"id": 1283,
																													"name": "diamondFacets",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1165,
																													"src": "1595:13:30",
																													"typeDescriptions": {
																														"typeIdentifier": "t_array$_t_struct$_Facet_$1672_memory_ptr_$dyn_memory_ptr",
																														"typeString": "struct IDiamondReadable.Facet memory[] memory"
																													}
																												},
																												"id": 1285,
																												"indexExpression": {
																													"id": 1284,
																													"name": "facetIndex",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1269,
																													"src": "1609:10:30",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "1595:25:30",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_Facet_$1672_memory_ptr",
																													"typeString": "struct IDiamondReadable.Facet memory"
																												}
																											},
																											"id": 1286,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "1621:9:30",
																											"memberName": "selectors",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1671,
																											"src": "1595:35:30",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																												"typeString": "bytes4[] memory"
																											}
																										},
																										"id": 1290,
																										"indexExpression": {
																											"baseExpression": {
																												"id": 1287,
																												"name": "numFacetSelectors",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1190,
																												"src": "1660:17:30",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																													"typeString": "uint8[] memory"
																												}
																											},
																											"id": 1289,
																											"indexExpression": {
																												"id": 1288,
																												"name": "facetIndex",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1269,
																												"src": "1678:10:30",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "1660:29:30",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint8",
																												"typeString": "uint8"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"nodeType": "IndexAccess",
																										"src": "1595:120:30",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes4",
																											"typeString": "bytes4"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"id": 1291,
																										"name": "selector",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1241,
																										"src": "1718:8:30",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes4",
																											"typeString": "bytes4"
																										}
																									},
																									"src": "1595:131:30",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes4",
																										"typeString": "bytes4"
																									}
																								},
																								"id": 1293,
																								"nodeType": "ExpressionStatement",
																								"src": "1595:131:30"
																							},
																							{
																								"expression": {
																									"arguments": [
																										{
																											"commonType": {
																												"typeIdentifier": "t_uint8",
																												"typeString": "uint8"
																											},
																											"id": 1299,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"baseExpression": {
																													"id": 1295,
																													"name": "numFacetSelectors",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1190,
																													"src": "1860:17:30",
																													"typeDescriptions": {
																														"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																														"typeString": "uint8[] memory"
																													}
																												},
																												"id": 1297,
																												"indexExpression": {
																													"id": 1296,
																													"name": "facetIndex",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1269,
																													"src": "1878:10:30",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "1860:29:30",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "<",
																											"rightExpression": {
																												"hexValue": "323535",
																												"id": 1298,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "1892:3:30",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_255_by_1",
																													"typeString": "int_const 255"
																												},
																												"value": "255"
																											},
																											"src": "1860:35:30",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										],
																										"id": 1294,
																										"name": "require",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [
																											4294967278,
																											4294967278
																										],
																										"referencedDeclaration": 4294967278,
																										"src": "1852:7:30",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																											"typeString": "function (bool) pure"
																										}
																									},
																									"id": 1300,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "1852:44:30",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_tuple$__$",
																										"typeString": "tuple()"
																									}
																								},
																								"id": 1301,
																								"nodeType": "ExpressionStatement",
																								"src": "1852:44:30"
																							},
																							{
																								"expression": {
																									"id": 1305,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "UnaryOperation",
																									"operator": "++",
																									"prefix": false,
																									"src": "1922:31:30",
																									"subExpression": {
																										"baseExpression": {
																											"id": 1302,
																											"name": "numFacetSelectors",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1190,
																											"src": "1922:17:30",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																												"typeString": "uint8[] memory"
																											}
																										},
																										"id": 1304,
																										"indexExpression": {
																											"id": 1303,
																											"name": "facetIndex",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1269,
																											"src": "1940:10:30",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"nodeType": "IndexAccess",
																										"src": "1922:29:30",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									},
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"id": 1306,
																								"nodeType": "ExpressionStatement",
																								"src": "1922:31:30"
																							},
																							{
																								"expression": {
																									"id": 1309,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1307,
																										"name": "continueLoop",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1266,
																										"src": "1979:12:30",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"hexValue": "74727565",
																										"id": 1308,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "bool",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "1994:4:30",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										},
																										"value": "true"
																									},
																									"src": "1979:19:30",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 1310,
																								"nodeType": "ExpressionStatement",
																								"src": "1979:19:30"
																							},
																							{
																								"id": 1311,
																								"nodeType": "Break",
																								"src": "2024:5:30"
																							}
																						]
																					}
																				}
																			]
																		},
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1271,
																				"name": "facetIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1269,
																				"src": "1462:10:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1272,
																				"name": "numFacets",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1199,
																				"src": "1475:9:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1462:22:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1315,
																		"initializationExpression": {
																			"assignments": [
																				1269
																			],
																			"declarations": [
																				{
																					"constant": false,
																					"id": 1269,
																					"mutability": "mutable",
																					"name": "facetIndex",
																					"nameLocation": "1450:10:30",
																					"nodeType": "VariableDeclaration",
																					"scope": 1315,
																					"src": "1442:18:30",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"typeName": {
																						"id": 1268,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "1442:7:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"visibility": "internal"
																				}
																			],
																			"id": 1270,
																			"nodeType": "VariableDeclarationStatement",
																			"src": "1442:18:30"
																		},
																		"loopExpression": {
																			"expression": {
																				"id": 1275,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "1486:12:30",
																				"subExpression": {
																					"id": 1274,
																					"name": "facetIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1269,
																					"src": "1486:10:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1276,
																			"nodeType": "ExpressionStatement",
																			"src": "1486:12:30"
																		},
																		"nodeType": "ForStatement",
																		"src": "1437:633:30"
																	},
																	{
																		"condition": {
																			"id": 1316,
																			"name": "continueLoop",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1266,
																			"src": "2092:12:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1319,
																		"nodeType": "IfStatement",
																		"src": "2088:67:30",
																		"trueBody": {
																			"id": 1318,
																			"nodeType": "Block",
																			"src": "2106:49:30",
																			"statements": [
																				{
																					"id": 1317,
																					"nodeType": "Continue",
																					"src": "2128:8:30"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 1325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 1320,
																						"name": "diamondFacets",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1165,
																						"src": "2173:13:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Facet_$1672_memory_ptr_$dyn_memory_ptr",
																							"typeString": "struct IDiamondReadable.Facet memory[] memory"
																						}
																					},
																					"id": 1322,
																					"indexExpression": {
																						"id": 1321,
																						"name": "numFacets",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1199,
																						"src": "2187:9:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2173:24:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Facet_$1672_memory_ptr",
																						"typeString": "struct IDiamondReadable.Facet memory"
																					}
																				},
																				"id": 1323,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "2198:6:30",
																				"memberName": "target",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1668,
																				"src": "2173:31:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1324,
																				"name": "facet",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1253,
																				"src": "2207:5:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "2173:39:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1326,
																		"nodeType": "ExpressionStatement",
																		"src": "2173:39:30"
																	},
																	{
																		"expression": {
																			"id": 1337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 1327,
																						"name": "diamondFacets",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1165,
																						"src": "2230:13:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Facet_$1672_memory_ptr_$dyn_memory_ptr",
																							"typeString": "struct IDiamondReadable.Facet memory[] memory"
																						}
																					},
																					"id": 1329,
																					"indexExpression": {
																						"id": 1328,
																						"name": "numFacets",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1199,
																						"src": "2244:9:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2230:24:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Facet_$1672_memory_ptr",
																						"typeString": "struct IDiamondReadable.Facet memory"
																					}
																				},
																				"id": 1330,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "2255:9:30",
																				"memberName": "selectors",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1671,
																				"src": "2230:34:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																					"typeString": "bytes4[] memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1334,
																							"name": "l",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1171,
																							"src": "2301:1:30",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																								"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																							}
																						},
																						"id": 1335,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2303:13:30",
																						"memberName": "selectorCount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1000,
																						"src": "2301:15:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						}
																					],
																					"id": 1333,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "NewExpression",
																					"src": "2267:12:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
																						"typeString": "function (uint256) pure returns (bytes4[] memory)"
																					},
																					"typeName": {
																						"baseType": {
																							"id": 1331,
																							"name": "bytes4",
																							"nodeType": "ElementaryTypeName",
																							"src": "2271:6:30",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						},
																						"id": 1332,
																						"nodeType": "ArrayTypeName",
																						"src": "2271:8:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
																							"typeString": "bytes4[]"
																						}
																					}
																				},
																				"id": 1336,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2267:67:30",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																					"typeString": "bytes4[] memory"
																				}
																			},
																			"src": "2230:104:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																				"typeString": "bytes4[] memory"
																			}
																		},
																		"id": 1338,
																		"nodeType": "ExpressionStatement",
																		"src": "2230:104:30"
																	},
																	{
																		"expression": {
																			"id": 1346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"baseExpression": {
																							"id": 1339,
																							"name": "diamondFacets",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1165,
																							"src": "2352:13:30",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Facet_$1672_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct IDiamondReadable.Facet memory[] memory"
																							}
																						},
																						"id": 1341,
																						"indexExpression": {
																							"id": 1340,
																							"name": "numFacets",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1199,
																							"src": "2366:9:30",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "2352:24:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Facet_$1672_memory_ptr",
																							"typeString": "struct IDiamondReadable.Facet memory"
																						}
																					},
																					"id": 1342,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2377:9:30",
																					"memberName": "selectors",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1671,
																					"src": "2352:34:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																						"typeString": "bytes4[] memory"
																					}
																				},
																				"id": 1344,
																				"indexExpression": {
																					"hexValue": "30",
																					"id": 1343,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2387:1:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2352:37:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1345,
																				"name": "selector",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1241,
																				"src": "2392:8:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			"src": "2352:48:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"id": 1347,
																		"nodeType": "ExpressionStatement",
																		"src": "2352:48:30"
																	},
																	{
																		"expression": {
																			"id": 1352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1348,
																					"name": "numFacetSelectors",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1190,
																					"src": "2418:17:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																						"typeString": "uint8[] memory"
																					}
																				},
																				"id": 1350,
																				"indexExpression": {
																					"id": 1349,
																					"name": "numFacets",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1199,
																					"src": "2436:9:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2418:28:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 1351,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2449:1:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "2418:32:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 1353,
																		"nodeType": "ExpressionStatement",
																		"src": "2418:32:30"
																	},
																	{
																		"expression": {
																			"id": 1355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "2468:11:30",
																			"subExpression": {
																				"id": 1354,
																				"name": "numFacets",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1199,
																				"src": "2468:9:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1356,
																		"nodeType": "ExpressionStatement",
																		"src": "2468:11:30"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1224,
																	"name": "selectorSlotIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "1028:17:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1048:1:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1028:21:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1358,
															"initializationExpression": {
																"assignments": [
																	1222
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1222,
																		"mutability": "mutable",
																		"name": "selectorSlotIndex",
																		"nameLocation": "993:17:30",
																		"nodeType": "VariableDeclaration",
																		"scope": 1358,
																		"src": "985:25:30",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1221,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "985:7:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1223,
																"nodeType": "VariableDeclarationStatement",
																"src": "985:25:30"
															},
															"loopExpression": {
																"expression": {
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "1067:19:30",
																	"subExpression": {
																		"id": 1227,
																		"name": "selectorSlotIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1222,
																		"src": "1067:17:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1229,
																"nodeType": "ExpressionStatement",
																"src": "1067:19:30"
															},
															"nodeType": "ForStatement",
															"src": "963:1531:30"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1207,
														"name": "selectorIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "847:13:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1208,
															"name": "l",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "863:1:30",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																"typeString": "struct DiamondBaseStorage.Layout storage pointer"
															}
														},
														"id": 1209,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "865:13:30",
														"memberName": "selectorCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1000,
														"src": "863:15:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "847:31:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1360,
												"initializationExpression": {
													"assignments": [
														1205
													],
													"declarations": [
														{
															"constant": false,
															"id": 1205,
															"mutability": "mutable",
															"name": "slotIndex",
															"nameLocation": "836:9:30",
															"nodeType": "VariableDeclaration",
															"scope": 1360,
															"src": "828:17:30",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1204,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "828:7:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1206,
													"nodeType": "VariableDeclarationStatement",
													"src": "828:17:30"
												},
												"loopExpression": {
													"expression": {
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "880:11:30",
														"subExpression": {
															"id": 1211,
															"name": "slotIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "880:9:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1213,
													"nodeType": "ExpressionStatement",
													"src": "880:11:30"
												},
												"nodeType": "ForStatement",
												"src": "823:1681:30"
											},
											{
												"body": {
													"id": 1387,
													"nodeType": "Block",
													"src": "2577:287:30",
													"statements": [
														{
															"assignments": [
																1371
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1371,
																	"mutability": "mutable",
																	"name": "numSelectors",
																	"nameLocation": "2599:12:30",
																	"nodeType": "VariableDeclaration",
																	"scope": 1387,
																	"src": "2591:20:30",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1370,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2591:7:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1375,
															"initialValue": {
																"baseExpression": {
																	"id": 1372,
																	"name": "numFacetSelectors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1190,
																	"src": "2614:17:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																		"typeString": "uint8[] memory"
																	}
																},
																"id": 1374,
																"indexExpression": {
																	"id": 1373,
																	"name": "facetIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "2632:10:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2614:29:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2591:52:30"
														},
														{
															"assignments": [
																1380
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1380,
																	"mutability": "mutable",
																	"name": "selectors",
																	"nameLocation": "2673:9:30",
																	"nodeType": "VariableDeclaration",
																	"scope": 1387,
																	"src": "2657:25:30",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																		"typeString": "bytes4[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1378,
																			"name": "bytes4",
																			"nodeType": "ElementaryTypeName",
																			"src": "2657:6:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"id": 1379,
																		"nodeType": "ArrayTypeName",
																		"src": "2657:8:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
																			"typeString": "bytes4[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1385,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 1381,
																		"name": "diamondFacets",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1165,
																		"src": "2685:13:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Facet_$1672_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct IDiamondReadable.Facet memory[] memory"
																		}
																	},
																	"id": 1383,
																	"indexExpression": {
																		"id": 1382,
																		"name": "facetIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1362,
																		"src": "2699:10:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2685:25:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Facet_$1672_memory_ptr",
																		"typeString": "struct IDiamondReadable.Facet memory"
																	}
																},
																"id": 1384,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2711:9:30",
																"memberName": "selectors",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1671,
																"src": "2685:35:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																	"typeString": "bytes4[] memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2657:63:30"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "2791:63:30",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "selectors",
																					"nodeType": "YulIdentifier",
																					"src": "2816:9:30"
																				},
																				{
																					"name": "numSelectors",
																					"nodeType": "YulIdentifier",
																					"src": "2827:12:30"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2809:6:30"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2809:31:30"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2809:31:30"
																	}
																]
															},
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 1371,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2827:12:30",
																	"valueSize": 1
																},
																{
																	"declaration": 1380,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2816:9:30",
																	"valueSize": 1
																}
															],
															"id": 1386,
															"nodeType": "InlineAssembly",
															"src": "2782:72:30"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1364,
														"name": "facetIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "2539:10:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1365,
														"name": "numFacets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "2552:9:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2539:22:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1388,
												"initializationExpression": {
													"assignments": [
														1362
													],
													"declarations": [
														{
															"constant": false,
															"id": 1362,
															"mutability": "mutable",
															"name": "facetIndex",
															"nameLocation": "2527:10:30",
															"nodeType": "VariableDeclaration",
															"scope": 1388,
															"src": "2519:18:30",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1361,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2519:7:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1363,
													"nodeType": "VariableDeclarationStatement",
													"src": "2519:18:30"
												},
												"loopExpression": {
													"expression": {
														"id": 1368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2563:12:30",
														"subExpression": {
															"id": 1367,
															"name": "facetIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "2563:10:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1369,
													"nodeType": "ExpressionStatement",
													"src": "2563:12:30"
												},
												"nodeType": "ForStatement",
												"src": "2514:350:30"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2923:56:30",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "diamondFacets",
																		"nodeType": "YulIdentifier",
																		"src": "2944:13:30"
																	},
																	{
																		"name": "numFacets",
																		"nodeType": "YulIdentifier",
																		"src": "2959:9:30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2937:6:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "2937:32:30"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2937:32:30"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1165,
														"isOffset": false,
														"isSlot": false,
														"src": "2944:13:30",
														"valueSize": 1
													},
													{
														"declaration": 1199,
														"isOffset": false,
														"isSlot": false,
														"src": "2959:9:30",
														"valueSize": 1
													}
												],
												"id": 1389,
												"nodeType": "InlineAssembly",
												"src": "2914:65:30"
											}
										]
									},
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "384:47:30",
										"text": " @inheritdoc IDiamondReadable"
									},
									"functionSelector": "7a0ed627",
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "facets",
									"nameLocation": "445:6:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "451:2:30"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "diamondFacets",
												"nameLocation": "492:13:30",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "477:28:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Facet_$1672_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IDiamondReadable.Facet[]"
												},
												"typeName": {
													"baseType": {
														"id": 1163,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1162,
															"name": "Facet",
															"nameLocations": [
																"477:5:30"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1672,
															"src": "477:5:30"
														},
														"referencedDeclaration": 1672,
														"src": "477:5:30",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Facet_$1672_storage_ptr",
															"typeString": "struct IDiamondReadable.Facet"
														}
													},
													"id": 1164,
													"nodeType": "ArrayTypeName",
													"src": "477:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Facet_$1672_storage_$dyn_storage_ptr",
														"typeString": "struct IDiamondReadable.Facet[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:30:30"
									},
									"scope": 1663,
									"src": "436:2549:30",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1689
									],
									"body": {
										"id": 1500,
										"nodeType": "Block",
										"src": "3154:1069:30",
										"statements": [
											{
												"assignments": [
													1404
												],
												"declarations": [
													{
														"constant": false,
														"id": 1404,
														"mutability": "mutable",
														"name": "l",
														"nameLocation": "3198:1:30",
														"nodeType": "VariableDeclaration",
														"scope": 1500,
														"src": "3164:35:30",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
															"typeString": "struct DiamondBaseStorage.Layout"
														},
														"typeName": {
															"id": 1403,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1402,
																"name": "DiamondBaseStorage.Layout",
																"nameLocations": [
																	"3164:18:30",
																	"3183:6:30"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1007,
																"src": "3164:25:30"
															},
															"referencedDeclaration": 1007,
															"src": "3164:25:30",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																"typeString": "struct DiamondBaseStorage.Layout"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1408,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1405,
															"name": "DiamondBaseStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "3202:18:30",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DiamondBaseStorage_$1025_$",
																"typeString": "type(library DiamondBaseStorage)"
															}
														},
														"id": 1406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3221:6:30",
														"memberName": "layout",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1024,
														"src": "3202:25:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$1007_storage_ptr_$",
															"typeString": "function () pure returns (struct DiamondBaseStorage.Layout storage pointer)"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3202:27:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
														"typeString": "struct DiamondBaseStorage.Layout storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3164:65:30"
											},
											{
												"expression": {
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1409,
														"name": "selectors",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1398,
														"src": "3240:9:30",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
															"typeString": "bytes4[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1413,
																	"name": "l",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "3265:1:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																		"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																	}
																},
																"id": 1414,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3267:13:30",
																"memberName": "selectorCount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1000,
																"src": "3265:15:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															],
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "3252:12:30",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (bytes4[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 1410,
																	"name": "bytes4",
																	"nodeType": "ElementaryTypeName",
																	"src": "3256:6:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"id": 1411,
																"nodeType": "ArrayTypeName",
																"src": "3256:8:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
																	"typeString": "bytes4[]"
																}
															}
														},
														"id": 1415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3252:29:30",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
															"typeString": "bytes4[] memory"
														}
													},
													"src": "3240:41:30",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
														"typeString": "bytes4[] memory"
													}
												},
												"id": 1417,
												"nodeType": "ExpressionStatement",
												"src": "3240:41:30"
											},
											{
												"assignments": [
													1419
												],
												"declarations": [
													{
														"constant": false,
														"id": 1419,
														"mutability": "mutable",
														"name": "numSelectors",
														"nameLocation": "3300:12:30",
														"nodeType": "VariableDeclaration",
														"scope": 1500,
														"src": "3292:20:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1418,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3292:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1420,
												"nodeType": "VariableDeclarationStatement",
												"src": "3292:20:30"
											},
											{
												"assignments": [
													1422
												],
												"declarations": [
													{
														"constant": false,
														"id": 1422,
														"mutability": "mutable",
														"name": "selectorIndex",
														"nameLocation": "3330:13:30",
														"nodeType": "VariableDeclaration",
														"scope": 1500,
														"src": "3322:21:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1421,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3322:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1423,
												"nodeType": "VariableDeclarationStatement",
												"src": "3322:21:30"
											},
											{
												"body": {
													"id": 1497,
													"nodeType": "Block",
													"src": "3467:624:30",
													"statements": [
														{
															"assignments": [
																1435
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1435,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "3489:4:30",
																	"nodeType": "VariableDeclaration",
																	"scope": 1497,
																	"src": "3481:12:30",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1434,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "3481:7:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1440,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 1436,
																		"name": "l",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1404,
																		"src": "3496:1:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																			"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																		}
																	},
																	"id": 1437,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3498:13:30",
																	"memberName": "selectorSlots",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1004,
																	"src": "3496:15:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																		"typeString": "mapping(uint256 => bytes32)"
																	}
																},
																"id": 1439,
																"indexExpression": {
																	"id": 1438,
																	"name": "slotIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1425,
																	"src": "3512:9:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3496:26:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3481:41:30"
														},
														{
															"body": {
																"id": 1495,
																"nodeType": "Block",
																"src": "3675:406:30",
																"statements": [
																	{
																		"expression": {
																			"id": 1451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "3693:15:30",
																			"subExpression": {
																				"id": 1450,
																				"name": "selectorIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1422,
																				"src": "3693:13:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1452,
																		"nodeType": "ExpressionStatement",
																		"src": "3693:15:30"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1453,
																				"name": "selectorIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1422,
																				"src": "3731:13:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"expression": {
																					"id": 1454,
																					"name": "l",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1404,
																					"src": "3747:1:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																						"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																					}
																				},
																				"id": 1455,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3749:13:30",
																				"memberName": "selectorCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1000,
																				"src": "3747:15:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"src": "3731:31:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1459,
																		"nodeType": "IfStatement",
																		"src": "3727:83:30",
																		"trueBody": {
																			"id": 1458,
																			"nodeType": "Block",
																			"src": "3764:46:30",
																			"statements": [
																				{
																					"id": 1457,
																					"nodeType": "Break",
																					"src": "3786:5:30"
																				}
																			]
																		}
																	},
																	{
																		"assignments": [
																			1461
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1461,
																				"mutability": "mutable",
																				"name": "selector",
																				"nameLocation": "3835:8:30",
																				"nodeType": "VariableDeclaration",
																				"scope": 1495,
																				"src": "3828:15:30",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1460,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "3828:6:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1471,
																		"initialValue": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					"id": 1469,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1464,
																						"name": "slot",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1435,
																						"src": "3853:4:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1467,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1465,
																									"name": "selectorSlotIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1442,
																									"src": "3862:17:30",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "35",
																									"id": 1466,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3883:1:30",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_5_by_1",
																										"typeString": "int_const 5"
																									},
																									"value": "5"
																								},
																								"src": "3862:22:30",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1468,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3861:24:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3853:32:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 1463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3846:6:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes4_$",
																					"typeString": "type(bytes4)"
																				},
																				"typeName": {
																					"id": 1462,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "3846:6:30",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3846:40:30",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3828:58:30"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1472,
																				"name": "facet",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1394,
																				"src": "3909:5:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"baseExpression": {
																									"expression": {
																										"id": 1477,
																										"name": "l",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1404,
																										"src": "3934:1:30",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																											"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																										}
																									},
																									"id": 1478,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "3936:6:30",
																									"memberName": "facets",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 998,
																									"src": "3934:8:30",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
																										"typeString": "mapping(bytes4 => bytes32)"
																									}
																								},
																								"id": 1480,
																								"indexExpression": {
																									"id": 1479,
																									"name": "selector",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1461,
																									"src": "3943:8:30",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes4",
																										"typeString": "bytes4"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "3934:18:30",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							],
																							"id": 1476,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3926:7:30",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bytes20_$",
																								"typeString": "type(bytes20)"
																							},
																							"typeName": {
																								"id": 1475,
																								"name": "bytes20",
																								"nodeType": "ElementaryTypeName",
																								"src": "3926:7:30",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1481,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3926:27:30",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes20",
																							"typeString": "bytes20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes20",
																							"typeString": "bytes20"
																						}
																					],
																					"id": 1474,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3918:7:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1473,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "3918:7:30",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1482,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3918:36:30",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "3909:45:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1494,
																		"nodeType": "IfStatement",
																		"src": "3905:162:30",
																		"trueBody": {
																			"id": 1493,
																			"nodeType": "Block",
																			"src": "3956:111:30",
																			"statements": [
																				{
																					"expression": {
																						"id": 1488,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 1484,
																								"name": "selectors",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1398,
																								"src": "3978:9:30",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																									"typeString": "bytes4[] memory"
																								}
																							},
																							"id": 1486,
																							"indexExpression": {
																								"id": 1485,
																								"name": "numSelectors",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1419,
																								"src": "3988:12:30",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "3978:23:30",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"id": 1487,
																							"name": "selector",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1461,
																							"src": "4004:8:30",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						},
																						"src": "3978:34:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"id": 1489,
																					"nodeType": "ExpressionStatement",
																					"src": "3978:34:30"
																				},
																				{
																					"expression": {
																						"id": 1491,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "4034:14:30",
																						"subExpression": {
																							"id": 1490,
																							"name": "numSelectors",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1419,
																							"src": "4034:12:30",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1492,
																					"nodeType": "ExpressionStatement",
																					"src": "4034:14:30"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1444,
																	"name": "selectorSlotIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1442,
																	"src": "3602:17:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3622:1:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "3602:21:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1496,
															"initializationExpression": {
																"assignments": [
																	1442
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1442,
																		"mutability": "mutable",
																		"name": "selectorSlotIndex",
																		"nameLocation": "3567:17:30",
																		"nodeType": "VariableDeclaration",
																		"scope": 1496,
																		"src": "3559:25:30",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1441,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3559:7:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1443,
																"nodeType": "VariableDeclarationStatement",
																"src": "3559:25:30"
															},
															"loopExpression": {
																"expression": {
																	"id": 1448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "3641:19:30",
																	"subExpression": {
																		"id": 1447,
																		"name": "selectorSlotIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1442,
																		"src": "3641:17:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1449,
																"nodeType": "ExpressionStatement",
																"src": "3641:19:30"
															},
															"nodeType": "ForStatement",
															"src": "3537:544:30"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1427,
														"name": "selectorIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1422,
														"src": "3421:13:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1428,
															"name": "l",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "3437:1:30",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																"typeString": "struct DiamondBaseStorage.Layout storage pointer"
															}
														},
														"id": 1429,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3439:13:30",
														"memberName": "selectorCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1000,
														"src": "3437:15:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "3421:31:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1498,
												"initializationExpression": {
													"assignments": [
														1425
													],
													"declarations": [
														{
															"constant": false,
															"id": 1425,
															"mutability": "mutable",
															"name": "slotIndex",
															"nameLocation": "3410:9:30",
															"nodeType": "VariableDeclaration",
															"scope": 1498,
															"src": "3402:17:30",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1424,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3402:7:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1426,
													"nodeType": "VariableDeclarationStatement",
													"src": "3402:17:30"
												},
												"loopExpression": {
													"expression": {
														"id": 1432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3454:11:30",
														"subExpression": {
															"id": 1431,
															"name": "slotIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "3454:9:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1433,
													"nodeType": "ExpressionStatement",
													"src": "3454:11:30"
												},
												"nodeType": "ForStatement",
												"src": "3397:694:30"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4162:55:30",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "selectors",
																		"nodeType": "YulIdentifier",
																		"src": "4183:9:30"
																	},
																	{
																		"name": "numSelectors",
																		"nodeType": "YulIdentifier",
																		"src": "4194:12:30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4176:6:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "4176:31:30"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4176:31:30"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1419,
														"isOffset": false,
														"isSlot": false,
														"src": "4194:12:30",
														"valueSize": 1
													},
													{
														"declaration": 1398,
														"isOffset": false,
														"isSlot": false,
														"src": "4183:9:30",
														"valueSize": 1
													}
												],
												"id": 1499,
												"nodeType": "InlineAssembly",
												"src": "4153:64:30"
											}
										]
									},
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "2991:47:30",
										"text": " @inheritdoc IDiamondReadable"
									},
									"functionSelector": "adfca15e",
									"id": 1501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "facetFunctionSelectors",
									"nameLocation": "3052:22:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "facet",
												"nameLocation": "3092:5:30",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "3084:13:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3084:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:29:30"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "selectors",
												"nameLocation": "3143:9:30",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "3127:25:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
													"typeString": "bytes4[]"
												},
												"typeName": {
													"baseType": {
														"id": 1396,
														"name": "bytes4",
														"nodeType": "ElementaryTypeName",
														"src": "3127:6:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"id": 1397,
													"nodeType": "ArrayTypeName",
													"src": "3127:8:30",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
														"typeString": "bytes4[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3126:27:30"
									},
									"scope": 1663,
									"src": "3043:1180:30",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1696
									],
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "4386:1369:30",
										"statements": [
											{
												"assignments": [
													1512
												],
												"declarations": [
													{
														"constant": false,
														"id": 1512,
														"mutability": "mutable",
														"name": "l",
														"nameLocation": "4430:1:30",
														"nodeType": "VariableDeclaration",
														"scope": 1637,
														"src": "4396:35:30",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
															"typeString": "struct DiamondBaseStorage.Layout"
														},
														"typeName": {
															"id": 1511,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1510,
																"name": "DiamondBaseStorage.Layout",
																"nameLocations": [
																	"4396:18:30",
																	"4415:6:30"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1007,
																"src": "4396:25:30"
															},
															"referencedDeclaration": 1007,
															"src": "4396:25:30",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																"typeString": "struct DiamondBaseStorage.Layout"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1516,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1513,
															"name": "DiamondBaseStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "4434:18:30",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DiamondBaseStorage_$1025_$",
																"typeString": "type(library DiamondBaseStorage)"
															}
														},
														"id": 1514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4453:6:30",
														"memberName": "layout",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1024,
														"src": "4434:25:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$1007_storage_ptr_$",
															"typeString": "function () pure returns (struct DiamondBaseStorage.Layout storage pointer)"
														}
													},
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4434:27:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
														"typeString": "struct DiamondBaseStorage.Layout storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4396:65:30"
											},
											{
												"expression": {
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1517,
														"name": "addresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1506,
														"src": "4472:9:30",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1521,
																	"name": "l",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "4498:1:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																		"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																	}
																},
																"id": 1522,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4500:13:30",
																"memberName": "selectorCount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1000,
																"src": "4498:15:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															],
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "4484:13:30",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (address[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 1518,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4488:7:30",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1519,
																"nodeType": "ArrayTypeName",
																"src": "4488:9:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																	"typeString": "address[]"
																}
															}
														},
														"id": 1523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4484:30:30",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "4472:42:30",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"id": 1525,
												"nodeType": "ExpressionStatement",
												"src": "4472:42:30"
											},
											{
												"assignments": [
													1527
												],
												"declarations": [
													{
														"constant": false,
														"id": 1527,
														"mutability": "mutable",
														"name": "numFacets",
														"nameLocation": "4532:9:30",
														"nodeType": "VariableDeclaration",
														"scope": 1637,
														"src": "4524:17:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1526,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4524:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1528,
												"nodeType": "VariableDeclarationStatement",
												"src": "4524:17:30"
											},
											{
												"assignments": [
													1530
												],
												"declarations": [
													{
														"constant": false,
														"id": 1530,
														"mutability": "mutable",
														"name": "selectorIndex",
														"nameLocation": "4559:13:30",
														"nodeType": "VariableDeclaration",
														"scope": 1637,
														"src": "4551:21:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1529,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4551:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1531,
												"nodeType": "VariableDeclarationStatement",
												"src": "4551:21:30"
											},
											{
												"body": {
													"id": 1634,
													"nodeType": "Block",
													"src": "4653:967:30",
													"statements": [
														{
															"assignments": [
																1543
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1543,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "4675:4:30",
																	"nodeType": "VariableDeclaration",
																	"scope": 1634,
																	"src": "4667:12:30",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1542,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4667:7:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1548,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 1544,
																		"name": "l",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1512,
																		"src": "4682:1:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																			"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																		}
																	},
																	"id": 1545,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4684:13:30",
																	"memberName": "selectorSlots",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1004,
																	"src": "4682:15:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																		"typeString": "mapping(uint256 => bytes32)"
																	}
																},
																"id": 1547,
																"indexExpression": {
																	"id": 1546,
																	"name": "slotIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1533,
																	"src": "4698:9:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4682:26:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4667:41:30"
														},
														{
															"body": {
																"id": 1632,
																"nodeType": "Block",
																"src": "4861:749:30",
																"statements": [
																	{
																		"expression": {
																			"id": 1559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "4879:15:30",
																			"subExpression": {
																				"id": 1558,
																				"name": "selectorIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1530,
																				"src": "4879:13:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1560,
																		"nodeType": "ExpressionStatement",
																		"src": "4879:15:30"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1561,
																				"name": "selectorIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1530,
																				"src": "4917:13:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"expression": {
																					"id": 1562,
																					"name": "l",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1512,
																					"src": "4933:1:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																						"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																					}
																				},
																				"id": 1563,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4935:13:30",
																				"memberName": "selectorCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1000,
																				"src": "4933:15:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"src": "4917:31:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1567,
																		"nodeType": "IfStatement",
																		"src": "4913:83:30",
																		"trueBody": {
																			"id": 1566,
																			"nodeType": "Block",
																			"src": "4950:46:30",
																			"statements": [
																				{
																					"id": 1565,
																					"nodeType": "Break",
																					"src": "4972:5:30"
																				}
																			]
																		}
																	},
																	{
																		"assignments": [
																			1569
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1569,
																				"mutability": "mutable",
																				"name": "selector",
																				"nameLocation": "5021:8:30",
																				"nodeType": "VariableDeclaration",
																				"scope": 1632,
																				"src": "5014:15:30",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1568,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "5014:6:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1579,
																		"initialValue": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					"id": 1577,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1572,
																						"name": "slot",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1543,
																						"src": "5039:4:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1575,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1573,
																									"name": "selectorSlotIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1550,
																									"src": "5048:17:30",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "35",
																									"id": 1574,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5069:1:30",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_5_by_1",
																										"typeString": "int_const 5"
																									},
																									"value": "5"
																								},
																								"src": "5048:22:30",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1576,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "5047:24:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5039:32:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 1571,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5032:6:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes4_$",
																					"typeString": "type(bytes4)"
																				},
																				"typeName": {
																					"id": 1570,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "5032:6:30",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5032:40:30",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5014:58:30"
																	},
																	{
																		"assignments": [
																			1581
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1581,
																				"mutability": "mutable",
																				"name": "facet",
																				"nameLocation": "5098:5:30",
																				"nodeType": "VariableDeclaration",
																				"scope": 1632,
																				"src": "5090:13:30",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"typeName": {
																					"id": 1580,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5090:7:30",
																					"stateMutability": "nonpayable",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1592,
																		"initialValue": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"baseExpression": {
																								"expression": {
																									"id": 1586,
																									"name": "l",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1512,
																									"src": "5122:1:30",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																										"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																									}
																								},
																								"id": 1587,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "5124:6:30",
																								"memberName": "facets",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 998,
																								"src": "5122:8:30",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
																									"typeString": "mapping(bytes4 => bytes32)"
																								}
																							},
																							"id": 1589,
																							"indexExpression": {
																								"id": 1588,
																								"name": "selector",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1569,
																								"src": "5131:8:30",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes4",
																									"typeString": "bytes4"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5122:18:30",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 1585,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5114:7:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes20_$",
																							"typeString": "type(bytes20)"
																						},
																						"typeName": {
																							"id": 1584,
																							"name": "bytes20",
																							"nodeType": "ElementaryTypeName",
																							"src": "5114:7:30",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1590,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5114:27:30",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes20",
																						"typeString": "bytes20"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes20",
																						"typeString": "bytes20"
																					}
																				],
																				"id": 1583,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5106:7:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1582,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5106:7:30",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5106:36:30",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5090:52:30"
																	},
																	{
																		"assignments": [
																			1594
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1594,
																				"mutability": "mutable",
																				"name": "continueLoop",
																				"nameLocation": "5166:12:30",
																				"nodeType": "VariableDeclaration",
																				"scope": 1632,
																				"src": "5161:17:30",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 1593,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "5161:4:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1595,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5161:17:30"
																	},
																	{
																		"body": {
																			"id": 1617,
																			"nodeType": "Block",
																			"src": "5260:175:30",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						"id": 1609,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1605,
																							"name": "facet",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1581,
																							"src": "5286:5:30",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"baseExpression": {
																								"id": 1606,
																								"name": "addresses",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1506,
																								"src": "5295:9:30",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																									"typeString": "address[] memory"
																								}
																							},
																							"id": 1608,
																							"indexExpression": {
																								"id": 1607,
																								"name": "facetIndex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1597,
																								"src": "5305:10:30",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5295:21:30",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"src": "5286:30:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1616,
																					"nodeType": "IfStatement",
																					"src": "5282:135:30",
																					"trueBody": {
																						"id": 1615,
																						"nodeType": "Block",
																						"src": "5318:99:30",
																						"statements": [
																							{
																								"expression": {
																									"id": 1612,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1610,
																										"name": "continueLoop",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1594,
																										"src": "5344:12:30",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"hexValue": "74727565",
																										"id": 1611,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "bool",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "5359:4:30",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										},
																										"value": "true"
																									},
																									"src": "5344:19:30",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 1613,
																								"nodeType": "ExpressionStatement",
																								"src": "5344:19:30"
																							},
																							{
																								"id": 1614,
																								"nodeType": "Break",
																								"src": "5389:5:30"
																							}
																						]
																					}
																				}
																			]
																		},
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1599,
																				"name": "facetIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1597,
																				"src": "5222:10:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1600,
																				"name": "numFacets",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1527,
																				"src": "5235:9:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5222:22:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1618,
																		"initializationExpression": {
																			"assignments": [
																				1597
																			],
																			"declarations": [
																				{
																					"constant": false,
																					"id": 1597,
																					"mutability": "mutable",
																					"name": "facetIndex",
																					"nameLocation": "5210:10:30",
																					"nodeType": "VariableDeclaration",
																					"scope": 1618,
																					"src": "5202:18:30",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"typeName": {
																						"id": 1596,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "5202:7:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"visibility": "internal"
																				}
																			],
																			"id": 1598,
																			"nodeType": "VariableDeclarationStatement",
																			"src": "5202:18:30"
																		},
																		"loopExpression": {
																			"expression": {
																				"id": 1603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "5246:12:30",
																				"subExpression": {
																					"id": 1602,
																					"name": "facetIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1597,
																					"src": "5246:10:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1604,
																			"nodeType": "ExpressionStatement",
																			"src": "5246:12:30"
																		},
																		"nodeType": "ForStatement",
																		"src": "5197:238:30"
																	},
																	{
																		"condition": {
																			"id": 1619,
																			"name": "continueLoop",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1594,
																			"src": "5457:12:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1622,
																		"nodeType": "IfStatement",
																		"src": "5453:67:30",
																		"trueBody": {
																			"id": 1621,
																			"nodeType": "Block",
																			"src": "5471:49:30",
																			"statements": [
																				{
																					"id": 1620,
																					"nodeType": "Continue",
																					"src": "5493:8:30"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 1627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1623,
																					"name": "addresses",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1506,
																					"src": "5538:9:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 1625,
																				"indexExpression": {
																					"id": 1624,
																					"name": "numFacets",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1527,
																					"src": "5548:9:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5538:20:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1626,
																				"name": "facet",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1581,
																				"src": "5561:5:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "5538:28:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1628,
																		"nodeType": "ExpressionStatement",
																		"src": "5538:28:30"
																	},
																	{
																		"expression": {
																			"id": 1630,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "5584:11:30",
																			"subExpression": {
																				"id": 1629,
																				"name": "numFacets",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1527,
																				"src": "5584:9:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1631,
																		"nodeType": "ExpressionStatement",
																		"src": "5584:11:30"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1552,
																	"name": "selectorSlotIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1550,
																	"src": "4788:17:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4808:1:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "4788:21:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1633,
															"initializationExpression": {
																"assignments": [
																	1550
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1550,
																		"mutability": "mutable",
																		"name": "selectorSlotIndex",
																		"nameLocation": "4753:17:30",
																		"nodeType": "VariableDeclaration",
																		"scope": 1633,
																		"src": "4745:25:30",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1549,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4745:7:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1551,
																"nodeType": "VariableDeclarationStatement",
																"src": "4745:25:30"
															},
															"loopExpression": {
																"expression": {
																	"id": 1556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "4827:19:30",
																	"subExpression": {
																		"id": 1555,
																		"name": "selectorSlotIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1550,
																		"src": "4827:17:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1557,
																"nodeType": "ExpressionStatement",
																"src": "4827:19:30"
															},
															"nodeType": "ForStatement",
															"src": "4723:887:30"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1535,
														"name": "selectorIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1530,
														"src": "4607:13:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1536,
															"name": "l",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "4623:1:30",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																"typeString": "struct DiamondBaseStorage.Layout storage pointer"
															}
														},
														"id": 1537,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4625:13:30",
														"memberName": "selectorCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1000,
														"src": "4623:15:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "4607:31:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1635,
												"initializationExpression": {
													"assignments": [
														1533
													],
													"declarations": [
														{
															"constant": false,
															"id": 1533,
															"mutability": "mutable",
															"name": "slotIndex",
															"nameLocation": "4596:9:30",
															"nodeType": "VariableDeclaration",
															"scope": 1635,
															"src": "4588:17:30",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1532,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4588:7:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1534,
													"nodeType": "VariableDeclarationStatement",
													"src": "4588:17:30"
												},
												"loopExpression": {
													"expression": {
														"id": 1540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4640:11:30",
														"subExpression": {
															"id": 1539,
															"name": "slotIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "4640:9:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1541,
													"nodeType": "ExpressionStatement",
													"src": "4640:11:30"
												},
												"nodeType": "ForStatement",
												"src": "4583:1037:30"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5697:52:30",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "addresses",
																		"nodeType": "YulIdentifier",
																		"src": "5718:9:30"
																	},
																	{
																		"name": "numFacets",
																		"nodeType": "YulIdentifier",
																		"src": "5729:9:30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5711:6:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "5711:28:30"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5711:28:30"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1506,
														"isOffset": false,
														"isSlot": false,
														"src": "5718:9:30",
														"valueSize": 1
													},
													{
														"declaration": 1527,
														"isOffset": false,
														"isSlot": false,
														"src": "5729:9:30",
														"valueSize": 1
													}
												],
												"id": 1636,
												"nodeType": "InlineAssembly",
												"src": "5688:61:30"
											}
										]
									},
									"documentation": {
										"id": 1502,
										"nodeType": "StructuredDocumentation",
										"src": "4229:47:30",
										"text": " @inheritdoc IDiamondReadable"
									},
									"functionSelector": "52ef6b2c",
									"id": 1638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "facetAddresses",
									"nameLocation": "4290:14:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4304:2:30"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "addresses",
												"nameLocation": "4371:9:30",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "4354:26:30",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1504,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4354:7:30",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1505,
													"nodeType": "ArrayTypeName",
													"src": "4354:9:30",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4353:28:30"
									},
									"scope": 1663,
									"src": "4281:1474:30",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1704
									],
									"body": {
										"id": 1661,
										"nodeType": "Block",
										"src": "5904:87:30",
										"statements": [
											{
												"expression": {
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1646,
														"name": "facet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1644,
														"src": "5914:5:30",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"baseExpression": {
																			"expression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 1651,
																						"name": "DiamondBaseStorage",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1025,
																						"src": "5938:18:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_DiamondBaseStorage_$1025_$",
																							"typeString": "type(library DiamondBaseStorage)"
																						}
																					},
																					"id": 1652,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5957:6:30",
																					"memberName": "layout",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1024,
																					"src": "5938:25:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$1007_storage_ptr_$",
																						"typeString": "function () pure returns (struct DiamondBaseStorage.Layout storage pointer)"
																					}
																				},
																				"id": 1653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5938:27:30",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																					"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																				}
																			},
																			"id": 1654,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5966:6:30",
																			"memberName": "facets",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 998,
																			"src": "5938:34:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
																				"typeString": "mapping(bytes4 => bytes32)"
																			}
																		},
																		"id": 1656,
																		"indexExpression": {
																			"id": 1655,
																			"name": "selector",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1641,
																			"src": "5973:8:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5938:44:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5930:7:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes20_$",
																		"typeString": "type(bytes20)"
																	},
																	"typeName": {
																		"id": 1649,
																		"name": "bytes20",
																		"nodeType": "ElementaryTypeName",
																		"src": "5930:7:30",
																		"typeDescriptions": {}
																	}
																},
																"id": 1657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5930:53:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes20",
																	"typeString": "bytes20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes20",
																	"typeString": "bytes20"
																}
															],
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5922:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1647,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5922:7:30",
																"typeDescriptions": {}
															}
														},
														"id": 1658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5922:62:30",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5914:70:30",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1660,
												"nodeType": "ExpressionStatement",
												"src": "5914:70:30"
											}
										]
									},
									"documentation": {
										"id": 1639,
										"nodeType": "StructuredDocumentation",
										"src": "5761:47:30",
										"text": " @inheritdoc IDiamondReadable"
									},
									"functionSelector": "cdffacc6",
									"id": 1662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "facetAddress",
									"nameLocation": "5822:12:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "selector",
												"nameLocation": "5851:8:30",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "5844:15:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1640,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5844:6:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5834:31:30"
									},
									"returnParameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "facet",
												"nameLocation": "5897:5:30",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "5889:13:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5889:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5888:15:30"
									},
									"scope": 1663,
									"src": "5813:178:30",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1664,
							"src": "324:5669:30",
							"usedErrors": []
						}
					],
					"src": "33:5961:30"
				},
				"id": 30
			},
			"imports/solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol",
					"exportedSymbols": {
						"IDiamondReadable": [
							1705
						]
					},
					"id": 1706,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1665,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:31"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDiamondReadable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1666,
								"nodeType": "StructuredDocumentation",
								"src": "58:107:31",
								"text": " @title Diamond proxy introspection interface\n @dev see https://eips.ethereum.org/EIPS/eip-2535"
							},
							"fullyImplemented": false,
							"id": 1705,
							"linearizedBaseContracts": [
								1705
							],
							"name": "IDiamondReadable",
							"nameLocation": "176:16:31",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IDiamondReadable.Facet",
									"id": 1672,
									"members": [
										{
											"constant": false,
											"id": 1668,
											"mutability": "mutable",
											"name": "target",
											"nameLocation": "230:6:31",
											"nodeType": "VariableDeclaration",
											"scope": 1672,
											"src": "222:14:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1667,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "222:7:31",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1671,
											"mutability": "mutable",
											"name": "selectors",
											"nameLocation": "255:9:31",
											"nodeType": "VariableDeclaration",
											"scope": 1672,
											"src": "246:18:31",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
												"typeString": "bytes4[]"
											},
											"typeName": {
												"baseType": {
													"id": 1669,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "246:6:31",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 1670,
												"nodeType": "ArrayTypeName",
												"src": "246:8:31",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
													"typeString": "bytes4[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Facet",
									"nameLocation": "206:5:31",
									"nodeType": "StructDefinition",
									"scope": 1705,
									"src": "199:72:31",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "277:121:31",
										"text": " @notice get all facets and their selectors\n @return diamondFacets array of structured facet data"
									},
									"functionSelector": "7a0ed627",
									"id": 1680,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "facets",
									"nameLocation": "412:6:31",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "418:2:31"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "diamondFacets",
												"nameLocation": "459:13:31",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "444:28:31",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Facet_$1672_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IDiamondReadable.Facet[]"
												},
												"typeName": {
													"baseType": {
														"id": 1676,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1675,
															"name": "Facet",
															"nameLocations": [
																"444:5:31"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1672,
															"src": "444:5:31"
														},
														"referencedDeclaration": 1672,
														"src": "444:5:31",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Facet_$1672_storage_ptr",
															"typeString": "struct IDiamondReadable.Facet"
														}
													},
													"id": 1677,
													"nodeType": "ArrayTypeName",
													"src": "444:7:31",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Facet_$1672_storage_$dyn_storage_ptr",
														"typeString": "struct IDiamondReadable.Facet[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "443:30:31"
									},
									"scope": 1705,
									"src": "403:71:31",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1681,
										"nodeType": "StructuredDocumentation",
										"src": "480:167:31",
										"text": " @notice get all selectors for given facet address\n @param facet address of facet to query\n @return selectors array of function selectors"
									},
									"functionSelector": "adfca15e",
									"id": 1689,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "facetFunctionSelectors",
									"nameLocation": "661:22:31",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "facet",
												"nameLocation": "701:5:31",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "693:13:31",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:31",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "683:29:31"
									},
									"returnParameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "selectors",
												"nameLocation": "752:9:31",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "736:25:31",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
													"typeString": "bytes4[]"
												},
												"typeName": {
													"baseType": {
														"id": 1685,
														"name": "bytes4",
														"nodeType": "ElementaryTypeName",
														"src": "736:6:31",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"id": 1686,
													"nodeType": "ArrayTypeName",
													"src": "736:8:31",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
														"typeString": "bytes4[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "735:27:31"
									},
									"scope": 1705,
									"src": "652:111:31",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1690,
										"nodeType": "StructuredDocumentation",
										"src": "769:120:31",
										"text": " @notice get addresses of all facets used by diamond\n @return addresses array of facet addresses"
									},
									"functionSelector": "52ef6b2c",
									"id": 1696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "facetAddresses",
									"nameLocation": "903:14:31",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "917:2:31"
									},
									"returnParameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "addresses",
												"nameLocation": "984:9:31",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "967:26:31",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1692,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "967:7:31",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1693,
													"nodeType": "ArrayTypeName",
													"src": "967:9:31",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "966:28:31"
									},
									"scope": 1705,
									"src": "894:101:31",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1697,
										"nodeType": "StructuredDocumentation",
										"src": "1001:199:31",
										"text": " @notice get the address of the facet associated with given selector\n @param selector function selector to query\n @return facet facet address (zero address if not found)"
									},
									"functionSelector": "cdffacc6",
									"id": 1704,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "facetAddress",
									"nameLocation": "1214:12:31",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "selector",
												"nameLocation": "1243:8:31",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "1236:15:31",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1698,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1236:6:31",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:31:31"
									},
									"returnParameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "facet",
												"nameLocation": "1289:5:31",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "1281:13:31",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:31",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1280:15:31"
									},
									"scope": 1705,
									"src": "1205:91:31",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1706,
							"src": "166:1132:31",
							"usedErrors": []
						}
					],
					"src": "33:1266:31"
				},
				"id": 31
			},
			"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol",
					"exportedSymbols": {
						"DiamondWritable": [
							1742
						],
						"DiamondWritableInternal": [
							2549
						],
						"IDiamondWritable": [
							2569
						],
						"OwnableInternal": [
							225
						]
					},
					"id": 1743,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1707,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:32"
						},
						{
							"absolutePath": "imports/solidstate/contracts/access/ownable/OwnableInternal.sol",
							"file": "../../../access/ownable/OwnableInternal.sol",
							"id": 1709,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1743,
							"sourceUnit": 226,
							"src": "58:78:32",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1708,
										"name": "OwnableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 225,
										"src": "67:15:32",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol",
							"file": "./IDiamondWritable.sol",
							"id": 1711,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1743,
							"sourceUnit": 2570,
							"src": "137:58:32",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1710,
										"name": "IDiamondWritable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2569,
										"src": "146:16:32",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol",
							"file": "./DiamondWritableInternal.sol",
							"id": 1713,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1743,
							"sourceUnit": 2550,
							"src": "196:72:32",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1712,
										"name": "DiamondWritableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2549,
										"src": "205:23:32",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1715,
										"name": "IDiamondWritable",
										"nameLocations": [
											"370:16:32"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2569,
										"src": "370:16:32"
									},
									"id": 1716,
									"nodeType": "InheritanceSpecifier",
									"src": "370:16:32"
								},
								{
									"baseName": {
										"id": 1717,
										"name": "DiamondWritableInternal",
										"nameLocations": [
											"392:23:32"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2549,
										"src": "392:23:32"
									},
									"id": 1718,
									"nodeType": "InheritanceSpecifier",
									"src": "392:23:32"
								},
								{
									"baseName": {
										"id": 1719,
										"name": "OwnableInternal",
										"nameLocations": [
											"421:15:32"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 225,
										"src": "421:15:32"
									},
									"id": 1720,
									"nodeType": "InheritanceSpecifier",
									"src": "421:15:32"
								}
							],
							"canonicalName": "DiamondWritable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1714,
								"nodeType": "StructuredDocumentation",
								"src": "270:58:32",
								"text": " @title EIP-2535 \"Diamond\" proxy update contract"
							},
							"fullyImplemented": true,
							"id": 1742,
							"linearizedBaseContracts": [
								1742,
								225,
								34,
								455,
								2549,
								2569,
								2611
							],
							"name": "DiamondWritable",
							"nameLocation": "347:15:32",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2568
									],
									"body": {
										"id": 1740,
										"nodeType": "Block",
										"src": "632:53:32",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1735,
															"name": "facetCuts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1725,
															"src": "654:9:32",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$2610_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct IDiamondWritableInternal.FacetCut calldata[] calldata"
															}
														},
														{
															"id": 1736,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "665:6:32",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1737,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "673:4:32",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$2610_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct IDiamondWritableInternal.FacetCut calldata[] calldata"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 1734,
														"name": "_diamondCut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1947,
														"src": "642:11:32",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (struct IDiamondWritableInternal.FacetCut memory[] memory,address,bytes memory)"
														}
													},
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "642:36:32",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1739,
												"nodeType": "ExpressionStatement",
												"src": "642:36:32"
											}
										]
									},
									"documentation": {
										"id": 1721,
										"nodeType": "StructuredDocumentation",
										"src": "443:47:32",
										"text": " @inheritdoc IDiamondWritable"
									},
									"functionSelector": "1f931c1c",
									"id": 1741,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1732,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1731,
												"name": "onlyOwner",
												"nameLocations": [
													"622:9:32"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 129,
												"src": "622:9:32"
											},
											"nodeType": "ModifierInvocation",
											"src": "622:9:32"
										}
									],
									"name": "diamondCut",
									"nameLocation": "504:10:32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "facetCuts",
												"nameLocation": "544:9:32",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "524:29:32",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FacetCut_$2610_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IDiamondWritableInternal.FacetCut[]"
												},
												"typeName": {
													"baseType": {
														"id": 1723,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1722,
															"name": "FacetCut",
															"nameLocations": [
																"524:8:32"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2610,
															"src": "524:8:32"
														},
														"referencedDeclaration": 2610,
														"src": "524:8:32",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$2610_storage_ptr",
															"typeString": "struct IDiamondWritableInternal.FacetCut"
														}
													},
													"id": 1724,
													"nodeType": "ArrayTypeName",
													"src": "524:10:32",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FacetCut_$2610_storage_$dyn_storage_ptr",
														"typeString": "struct IDiamondWritableInternal.FacetCut[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "571:6:32",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "563:14:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "563:7:32",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "602:4:32",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "587:19:32",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1728,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "587:5:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "514:98:32"
									},
									"returnParameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "632:0:32"
									},
									"scope": 1742,
									"src": "495:190:32",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1743,
							"src": "329:358:32",
							"usedErrors": [
								31,
								33,
								2587,
								2589,
								2591,
								2593,
								2595,
								2597,
								2599,
								2601
							]
						}
					],
					"src": "33:655:32"
				},
				"id": 32
			},
			"imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol",
					"exportedSymbols": {
						"AddressUtils": [
							2846
						],
						"DiamondBaseStorage": [
							1025
						],
						"DiamondWritableInternal": [
							2549
						],
						"IDiamondWritableInternal": [
							2611
						]
					},
					"id": 2550,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1744,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:33"
						},
						{
							"absolutePath": "imports/solidstate/contracts/utils/AddressUtils.sol",
							"file": "../../../utils/AddressUtils.sol",
							"id": 1746,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2550,
							"sourceUnit": 2847,
							"src": "58:63:33",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1745,
										"name": "AddressUtils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2846,
										"src": "67:12:33",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol",
							"file": "../base/DiamondBaseStorage.sol",
							"id": 1748,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2550,
							"sourceUnit": 1026,
							"src": "122:68:33",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1747,
										"name": "DiamondBaseStorage",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1025,
										"src": "131:18:33",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol",
							"file": "./IDiamondWritableInternal.sol",
							"id": 1750,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2550,
							"sourceUnit": 2612,
							"src": "191:74:33",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1749,
										"name": "IDiamondWritableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2611,
										"src": "200:24:33",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1751,
										"name": "IDiamondWritableInternal",
										"nameLocations": [
											"312:24:33"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2611,
										"src": "312:24:33"
									},
									"id": 1752,
									"nodeType": "InheritanceSpecifier",
									"src": "312:24:33"
								}
							],
							"canonicalName": "DiamondWritableInternal",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2549,
							"linearizedBaseContracts": [
								2549,
								2611
							],
							"name": "DiamondWritableInternal",
							"nameLocation": "285:23:33",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1755,
									"libraryName": {
										"id": 1753,
										"name": "AddressUtils",
										"nameLocations": [
											"349:12:33"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2846,
										"src": "349:12:33"
									},
									"nodeType": "UsingForDirective",
									"src": "343:31:33",
									"typeName": {
										"id": 1754,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "366:7:33",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": true,
									"id": 1764,
									"mutability": "constant",
									"name": "CLEAR_ADDRESS_MASK",
									"nameLocation": "405:18:33",
									"nodeType": "VariableDeclaration",
									"scope": 2549,
									"src": "380:98:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1756,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "380:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "3078666666666666666666666666666666666666666666666666",
														"id": 1761,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "450:26:33",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_79228162514264337593543950335_by_1",
															"typeString": "int_const 79228162514264337593543950335"
														},
														"value": "0xffffffffffffffffffffffff"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_rational_79228162514264337593543950335_by_1",
															"typeString": "int_const 79228162514264337593543950335"
														}
													],
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "442:7:33",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_uint256_$",
														"typeString": "type(uint256)"
													},
													"typeName": {
														"id": 1759,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "442:7:33",
														"typeDescriptions": {}
													}
												},
												"id": 1762,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "442:35:33",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1758,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "434:7:33",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes32_$",
												"typeString": "type(bytes32)"
											},
											"typeName": {
												"id": 1757,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "434:7:33",
												"typeDescriptions": {}
											}
										},
										"id": 1763,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "434:44:33",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1775,
									"mutability": "constant",
									"name": "CLEAR_SELECTOR_MASK",
									"nameLocation": "509:19:33",
									"nodeType": "VariableDeclaration",
									"scope": 2549,
									"src": "484:90:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1765,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "484:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"commonType": {
															"typeIdentifier": "t_rational_115792089210356248756420345214020892766250353992003419616917011526809519390720_by_1",
															"typeString": "int_const 1157...(70 digits omitted)...0720"
														},
														"id": 1772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "30786666666666666666",
															"id": 1770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "555:10:33",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4294967295_by_1",
																"typeString": "int_const 4294967295"
															},
															"value": "0xffffffff"
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "323234",
															"id": 1771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "569:3:33",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_224_by_1",
																"typeString": "int_const 224"
															},
															"value": "224"
														},
														"src": "555:17:33",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_115792089210356248756420345214020892766250353992003419616917011526809519390720_by_1",
															"typeString": "int_const 1157...(70 digits omitted)...0720"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_rational_115792089210356248756420345214020892766250353992003419616917011526809519390720_by_1",
															"typeString": "int_const 1157...(70 digits omitted)...0720"
														}
													],
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "547:7:33",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_uint256_$",
														"typeString": "type(uint256)"
													},
													"typeName": {
														"id": 1768,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "547:7:33",
														"typeDescriptions": {}
													}
												},
												"id": 1773,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "547:26:33",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1767,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "539:7:33",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes32_$",
												"typeString": "type(bytes32)"
											},
											"typeName": {
												"id": 1766,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "539:7:33",
												"typeDescriptions": {}
											}
										},
										"id": 1774,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "539:35:33",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1946,
										"nodeType": "Block",
										"src": "981:1911:33",
										"statements": [
											{
												"assignments": [
													1791
												],
												"declarations": [
													{
														"constant": false,
														"id": 1791,
														"mutability": "mutable",
														"name": "l",
														"nameLocation": "1025:1:33",
														"nodeType": "VariableDeclaration",
														"scope": 1946,
														"src": "991:35:33",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
															"typeString": "struct DiamondBaseStorage.Layout"
														},
														"typeName": {
															"id": 1790,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1789,
																"name": "DiamondBaseStorage.Layout",
																"nameLocations": [
																	"991:18:33",
																	"1010:6:33"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1007,
																"src": "991:25:33"
															},
															"referencedDeclaration": 1007,
															"src": "991:25:33",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																"typeString": "struct DiamondBaseStorage.Layout"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1795,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1792,
															"name": "DiamondBaseStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "1029:18:33",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DiamondBaseStorage_$1025_$",
																"typeString": "type(library DiamondBaseStorage)"
															}
														},
														"id": 1793,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1048:6:33",
														"memberName": "layout",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1024,
														"src": "1029:25:33",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$1007_storage_ptr_$",
															"typeString": "function () pure returns (struct DiamondBaseStorage.Layout storage pointer)"
														}
													},
													"id": 1794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1029:27:33",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
														"typeString": "struct DiamondBaseStorage.Layout storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "991:65:33"
											},
											{
												"id": 1945,
												"nodeType": "UncheckedBlock",
												"src": "1067:1819:33",
												"statements": [
													{
														"assignments": [
															1797
														],
														"declarations": [
															{
																"constant": false,
																"id": 1797,
																"mutability": "mutable",
																"name": "originalSelectorCount",
																"nameLocation": "1099:21:33",
																"nodeType": "VariableDeclaration",
																"scope": 1945,
																"src": "1091:29:33",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1796,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1091:7:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1800,
														"initialValue": {
															"expression": {
																"id": 1798,
																"name": "l",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1791,
																"src": "1123:1:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																	"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																}
															},
															"id": 1799,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1125:13:33",
															"memberName": "selectorCount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1000,
															"src": "1123:15:33",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1091:47:33"
													},
													{
														"assignments": [
															1802
														],
														"declarations": [
															{
																"constant": false,
																"id": 1802,
																"mutability": "mutable",
																"name": "selectorCount",
																"nameLocation": "1160:13:33",
																"nodeType": "VariableDeclaration",
																"scope": 1945,
																"src": "1152:21:33",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1801,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1152:7:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1804,
														"initialValue": {
															"id": 1803,
															"name": "originalSelectorCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1797,
															"src": "1176:21:33",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1152:45:33"
													},
													{
														"assignments": [
															1806
														],
														"declarations": [
															{
																"constant": false,
																"id": 1806,
																"mutability": "mutable",
																"name": "selectorSlot",
																"nameLocation": "1219:12:33",
																"nodeType": "VariableDeclaration",
																"scope": 1945,
																"src": "1211:20:33",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 1805,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1211:7:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1807,
														"nodeType": "VariableDeclarationStatement",
														"src": "1211:20:33"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1808,
																	"name": "selectorCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1802,
																	"src": "1305:13:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "37",
																	"id": 1809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1321:1:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_7_by_1",
																		"typeString": "int_const 7"
																	},
																	"value": "7"
																},
																"src": "1305:17:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1325:1:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1305:21:33",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1823,
														"nodeType": "IfStatement",
														"src": "1301:151:33",
														"trueBody": {
															"id": 1822,
															"nodeType": "Block",
															"src": "1328:124:33",
															"statements": [
																{
																	"expression": {
																		"id": 1820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1813,
																			"name": "selectorSlot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1806,
																			"src": "1387:12:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1814,
																					"name": "l",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1791,
																					"src": "1402:1:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																						"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																					}
																				},
																				"id": 1815,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1404:13:33",
																				"memberName": "selectorSlots",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1004,
																				"src": "1402:15:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																					"typeString": "mapping(uint256 => bytes32)"
																				}
																			},
																			"id": 1819,
																			"indexExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1818,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1816,
																					"name": "selectorCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1802,
																					"src": "1418:13:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "33",
																					"id": 1817,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1435:1:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_3_by_1",
																						"typeString": "int_const 3"
																					},
																					"value": "3"
																				},
																				"src": "1418:18:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1402:35:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "1387:50:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"id": 1821,
																	"nodeType": "ExpressionStatement",
																	"src": "1387:50:33"
																}
															]
														}
													},
													{
														"body": {
															"id": 1901,
															"nodeType": "Block",
															"src": "1509:970:33",
															"statements": [
																{
																	"assignments": [
																		1836
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1836,
																			"mutability": "mutable",
																			"name": "facetCut",
																			"nameLocation": "1543:8:33",
																			"nodeType": "VariableDeclaration",
																			"scope": 1901,
																			"src": "1527:24:33",
																			"stateVariable": false,
																			"storageLocation": "memory",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
																				"typeString": "struct IDiamondWritableInternal.FacetCut"
																			},
																			"typeName": {
																				"id": 1835,
																				"nodeType": "UserDefinedTypeName",
																				"pathNode": {
																					"id": 1834,
																					"name": "FacetCut",
																					"nameLocations": [
																						"1527:8:33"
																					],
																					"nodeType": "IdentifierPath",
																					"referencedDeclaration": 2610,
																					"src": "1527:8:33"
																				},
																				"referencedDeclaration": 2610,
																				"src": "1527:8:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FacetCut_$2610_storage_ptr",
																					"typeString": "struct IDiamondWritableInternal.FacetCut"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1840,
																	"initialValue": {
																		"baseExpression": {
																			"id": 1837,
																			"name": "facetCuts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1780,
																			"src": "1554:9:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct IDiamondWritableInternal.FacetCut memory[] memory"
																			}
																		},
																		"id": 1839,
																		"indexExpression": {
																			"id": 1838,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1825,
																			"src": "1564:1:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1554:12:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
																			"typeString": "struct IDiamondWritableInternal.FacetCut memory"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "1527:39:33"
																},
																{
																	"assignments": [
																		1843
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1843,
																			"mutability": "mutable",
																			"name": "action",
																			"nameLocation": "1599:6:33",
																			"nodeType": "VariableDeclaration",
																			"scope": 1901,
																			"src": "1584:21:33",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_FacetCutAction_$2575",
																				"typeString": "enum IDiamondWritableInternal.FacetCutAction"
																			},
																			"typeName": {
																				"id": 1842,
																				"nodeType": "UserDefinedTypeName",
																				"pathNode": {
																					"id": 1841,
																					"name": "FacetCutAction",
																					"nameLocations": [
																						"1584:14:33"
																					],
																					"nodeType": "IdentifierPath",
																					"referencedDeclaration": 2575,
																					"src": "1584:14:33"
																				},
																				"referencedDeclaration": 2575,
																				"src": "1584:14:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_FacetCutAction_$2575",
																					"typeString": "enum IDiamondWritableInternal.FacetCutAction"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1846,
																	"initialValue": {
																		"expression": {
																			"id": 1844,
																			"name": "facetCut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1836,
																			"src": "1608:8:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
																				"typeString": "struct IDiamondWritableInternal.FacetCut memory"
																			}
																		},
																		"id": 1845,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1617:6:33",
																		"memberName": "action",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2606,
																		"src": "1608:15:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_FacetCutAction_$2575",
																			"typeString": "enum IDiamondWritableInternal.FacetCutAction"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "1584:39:33"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"expression": {
																					"id": 1847,
																					"name": "facetCut",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1836,
																					"src": "1646:8:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
																						"typeString": "struct IDiamondWritableInternal.FacetCut memory"
																					}
																				},
																				"id": 1848,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1655:9:33",
																				"memberName": "selectors",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2609,
																				"src": "1646:18:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																					"typeString": "bytes4[] memory"
																				}
																			},
																			"id": 1849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1665:6:33",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "1646:25:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1675:1:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1646:30:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1855,
																	"nodeType": "IfStatement",
																	"src": "1642:102:33",
																	"trueBody": {
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1852,
																				"name": "DiamondWritable__SelectorNotSpecified",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2599,
																				"src": "1705:37:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1705:39:33",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1854,
																		"nodeType": "RevertStatement",
																		"src": "1698:46:33"
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_FacetCutAction_$2575",
																			"typeString": "enum IDiamondWritableInternal.FacetCutAction"
																		},
																		"id": 1859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1856,
																			"name": "action",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1843,
																			"src": "1767:6:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_FacetCutAction_$2575",
																				"typeString": "enum IDiamondWritableInternal.FacetCutAction"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 1857,
																				"name": "FacetCutAction",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2575,
																				"src": "1777:14:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_FacetCutAction_$2575_$",
																					"typeString": "type(enum IDiamondWritableInternal.FacetCutAction)"
																				}
																			},
																			"id": 1858,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "1792:3:33",
																			"memberName": "ADD",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2572,
																			"src": "1777:18:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_FacetCutAction_$2575",
																				"typeString": "enum IDiamondWritableInternal.FacetCutAction"
																			}
																		},
																		"src": "1767:28:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_enum$_FacetCutAction_$2575",
																				"typeString": "enum IDiamondWritableInternal.FacetCutAction"
																			},
																			"id": 1875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1872,
																				"name": "action",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1843,
																				"src": "2058:6:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_FacetCutAction_$2575",
																					"typeString": "enum IDiamondWritableInternal.FacetCutAction"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"expression": {
																					"id": 1873,
																					"name": "FacetCutAction",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2575,
																					"src": "2068:14:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_enum$_FacetCutAction_$2575_$",
																						"typeString": "type(enum IDiamondWritableInternal.FacetCutAction)"
																					}
																				},
																				"id": 1874,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2083:7:33",
																				"memberName": "REPLACE",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2573,
																				"src": "2068:22:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_FacetCutAction_$2575",
																					"typeString": "enum IDiamondWritableInternal.FacetCutAction"
																				}
																			},
																			"src": "2058:32:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_FacetCutAction_$2575",
																					"typeString": "enum IDiamondWritableInternal.FacetCutAction"
																				},
																				"id": 1885,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1882,
																					"name": "action",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1843,
																					"src": "2178:6:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_FacetCutAction_$2575",
																						"typeString": "enum IDiamondWritableInternal.FacetCutAction"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1883,
																						"name": "FacetCutAction",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2575,
																						"src": "2188:14:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_FacetCutAction_$2575_$",
																							"typeString": "type(enum IDiamondWritableInternal.FacetCutAction)"
																						}
																					},
																					"id": 1884,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "2203:6:33",
																					"memberName": "REMOVE",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2574,
																					"src": "2188:21:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_FacetCutAction_$2575",
																						"typeString": "enum IDiamondWritableInternal.FacetCutAction"
																					}
																				},
																				"src": "2178:31:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 1898,
																			"nodeType": "IfStatement",
																			"src": "2174:291:33",
																			"trueBody": {
																				"id": 1897,
																				"nodeType": "Block",
																				"src": "2211:254:33",
																				"statements": [
																					{
																						"expression": {
																							"id": 1895,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"components": [
																									{
																										"id": 1886,
																										"name": "selectorCount",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1802,
																										"src": "2234:13:33",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									{
																										"id": 1887,
																										"name": "selectorSlot",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1806,
																										"src": "2249:12:33",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"id": 1888,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": true,
																								"nodeType": "TupleExpression",
																								"src": "2233:29:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$",
																									"typeString": "tuple(uint256,bytes32)"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "=",
																							"rightHandSide": {
																								"arguments": [
																									{
																										"id": 1890,
																										"name": "l",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1791,
																										"src": "2312:1:33",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																											"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																										}
																									},
																									{
																										"id": 1891,
																										"name": "selectorCount",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1802,
																										"src": "2339:13:33",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									{
																										"id": 1892,
																										"name": "selectorSlot",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1806,
																										"src": "2378:12:33",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									},
																									{
																										"id": 1893,
																										"name": "facetCut",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1836,
																										"src": "2416:8:33",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
																											"typeString": "struct IDiamondWritableInternal.FacetCut memory"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																											"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										},
																										{
																											"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
																											"typeString": "struct IDiamondWritableInternal.FacetCut memory"
																										}
																									],
																									"id": 1889,
																									"name": "_removeFacetSelectors",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2385,
																									"src": "2265:21:33",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Layout_$1007_storage_ptr_$_t_uint256_$_t_bytes32_$_t_struct$_FacetCut_$2610_memory_ptr_$returns$_t_uint256_$_t_bytes32_$",
																										"typeString": "function (struct DiamondBaseStorage.Layout storage pointer,uint256,bytes32,struct IDiamondWritableInternal.FacetCut memory) returns (uint256,bytes32)"
																									}
																								},
																								"id": 1894,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "2265:181:33",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$",
																									"typeString": "tuple(uint256,bytes32)"
																								}
																							},
																							"src": "2233:213:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$__$",
																								"typeString": "tuple()"
																							}
																						},
																						"id": 1896,
																						"nodeType": "ExpressionStatement",
																						"src": "2233:213:33"
																					}
																				]
																			}
																		},
																		"id": 1899,
																		"nodeType": "IfStatement",
																		"src": "2054:411:33",
																		"trueBody": {
																			"id": 1881,
																			"nodeType": "Block",
																			"src": "2092:76:33",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 1877,
																								"name": "l",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1791,
																								"src": "2137:1:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																									"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																								}
																							},
																							{
																								"id": 1878,
																								"name": "facetCut",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1836,
																								"src": "2140:8:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
																									"typeString": "struct IDiamondWritableInternal.FacetCut memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																									"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																								},
																								{
																									"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
																									"typeString": "struct IDiamondWritableInternal.FacetCut memory"
																								}
																							],
																							"id": 1876,
																							"name": "_replaceFacetSelectors",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2487,
																							"src": "2114:22:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Layout_$1007_storage_ptr_$_t_struct$_FacetCut_$2610_memory_ptr_$returns$__$",
																								"typeString": "function (struct DiamondBaseStorage.Layout storage pointer,struct IDiamondWritableInternal.FacetCut memory)"
																							}
																						},
																						"id": 1879,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2114:35:33",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1880,
																					"nodeType": "ExpressionStatement",
																					"src": "2114:35:33"
																				}
																			]
																		}
																	},
																	"id": 1900,
																	"nodeType": "IfStatement",
																	"src": "1763:702:33",
																	"trueBody": {
																		"id": 1871,
																		"nodeType": "Block",
																		"src": "1797:251:33",
																		"statements": [
																			{
																				"expression": {
																					"id": 1869,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"components": [
																							{
																								"id": 1860,
																								"name": "selectorCount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1802,
																								"src": "1820:13:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1861,
																								"name": "selectorSlot",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1806,
																								"src": "1835:12:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							}
																						],
																						"id": 1862,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "TupleExpression",
																						"src": "1819:29:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$",
																							"typeString": "tuple(uint256,bytes32)"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 1864,
																								"name": "l",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1791,
																								"src": "1895:1:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																									"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																								}
																							},
																							{
																								"id": 1865,
																								"name": "selectorCount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1802,
																								"src": "1922:13:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1866,
																								"name": "selectorSlot",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1806,
																								"src": "1961:12:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							{
																								"id": 1867,
																								"name": "facetCut",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1836,
																								"src": "1999:8:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
																									"typeString": "struct IDiamondWritableInternal.FacetCut memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																									"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								},
																								{
																									"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
																									"typeString": "struct IDiamondWritableInternal.FacetCut memory"
																								}
																							],
																							"id": 1863,
																							"name": "_addFacetSelectors",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2097,
																							"src": "1851:18:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Layout_$1007_storage_ptr_$_t_uint256_$_t_bytes32_$_t_struct$_FacetCut_$2610_memory_ptr_$returns$_t_uint256_$_t_bytes32_$",
																								"typeString": "function (struct DiamondBaseStorage.Layout storage pointer,uint256,bytes32,struct IDiamondWritableInternal.FacetCut memory) returns (uint256,bytes32)"
																							}
																						},
																						"id": 1868,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1851:178:33",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$",
																							"typeString": "tuple(uint256,bytes32)"
																						}
																					},
																					"src": "1819:210:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1870,
																				"nodeType": "ExpressionStatement",
																				"src": "1819:210:33"
																			}
																		]
																	}
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1827,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "1482:1:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1828,
																	"name": "facetCuts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1780,
																	"src": "1486:9:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct IDiamondWritableInternal.FacetCut memory[] memory"
																	}
																},
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1496:6:33",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1486:16:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1482:20:33",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1902,
														"initializationExpression": {
															"assignments": [
																1825
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1825,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "1479:1:33",
																	"nodeType": "VariableDeclaration",
																	"scope": 1902,
																	"src": "1471:9:33",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1824,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1471:7:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1826,
															"nodeType": "VariableDeclarationStatement",
															"src": "1471:9:33"
														},
														"loopExpression": {
															"expression": {
																"id": 1832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1504:3:33",
																"subExpression": {
																	"id": 1831,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1825,
																	"src": "1504:1:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1833,
															"nodeType": "ExpressionStatement",
															"src": "1504:3:33"
														},
														"nodeType": "ForStatement",
														"src": "1466:1013:33"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1903,
																"name": "selectorCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1802,
																"src": "2497:13:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1904,
																"name": "originalSelectorCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1797,
																"src": "2514:21:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2497:38:33",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1916,
														"nodeType": "IfStatement",
														"src": "2493:116:33",
														"trueBody": {
															"id": 1915,
															"nodeType": "Block",
															"src": "2537:72:33",
															"statements": [
																{
																	"expression": {
																		"id": 1913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 1906,
																				"name": "l",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1791,
																				"src": "2555:1:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																					"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																				}
																			},
																			"id": 1908,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "2557:13:33",
																			"memberName": "selectorCount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1000,
																			"src": "2555:15:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 1911,
																					"name": "selectorCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1802,
																					"src": "2580:13:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1910,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2573:6:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint16_$",
																					"typeString": "type(uint16)"
																				},
																				"typeName": {
																					"id": 1909,
																					"name": "uint16",
																					"nodeType": "ElementaryTypeName",
																					"src": "2573:6:33",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2573:21:33",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"src": "2555:39:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"id": 1914,
																	"nodeType": "ExpressionStatement",
																	"src": "2555:39:33"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1917,
																	"name": "selectorCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1802,
																	"src": "2676:13:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "37",
																	"id": 1918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2692:1:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_7_by_1",
																		"typeString": "int_const 7"
																	},
																	"value": "7"
																},
																"src": "2676:17:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2696:1:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2676:21:33",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1933,
														"nodeType": "IfStatement",
														"src": "2672:110:33",
														"trueBody": {
															"id": 1932,
															"nodeType": "Block",
															"src": "2699:83:33",
															"statements": [
																{
																	"expression": {
																		"id": 1930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1922,
																					"name": "l",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1791,
																					"src": "2717:1:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																						"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																					}
																				},
																				"id": 1927,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2719:13:33",
																				"memberName": "selectorSlots",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1004,
																				"src": "2717:15:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																					"typeString": "mapping(uint256 => bytes32)"
																				}
																			},
																			"id": 1928,
																			"indexExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1926,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1924,
																					"name": "selectorCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1802,
																					"src": "2733:13:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "33",
																					"id": 1925,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2750:1:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_3_by_1",
																						"typeString": "int_const 3"
																					},
																					"value": "3"
																				},
																				"src": "2733:18:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "2717:35:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1929,
																			"name": "selectorSlot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1806,
																			"src": "2755:12:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "2717:50:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"id": 1931,
																	"nodeType": "ExpressionStatement",
																	"src": "2717:50:33"
																}
															]
														}
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 1935,
																	"name": "facetCuts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1780,
																	"src": "2812:9:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct IDiamondWritableInternal.FacetCut memory[] memory"
																	}
																},
																{
																	"id": 1936,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1782,
																	"src": "2823:6:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1937,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "2831:4:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct IDiamondWritableInternal.FacetCut memory[] memory"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1934,
																"name": "DiamondCut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2585,
																"src": "2801:10:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (struct IDiamondWritableInternal.FacetCut memory[] memory,address,bytes memory)"
																}
															},
															"id": 1938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2801:35:33",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1939,
														"nodeType": "EmitStatement",
														"src": "2796:40:33"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1941,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1782,
																	"src": "2862:6:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1942,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "2870:4:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1940,
																"name": "_initialize",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2548,
																"src": "2850:11:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (address,bytes memory)"
																}
															},
															"id": 1943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2850:25:33",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1944,
														"nodeType": "ExpressionStatement",
														"src": "2850:25:33"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1776,
										"nodeType": "StructuredDocumentation",
										"src": "581:263:33",
										"text": " @notice update functions callable on Diamond proxy\n @param facetCuts array of structured Diamond facet update data\n @param target optional recipient of initialization delegatecall\n @param data optional initialization call data"
									},
									"id": 1947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_diamondCut",
									"nameLocation": "858:11:33",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "facetCuts",
												"nameLocation": "897:9:33",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "879:27:33",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IDiamondWritableInternal.FacetCut[]"
												},
												"typeName": {
													"baseType": {
														"id": 1778,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1777,
															"name": "FacetCut",
															"nameLocations": [
																"879:8:33"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2610,
															"src": "879:8:33"
														},
														"referencedDeclaration": 2610,
														"src": "879:8:33",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$2610_storage_ptr",
															"typeString": "struct IDiamondWritableInternal.FacetCut"
														}
													},
													"id": 1779,
													"nodeType": "ArrayTypeName",
													"src": "879:10:33",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FacetCut_$2610_storage_$dyn_storage_ptr",
														"typeString": "struct IDiamondWritableInternal.FacetCut[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "924:6:33",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "916:14:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:33",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "953:4:33",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "940:17:33",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1783,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:33",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "869:94:33"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "981:0:33"
									},
									"scope": 2549,
									"src": "849:2043:33",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2096,
										"nodeType": "Block",
										"src": "3108:1385:33",
										"statements": [
											{
												"id": 2095,
												"nodeType": "UncheckedBlock",
												"src": "3118:1369:33",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1964,
																		"name": "facetCut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1957,
																		"src": "3163:8:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
																			"typeString": "struct IDiamondWritableInternal.FacetCut memory"
																		}
																	},
																	"id": 1965,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3172:6:33",
																	"memberName": "target",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2603,
																	"src": "3163:15:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1968,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3190:4:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DiamondWritableInternal_$2549",
																				"typeString": "contract DiamondWritableInternal"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DiamondWritableInternal_$2549",
																				"typeString": "contract DiamondWritableInternal"
																			}
																		],
																		"id": 1967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3182:7:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1966,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3182:7:33",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3182:13:33",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3163:32:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 1975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "3215:29:33",
																"subExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"expression": {
																				"id": 1971,
																				"name": "facetCut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1957,
																				"src": "3216:8:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
																					"typeString": "struct IDiamondWritableInternal.FacetCut memory"
																				}
																			},
																			"id": 1972,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3225:6:33",
																			"memberName": "target",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2603,
																			"src": "3216:15:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3232:10:33",
																		"memberName": "isContract",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2659,
																		"src": "3216:26:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
																			"typeString": "function (address) view returns (bool)"
																		}
																	},
																	"id": 1974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3216:28:33",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3163:81:33",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1980,
														"nodeType": "IfStatement",
														"src": "3142:158:33",
														"trueBody": {
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1977,
																	"name": "DiamondWritable__TargetHasNoCode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "3266:32:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3266:34:33",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1979,
															"nodeType": "RevertStatement",
															"src": "3259:41:33"
														}
													},
													{
														"body": {
															"id": 2089,
															"nodeType": "Block",
															"src": "3367:1059:33",
															"statements": [
																{
																	"assignments": [
																		1993
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1993,
																			"mutability": "mutable",
																			"name": "selector",
																			"nameLocation": "3392:8:33",
																			"nodeType": "VariableDeclaration",
																			"scope": 2089,
																			"src": "3385:15:33",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			"typeName": {
																				"id": 1992,
																				"name": "bytes4",
																				"nodeType": "ElementaryTypeName",
																				"src": "3385:6:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1998,
																	"initialValue": {
																		"baseExpression": {
																			"expression": {
																				"id": 1994,
																				"name": "facetCut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1957,
																				"src": "3403:8:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
																					"typeString": "struct IDiamondWritableInternal.FacetCut memory"
																				}
																			},
																			"id": 1995,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3412:9:33",
																			"memberName": "selectors",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2609,
																			"src": "3403:18:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																				"typeString": "bytes4[] memory"
																			}
																		},
																		"id": 1997,
																		"indexExpression": {
																			"id": 1996,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1982,
																			"src": "3422:1:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3403:21:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "3385:39:33"
																},
																{
																	"assignments": [
																		2000
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2000,
																			"mutability": "mutable",
																			"name": "oldFacet",
																			"nameLocation": "3450:8:33",
																			"nodeType": "VariableDeclaration",
																			"scope": 2089,
																			"src": "3442:16:33",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"typeName": {
																				"id": 1999,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "3442:7:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2005,
																	"initialValue": {
																		"baseExpression": {
																			"expression": {
																				"id": 2001,
																				"name": "l",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1950,
																				"src": "3461:1:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																					"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																				}
																			},
																			"id": 2002,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3463:6:33",
																			"memberName": "facets",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 998,
																			"src": "3461:8:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
																				"typeString": "mapping(bytes4 => bytes32)"
																			}
																		},
																		"id": 2004,
																		"indexExpression": {
																			"id": 2003,
																			"name": "selector",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1993,
																			"src": "3470:8:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3461:18:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "3442:37:33"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2010,
																							"name": "oldFacet",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2000,
																							"src": "3518:8:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 2009,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3510:7:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes20_$",
																							"typeString": "type(bytes20)"
																						},
																						"typeName": {
																							"id": 2008,
																							"name": "bytes20",
																							"nodeType": "ElementaryTypeName",
																							"src": "3510:7:33",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2011,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3510:17:33",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes20",
																						"typeString": "bytes20"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes20",
																						"typeString": "bytes20"
																					}
																				],
																				"id": 2007,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3502:7:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2006,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3502:7:33",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3502:26:33",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2015,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3540:1:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2014,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3532:7:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2013,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3532:7:33",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2016,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3532:10:33",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "3502:40:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2021,
																	"nodeType": "IfStatement",
																	"src": "3498:112:33",
																	"trueBody": {
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2018,
																				"name": "DiamondWritable__SelectorAlreadyAdded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2593,
																				"src": "3571:37:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2019,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3571:39:33",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2020,
																		"nodeType": "RevertStatement",
																		"src": "3564:46:33"
																	}
																},
																{
																	"expression": {
																		"id": 2037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 2022,
																					"name": "l",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1950,
																					"src": "3671:1:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																						"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																					}
																				},
																				"id": 2025,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3673:6:33",
																				"memberName": "facets",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 998,
																				"src": "3671:8:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
																					"typeString": "mapping(bytes4 => bytes32)"
																				}
																			},
																			"id": 2026,
																			"indexExpression": {
																				"id": 2024,
																				"name": "selector",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1993,
																				"src": "3680:8:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "3671:18:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 2036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 2029,
																							"name": "facetCut",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1957,
																							"src": "3720:8:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
																								"typeString": "struct IDiamondWritableInternal.FacetCut memory"
																							}
																						},
																						"id": 2030,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3729:6:33",
																						"memberName": "target",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2603,
																						"src": "3720:15:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2028,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3712:7:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes20_$",
																						"typeString": "type(bytes20)"
																					},
																					"typeName": {
																						"id": 2027,
																						"name": "bytes20",
																						"nodeType": "ElementaryTypeName",
																						"src": "3712:7:33",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2031,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3712:24:33",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes20",
																					"typeString": "bytes20"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 2034,
																						"name": "selectorCount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1952,
																						"src": "3767:13:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2033,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3759:7:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 2032,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "3759:7:33",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2035,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3759:22:33",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3712:69:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "3671:110:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"id": 2038,
																	"nodeType": "ExpressionStatement",
																	"src": "3671:110:33"
																},
																{
																	"assignments": [
																		2040
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2040,
																			"mutability": "mutable",
																			"name": "selectorInSlotPosition",
																			"nameLocation": "3807:22:33",
																			"nodeType": "VariableDeclaration",
																			"scope": 2089,
																			"src": "3799:30:33",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2039,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3799:7:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2047,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2043,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2041,
																						"name": "selectorCount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1952,
																						"src": "3833:13:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&",
																					"rightExpression": {
																						"hexValue": "37",
																						"id": 2042,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3849:1:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_7_by_1",
																							"typeString": "int_const 7"
																						},
																						"value": "7"
																					},
																					"src": "3833:17:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2044,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3832:19:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "35",
																			"id": 2045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3855:1:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_5_by_1",
																				"typeString": "int_const 5"
																			},
																			"value": "5"
																		},
																		"src": "3832:24:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "3799:57:33"
																},
																{
																	"expression": {
																		"id": 2065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2048,
																			"name": "selectorSlot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1954,
																			"src": "3943:12:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 2064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"id": 2055,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2049,
																							"name": "selectorSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1954,
																							"src": "3979:12:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"id": 2054,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "~",
																							"prefix": true,
																							"src": "4018:48:33",
																							"subExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										},
																										"id": 2052,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 2050,
																											"name": "CLEAR_SELECTOR_MASK",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1775,
																											"src": "4020:19:33",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bytes32",
																												"typeString": "bytes32"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": ">>",
																										"rightExpression": {
																											"id": 2051,
																											"name": "selectorInSlotPosition",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2040,
																											"src": "4043:22:33",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"src": "4020:45:33",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"id": 2053,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "4019:47:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"src": "3979:87:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"id": 2056,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3978:89:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"id": 2062,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"arguments": [
																								{
																									"id": 2059,
																									"name": "selector",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1993,
																									"src": "4099:8:33",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes4",
																										"typeString": "bytes4"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_bytes4",
																										"typeString": "bytes4"
																									}
																								],
																								"id": 2058,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "4091:7:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_bytes32_$",
																									"typeString": "type(bytes32)"
																								},
																								"typeName": {
																									"id": 2057,
																									"name": "bytes32",
																									"nodeType": "ElementaryTypeName",
																									"src": "4091:7:33",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2060,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4091:17:33",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">>",
																						"rightExpression": {
																							"id": 2061,
																							"name": "selectorInSlotPosition",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2040,
																							"src": "4112:22:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4091:43:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"id": 2063,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4090:45:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3978:157:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "3943:192:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"id": 2066,
																	"nodeType": "ExpressionStatement",
																	"src": "3943:192:33"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2067,
																			"name": "selectorInSlotPosition",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2040,
																			"src": "4218:22:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "323234",
																			"id": 2068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4244:3:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_224_by_1",
																				"typeString": "int_const 224"
																			},
																			"value": "224"
																		},
																		"src": "4218:29:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2085,
																	"nodeType": "IfStatement",
																	"src": "4214:164:33",
																	"trueBody": {
																		"id": 2084,
																		"nodeType": "Block",
																		"src": "4249:129:33",
																		"statements": [
																			{
																				"expression": {
																					"id": 2078,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"expression": {
																								"id": 2070,
																								"name": "l",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1950,
																								"src": "4271:1:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																									"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																								}
																							},
																							"id": 2075,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4273:13:33",
																							"memberName": "selectorSlots",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1004,
																							"src": "4271:15:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																								"typeString": "mapping(uint256 => bytes32)"
																							}
																						},
																						"id": 2076,
																						"indexExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2074,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2072,
																								"name": "selectorCount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1952,
																								"src": "4287:13:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": ">>",
																							"rightExpression": {
																								"hexValue": "33",
																								"id": 2073,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4304:1:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_3_by_1",
																									"typeString": "int_const 3"
																								},
																								"value": "3"
																							},
																							"src": "4287:18:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "4271:35:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 2077,
																						"name": "selectorSlot",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1954,
																						"src": "4309:12:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"src": "4271:50:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"id": 2079,
																				"nodeType": "ExpressionStatement",
																				"src": "4271:50:33"
																			},
																			{
																				"expression": {
																					"id": 2082,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2080,
																						"name": "selectorSlot",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1954,
																						"src": "4343:12:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "30",
																						"id": 2081,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4358:1:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "4343:16:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"id": 2083,
																				"nodeType": "ExpressionStatement",
																				"src": "4343:16:33"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"id": 2087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "4396:15:33",
																		"subExpression": {
																			"id": 2086,
																			"name": "selectorCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1952,
																			"src": "4396:13:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2088,
																	"nodeType": "ExpressionStatement",
																	"src": "4396:15:33"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1984,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1982,
																"src": "3331:1:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"expression": {
																		"id": 1985,
																		"name": "facetCut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1957,
																		"src": "3335:8:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
																			"typeString": "struct IDiamondWritableInternal.FacetCut memory"
																		}
																	},
																	"id": 1986,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3344:9:33",
																	"memberName": "selectors",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2609,
																	"src": "3335:18:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																		"typeString": "bytes4[] memory"
																	}
																},
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3354:6:33",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3335:25:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3331:29:33",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2090,
														"initializationExpression": {
															"assignments": [
																1982
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1982,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "3328:1:33",
																	"nodeType": "VariableDeclaration",
																	"scope": 2090,
																	"src": "3320:9:33",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1981,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3320:7:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1983,
															"nodeType": "VariableDeclarationStatement",
															"src": "3320:9:33"
														},
														"loopExpression": {
															"expression": {
																"id": 1990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "3362:3:33",
																"subExpression": {
																	"id": 1989,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1982,
																	"src": "3362:1:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1991,
															"nodeType": "ExpressionStatement",
															"src": "3362:3:33"
														},
														"nodeType": "ForStatement",
														"src": "3315:1111:33"
													},
													{
														"expression": {
															"components": [
																{
																	"id": 2091,
																	"name": "selectorCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "4448:13:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2092,
																	"name": "selectorSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1954,
																	"src": "4463:12:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"id": 2093,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4447:29:33",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$",
																"typeString": "tuple(uint256,bytes32)"
															}
														},
														"functionReturnParameters": 1963,
														"id": 2094,
														"nodeType": "Return",
														"src": "4440:36:33"
													}
												]
											}
										]
									},
									"id": 2097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addFacetSelectors",
									"nameLocation": "2907:18:33",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "l",
												"nameLocation": "2969:1:33",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "2935:35:33",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
													"typeString": "struct DiamondBaseStorage.Layout"
												},
												"typeName": {
													"id": 1949,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1948,
														"name": "DiamondBaseStorage.Layout",
														"nameLocations": [
															"2935:18:33",
															"2954:6:33"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1007,
														"src": "2935:25:33"
													},
													"referencedDeclaration": 1007,
													"src": "2935:25:33",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
														"typeString": "struct DiamondBaseStorage.Layout"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "selectorCount",
												"nameLocation": "2988:13:33",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "2980:21:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2980:7:33",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "selectorSlot",
												"nameLocation": "3019:12:33",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "3011:20:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1953,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3011:7:33",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "facetCut",
												"nameLocation": "3057:8:33",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "3041:24:33",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
													"typeString": "struct IDiamondWritableInternal.FacetCut"
												},
												"typeName": {
													"id": 1956,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1955,
														"name": "FacetCut",
														"nameLocations": [
															"3041:8:33"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2610,
														"src": "3041:8:33"
													},
													"referencedDeclaration": 2610,
													"src": "3041:8:33",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FacetCut_$2610_storage_ptr",
														"typeString": "struct IDiamondWritableInternal.FacetCut"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2925:146:33"
									},
									"returnParameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "3090:7:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3090:7:33",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "3099:7:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1961,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3099:7:33",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3089:18:33"
									},
									"scope": 2549,
									"src": "2898:1595:33",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2384,
										"nodeType": "Block",
										"src": "4712:3461:33",
										"statements": [
											{
												"id": 2383,
												"nodeType": "UncheckedBlock",
												"src": "4722:3445:33",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2114,
																	"name": "facetCut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2107,
																	"src": "4750:8:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
																		"typeString": "struct IDiamondWritableInternal.FacetCut memory"
																	}
																},
																"id": 2115,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4759:6:33",
																"memberName": "target",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2603,
																"src": "4750:15:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4777:1:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4769:7:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2116,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4769:7:33",
																		"typeDescriptions": {}
																	}
																},
																"id": 2119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4769:10:33",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4750:29:33",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2124,
														"nodeType": "IfStatement",
														"src": "4746:103:33",
														"trueBody": {
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2121,
																	"name": "DiamondWritable__RemoveTargetNotZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2589,
																	"src": "4804:43:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4804:45:33",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2123,
															"nodeType": "RevertStatement",
															"src": "4797:52:33"
														}
													},
													{
														"assignments": [
															2126
														],
														"declarations": [
															{
																"constant": false,
																"id": 2126,
																"mutability": "mutable",
																"name": "selectorSlotCount",
																"nameLocation": "4872:17:33",
																"nodeType": "VariableDeclaration",
																"scope": 2383,
																"src": "4864:25:33",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2125,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4864:7:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2130,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2127,
																"name": "selectorCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2102,
																"src": "4892:13:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "33",
																"id": 2128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "4892:18:33",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4864:46:33"
													},
													{
														"assignments": [
															2132
														],
														"declarations": [
															{
																"constant": false,
																"id": 2132,
																"mutability": "mutable",
																"name": "selectorInSlotIndex",
																"nameLocation": "4932:19:33",
																"nodeType": "VariableDeclaration",
																"scope": 2383,
																"src": "4924:27:33",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2131,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4924:7:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2136,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2133,
																"name": "selectorCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2102,
																"src": "4954:13:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"hexValue": "37",
																"id": 2134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4970:1:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_7_by_1",
																	"typeString": "int_const 7"
																},
																"value": "7"
															},
															"src": "4954:17:33",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4924:47:33"
													},
													{
														"body": {
															"id": 2368,
															"nodeType": "Block",
															"src": "5038:2991:33",
															"statements": [
																{
																	"assignments": [
																		2149
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2149,
																			"mutability": "mutable",
																			"name": "selector",
																			"nameLocation": "5063:8:33",
																			"nodeType": "VariableDeclaration",
																			"scope": 2368,
																			"src": "5056:15:33",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			"typeName": {
																				"id": 2148,
																				"name": "bytes4",
																				"nodeType": "ElementaryTypeName",
																				"src": "5056:6:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2154,
																	"initialValue": {
																		"baseExpression": {
																			"expression": {
																				"id": 2150,
																				"name": "facetCut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2107,
																				"src": "5074:8:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
																					"typeString": "struct IDiamondWritableInternal.FacetCut memory"
																				}
																			},
																			"id": 2151,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5083:9:33",
																			"memberName": "selectors",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2609,
																			"src": "5074:18:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																				"typeString": "bytes4[] memory"
																			}
																		},
																		"id": 2153,
																		"indexExpression": {
																			"id": 2152,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2138,
																			"src": "5093:1:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5074:21:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "5056:39:33"
																},
																{
																	"assignments": [
																		2156
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2156,
																			"mutability": "mutable",
																			"name": "oldFacet",
																			"nameLocation": "5121:8:33",
																			"nodeType": "VariableDeclaration",
																			"scope": 2368,
																			"src": "5113:16:33",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"typeName": {
																				"id": 2155,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "5113:7:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2161,
																	"initialValue": {
																		"baseExpression": {
																			"expression": {
																				"id": 2157,
																				"name": "l",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2100,
																				"src": "5132:1:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																					"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																				}
																			},
																			"id": 2158,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5134:6:33",
																			"memberName": "facets",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 998,
																			"src": "5132:8:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
																				"typeString": "mapping(bytes4 => bytes32)"
																			}
																		},
																		"id": 2160,
																		"indexExpression": {
																			"id": 2159,
																			"name": "selector",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2149,
																			"src": "5141:8:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5132:18:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "5113:37:33"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2166,
																							"name": "oldFacet",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2156,
																							"src": "5189:8:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 2165,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5181:7:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes20_$",
																							"typeString": "type(bytes20)"
																						},
																						"typeName": {
																							"id": 2164,
																							"name": "bytes20",
																							"nodeType": "ElementaryTypeName",
																							"src": "5181:7:33",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2167,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5181:17:33",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes20",
																						"typeString": "bytes20"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes20",
																						"typeString": "bytes20"
																					}
																				],
																				"id": 2163,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5173:7:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2162,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5173:7:33",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5173:26:33",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2171,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5211:1:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5203:7:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2169,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5203:7:33",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5203:10:33",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "5173:40:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2177,
																	"nodeType": "IfStatement",
																	"src": "5169:108:33",
																	"trueBody": {
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2174,
																				"name": "DiamondWritable__SelectorNotFound",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2597,
																				"src": "5242:33:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5242:35:33",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2176,
																		"nodeType": "RevertStatement",
																		"src": "5235:42:33"
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2182,
																							"name": "oldFacet",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2156,
																							"src": "5316:8:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 2181,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5308:7:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes20_$",
																							"typeString": "type(bytes20)"
																						},
																						"typeName": {
																							"id": 2180,
																							"name": "bytes20",
																							"nodeType": "ElementaryTypeName",
																							"src": "5308:7:33",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2183,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5308:17:33",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes20",
																						"typeString": "bytes20"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes20",
																						"typeString": "bytes20"
																					}
																				],
																				"id": 2179,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5300:7:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2178,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5300:7:33",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5300:26:33",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2187,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "5338:4:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_DiamondWritableInternal_$2549",
																						"typeString": "contract DiamondWritableInternal"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_DiamondWritableInternal_$2549",
																						"typeString": "contract DiamondWritableInternal"
																					}
																				],
																				"id": 2186,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5330:7:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2185,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5330:7:33",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5330:13:33",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "5300:43:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2193,
																	"nodeType": "IfStatement",
																	"src": "5296:114:33",
																	"trueBody": {
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2190,
																				"name": "DiamondWritable__SelectorIsImmutable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2595,
																				"src": "5372:36:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5372:38:33",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2192,
																		"nodeType": "RevertStatement",
																		"src": "5365:45:33"
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 2196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2194,
																			"name": "selectorSlot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2104,
																			"src": "5433:12:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5449:1:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5433:17:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 2215,
																		"nodeType": "Block",
																		"src": "5634:62:33",
																		"statements": [
																			{
																				"expression": {
																					"id": 2213,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "--",
																					"prefix": false,
																					"src": "5656:21:33",
																					"subExpression": {
																						"id": 2212,
																						"name": "selectorInSlotIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2132,
																						"src": "5656:19:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2214,
																				"nodeType": "ExpressionStatement",
																				"src": "5656:21:33"
																			}
																		]
																	},
																	"id": 2216,
																	"nodeType": "IfStatement",
																	"src": "5429:267:33",
																	"trueBody": {
																		"id": 2211,
																		"nodeType": "Block",
																		"src": "5452:176:33",
																		"statements": [
																			{
																				"expression": {
																					"id": 2198,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "--",
																					"prefix": false,
																					"src": "5474:19:33",
																					"subExpression": {
																						"id": 2197,
																						"name": "selectorSlotCount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2126,
																						"src": "5474:17:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2199,
																				"nodeType": "ExpressionStatement",
																				"src": "5474:19:33"
																			},
																			{
																				"expression": {
																					"id": 2205,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2200,
																						"name": "selectorSlot",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2104,
																						"src": "5515:12:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"baseExpression": {
																							"expression": {
																								"id": 2201,
																								"name": "l",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2100,
																								"src": "5530:1:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																									"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																								}
																							},
																							"id": 2202,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5532:13:33",
																							"memberName": "selectorSlots",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1004,
																							"src": "5530:15:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																								"typeString": "mapping(uint256 => bytes32)"
																							}
																						},
																						"id": 2204,
																						"indexExpression": {
																							"id": 2203,
																							"name": "selectorSlotCount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2126,
																							"src": "5546:17:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "5530:34:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"src": "5515:49:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"id": 2206,
																				"nodeType": "ExpressionStatement",
																				"src": "5515:49:33"
																			},
																			{
																				"expression": {
																					"id": 2209,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2207,
																						"name": "selectorInSlotIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2132,
																						"src": "5586:19:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "37",
																						"id": 2208,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5608:1:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_7_by_1",
																							"typeString": "int_const 7"
																						},
																						"value": "7"
																					},
																					"src": "5586:23:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2210,
																				"nodeType": "ExpressionStatement",
																				"src": "5586:23:33"
																			}
																		]
																	}
																},
																{
																	"assignments": [
																		2218
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2218,
																			"mutability": "mutable",
																			"name": "lastSelector",
																			"nameLocation": "5721:12:33",
																			"nodeType": "VariableDeclaration",
																			"scope": 2368,
																			"src": "5714:19:33",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			"typeName": {
																				"id": 2217,
																				"name": "bytes4",
																				"nodeType": "ElementaryTypeName",
																				"src": "5714:6:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2219,
																	"nodeType": "VariableDeclarationStatement",
																	"src": "5714:19:33"
																},
																{
																	"assignments": [
																		2221
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2221,
																			"mutability": "mutable",
																			"name": "oldSelectorsSlotCount",
																			"nameLocation": "5759:21:33",
																			"nodeType": "VariableDeclaration",
																			"scope": 2368,
																			"src": "5751:29:33",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2220,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "5751:7:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2222,
																	"nodeType": "VariableDeclarationStatement",
																	"src": "5751:29:33"
																},
																{
																	"assignments": [
																		2224
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2224,
																			"mutability": "mutable",
																			"name": "oldSelectorInSlotPosition",
																			"nameLocation": "5806:25:33",
																			"nodeType": "VariableDeclaration",
																			"scope": 2368,
																			"src": "5798:33:33",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2223,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "5798:7:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2225,
																	"nodeType": "VariableDeclarationStatement",
																	"src": "5798:33:33"
																},
																{
																	"id": 2293,
																	"nodeType": "Block",
																	"src": "5919:803:33",
																	"statements": [
																		{
																			"expression": {
																				"id": 2236,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 2226,
																					"name": "lastSelector",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2218,
																					"src": "6012:12:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"id": 2234,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2229,
																								"name": "selectorSlot",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2104,
																								"src": "6059:12:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 2232,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 2230,
																											"name": "selectorInSlotIndex",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2132,
																											"src": "6076:19:33",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "<<",
																										"rightExpression": {
																											"hexValue": "35",
																											"id": 2231,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "6099:1:33",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_5_by_1",
																												"typeString": "int_const 5"
																											},
																											"value": "5"
																										},
																										"src": "6076:24:33",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 2233,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "6075:26:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "6059:42:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 2228,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6027:6:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes4_$",
																							"typeString": "type(bytes4)"
																						},
																						"typeName": {
																							"id": 2227,
																							"name": "bytes4",
																							"nodeType": "ElementaryTypeName",
																							"src": "6027:6:33",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2235,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6027:96:33",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"src": "6012:111:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			"id": 2237,
																			"nodeType": "ExpressionStatement",
																			"src": "6012:111:33"
																		},
																		{
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"id": 2240,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2238,
																					"name": "lastSelector",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2218,
																					"src": "6150:12:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "!=",
																				"rightExpression": {
																					"id": 2239,
																					"name": "selector",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2149,
																					"src": "6166:8:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"src": "6150:24:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 2261,
																			"nodeType": "IfStatement",
																			"src": "6146:292:33",
																			"trueBody": {
																				"id": 2260,
																				"nodeType": "Block",
																				"src": "6176:262:33",
																				"statements": [
																					{
																						"expression": {
																							"id": 2258,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"baseExpression": {
																									"expression": {
																										"id": 2241,
																										"name": "l",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2100,
																										"src": "6269:1:33",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																											"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																										}
																									},
																									"id": 2244,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "6271:6:33",
																									"memberName": "facets",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 998,
																									"src": "6269:8:33",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
																										"typeString": "mapping(bytes4 => bytes32)"
																									}
																								},
																								"id": 2245,
																								"indexExpression": {
																									"id": 2243,
																									"name": "lastSelector",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2218,
																									"src": "6278:12:33",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes4",
																										"typeString": "bytes4"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": true,
																								"nodeType": "IndexAccess",
																								"src": "6269:22:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "=",
																							"rightHandSide": {
																								"commonType": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								},
																								"id": 2257,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"components": [
																										{
																											"commonType": {
																												"typeIdentifier": "t_bytes32",
																												"typeString": "bytes32"
																											},
																											"id": 2248,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"id": 2246,
																												"name": "oldFacet",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2156,
																												"src": "6323:8:33",
																												"typeDescriptions": {
																													"typeIdentifier": "t_bytes32",
																													"typeString": "bytes32"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "&",
																											"rightExpression": {
																												"id": 2247,
																												"name": "CLEAR_ADDRESS_MASK",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1764,
																												"src": "6334:18:33",
																												"typeDescriptions": {
																													"typeIdentifier": "t_bytes32",
																													"typeString": "bytes32"
																												}
																											},
																											"src": "6323:29:33",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bytes32",
																												"typeString": "bytes32"
																											}
																										}
																									],
																									"id": 2249,
																									"isConstant": false,
																									"isInlineArray": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "TupleExpression",
																									"src": "6322:31:33",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "|",
																								"rightExpression": {
																									"arguments": [
																										{
																											"baseExpression": {
																												"expression": {
																													"id": 2252,
																													"name": "l",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 2100,
																													"src": "6392:1:33",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																														"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																													}
																												},
																												"id": 2253,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "6394:6:33",
																												"memberName": "facets",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 998,
																												"src": "6392:8:33",
																												"typeDescriptions": {
																													"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
																													"typeString": "mapping(bytes4 => bytes32)"
																												}
																											},
																											"id": 2255,
																											"indexExpression": {
																												"id": 2254,
																												"name": "lastSelector",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2218,
																												"src": "6401:12:33",
																												"typeDescriptions": {
																													"typeIdentifier": "t_bytes4",
																													"typeString": "bytes4"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "6392:22:33",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bytes32",
																												"typeString": "bytes32"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_bytes32",
																												"typeString": "bytes32"
																											}
																										],
																										"id": 2251,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "6384:7:33",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_bytes20_$",
																											"typeString": "type(bytes20)"
																										},
																										"typeName": {
																											"id": 2250,
																											"name": "bytes20",
																											"nodeType": "ElementaryTypeName",
																											"src": "6384:7:33",
																											"typeDescriptions": {}
																										}
																									},
																									"id": 2256,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "typeConversion",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "6384:31:33",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes20",
																										"typeString": "bytes20"
																									}
																								},
																								"src": "6322:93:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"src": "6269:146:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"id": 2259,
																						"nodeType": "ExpressionStatement",
																						"src": "6269:146:33"
																					}
																				]
																			}
																		},
																		{
																			"expression": {
																				"id": 2266,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "delete",
																				"prefix": true,
																				"src": "6460:25:33",
																				"subExpression": {
																					"baseExpression": {
																						"expression": {
																							"id": 2262,
																							"name": "l",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2100,
																							"src": "6467:1:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																								"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																							}
																						},
																						"id": 2263,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "6469:6:33",
																						"memberName": "facets",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 998,
																						"src": "6467:8:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
																							"typeString": "mapping(bytes4 => bytes32)"
																						}
																					},
																					"id": 2265,
																					"indexExpression": {
																						"id": 2264,
																						"name": "selector",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2149,
																						"src": "6476:8:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"nodeType": "IndexAccess",
																					"src": "6467:18:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 2267,
																			"nodeType": "ExpressionStatement",
																			"src": "6460:25:33"
																		},
																		{
																			"assignments": [
																				2269
																			],
																			"declarations": [
																				{
																					"constant": false,
																					"id": 2269,
																					"mutability": "mutable",
																					"name": "oldSelectorCount",
																					"nameLocation": "6515:16:33",
																					"nodeType": "VariableDeclaration",
																					"scope": 2293,
																					"src": "6507:24:33",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"typeName": {
																						"id": 2268,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "6507:7:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"visibility": "internal"
																				}
																			],
																			"id": 2277,
																			"initialValue": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 2274,
																								"name": "oldFacet",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2156,
																								"src": "6549:8:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							],
																							"id": 2273,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "6541:7:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 2272,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "6541:7:33",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 2275,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6541:17:33",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2271,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6534:6:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint16_$",
																						"typeString": "type(uint16)"
																					},
																					"typeName": {
																						"id": 2270,
																						"name": "uint16",
																						"nodeType": "ElementaryTypeName",
																						"src": "6534:6:33",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6534:25:33",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"nodeType": "VariableDeclarationStatement",
																			"src": "6507:52:33"
																		},
																		{
																			"expression": {
																				"id": 2282,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 2278,
																					"name": "oldSelectorsSlotCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2221,
																					"src": "6581:21:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2281,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2279,
																						"name": "oldSelectorCount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2269,
																						"src": "6605:16:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">>",
																					"rightExpression": {
																						"hexValue": "33",
																						"id": 2280,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6625:1:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_3_by_1",
																							"typeString": "int_const 3"
																						},
																						"value": "3"
																					},
																					"src": "6605:21:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6581:45:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2283,
																			"nodeType": "ExpressionStatement",
																			"src": "6581:45:33"
																		},
																		{
																			"expression": {
																				"id": 2291,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 2284,
																					"name": "oldSelectorInSlotPosition",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2224,
																					"src": "6648:25:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2290,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2287,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2285,
																									"name": "oldSelectorCount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2269,
																									"src": "6677:16:33",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "&",
																								"rightExpression": {
																									"hexValue": "37",
																									"id": 2286,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "6696:1:33",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_7_by_1",
																										"typeString": "int_const 7"
																									},
																									"value": "7"
																								},
																								"src": "6677:20:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2288,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "6676:22:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"hexValue": "35",
																						"id": 2289,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6702:1:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_5_by_1",
																							"typeString": "int_const 5"
																						},
																						"value": "5"
																					},
																					"src": "6676:27:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6648:55:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2292,
																			"nodeType": "ExpressionStatement",
																			"src": "6648:55:33"
																		}
																	]
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2294,
																			"name": "oldSelectorsSlotCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2221,
																			"src": "6744:21:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2295,
																			"name": "selectorSlotCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2126,
																			"src": "6769:17:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6744:42:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 2351,
																		"nodeType": "Block",
																		"src": "7460:387:33",
																		"statements": [
																			{
																				"expression": {
																					"id": 2349,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2332,
																						"name": "selectorSlot",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2104,
																						"src": "7582:12:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"id": 2348,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									},
																									"id": 2339,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 2333,
																										"name": "selectorSlot",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2104,
																										"src": "7622:12:33",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "&",
																									"rightExpression": {
																										"id": 2338,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "UnaryOperation",
																										"operator": "~",
																										"prefix": true,
																										"src": "7665:83:33",
																										"subExpression": {
																											"components": [
																												{
																													"commonType": {
																														"typeIdentifier": "t_bytes32",
																														"typeString": "bytes32"
																													},
																													"id": 2336,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"leftExpression": {
																														"id": 2334,
																														"name": "CLEAR_SELECTOR_MASK",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1775,
																														"src": "7667:19:33",
																														"typeDescriptions": {
																															"typeIdentifier": "t_bytes32",
																															"typeString": "bytes32"
																														}
																													},
																													"nodeType": "BinaryOperation",
																													"operator": ">>",
																													"rightExpression": {
																														"id": 2335,
																														"name": "oldSelectorInSlotPosition",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 2224,
																														"src": "7722:25:33",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"src": "7667:80:33",
																													"typeDescriptions": {
																														"typeIdentifier": "t_bytes32",
																														"typeString": "bytes32"
																													}
																												}
																											],
																											"id": 2337,
																											"isConstant": false,
																											"isInlineArray": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "TupleExpression",
																											"src": "7666:82:33",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bytes32",
																												"typeString": "bytes32"
																											}
																										},
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									},
																									"src": "7622:126:33",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								}
																							],
																							"id": 2340,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "7621:128:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "|",
																						"rightExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									},
																									"id": 2346,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"arguments": [
																											{
																												"id": 2343,
																												"name": "lastSelector",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2218,
																												"src": "7785:12:33",
																												"typeDescriptions": {
																													"typeIdentifier": "t_bytes4",
																													"typeString": "bytes4"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_bytes4",
																													"typeString": "bytes4"
																												}
																											],
																											"id": 2342,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"nodeType": "ElementaryTypeNameExpression",
																											"src": "7777:7:33",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_bytes32_$",
																												"typeString": "type(bytes32)"
																											},
																											"typeName": {
																												"id": 2341,
																												"name": "bytes32",
																												"nodeType": "ElementaryTypeName",
																												"src": "7777:7:33",
																												"typeDescriptions": {}
																											}
																										},
																										"id": 2344,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "typeConversion",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "7777:21:33",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": ">>",
																									"rightExpression": {
																										"id": 2345,
																										"name": "oldSelectorInSlotPosition",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2224,
																										"src": "7802:25:33",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "7777:50:33",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								}
																							],
																							"id": 2347,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "7776:52:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"src": "7621:207:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"src": "7582:246:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"id": 2350,
																				"nodeType": "ExpressionStatement",
																				"src": "7582:246:33"
																			}
																		]
																	},
																	"id": 2352,
																	"nodeType": "IfStatement",
																	"src": "6740:1107:33",
																	"trueBody": {
																		"id": 2331,
																		"nodeType": "Block",
																		"src": "6788:666:33",
																		"statements": [
																			{
																				"assignments": [
																					2298
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 2298,
																						"mutability": "mutable",
																						"name": "oldSelectorSlot",
																						"nameLocation": "6818:15:33",
																						"nodeType": "VariableDeclaration",
																						"scope": 2331,
																						"src": "6810:23:33",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"typeName": {
																							"id": 2297,
																							"name": "bytes32",
																							"nodeType": "ElementaryTypeName",
																							"src": "6810:7:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 2303,
																				"initialValue": {
																					"baseExpression": {
																						"expression": {
																							"id": 2299,
																							"name": "l",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2100,
																							"src": "6836:1:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																								"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																							}
																						},
																						"id": 2300,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "6838:13:33",
																						"memberName": "selectorSlots",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1004,
																						"src": "6836:15:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																							"typeString": "mapping(uint256 => bytes32)"
																						}
																					},
																					"id": 2302,
																					"indexExpression": {
																						"id": 2301,
																						"name": "oldSelectorsSlotCount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2221,
																						"src": "6877:21:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6836:84:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "6810:110:33"
																			},
																			{
																				"expression": {
																					"id": 2321,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2304,
																						"name": "oldSelectorSlot",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2298,
																						"src": "7043:15:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"id": 2320,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									},
																									"id": 2311,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 2305,
																										"name": "oldSelectorSlot",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2298,
																										"src": "7086:15:33",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "&",
																									"rightExpression": {
																										"id": 2310,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "UnaryOperation",
																										"operator": "~",
																										"prefix": true,
																										"src": "7132:83:33",
																										"subExpression": {
																											"components": [
																												{
																													"commonType": {
																														"typeIdentifier": "t_bytes32",
																														"typeString": "bytes32"
																													},
																													"id": 2308,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"leftExpression": {
																														"id": 2306,
																														"name": "CLEAR_SELECTOR_MASK",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1775,
																														"src": "7134:19:33",
																														"typeDescriptions": {
																															"typeIdentifier": "t_bytes32",
																															"typeString": "bytes32"
																														}
																													},
																													"nodeType": "BinaryOperation",
																													"operator": ">>",
																													"rightExpression": {
																														"id": 2307,
																														"name": "oldSelectorInSlotPosition",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 2224,
																														"src": "7189:25:33",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"src": "7134:80:33",
																													"typeDescriptions": {
																														"typeIdentifier": "t_bytes32",
																														"typeString": "bytes32"
																													}
																												}
																											],
																											"id": 2309,
																											"isConstant": false,
																											"isInlineArray": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "TupleExpression",
																											"src": "7133:82:33",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bytes32",
																												"typeString": "bytes32"
																											}
																										},
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									},
																									"src": "7086:129:33",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								}
																							],
																							"id": 2312,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "7085:131:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "|",
																						"rightExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									},
																									"id": 2318,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"arguments": [
																											{
																												"id": 2315,
																												"name": "lastSelector",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2218,
																												"src": "7252:12:33",
																												"typeDescriptions": {
																													"typeIdentifier": "t_bytes4",
																													"typeString": "bytes4"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_bytes4",
																													"typeString": "bytes4"
																												}
																											],
																											"id": 2314,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"nodeType": "ElementaryTypeNameExpression",
																											"src": "7244:7:33",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_bytes32_$",
																												"typeString": "type(bytes32)"
																											},
																											"typeName": {
																												"id": 2313,
																												"name": "bytes32",
																												"nodeType": "ElementaryTypeName",
																												"src": "7244:7:33",
																												"typeDescriptions": {}
																											}
																										},
																										"id": 2316,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "typeConversion",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "7244:21:33",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": ">>",
																									"rightExpression": {
																										"id": 2317,
																										"name": "oldSelectorInSlotPosition",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2224,
																										"src": "7269:25:33",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "7244:50:33",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								}
																							],
																							"id": 2319,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "7243:52:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"src": "7085:210:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"src": "7043:252:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"id": 2322,
																				"nodeType": "ExpressionStatement",
																				"src": "7043:252:33"
																			},
																			{
																				"expression": {
																					"id": 2329,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"expression": {
																								"id": 2323,
																								"name": "l",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2100,
																								"src": "7379:1:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																									"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																								}
																							},
																							"id": 2326,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "7381:13:33",
																							"memberName": "selectorSlots",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1004,
																							"src": "7379:15:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																								"typeString": "mapping(uint256 => bytes32)"
																							}
																						},
																						"id": 2327,
																						"indexExpression": {
																							"id": 2325,
																							"name": "oldSelectorsSlotCount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2221,
																							"src": "7395:21:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "7379:38:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 2328,
																						"name": "oldSelectorSlot",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2298,
																						"src": "7420:15:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"src": "7379:56:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"id": 2330,
																				"nodeType": "ExpressionStatement",
																				"src": "7379:56:33"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2353,
																			"name": "selectorInSlotIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2132,
																			"src": "7869:19:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7892:1:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "7869:24:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2367,
																	"nodeType": "IfStatement",
																	"src": "7865:150:33",
																	"trueBody": {
																		"id": 2366,
																		"nodeType": "Block",
																		"src": "7895:120:33",
																		"statements": [
																			{
																				"expression": {
																					"id": 2360,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "delete",
																					"prefix": true,
																					"src": "7917:41:33",
																					"subExpression": {
																						"baseExpression": {
																							"expression": {
																								"id": 2356,
																								"name": "l",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2100,
																								"src": "7924:1:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																									"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																								}
																							},
																							"id": 2357,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "7926:13:33",
																							"memberName": "selectorSlots",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1004,
																							"src": "7924:15:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																								"typeString": "mapping(uint256 => bytes32)"
																							}
																						},
																						"id": 2359,
																						"indexExpression": {
																							"id": 2358,
																							"name": "selectorSlotCount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2126,
																							"src": "7940:17:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "7924:34:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2361,
																				"nodeType": "ExpressionStatement",
																				"src": "7917:41:33"
																			},
																			{
																				"expression": {
																					"id": 2364,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2362,
																						"name": "selectorSlot",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2104,
																						"src": "7980:12:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "30",
																						"id": 2363,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "7995:1:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "7980:16:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"id": 2365,
																				"nodeType": "ExpressionStatement",
																				"src": "7980:16:33"
																			}
																		]
																	}
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2140,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2138,
																"src": "5002:1:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"expression": {
																		"id": 2141,
																		"name": "facetCut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2107,
																		"src": "5006:8:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
																			"typeString": "struct IDiamondWritableInternal.FacetCut memory"
																		}
																	},
																	"id": 2142,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5015:9:33",
																	"memberName": "selectors",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2609,
																	"src": "5006:18:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																		"typeString": "bytes4[] memory"
																	}
																},
																"id": 2143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5025:6:33",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5006:25:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5002:29:33",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2369,
														"initializationExpression": {
															"assignments": [
																2138
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2138,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "4999:1:33",
																	"nodeType": "VariableDeclaration",
																	"scope": 2369,
																	"src": "4991:9:33",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2137,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4991:7:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2139,
															"nodeType": "VariableDeclarationStatement",
															"src": "4991:9:33"
														},
														"loopExpression": {
															"expression": {
																"id": 2146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "5033:3:33",
																"subExpression": {
																	"id": 2145,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2138,
																	"src": "5033:1:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2147,
															"nodeType": "ExpressionStatement",
															"src": "5033:3:33"
														},
														"nodeType": "ForStatement",
														"src": "4986:3043:33"
													},
													{
														"expression": {
															"id": 2377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2370,
																"name": "selectorCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2102,
																"src": "8043:13:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2371,
																				"name": "selectorSlotCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2126,
																				"src": "8060:17:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"hexValue": "33",
																				"id": 2372,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8081:1:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"value": "3"
																			},
																			"src": "8060:22:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2374,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8059:24:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "|",
																"rightExpression": {
																	"id": 2375,
																	"name": "selectorInSlotIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2132,
																	"src": "8086:19:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8059:46:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8043:62:33",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2378,
														"nodeType": "ExpressionStatement",
														"src": "8043:62:33"
													},
													{
														"expression": {
															"components": [
																{
																	"id": 2379,
																	"name": "selectorCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2102,
																	"src": "8128:13:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2380,
																	"name": "selectorSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2104,
																	"src": "8143:12:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"id": 2381,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8127:29:33",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$",
																"typeString": "tuple(uint256,bytes32)"
															}
														},
														"functionReturnParameters": 2113,
														"id": 2382,
														"nodeType": "Return",
														"src": "8120:36:33"
													}
												]
											}
										]
									},
									"id": 2385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeFacetSelectors",
									"nameLocation": "4508:21:33",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "l",
												"nameLocation": "4573:1:33",
												"nodeType": "VariableDeclaration",
												"scope": 2385,
												"src": "4539:35:33",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
													"typeString": "struct DiamondBaseStorage.Layout"
												},
												"typeName": {
													"id": 2099,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2098,
														"name": "DiamondBaseStorage.Layout",
														"nameLocations": [
															"4539:18:33",
															"4558:6:33"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1007,
														"src": "4539:25:33"
													},
													"referencedDeclaration": 1007,
													"src": "4539:25:33",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
														"typeString": "struct DiamondBaseStorage.Layout"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "selectorCount",
												"nameLocation": "4592:13:33",
												"nodeType": "VariableDeclaration",
												"scope": 2385,
												"src": "4584:21:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4584:7:33",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "selectorSlot",
												"nameLocation": "4623:12:33",
												"nodeType": "VariableDeclaration",
												"scope": 2385,
												"src": "4615:20:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2103,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4615:7:33",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "facetCut",
												"nameLocation": "4661:8:33",
												"nodeType": "VariableDeclaration",
												"scope": 2385,
												"src": "4645:24:33",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
													"typeString": "struct IDiamondWritableInternal.FacetCut"
												},
												"typeName": {
													"id": 2106,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2105,
														"name": "FacetCut",
														"nameLocations": [
															"4645:8:33"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2610,
														"src": "4645:8:33"
													},
													"referencedDeclaration": 2610,
													"src": "4645:8:33",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FacetCut_$2610_storage_ptr",
														"typeString": "struct IDiamondWritableInternal.FacetCut"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4529:146:33"
									},
									"returnParameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2385,
												"src": "4694:7:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4694:7:33",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2385,
												"src": "4703:7:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2111,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4703:7:33",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4693:18:33"
									},
									"scope": 2549,
									"src": "4499:3674:33",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2486,
										"nodeType": "Block",
										"src": "8305:954:33",
										"statements": [
											{
												"id": 2485,
												"nodeType": "UncheckedBlock",
												"src": "8315:938:33",
												"statements": [
													{
														"condition": {
															"id": 2398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "8343:29:33",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 2394,
																			"name": "facetCut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2391,
																			"src": "8344:8:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
																				"typeString": "struct IDiamondWritableInternal.FacetCut memory"
																			}
																		},
																		"id": 2395,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8353:6:33",
																		"memberName": "target",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2603,
																		"src": "8344:15:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 2396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8360:10:33",
																	"memberName": "isContract",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2659,
																	"src": "8344:26:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 2397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8344:28:33",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2402,
														"nodeType": "IfStatement",
														"src": "8339:92:33",
														"trueBody": {
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2399,
																	"name": "DiamondWritable__TargetHasNoCode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2601,
																	"src": "8397:32:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8397:34:33",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2401,
															"nodeType": "RevertStatement",
															"src": "8390:41:33"
														}
													},
													{
														"body": {
															"id": 2483,
															"nodeType": "Block",
															"src": "8498:745:33",
															"statements": [
																{
																	"assignments": [
																		2415
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2415,
																			"mutability": "mutable",
																			"name": "selector",
																			"nameLocation": "8523:8:33",
																			"nodeType": "VariableDeclaration",
																			"scope": 2483,
																			"src": "8516:15:33",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			"typeName": {
																				"id": 2414,
																				"name": "bytes4",
																				"nodeType": "ElementaryTypeName",
																				"src": "8516:6:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2420,
																	"initialValue": {
																		"baseExpression": {
																			"expression": {
																				"id": 2416,
																				"name": "facetCut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2391,
																				"src": "8534:8:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
																					"typeString": "struct IDiamondWritableInternal.FacetCut memory"
																				}
																			},
																			"id": 2417,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8543:9:33",
																			"memberName": "selectors",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2609,
																			"src": "8534:18:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																				"typeString": "bytes4[] memory"
																			}
																		},
																		"id": 2419,
																		"indexExpression": {
																			"id": 2418,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2404,
																			"src": "8553:1:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8534:21:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "8516:39:33"
																},
																{
																	"assignments": [
																		2422
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2422,
																			"mutability": "mutable",
																			"name": "oldFacet",
																			"nameLocation": "8581:8:33",
																			"nodeType": "VariableDeclaration",
																			"scope": 2483,
																			"src": "8573:16:33",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"typeName": {
																				"id": 2421,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "8573:7:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2427,
																	"initialValue": {
																		"baseExpression": {
																			"expression": {
																				"id": 2423,
																				"name": "l",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2388,
																				"src": "8592:1:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																					"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																				}
																			},
																			"id": 2424,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8594:6:33",
																			"memberName": "facets",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 998,
																			"src": "8592:8:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
																				"typeString": "mapping(bytes4 => bytes32)"
																			}
																		},
																		"id": 2426,
																		"indexExpression": {
																			"id": 2425,
																			"name": "selector",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2415,
																			"src": "8601:8:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8592:18:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "8573:37:33"
																},
																{
																	"assignments": [
																		2429
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2429,
																			"mutability": "mutable",
																			"name": "oldFacetAddress",
																			"nameLocation": "8636:15:33",
																			"nodeType": "VariableDeclaration",
																			"scope": 2483,
																			"src": "8628:23:33",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"typeName": {
																				"id": 2428,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8628:7:33",
																				"stateMutability": "nonpayable",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2437,
																	"initialValue": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 2434,
																						"name": "oldFacet",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2422,
																						"src": "8670:8:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 2433,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8662:7:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes20_$",
																						"typeString": "type(bytes20)"
																					},
																					"typeName": {
																						"id": 2432,
																						"name": "bytes20",
																						"nodeType": "ElementaryTypeName",
																						"src": "8662:7:33",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2435,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8662:17:33",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes20",
																					"typeString": "bytes20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes20",
																					"typeString": "bytes20"
																				}
																			],
																			"id": 2431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8654:7:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2430,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8654:7:33",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8654:26:33",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "8628:52:33"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2438,
																			"name": "oldFacetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2429,
																			"src": "8703:15:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2441,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8730:1:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2440,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8722:7:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2439,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "8722:7:33",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8722:10:33",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "8703:29:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2447,
																	"nodeType": "IfStatement",
																	"src": "8699:97:33",
																	"trueBody": {
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2444,
																				"name": "DiamondWritable__SelectorNotFound",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2597,
																				"src": "8761:33:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8761:35:33",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2446,
																		"nodeType": "RevertStatement",
																		"src": "8754:42:33"
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2448,
																			"name": "oldFacetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2429,
																			"src": "8818:15:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2451,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "8845:4:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_DiamondWritableInternal_$2549",
																						"typeString": "contract DiamondWritableInternal"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_DiamondWritableInternal_$2549",
																						"typeString": "contract DiamondWritableInternal"
																					}
																				],
																				"id": 2450,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8837:7:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2449,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "8837:7:33",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8837:13:33",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "8818:32:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2457,
																	"nodeType": "IfStatement",
																	"src": "8814:103:33",
																	"trueBody": {
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2454,
																				"name": "DiamondWritable__SelectorIsImmutable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2595,
																				"src": "8879:36:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8879:38:33",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2456,
																		"nodeType": "RevertStatement",
																		"src": "8872:45:33"
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2458,
																			"name": "oldFacetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2429,
																			"src": "8939:15:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 2459,
																				"name": "facetCut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2391,
																				"src": "8958:8:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
																					"typeString": "struct IDiamondWritableInternal.FacetCut memory"
																				}
																			},
																			"id": 2460,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8967:6:33",
																			"memberName": "target",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2603,
																			"src": "8958:15:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "8939:34:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2465,
																	"nodeType": "IfStatement",
																	"src": "8935:110:33",
																	"trueBody": {
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2462,
																				"name": "DiamondWritable__ReplaceTargetIsIdentical",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2591,
																				"src": "9002:41:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9002:43:33",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2464,
																		"nodeType": "RevertStatement",
																		"src": "8995:50:33"
																	}
																},
																{
																	"expression": {
																		"id": 2481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 2466,
																					"name": "l",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2388,
																					"src": "9109:1:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
																						"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																					}
																				},
																				"id": 2469,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9111:6:33",
																				"memberName": "facets",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 998,
																				"src": "9109:8:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
																					"typeString": "mapping(bytes4 => bytes32)"
																				}
																			},
																			"id": 2470,
																			"indexExpression": {
																				"id": 2468,
																				"name": "selector",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2415,
																				"src": "9118:8:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9109:18:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 2480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"id": 2473,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2471,
																							"name": "oldFacet",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2422,
																							"src": "9151:8:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"id": 2472,
																							"name": "CLEAR_ADDRESS_MASK",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1764,
																							"src": "9162:18:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"src": "9151:29:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"id": 2474,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "9150:31:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 2477,
																							"name": "facetCut",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2391,
																							"src": "9212:8:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
																								"typeString": "struct IDiamondWritableInternal.FacetCut memory"
																							}
																						},
																						"id": 2478,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "9221:6:33",
																						"memberName": "target",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2603,
																						"src": "9212:15:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2476,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9204:7:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes20_$",
																						"typeString": "type(bytes20)"
																					},
																					"typeName": {
																						"id": 2475,
																						"name": "bytes20",
																						"nodeType": "ElementaryTypeName",
																						"src": "9204:7:33",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2479,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9204:24:33",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes20",
																					"typeString": "bytes20"
																				}
																			},
																			"src": "9150:78:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "9109:119:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"id": 2482,
																	"nodeType": "ExpressionStatement",
																	"src": "9109:119:33"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2406,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2404,
																"src": "8462:1:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"expression": {
																		"id": 2407,
																		"name": "facetCut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2391,
																		"src": "8466:8:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
																			"typeString": "struct IDiamondWritableInternal.FacetCut memory"
																		}
																	},
																	"id": 2408,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8475:9:33",
																	"memberName": "selectors",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2609,
																	"src": "8466:18:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																		"typeString": "bytes4[] memory"
																	}
																},
																"id": 2409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8485:6:33",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "8466:25:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8462:29:33",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2484,
														"initializationExpression": {
															"assignments": [
																2404
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2404,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "8459:1:33",
																	"nodeType": "VariableDeclaration",
																	"scope": 2484,
																	"src": "8451:9:33",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2403,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8451:7:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2405,
															"nodeType": "VariableDeclarationStatement",
															"src": "8451:9:33"
														},
														"loopExpression": {
															"expression": {
																"id": 2412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "8493:3:33",
																"subExpression": {
																	"id": 2411,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2404,
																	"src": "8493:1:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2413,
															"nodeType": "ExpressionStatement",
															"src": "8493:3:33"
														},
														"nodeType": "ForStatement",
														"src": "8446:797:33"
													}
												]
											}
										]
									},
									"id": 2487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_replaceFacetSelectors",
									"nameLocation": "8188:22:33",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2388,
												"mutability": "mutable",
												"name": "l",
												"nameLocation": "8254:1:33",
												"nodeType": "VariableDeclaration",
												"scope": 2487,
												"src": "8220:35:33",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
													"typeString": "struct DiamondBaseStorage.Layout"
												},
												"typeName": {
													"id": 2387,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2386,
														"name": "DiamondBaseStorage.Layout",
														"nameLocations": [
															"8220:18:33",
															"8239:6:33"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1007,
														"src": "8220:25:33"
													},
													"referencedDeclaration": 1007,
													"src": "8220:25:33",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Layout_$1007_storage_ptr",
														"typeString": "struct DiamondBaseStorage.Layout"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "facetCut",
												"nameLocation": "8281:8:33",
												"nodeType": "VariableDeclaration",
												"scope": 2487,
												"src": "8265:24:33",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FacetCut_$2610_memory_ptr",
													"typeString": "struct IDiamondWritableInternal.FacetCut"
												},
												"typeName": {
													"id": 2390,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2389,
														"name": "FacetCut",
														"nameLocations": [
															"8265:8:33"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2610,
														"src": "8265:8:33"
													},
													"referencedDeclaration": 2610,
													"src": "8265:8:33",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FacetCut_$2610_storage_ptr",
														"typeString": "struct IDiamondWritableInternal.FacetCut"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8210:85:33"
									},
									"returnParameters": {
										"id": 2393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8305:0:33"
									},
									"scope": 2549,
									"src": "8179:1080:33",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2547,
										"nodeType": "Block",
										"src": "9329:599:33",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2494,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2489,
																	"src": "9344:6:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9362:1:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9354:7:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2495,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "9354:7:33",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9354:10:33",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "9344:20:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2500,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9343:22:33",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2501,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2491,
																		"src": "9370:4:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9375:6:33",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "9370:11:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9385:1:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9370:16:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2505,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9369:18:33",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9343:44:33",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2510,
												"nodeType": "IfStatement",
												"src": "9339:119:33",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2507,
															"name": "DiamondWritable__InvalidInitializationParameters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2587,
															"src": "9408:48:33",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9408:50:33",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2509,
													"nodeType": "RevertStatement",
													"src": "9401:57:33"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2511,
														"name": "target",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2489,
														"src": "9473:6:33",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9491:1:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9483:7:33",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9483:7:33",
																"typeDescriptions": {}
															}
														},
														"id": 2515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9483:10:33",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9473:20:33",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2546,
												"nodeType": "IfStatement",
												"src": "9469:453:33",
												"trueBody": {
													"id": 2545,
													"nodeType": "Block",
													"src": "9495:427:33",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2517,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2489,
																	"src": "9513:6:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 2520,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "9531:4:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DiamondWritableInternal_$2549",
																				"typeString": "contract DiamondWritableInternal"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DiamondWritableInternal_$2549",
																				"typeString": "contract DiamondWritableInternal"
																			}
																		],
																		"id": 2519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9523:7:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2518,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "9523:7:33",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9523:13:33",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "9513:23:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2532,
															"nodeType": "IfStatement",
															"src": "9509:149:33",
															"trueBody": {
																"id": 2531,
																"nodeType": "Block",
																"src": "9538:120:33",
																"statements": [
																	{
																		"condition": {
																			"id": 2526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "9560:20:33",
																			"subExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 2523,
																						"name": "target",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2489,
																						"src": "9561:6:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 2524,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9568:10:33",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2659,
																					"src": "9561:17:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 2525,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9561:19:33",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2530,
																		"nodeType": "IfStatement",
																		"src": "9556:87:33",
																		"trueBody": {
																			"errorCall": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2527,
																					"name": "DiamondWritable__TargetHasNoCode",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2601,
																					"src": "9609:32:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_error_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 2528,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9609:34:33",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 2529,
																			"nodeType": "RevertStatement",
																			"src": "9602:41:33"
																		}
																	}
																]
															}
														},
														{
															"assignments": [
																2534,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2534,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "9678:7:33",
																	"nodeType": "VariableDeclaration",
																	"scope": 2545,
																	"src": "9673:12:33",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 2533,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "9673:4:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 2539,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2537,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2491,
																		"src": "9711:4:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 2535,
																		"name": "target",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2489,
																		"src": "9691:6:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 2536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9698:12:33",
																	"memberName": "delegatecall",
																	"nodeType": "MemberAccess",
																	"src": "9691:19:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) returns (bool,bytes memory)"
																	}
																},
																"id": 2538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9691:25:33",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9672:44:33"
														},
														{
															"condition": {
																"id": 2541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "9735:8:33",
																"subExpression": {
																	"id": 2540,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2534,
																	"src": "9736:7:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2544,
															"nodeType": "IfStatement",
															"src": "9731:181:33",
															"trueBody": {
																"id": 2543,
																"nodeType": "Block",
																"src": "9745:167:33",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "9772:126:33",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9809:1:33",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9812:1:33",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nodeType": "YulIdentifier",
																									"src": "9815:14:33"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9815:16:33"
																							}
																						],
																						"functionName": {
																							"name": "returndatacopy",
																							"nodeType": "YulIdentifier",
																							"src": "9794:14:33"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9794:38:33"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "9794:38:33"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9860:1:33",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nodeType": "YulIdentifier",
																									"src": "9863:14:33"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9863:16:33"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "9853:6:33"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9853:27:33"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "9853:27:33"
																				}
																			]
																		},
																		"evmVersion": "paris",
																		"externalReferences": [],
																		"id": 2542,
																		"nodeType": "InlineAssembly",
																		"src": "9763:135:33"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 2548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initialize",
									"nameLocation": "9274:11:33",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9294:6:33",
												"nodeType": "VariableDeclaration",
												"scope": 2548,
												"src": "9286:14:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9286:7:33",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2491,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9315:4:33",
												"nodeType": "VariableDeclaration",
												"scope": 2548,
												"src": "9302:17:33",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2490,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9302:5:33",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9285:35:33"
									},
									"returnParameters": {
										"id": 2493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9329:0:33"
									},
									"scope": 2549,
									"src": "9265:663:33",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2550,
							"src": "267:9663:33",
							"usedErrors": [
								2587,
								2589,
								2591,
								2593,
								2595,
								2597,
								2599,
								2601
							]
						}
					],
					"src": "33:9898:33"
				},
				"id": 33
			},
			"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol",
					"exportedSymbols": {
						"IDiamondWritable": [
							2569
						],
						"IDiamondWritableInternal": [
							2611
						]
					},
					"id": 2570,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2551,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:34"
						},
						{
							"absolutePath": "imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol",
							"file": "./IDiamondWritableInternal.sol",
							"id": 2553,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2570,
							"sourceUnit": 2612,
							"src": "58:74:34",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2552,
										"name": "IDiamondWritableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2611,
										"src": "67:24:34",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2555,
										"name": "IDiamondWritableInternal",
										"nameLocations": [
											"266:24:34"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2611,
										"src": "266:24:34"
									},
									"id": 2556,
									"nodeType": "InheritanceSpecifier",
									"src": "266:24:34"
								}
							],
							"canonicalName": "IDiamondWritable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2554,
								"nodeType": "StructuredDocumentation",
								"src": "134:101:34",
								"text": " @title Diamond proxy upgrade interface\n @dev see https://eips.ethereum.org/EIPS/eip-2535"
							},
							"fullyImplemented": false,
							"id": 2569,
							"linearizedBaseContracts": [
								2569,
								2611
							],
							"name": "IDiamondWritable",
							"nameLocation": "246:16:34",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2557,
										"nodeType": "StructuredDocumentation",
										"src": "297:305:34",
										"text": " @notice update diamond facets and optionally execute arbitrary initialization function\n @param facetCuts array of structured Diamond facet update data\n @param target optional target of initialization delegatecall\n @param data optional initialization function call data"
									},
									"functionSelector": "1f931c1c",
									"id": 2568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "diamondCut",
									"nameLocation": "616:10:34",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2561,
												"mutability": "mutable",
												"name": "facetCuts",
												"nameLocation": "656:9:34",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "636:29:34",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FacetCut_$2610_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IDiamondWritableInternal.FacetCut[]"
												},
												"typeName": {
													"baseType": {
														"id": 2559,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2558,
															"name": "FacetCut",
															"nameLocations": [
																"636:8:34"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2610,
															"src": "636:8:34"
														},
														"referencedDeclaration": 2610,
														"src": "636:8:34",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$2610_storage_ptr",
															"typeString": "struct IDiamondWritableInternal.FacetCut"
														}
													},
													"id": 2560,
													"nodeType": "ArrayTypeName",
													"src": "636:10:34",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FacetCut_$2610_storage_$dyn_storage_ptr",
														"typeString": "struct IDiamondWritableInternal.FacetCut[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "683:6:34",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "675:14:34",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:34",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "714:4:34",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "699:19:34",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2564,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "699:5:34",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "626:98:34"
									},
									"returnParameters": {
										"id": 2567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "733:0:34"
									},
									"scope": 2569,
									"src": "607:127:34",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2570,
							"src": "236:500:34",
							"usedErrors": [
								2587,
								2589,
								2591,
								2593,
								2595,
								2597,
								2599,
								2601
							]
						}
					],
					"src": "33:704:34"
				},
				"id": 34
			},
			"imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol",
					"exportedSymbols": {
						"IDiamondWritableInternal": [
							2611
						]
					},
					"id": 2612,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2571,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:35"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDiamondWritableInternal",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 2611,
							"linearizedBaseContracts": [
								2611
							],
							"name": "IDiamondWritableInternal",
							"nameLocation": "68:24:35",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IDiamondWritableInternal.FacetCutAction",
									"id": 2575,
									"members": [
										{
											"id": 2572,
											"name": "ADD",
											"nameLocation": "129:3:35",
											"nodeType": "EnumValue",
											"src": "129:3:35"
										},
										{
											"id": 2573,
											"name": "REPLACE",
											"nameLocation": "142:7:35",
											"nodeType": "EnumValue",
											"src": "142:7:35"
										},
										{
											"id": 2574,
											"name": "REMOVE",
											"nameLocation": "159:6:35",
											"nodeType": "EnumValue",
											"src": "159:6:35"
										}
									],
									"name": "FacetCutAction",
									"nameLocation": "104:14:35",
									"nodeType": "EnumDefinition",
									"src": "99:72:35"
								},
								{
									"anonymous": false,
									"eventSelector": "8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673",
									"id": 2585,
									"name": "DiamondCut",
									"nameLocation": "183:10:35",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2579,
												"indexed": false,
												"mutability": "mutable",
												"name": "facetCuts",
												"nameLocation": "205:9:35",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "194:20:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FacetCut_$2610_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IDiamondWritableInternal.FacetCut[]"
												},
												"typeName": {
													"baseType": {
														"id": 2577,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2576,
															"name": "FacetCut",
															"nameLocations": [
																"194:8:35"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2610,
															"src": "194:8:35"
														},
														"referencedDeclaration": 2610,
														"src": "194:8:35",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$2610_storage_ptr",
															"typeString": "struct IDiamondWritableInternal.FacetCut"
														}
													},
													"id": 2578,
													"nodeType": "ArrayTypeName",
													"src": "194:10:35",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FacetCut_$2610_storage_$dyn_storage_ptr",
														"typeString": "struct IDiamondWritableInternal.FacetCut[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2581,
												"indexed": false,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "224:6:35",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "216:14:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "216:7:35",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2583,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "238:4:35",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "232:10:35",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "232:5:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "193:50:35"
									},
									"src": "177:67:35"
								},
								{
									"errorSelector": "26df4ccd",
									"id": 2587,
									"name": "DiamondWritable__InvalidInitializationParameters",
									"nameLocation": "256:48:35",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "304:2:35"
									},
									"src": "250:57:35"
								},
								{
									"errorSelector": "eacd2424",
									"id": 2589,
									"name": "DiamondWritable__RemoveTargetNotZeroAddress",
									"nameLocation": "318:43:35",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "361:2:35"
									},
									"src": "312:52:35"
								},
								{
									"errorSelector": "617557e6",
									"id": 2591,
									"name": "DiamondWritable__ReplaceTargetIsIdentical",
									"nameLocation": "375:41:35",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:35"
									},
									"src": "369:50:35"
								},
								{
									"errorSelector": "92474ee2",
									"id": 2593,
									"name": "DiamondWritable__SelectorAlreadyAdded",
									"nameLocation": "430:37:35",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "467:2:35"
									},
									"src": "424:46:35"
								},
								{
									"errorSelector": "e9835731",
									"id": 2595,
									"name": "DiamondWritable__SelectorIsImmutable",
									"nameLocation": "481:36:35",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "517:2:35"
									},
									"src": "475:45:35"
								},
								{
									"errorSelector": "6fc4b52e",
									"id": 2597,
									"name": "DiamondWritable__SelectorNotFound",
									"nameLocation": "531:33:35",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "564:2:35"
									},
									"src": "525:42:35"
								},
								{
									"errorSelector": "eb6c3aeb",
									"id": 2599,
									"name": "DiamondWritable__SelectorNotSpecified",
									"nameLocation": "578:37:35",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "615:2:35"
									},
									"src": "572:46:35"
								},
								{
									"errorSelector": "f77172ac",
									"id": 2601,
									"name": "DiamondWritable__TargetHasNoCode",
									"nameLocation": "629:32:35",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "661:2:35"
									},
									"src": "623:41:35"
								},
								{
									"canonicalName": "IDiamondWritableInternal.FacetCut",
									"id": 2610,
									"members": [
										{
											"constant": false,
											"id": 2603,
											"mutability": "mutable",
											"name": "target",
											"nameLocation": "704:6:35",
											"nodeType": "VariableDeclaration",
											"scope": 2610,
											"src": "696:14:35",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2602,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "696:7:35",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2606,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "735:6:35",
											"nodeType": "VariableDeclaration",
											"scope": 2610,
											"src": "720:21:35",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_FacetCutAction_$2575",
												"typeString": "enum IDiamondWritableInternal.FacetCutAction"
											},
											"typeName": {
												"id": 2605,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2604,
													"name": "FacetCutAction",
													"nameLocations": [
														"720:14:35"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2575,
													"src": "720:14:35"
												},
												"referencedDeclaration": 2575,
												"src": "720:14:35",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_FacetCutAction_$2575",
													"typeString": "enum IDiamondWritableInternal.FacetCutAction"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2609,
											"mutability": "mutable",
											"name": "selectors",
											"nameLocation": "760:9:35",
											"nodeType": "VariableDeclaration",
											"scope": 2610,
											"src": "751:18:35",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
												"typeString": "bytes4[]"
											},
											"typeName": {
												"baseType": {
													"id": 2607,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "751:6:35",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 2608,
												"nodeType": "ArrayTypeName",
												"src": "751:8:35",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
													"typeString": "bytes4[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FacetCut",
									"nameLocation": "677:8:35",
									"nodeType": "StructDefinition",
									"scope": 2611,
									"src": "670:106:35",
									"visibility": "public"
								}
							],
							"scope": 2612,
							"src": "58:720:35",
							"usedErrors": [
								2587,
								2589,
								2591,
								2593,
								2595,
								2597,
								2599,
								2601
							]
						}
					],
					"src": "33:746:35"
				},
				"id": 35
			},
			"imports/solidstate/contracts/utils/AddressUtils.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/utils/AddressUtils.sol",
					"exportedSymbols": {
						"AddressUtils": [
							2846
						],
						"UintUtils": [
							3102
						]
					},
					"id": 2847,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2613,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:36"
						},
						{
							"absolutePath": "imports/solidstate/contracts/utils/UintUtils.sol",
							"file": "./UintUtils.sol",
							"id": 2615,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2847,
							"sourceUnit": 3103,
							"src": "58:44:36",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2614,
										"name": "UintUtils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3102,
										"src": "67:9:36",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2846,
							"linearizedBaseContracts": [
								2846
							],
							"name": "AddressUtils",
							"nameLocation": "112:12:36",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2618,
									"libraryName": {
										"id": 2616,
										"name": "UintUtils",
										"nameLocations": [
											"137:9:36"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3102,
										"src": "137:9:36"
									},
									"nodeType": "UsingForDirective",
									"src": "131:28:36",
									"typeName": {
										"id": 2617,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "151:7:36",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"errorSelector": "c052e61b",
									"id": 2620,
									"name": "AddressUtils__InsufficientBalance",
									"nameLocation": "171:33:36",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "204:2:36"
									},
									"src": "165:42:36"
								},
								{
									"errorSelector": "89c35afc",
									"id": 2622,
									"name": "AddressUtils__NotContract",
									"nameLocation": "218:25:36",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:36"
									},
									"src": "212:34:36"
								},
								{
									"errorSelector": "c6d73c55",
									"id": 2624,
									"name": "AddressUtils__SendValueFailed",
									"nameLocation": "257:29:36",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "286:2:36"
									},
									"src": "251:38:36"
								},
								{
									"body": {
										"id": 2642,
										"nodeType": "Block",
										"src": "368:65:36",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "3230",
															"id": 2639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "423:2:36",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2635,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2626,
																			"src": "401:7:36",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "393:7:36",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2633,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "393:7:36",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "393:16:36",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "385:7:36",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2631,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "385:7:36",
																	"typeDescriptions": {}
																}
															},
															"id": 2637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "385:25:36",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "411:11:36",
														"memberName": "toHexString",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3101,
														"src": "385:37:36",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "385:41:36",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2630,
												"id": 2641,
												"nodeType": "Return",
												"src": "378:48:36"
											}
										]
									},
									"id": 2643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "304:8:36",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "321:7:36",
												"nodeType": "VariableDeclaration",
												"scope": 2643,
												"src": "313:15:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "313:7:36",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "312:17:36"
									},
									"returnParameters": {
										"id": 2630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2643,
												"src": "353:13:36",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2628,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:36",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "352:15:36"
									},
									"scope": 2846,
									"src": "295:138:36",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2658,
										"nodeType": "Block",
										"src": "505:124:36",
										"statements": [
											{
												"assignments": [
													2651
												],
												"declarations": [
													{
														"constant": false,
														"id": 2651,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "523:4:36",
														"nodeType": "VariableDeclaration",
														"scope": 2658,
														"src": "515:12:36",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2650,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "515:7:36",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2652,
												"nodeType": "VariableDeclarationStatement",
												"src": "515:12:36"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "546:52:36",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "560:28:36",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "580:7:36"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "568:11:36"
																},
																"nodeType": "YulFunctionCall",
																"src": "568:20:36"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "560:4:36"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2645,
														"isOffset": false,
														"isSlot": false,
														"src": "580:7:36",
														"valueSize": 1
													},
													{
														"declaration": 2651,
														"isOffset": false,
														"isSlot": false,
														"src": "560:4:36",
														"valueSize": 1
													}
												],
												"id": 2653,
												"nodeType": "InlineAssembly",
												"src": "537:61:36"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2654,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2651,
														"src": "614:4:36",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "621:1:36",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "614:8:36",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2649,
												"id": 2657,
												"nodeType": "Return",
												"src": "607:15:36"
											}
										]
									},
									"id": 2659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "448:10:36",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2645,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "467:7:36",
												"nodeType": "VariableDeclaration",
												"scope": 2659,
												"src": "459:15:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:36",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "458:17:36"
									},
									"returnParameters": {
										"id": 2649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2659,
												"src": "499:4:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2647,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "499:4:36",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:6:36"
									},
									"scope": 2846,
									"src": "439:190:36",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2681,
										"nodeType": "Block",
										"src": "704:131:36",
										"statements": [
											{
												"assignments": [
													2667,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2667,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "720:7:36",
														"nodeType": "VariableDeclaration",
														"scope": 2681,
														"src": "715:12:36",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2666,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "715:4:36",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2674,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "763:2:36",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 2668,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2661,
																"src": "733:7:36",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "741:4:36",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "733:12:36",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2671,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2670,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2663,
																"src": "754:6:36",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "733:29:36",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "733:33:36",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "714:52:36"
											},
											{
												"condition": {
													"id": 2676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "780:8:36",
													"subExpression": {
														"id": 2675,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2667,
														"src": "781:7:36",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2680,
												"nodeType": "IfStatement",
												"src": "776:52:36",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2677,
															"name": "AddressUtils__SendValueFailed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2624,
															"src": "797:29:36",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "797:31:36",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2679,
													"nodeType": "RevertStatement",
													"src": "790:38:36"
												}
											}
										]
									},
									"id": 2682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "644:9:36",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2661,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "670:7:36",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "654:23:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:15:36",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2663,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "687:6:36",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "679:14:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "679:7:36",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:41:36"
									},
									"returnParameters": {
										"id": 2665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "704:0:36"
									},
									"scope": 2846,
									"src": "635:200:36",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2697,
										"nodeType": "Block",
										"src": "952:101:36",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2692,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2684,
															"src": "994:6:36",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2693,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2686,
															"src": "1002:4:36",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573735574696c733a206661696c6564206c6f772d6c6576656c2063616c6c",
															"id": 2694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1008:37:36",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dae25c1f019b3273f9c6ea856b2a45ee931999c1d16716360c90f15d590c498a",
																"typeString": "literal_string \"AddressUtils: failed low-level call\""
															},
															"value": "AddressUtils: failed low-level call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_dae25c1f019b3273f9c6ea856b2a45ee931999c1d16716360c90f15d590c498a",
																"typeString": "literal_string \"AddressUtils: failed low-level call\""
															}
														],
														"id": 2691,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2698,
															2717
														],
														"referencedDeclaration": 2717,
														"src": "981:12:36",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "981:65:36",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2690,
												"id": 2696,
												"nodeType": "Return",
												"src": "962:84:36"
											}
										]
									},
									"id": 2698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "850:12:36",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2684,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "880:6:36",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "872:14:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "872:7:36",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2686,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "909:4:36",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "896:17:36",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2685,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "896:5:36",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "862:57:36"
									},
									"returnParameters": {
										"id": 2690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "938:12:36",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2688,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "938:5:36",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:14:36"
									},
									"scope": 2846,
									"src": "841:212:36",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2716,
										"nodeType": "Block",
										"src": "1199:70:36",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2710,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2700,
															"src": "1239:6:36",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2711,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2702,
															"src": "1247:4:36",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1253:1:36",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2713,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2704,
															"src": "1256:5:36",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2709,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2845,
														"src": "1216:22:36",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1216:46:36",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2708,
												"id": 2715,
												"nodeType": "Return",
												"src": "1209:53:36"
											}
										]
									},
									"id": 2717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "1068:12:36",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2700,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1098:6:36",
												"nodeType": "VariableDeclaration",
												"scope": 2717,
												"src": "1090:14:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1090:7:36",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1127:4:36",
												"nodeType": "VariableDeclaration",
												"scope": 2717,
												"src": "1114:17:36",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1114:5:36",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2704,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "1155:5:36",
												"nodeType": "VariableDeclaration",
												"scope": 2717,
												"src": "1141:19:36",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2703,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1141:6:36",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1080:86:36"
									},
									"returnParameters": {
										"id": 2708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2717,
												"src": "1185:12:36",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2706,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1185:5:36",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1184:14:36"
									},
									"scope": 2846,
									"src": "1059:210:36",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2735,
										"nodeType": "Block",
										"src": "1418:206:36",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2729,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2719,
															"src": "1486:6:36",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2730,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2721,
															"src": "1510:4:36",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2731,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2723,
															"src": "1532:5:36",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573735574696c733a206661696c6564206c6f772d6c6576656c2063616c6c20776974682076616c7565",
															"id": 2732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:48:36",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dea7c3fcc3c03e4612572a7c41d135b6cbe510cf8448d3bf0e1a7f9f2312157",
																"typeString": "literal_string \"AddressUtils: failed low-level call with value\""
															},
															"value": "AddressUtils: failed low-level call with value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_1dea7c3fcc3c03e4612572a7c41d135b6cbe510cf8448d3bf0e1a7f9f2312157",
																"typeString": "literal_string \"AddressUtils: failed low-level call with value\""
															}
														],
														"id": 2728,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2736,
															2768
														],
														"referencedDeclaration": 2768,
														"src": "1447:21:36",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1447:170:36",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2727,
												"id": 2734,
												"nodeType": "Return",
												"src": "1428:189:36"
											}
										]
									},
									"id": 2736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "1284:21:36",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2719,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1323:6:36",
												"nodeType": "VariableDeclaration",
												"scope": 2736,
												"src": "1315:14:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1315:7:36",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2721,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1352:4:36",
												"nodeType": "VariableDeclaration",
												"scope": 2736,
												"src": "1339:17:36",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2720,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1339:5:36",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1374:5:36",
												"nodeType": "VariableDeclaration",
												"scope": 2736,
												"src": "1366:13:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:36",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1305:80:36"
									},
									"returnParameters": {
										"id": 2727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2736,
												"src": "1404:12:36",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2725,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1404:5:36",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1403:14:36"
									},
									"scope": 2846,
									"src": "1275:349:36",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2767,
										"nodeType": "Block",
										"src": "1802:173:36",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2749,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2742,
														"src": "1816:5:36",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2752,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1832:4:36",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AddressUtils_$2846",
																		"typeString": "library AddressUtils"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AddressUtils_$2846",
																		"typeString": "library AddressUtils"
																	}
																],
																"id": 2751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1824:7:36",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2750,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1824:7:36",
																	"typeDescriptions": {}
																}
															},
															"id": 2753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1824:13:36",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1838:7:36",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1824:21:36",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1816:29:36",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2759,
												"nodeType": "IfStatement",
												"src": "1812:89:36",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2756,
															"name": "AddressUtils__InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2620,
															"src": "1866:33:36",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:35:36",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2758,
													"nodeType": "RevertStatement",
													"src": "1859:42:36"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2761,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2738,
															"src": "1941:6:36",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2762,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2740,
															"src": "1949:4:36",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2763,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2742,
															"src": "1955:5:36",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2764,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2744,
															"src": "1962:5:36",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2760,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2845,
														"src": "1918:22:36",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1918:50:36",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2748,
												"id": 2766,
												"nodeType": "Return",
												"src": "1911:57:36"
											}
										]
									},
									"id": 2768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "1639:21:36",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2738,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1678:6:36",
												"nodeType": "VariableDeclaration",
												"scope": 2768,
												"src": "1670:14:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1670:7:36",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2740,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1707:4:36",
												"nodeType": "VariableDeclaration",
												"scope": 2768,
												"src": "1694:17:36",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2739,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1694:5:36",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2742,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1729:5:36",
												"nodeType": "VariableDeclaration",
												"scope": 2768,
												"src": "1721:13:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1721:7:36",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2744,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "1758:5:36",
												"nodeType": "VariableDeclaration",
												"scope": 2768,
												"src": "1744:19:36",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2743,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1744:6:36",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:109:36"
									},
									"returnParameters": {
										"id": 2748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2768,
												"src": "1788:12:36",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2746,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1788:5:36",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1787:14:36"
									},
									"scope": 2846,
									"src": "1630:345:36",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2794,
										"nodeType": "Block",
										"src": "2752:791:36",
										"statements": [
											{
												"expression": {
													"id": 2791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2786,
														"name": "returnData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2784,
														"src": "2762:10:36",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2789,
																"name": "maxCopy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2777,
																"src": "2785:7:36",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															],
															"id": 2788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "2775:9:36",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																"typeString": "function (uint256) pure returns (bytes memory)"
															},
															"typeName": {
																"id": 2787,
																"name": "bytes",
																"nodeType": "ElementaryTypeName",
																"src": "2779:5:36",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_storage_ptr",
																	"typeString": "bytes"
																}
															}
														},
														"id": 2790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2775:18:36",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "2762:31:36",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 2792,
												"nodeType": "ExpressionStatement",
												"src": "2762:31:36"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2813:724:36",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2919:203:36",
															"value": {
																"arguments": [
																	{
																		"name": "gasAmount",
																		"nodeType": "YulIdentifier",
																		"src": "2952:9:36"
																	},
																	{
																		"name": "target",
																		"nodeType": "YulIdentifier",
																		"src": "2979:6:36"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3003:5:36"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "3030:4:36"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3036:4:36",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3026:3:36"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3026:15:36"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "3065:4:36"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3059:5:36"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3059:11:36"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3088:1:36",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3107:1:36",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "2930:4:36"
																},
																"nodeType": "YulFunctionCall",
																"src": "2930:192:36"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "2919:7:36"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3201:30:36",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "3215:14:36"
																},
																"nodeType": "YulFunctionCall",
																"src": "3215:16:36"
															},
															"variables": [
																{
																	"name": "toCopy",
																	"nodeType": "YulTypedName",
																	"src": "3205:6:36",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3268:49:36",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3286:17:36",
																		"value": {
																			"name": "maxCopy",
																			"nodeType": "YulIdentifier",
																			"src": "3296:7:36"
																		},
																		"variableNames": [
																			{
																				"name": "toCopy",
																				"nodeType": "YulIdentifier",
																				"src": "3286:6:36"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "toCopy",
																		"nodeType": "YulIdentifier",
																		"src": "3251:6:36"
																	},
																	{
																		"name": "maxCopy",
																		"nodeType": "YulIdentifier",
																		"src": "3259:7:36"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3248:2:36"
																},
																"nodeType": "YulFunctionCall",
																"src": "3248:19:36"
															},
															"nodeType": "YulIf",
															"src": "3245:72:36"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "returnData",
																		"nodeType": "YulIdentifier",
																		"src": "3390:10:36"
																	},
																	{
																		"name": "toCopy",
																		"nodeType": "YulIdentifier",
																		"src": "3402:6:36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3383:6:36"
																},
																"nodeType": "YulFunctionCall",
																"src": "3383:26:36"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3383:26:36"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "returnData",
																				"nodeType": "YulIdentifier",
																				"src": "3498:10:36"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3510:4:36",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3494:3:36"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3494:21:36"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3517:1:36",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "toCopy",
																		"nodeType": "YulIdentifier",
																		"src": "3520:6:36"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3479:14:36"
																},
																"nodeType": "YulFunctionCall",
																"src": "3479:48:36"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3479:48:36"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 2779,
														"isOffset": false,
														"isSlot": false,
														"src": "3030:4:36",
														"valueSize": 1
													},
													{
														"declaration": 2779,
														"isOffset": false,
														"isSlot": false,
														"src": "3065:4:36",
														"valueSize": 1
													},
													{
														"declaration": 2773,
														"isOffset": false,
														"isSlot": false,
														"src": "2952:9:36",
														"valueSize": 1
													},
													{
														"declaration": 2777,
														"isOffset": false,
														"isSlot": false,
														"src": "3259:7:36",
														"valueSize": 1
													},
													{
														"declaration": 2777,
														"isOffset": false,
														"isSlot": false,
														"src": "3296:7:36",
														"valueSize": 1
													},
													{
														"declaration": 2784,
														"isOffset": false,
														"isSlot": false,
														"src": "3390:10:36",
														"valueSize": 1
													},
													{
														"declaration": 2784,
														"isOffset": false,
														"isSlot": false,
														"src": "3498:10:36",
														"valueSize": 1
													},
													{
														"declaration": 2782,
														"isOffset": false,
														"isSlot": false,
														"src": "2919:7:36",
														"valueSize": 1
													},
													{
														"declaration": 2771,
														"isOffset": false,
														"isSlot": false,
														"src": "2979:6:36",
														"valueSize": 1
													},
													{
														"declaration": 2775,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:5:36",
														"valueSize": 1
													}
												],
												"id": 2793,
												"nodeType": "InlineAssembly",
												"src": "2804:733:36"
											}
										]
									},
									"documentation": {
										"id": 2769,
										"nodeType": "StructuredDocumentation",
										"src": "1981:549:36",
										"text": " @notice execute arbitrary external call with limited gas usage and amount of copied return data\n @dev derived from https://github.com/nomad-xyz/ExcessivelySafeCall (MIT License)\n @param target recipient of call\n @param gasAmount gas allowance for call\n @param value native token value to include in call\n @param maxCopy maximum number of bytes to copy from return data\n @param data encoded call data\n @return success whether call is successful\n @return returnData copied return data"
									},
									"id": 2795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "excessivelySafeCall",
									"nameLocation": "2544:19:36",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2771,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2581:6:36",
												"nodeType": "VariableDeclaration",
												"scope": 2795,
												"src": "2573:14:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2573:7:36",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2773,
												"mutability": "mutable",
												"name": "gasAmount",
												"nameLocation": "2605:9:36",
												"nodeType": "VariableDeclaration",
												"scope": 2795,
												"src": "2597:17:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2597:7:36",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2775,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2632:5:36",
												"nodeType": "VariableDeclaration",
												"scope": 2795,
												"src": "2624:13:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2624:7:36",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2777,
												"mutability": "mutable",
												"name": "maxCopy",
												"nameLocation": "2654:7:36",
												"nodeType": "VariableDeclaration",
												"scope": 2795,
												"src": "2647:14:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2776,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2647:6:36",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2779,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2684:4:36",
												"nodeType": "VariableDeclaration",
												"scope": 2795,
												"src": "2671:17:36",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2778,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2671:5:36",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2563:131:36"
									},
									"returnParameters": {
										"id": 2785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2782,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2718:7:36",
												"nodeType": "VariableDeclaration",
												"scope": 2795,
												"src": "2713:12:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2781,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2713:4:36",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2784,
												"mutability": "mutable",
												"name": "returnData",
												"nameLocation": "2740:10:36",
												"nodeType": "VariableDeclaration",
												"scope": 2795,
												"src": "2727:23:36",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2783,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2727:5:36",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:39:36"
									},
									"scope": 2846,
									"src": "2535:1008:36",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2844,
										"nodeType": "Block",
										"src": "3721:492:36",
										"statements": [
											{
												"condition": {
													"id": 2811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3735:19:36",
													"subExpression": {
														"arguments": [
															{
																"id": 2809,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2797,
																"src": "3747:6:36",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2808,
															"name": "isContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2659,
															"src": "3736:10:36",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 2810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3736:18:36",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2815,
												"nodeType": "IfStatement",
												"src": "3731:59:36",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2812,
															"name": "AddressUtils__NotContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2622,
															"src": "3763:25:36",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3763:27:36",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2814,
													"nodeType": "RevertStatement",
													"src": "3756:34:36"
												}
											},
											{
												"assignments": [
													2817,
													2819
												],
												"declarations": [
													{
														"constant": false,
														"id": 2817,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3807:7:36",
														"nodeType": "VariableDeclaration",
														"scope": 2844,
														"src": "3802:12:36",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2816,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3802:4:36",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2819,
														"mutability": "mutable",
														"name": "returnData",
														"nameLocation": "3829:10:36",
														"nodeType": "VariableDeclaration",
														"scope": 2844,
														"src": "3816:23:36",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2818,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3816:5:36",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2826,
												"initialValue": {
													"arguments": [
														{
															"id": 2824,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2799,
															"src": "3884:4:36",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2820,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2797,
																"src": "3843:6:36",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3850:4:36",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3843:11:36",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2823,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2822,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2801,
																"src": "3863:5:36",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3843:27:36",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3843:55:36",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3801:97:36"
											},
											{
												"condition": {
													"id": 2827,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2817,
													"src": "3913:7:36",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2831,
																"name": "returnData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2819,
																"src": "3974:10:36",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3985:6:36",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3974:17:36",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3994:1:36",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3974:21:36",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2841,
														"nodeType": "Block",
														"src": "4169:38:36",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 2838,
																			"name": "error",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2803,
																			"src": "4190:5:36",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2837,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "4183:6:36",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 2839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4183:13:36",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2840,
																"nodeType": "ExpressionStatement",
																"src": "4183:13:36"
															}
														]
													},
													"id": 2842,
													"nodeType": "IfStatement",
													"src": "3970:237:36",
													"trueBody": {
														"id": 2836,
														"nodeType": "Block",
														"src": "3997:166:36",
														"statements": [
															{
																"AST": {
																	"nodeType": "YulBlock",
																	"src": "4020:133:36",
																	"statements": [
																		{
																			"nodeType": "YulVariableDeclaration",
																			"src": "4038:40:36",
																			"value": {
																				"arguments": [
																					{
																						"name": "returnData",
																						"nodeType": "YulIdentifier",
																						"src": "4067:10:36"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "4061:5:36"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4061:17:36"
																			},
																			"variables": [
																				{
																					"name": "returnData_size",
																					"nodeType": "YulTypedName",
																					"src": "4042:15:36",
																					"type": ""
																				}
																			]
																		},
																		{
																			"expression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4106:2:36",
																								"type": "",
																								"value": "32"
																							},
																							{
																								"name": "returnData",
																								"nodeType": "YulIdentifier",
																								"src": "4110:10:36"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4102:3:36"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4102:19:36"
																					},
																					{
																						"name": "returnData_size",
																						"nodeType": "YulIdentifier",
																						"src": "4123:15:36"
																					}
																				],
																				"functionName": {
																					"name": "revert",
																					"nodeType": "YulIdentifier",
																					"src": "4095:6:36"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4095:44:36"
																			},
																			"nodeType": "YulExpressionStatement",
																			"src": "4095:44:36"
																		}
																	]
																},
																"evmVersion": "paris",
																"externalReferences": [
																	{
																		"declaration": 2819,
																		"isOffset": false,
																		"isSlot": false,
																		"src": "4067:10:36",
																		"valueSize": 1
																	},
																	{
																		"declaration": 2819,
																		"isOffset": false,
																		"isSlot": false,
																		"src": "4110:10:36",
																		"valueSize": 1
																	}
																],
																"id": 2835,
																"nodeType": "InlineAssembly",
																"src": "4011:142:36"
															}
														]
													}
												},
												"id": 2843,
												"nodeType": "IfStatement",
												"src": "3909:298:36",
												"trueBody": {
													"id": 2830,
													"nodeType": "Block",
													"src": "3922:42:36",
													"statements": [
														{
															"expression": {
																"id": 2828,
																"name": "returnData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2819,
																"src": "3943:10:36",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2807,
															"id": 2829,
															"nodeType": "Return",
															"src": "3936:17:36"
														}
													]
												}
											}
										]
									},
									"id": 2845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nameLocation": "3558:22:36",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2797,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3598:6:36",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "3590:14:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3590:7:36",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2799,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3627:4:36",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "3614:17:36",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2798,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3614:5:36",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2801,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3649:5:36",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "3641:13:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3641:7:36",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2803,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "3678:5:36",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "3664:19:36",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2802,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3664:6:36",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3580:109:36"
									},
									"returnParameters": {
										"id": 2807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "3707:12:36",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2805,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3707:5:36",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3706:14:36"
									},
									"scope": 2846,
									"src": "3549:664:36",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2847,
							"src": "104:4111:36",
							"usedErrors": [
								2620,
								2622,
								2624
							]
						}
					],
					"src": "33:4183:36"
				},
				"id": 36
			},
			"imports/solidstate/contracts/utils/UintUtils.sol": {
				"ast": {
					"absolutePath": "imports/solidstate/contracts/utils/UintUtils.sol",
					"exportedSymbols": {
						"UintUtils": [
							3102
						]
					},
					"id": 3103,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2848,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:37"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "UintUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2849,
								"nodeType": "StructuredDocumentation",
								"src": "58:149:37",
								"text": " @title utility functions for uint256 operations\n @dev derived from https://github.com/OpenZeppelin/openzeppelin-contracts/ (MIT license)"
							},
							"fullyImplemented": true,
							"id": 3102,
							"linearizedBaseContracts": [
								3102
							],
							"name": "UintUtils",
							"nameLocation": "216:9:37",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "c9134785",
									"id": 2851,
									"name": "UintUtils__InsufficientHexLength",
									"nameLocation": "238:32:37",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "270:2:37"
									},
									"src": "232:41:37"
								},
								{
									"constant": true,
									"id": 2854,
									"mutability": "constant",
									"name": "HEX_SYMBOLS",
									"nameLocation": "304:11:37",
									"nodeType": "VariableDeclaration",
									"scope": 3102,
									"src": "279:57:37",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 2852,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "279:7:37",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 2853,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "318:18:37",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2879,
										"nodeType": "Block",
										"src": "409:59:37",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2865,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2863,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2858,
															"src": "426:1:37",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 2864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "430:1:37",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "426:5:37",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2871,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2856,
															"src": "447:1:37",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"arguments": [
																{
																	"id": 2874,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2858,
																	"src": "459:1:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2873,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "451:7:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2872,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "451:7:37",
																	"typeDescriptions": {}
																}
															},
															"id": 2875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "451:10:37",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "447:14:37",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "426:35:37",
													"trueExpression": {
														"arguments": [
															{
																"id": 2867,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2856,
																"src": "438:1:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "441:2:37",
																"subExpression": {
																	"id": 2868,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2858,
																	"src": "442:1:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2866,
															"name": "sub",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2906,
															"src": "434:3:37",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_int256_$returns$_t_uint256_$",
																"typeString": "function (uint256,int256) pure returns (uint256)"
															}
														},
														"id": 2870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "434:10:37",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2862,
												"id": 2878,
												"nodeType": "Return",
												"src": "419:42:37"
											}
										]
									},
									"id": 2880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "352:3:37",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2856,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "364:1:37",
												"nodeType": "VariableDeclaration",
												"scope": 2880,
												"src": "356:9:37",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:37",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2858,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "374:1:37",
												"nodeType": "VariableDeclaration",
												"scope": 2880,
												"src": "367:8:37",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2857,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:37",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:21:37"
									},
									"returnParameters": {
										"id": 2862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2880,
												"src": "400:7:37",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "400:7:37",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "399:9:37"
									},
									"scope": 3102,
									"src": "343:125:37",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2905,
										"nodeType": "Block",
										"src": "540:59:37",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2889,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2884,
															"src": "557:1:37",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 2890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "561:1:37",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "557:5:37",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2897,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2882,
															"src": "578:1:37",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"arguments": [
																{
																	"id": 2900,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2884,
																	"src": "590:1:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "582:7:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2898,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "582:7:37",
																	"typeDescriptions": {}
																}
															},
															"id": 2901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "582:10:37",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "578:14:37",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "557:35:37",
													"trueExpression": {
														"arguments": [
															{
																"id": 2893,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2882,
																"src": "569:1:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "572:2:37",
																"subExpression": {
																	"id": 2894,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2884,
																	"src": "573:1:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2892,
															"name": "add",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2880,
															"src": "565:3:37",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_int256_$returns$_t_uint256_$",
																"typeString": "function (uint256,int256) pure returns (uint256)"
															}
														},
														"id": 2896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "565:10:37",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2888,
												"id": 2904,
												"nodeType": "Return",
												"src": "550:42:37"
											}
										]
									},
									"id": 2906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "483:3:37",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2882,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "495:1:37",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "487:9:37",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:37",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2884,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "505:1:37",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "498:8:37",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2883,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "498:6:37",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "486:21:37"
									},
									"returnParameters": {
										"id": 2888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "531:7:37",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:37",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:9:37"
									},
									"scope": 3102,
									"src": "474:125:37",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2983,
										"nodeType": "Block",
										"src": "676:449:37",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2913,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2908,
														"src": "690:5:37",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "699:1:37",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "690:10:37",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2919,
												"nodeType": "IfStatement",
												"src": "686:51:37",
												"trueBody": {
													"id": 2918,
													"nodeType": "Block",
													"src": "702:35:37",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "723:3:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 2912,
															"id": 2917,
															"nodeType": "Return",
															"src": "716:10:37"
														}
													]
												}
											},
											{
												"assignments": [
													2921
												],
												"declarations": [
													{
														"constant": false,
														"id": 2921,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "755:4:37",
														"nodeType": "VariableDeclaration",
														"scope": 2983,
														"src": "747:12:37",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2920,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "747:7:37",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2923,
												"initialValue": {
													"id": 2922,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2908,
													"src": "762:5:37",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "747:20:37"
											},
											{
												"assignments": [
													2925
												],
												"declarations": [
													{
														"constant": false,
														"id": 2925,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "785:6:37",
														"nodeType": "VariableDeclaration",
														"scope": 2983,
														"src": "777:14:37",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2924,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "777:7:37",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2926,
												"nodeType": "VariableDeclarationStatement",
												"src": "777:14:37"
											},
											{
												"body": {
													"id": 2937,
													"nodeType": "Block",
													"src": "820:57:37",
													"statements": [
														{
															"expression": {
																"id": 2931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "834:8:37",
																"subExpression": {
																	"id": 2930,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2925,
																	"src": "834:6:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2932,
															"nodeType": "ExpressionStatement",
															"src": "834:8:37"
														},
														{
															"expression": {
																"id": 2935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2933,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2921,
																	"src": "856:4:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 2934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "864:2:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "856:10:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2936,
															"nodeType": "ExpressionStatement",
															"src": "856:10:37"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2927,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2921,
														"src": "809:4:37",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2928,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "817:1:37",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "809:9:37",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2938,
												"nodeType": "WhileStatement",
												"src": "802:75:37"
											},
											{
												"assignments": [
													2940
												],
												"declarations": [
													{
														"constant": false,
														"id": 2940,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "900:6:37",
														"nodeType": "VariableDeclaration",
														"scope": 2983,
														"src": "887:19:37",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2939,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "887:5:37",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2945,
												"initialValue": {
													"arguments": [
														{
															"id": 2943,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2925,
															"src": "919:6:37",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2942,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "909:9:37",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2941,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "913:5:37",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "909:17:37",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "887:39:37"
											},
											{
												"body": {
													"id": 2976,
													"nodeType": "Block",
													"src": "956:131:37",
													"statements": [
														{
															"expression": {
																"id": 2951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2949,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2925,
																	"src": "970:6:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "980:1:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "970:11:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2952,
															"nodeType": "ExpressionStatement",
															"src": "970:11:37"
														},
														{
															"expression": {
																"id": 2970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2953,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2940,
																		"src": "995:6:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2955,
																	"indexExpression": {
																		"id": 2954,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2925,
																		"src": "1002:6:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "995:14:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2967,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 2960,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1025:2:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2965,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2963,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2908,
																									"src": "1038:5:37",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 2964,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1046:2:37",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "1038:10:37",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 2962,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1030:7:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 2961,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "1030:7:37",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 2966,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1030:19:37",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1025:24:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2959,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1019:5:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 2958,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "1019:5:37",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1019:31:37",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 2957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1012:6:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 2956,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "1012:6:37",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1012:39:37",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "995:56:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2971,
															"nodeType": "ExpressionStatement",
															"src": "995:56:37"
														},
														{
															"expression": {
																"id": 2974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2972,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2908,
																	"src": "1065:5:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 2973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1074:2:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1065:11:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2975,
															"nodeType": "ExpressionStatement",
															"src": "1065:11:37"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2946,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2908,
														"src": "944:5:37",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2947,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "953:1:37",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "944:10:37",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2977,
												"nodeType": "WhileStatement",
												"src": "937:150:37"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2980,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2940,
															"src": "1111:6:37",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2979,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1104:6:37",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2978,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1104:6:37",
															"typeDescriptions": {}
														}
													},
													"id": 2981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1104:14:37",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2912,
												"id": 2982,
												"nodeType": "Return",
												"src": "1097:21:37"
											}
										]
									},
									"id": 2984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "614:8:37",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2908,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "631:5:37",
												"nodeType": "VariableDeclaration",
												"scope": 2984,
												"src": "623:13:37",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:37",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "622:15:37"
									},
									"returnParameters": {
										"id": 2912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2984,
												"src": "661:13:37",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2910,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "661:6:37",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "660:15:37"
									},
									"scope": 3102,
									"src": "605:520:37",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3024,
										"nodeType": "Block",
										"src": "1205:278:37",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2991,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2986,
														"src": "1219:5:37",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2992,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1228:1:37",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1219:10:37",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2997,
												"nodeType": "IfStatement",
												"src": "1215:54:37",
												"trueBody": {
													"id": 2996,
													"nodeType": "Block",
													"src": "1231:38:37",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 2994,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1252:6:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 2990,
															"id": 2995,
															"nodeType": "Return",
															"src": "1245:13:37"
														}
													]
												}
											},
											{
												"assignments": [
													2999
												],
												"declarations": [
													{
														"constant": false,
														"id": 2999,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1287:6:37",
														"nodeType": "VariableDeclaration",
														"scope": 3024,
														"src": "1279:14:37",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2998,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1279:7:37",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3001,
												"initialValue": {
													"hexValue": "30",
													"id": 3000,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1296:1:37",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1279:18:37"
											},
											{
												"body": {
													"id": 3017,
													"nodeType": "Block",
													"src": "1358:75:37",
													"statements": [
														{
															"id": 3016,
															"nodeType": "UncheckedBlock",
															"src": "1372:51:37",
															"statements": [
																{
																	"expression": {
																		"id": 3014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "1400:8:37",
																		"subExpression": {
																			"id": 3013,
																			"name": "length",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2999,
																			"src": "1400:6:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3015,
																	"nodeType": "ExpressionStatement",
																	"src": "1400:8:37"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3006,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3003,
														"src": "1335:4:37",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3007,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1343:1:37",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1335:9:37",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3018,
												"initializationExpression": {
													"assignments": [
														3003
													],
													"declarations": [
														{
															"constant": false,
															"id": 3003,
															"mutability": "mutable",
															"name": "temp",
															"nameLocation": "1321:4:37",
															"nodeType": "VariableDeclaration",
															"scope": 3018,
															"src": "1313:12:37",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3002,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1313:7:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3005,
													"initialValue": {
														"id": 3004,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2986,
														"src": "1328:5:37",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1313:20:37"
												},
												"loopExpression": {
													"expression": {
														"id": 3011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3009,
															"name": "temp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3003,
															"src": "1346:4:37",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": ">>=",
														"rightHandSide": {
															"hexValue": "38",
															"id": 3010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1355:1:37",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"src": "1346:10:37",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3012,
													"nodeType": "ExpressionStatement",
													"src": "1346:10:37"
												},
												"nodeType": "ForStatement",
												"src": "1308:125:37"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3020,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2986,
															"src": "1462:5:37",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3021,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2999,
															"src": "1469:6:37",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3019,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3025,
															3101
														],
														"referencedDeclaration": 3101,
														"src": "1450:11:37",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 3022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1450:26:37",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2990,
												"id": 3023,
												"nodeType": "Return",
												"src": "1443:33:37"
											}
										]
									},
									"id": 3025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1140:11:37",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2986,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1160:5:37",
												"nodeType": "VariableDeclaration",
												"scope": 3025,
												"src": "1152:13:37",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1152:7:37",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1151:15:37"
									},
									"returnParameters": {
										"id": 2990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3025,
												"src": "1190:13:37",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2988,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1190:6:37",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1189:15:37"
									},
									"scope": 3102,
									"src": "1131:352:37",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3100,
										"nodeType": "Block",
										"src": "1601:401:37",
										"statements": [
											{
												"assignments": [
													3035
												],
												"declarations": [
													{
														"constant": false,
														"id": 3035,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1624:6:37",
														"nodeType": "VariableDeclaration",
														"scope": 3100,
														"src": "1611:19:37",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3034,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1611:5:37",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3044,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1643:1:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 3039,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3029,
																	"src": "1647:6:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1643:10:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 3041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1656:1:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1643:14:37",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1633:9:37",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 3036,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1637:5:37",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 3043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1633:25:37",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1611:47:37"
											},
											{
												"expression": {
													"id": 3049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3045,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3035,
															"src": "1668:6:37",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3047,
														"indexExpression": {
															"hexValue": "30",
															"id": 3046,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1675:1:37",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1668:9:37",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 3048,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1680:3:37",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1668:15:37",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 3050,
												"nodeType": "ExpressionStatement",
												"src": "1668:15:37"
											},
											{
												"expression": {
													"id": 3055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3051,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3035,
															"src": "1693:6:37",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3053,
														"indexExpression": {
															"hexValue": "31",
															"id": 3052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1700:1:37",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1693:9:37",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 3054,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1705:3:37",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1693:15:37",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 3056,
												"nodeType": "ExpressionStatement",
												"src": "1693:15:37"
											},
											{
												"id": 3087,
												"nodeType": "UncheckedBlock",
												"src": "1719:177:37",
												"statements": [
													{
														"body": {
															"id": 3085,
															"nodeType": "Block",
															"src": "1788:98:37",
															"statements": [
																{
																	"expression": {
																		"id": 3079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 3071,
																				"name": "buffer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3035,
																				"src": "1806:6:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 3073,
																			"indexExpression": {
																				"id": 3072,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3058,
																				"src": "1813:1:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "1806:9:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"baseExpression": {
																				"id": 3074,
																				"name": "HEX_SYMBOLS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2854,
																				"src": "1818:11:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes16",
																					"typeString": "bytes16"
																				}
																			},
																			"id": 3078,
																			"indexExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3077,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3075,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3027,
																					"src": "1830:5:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"hexValue": "307866",
																					"id": 3076,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1838:3:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_15_by_1",
																						"typeString": "int_const 15"
																					},
																					"value": "0xf"
																				},
																				"src": "1830:11:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1818:24:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		},
																		"src": "1806:36:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		}
																	},
																	"id": 3080,
																	"nodeType": "ExpressionStatement",
																	"src": "1806:36:37"
																},
																{
																	"expression": {
																		"id": 3083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3081,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3027,
																			"src": "1860:5:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3082,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1870:1:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "1860:11:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3084,
																	"nodeType": "ExpressionStatement",
																	"src": "1860:11:37"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3065,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3058,
																"src": "1776:1:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "31",
																"id": 3066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1780:1:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1776:5:37",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3086,
														"initializationExpression": {
															"assignments": [
																3058
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3058,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "1756:1:37",
																	"nodeType": "VariableDeclaration",
																	"scope": 3086,
																	"src": "1748:9:37",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3057,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1748:7:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3064,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "32",
																		"id": 3059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1760:1:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 3060,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3029,
																		"src": "1764:6:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1760:10:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1773:1:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1760:14:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1748:26:37"
														},
														"loopExpression": {
															"expression": {
																"id": 3069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "--",
																"prefix": true,
																"src": "1783:3:37",
																"subExpression": {
																	"id": 3068,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3058,
																	"src": "1785:1:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3070,
															"nodeType": "ExpressionStatement",
															"src": "1783:3:37"
														},
														"nodeType": "ForStatement",
														"src": "1743:143:37"
													}
												]
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3088,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3027,
														"src": "1910:5:37",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3089,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1919:1:37",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1910:10:37",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3094,
												"nodeType": "IfStatement",
												"src": "1906:57:37",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3091,
															"name": "UintUtils__InsufficientHexLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2851,
															"src": "1929:32:37",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1929:34:37",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3093,
													"nodeType": "RevertStatement",
													"src": "1922:41:37"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3097,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3035,
															"src": "1988:6:37",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3096,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1981:6:37",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 3095,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1981:6:37",
															"typeDescriptions": {}
														}
													},
													"id": 3098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:14:37",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3033,
												"id": 3099,
												"nodeType": "Return",
												"src": "1974:21:37"
											}
										]
									},
									"id": 3101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1498:11:37",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3027,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1527:5:37",
												"nodeType": "VariableDeclaration",
												"scope": 3101,
												"src": "1519:13:37",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:37",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3029,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1550:6:37",
												"nodeType": "VariableDeclaration",
												"scope": 3101,
												"src": "1542:14:37",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:37",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1509:53:37"
									},
									"returnParameters": {
										"id": 3033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3101,
												"src": "1586:13:37",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3031,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1586:6:37",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1585:15:37"
									},
									"scope": 3102,
									"src": "1489:513:37",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3103,
							"src": "208:1796:37",
							"usedErrors": [
								2851
							]
						}
					],
					"src": "33:1972:37"
				},
				"id": 37
			}
		}
	}
}