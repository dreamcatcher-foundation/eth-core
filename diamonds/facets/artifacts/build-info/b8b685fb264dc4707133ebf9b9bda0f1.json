{
	"id": "b8b685fb264dc4707133ebf9b9bda0f1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"diamonds/facets/FacetToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport 'diamonds/facets/slots/SlotToken.sol';\nimport 'imports/openzeppelin/utils/Context.sol';\nimport 'imports/openzeppelin/token/ERC20/IERC20.sol';\nimport 'imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol';\nimport 'imports/openzeppelin/utils/Arrays.sol';\nimport 'imports/openzeppelin/utils/Counters.sol';\n\ninterface IFacetToken is IERC20, IERC20Metadata {\n    event Snapshot(uint id);\n    event TokenNameChanged(string indexed oldName, string indexed newName);\n    event TokenSymbolChanged(string indexed oldSymbol, string indexed newSymbol);\n\n    function ____setName(string memory newName) external;\n    function ____setSymbol(string memory newSymbol) external;\n    function ____mint(uint amount) external;\n    function ____burn(uint amount) external;\n\n    ///\n\n    function totalSupplyAt(uint snapshotId) external view returns (uint);\n    function balanceOfAt(address account, uint snapshotId) external view returns (uint);\n    function getCurrentSnapshotId() external view returns (uint);\n    function snapshot() external returns (uint);\n}\n\ncontract FacetToken is SlotToken, Context, IERC20, IERC20Metadata {\n    using Arrays for uint[];\n    using Counters for Counters.Counter;\n\n    event Snapshot(uint id);\n    event TokenNameChanged(string indexed oldName, string indexed newName);\n    event TokenSymbolChanged(string indexed oldSymbol, string indexed newSymbol);\n\n    function ____setName(string memory newName) external virtual {\n        _onlySelf();\n        string memory oldName = token().name;\n        token().name = newName;\n        emit TokenNameChanged(oldName, newName);\n    }\n\n    function ____setSymbol(string memory newSymbol) external virtual {\n        _onlySelf();\n        string memory oldSymbol = token().symbol;\n        token().symbol = newSymbol;\n        emit TokenSymbolChanged(oldSymbol, newSymbol);\n    }\n\n    function ____mint(uint amount) external virtual {\n        _onlySelf();\n        _mint(_msgSender(), amount);\n    }\n\n    function ____burn(uint amount) external virtual {\n        _onlySelf();\n        _burn(_msgSender(), amount);\n    }\n\n    ///\n\n    function name() public view virtual override returns (string memory) {\n        return token().name;\n    }\n\n    function symbol() public view virtual override returns (string memory) {\n        return token().symbol;\n    }\n\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    function totalSupply() public view virtual override returns (uint) {\n        return token().totalSupply;\n    }\n\n    function totalSupplyAt(uint snapshotId) public view virtual returns (uint) {\n        (bool snapshotted, uint value) = _valueAt(snapshotId, token().snapshotsOfTotalSupply);\n        return snapshotted ? value : totalSupply();\n    }\n\n    function balanceOf(address account) public view virtual override returns (uint) {\n        return token().balances[account];\n    }\n\n    function balanceOfAt(address account, uint snapshotId) public view virtual returns (uint) {\n        (bool snapshotted, uint value) = _valueAt(snapshotId, token().snapshotsOfBalance[account]);\n        return snapshotted ? value : balanceOf(account);\n    }\n\n    function allowance(address owner_, address spender) public view virtual override returns (uint) {\n        return token().allowances[owner_][spender];\n    }\n\n    function getCurrentSnapshotId() public view virtual returns (uint) {\n        return token().currentSnapshotId.current();\n    }\n\n    function approve(address spender, uint amount) public virtual override returns (bool) {\n        address owner_ = _msgSender();\n        _approve(owner_, spender, amount);\n        return true;\n    }\n\n    function transfer(address to, uint amount) public virtual override returns (bool) {\n        address owner_ = _msgSender();\n        _transfer(owner_, to, amount);\n        return true;\n    }\n\n    function transferFrom(address from, address to, uint amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    function increaseAllowance(address spender, uint addedValue) public virtual returns (bool) {\n        address owner_ = _msgSender();\n        _approve(owner_, spender, allowance(owner_, spender) + addedValue);\n        return true;\n    }\n\n    function decreaseAllowance(address spender, uint subtractedValue) public virtual returns (bool) {\n        address owner_ = _msgSender();\n        uint currentAllowance = allowance(owner_, spender);\n        require(currentAllowance >= subtractedValue, 'FacetToken: decreased allowance below zero');\n        unchecked {\n            _approve(owner_, spender, currentAllowance - subtractedValue);\n        }\n        return true;\n    }\n\n    function snapshot() public virtual returns (uint) {\n        token().currentSnapshotId.increment();\n        uint currentId = getCurrentSnapshotId();\n        emit Snapshot(currentId);\n        return currentId;\n    }\n\n    function _onlySelf() internal view virtual {\n        require(_msgSender() == address(this), 'only self');\n    }\n\n    function _transfer(address from, address to, uint amount) internal virtual {\n        require(from != address(0), 'FacetToken: transfer from the zero address');\n        require(to != address(0), 'FacetToken: transfer to the zero address');\n        _beforeTokenTransfer(from, to, amount);\n        uint fromBalance = token().balances[from];\n        require(fromBalance >= amount, 'FacetToken: transfer amount exceeds balance');\n        unchecked {\n            token().balances[from] = fromBalance - amount;\n            token().balances[to] += amount;\n        }\n        emit Transfer(from, to, amount);\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    function _mint(address account, uint amount) internal virtual {\n        require(account != address(0), 'FacetToken: mint to the zero address');\n        _beforeTokenTransfer(address(0), account, amount);\n        token().totalSupply += amount;\n        unchecked {\n            token().balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    function _burn(address account, uint amount) internal virtual {\n        require(account != address(0), 'FacetToken: burn from the zero address');\n        _beforeTokenTransfer(account, address(0), amount);\n        uint accountBalance = token().balances[account];\n        require(accountBalance >= amount, 'FacetToken: burn amount exceeds balance');\n        unchecked {\n            token().balances[account] = accountBalance - amount;\n            token().totalSupply -= amount;\n        }\n        emit Transfer(account, address(0), amount);\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    function _spendAllowance(address owner_, address spender, uint amount) internal virtual {\n        uint currentAllowance = allowance(owner_, spender);\n        if (currentAllowance != type(uint).max) {\n            require(currentAllowance >= amount, 'FacetToken: insufficient allowance');\n            unchecked {\n                _approve(owner_, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    function _approve(address owner_, address spender, uint amount) internal virtual {\n        require(owner_ != address(0), 'FacetToken: approve from the zero address');\n        require(spender != address(0), 'FacetToken: approve to the zero address');\n        token().allowances[owner_][spender] = amount;\n        emit Approval(owner_, spender, amount);\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint amount) internal virtual {\n        if (from == address(0)) {\n            _updateAccountSnapshot(to);\n            _updateTotalSupplySnapshot();\n        } else if (to == address(0)) {\n            _updateAccountSnapshot(from);\n            _updateTotalSupplySnapshot();\n        } else {\n            _updateAccountSnapshot(from);\n            _updateAccountSnapshot(to);\n        }\n    }\n\n    function _afterTokenTransfer(address from, address to, uint amount) internal virtual {}\n\n    function _valueAt(uint snapshotId, Snapshots storage snapshots) private view returns (bool, uint) {\n        require(snapshotId > 0, 'FacetToken: id is 0');\n        require(snapshotId <= getCurrentSnapshotId(), 'FacetToken: nonexistent id');\n        uint index = snapshots.ids.findUpperBound(snapshotId);\n        if (index == snapshots.ids.length) {\n            return (false, 0);\n        } else {\n            return (true, snapshots.values[index]);\n        }\n    }\n\n    function _updateAccountSnapshot(address account) private {\n        _updateSnapshot(token().snapshotsOfBalance[account], balanceOf(account));\n    }\n\n    function _updateTotalSupplySnapshot() private {\n        _updateSnapshot(token().snapshotsOfTotalSupply, totalSupply());\n    }\n\n    function _updateSnapshot(Snapshots storage snapshots, uint currentValue) private {\n        uint currentId = getCurrentSnapshotId();\n        if (_lastSnapshotId(snapshots.ids) < currentId) {\n            snapshots.ids.push(currentId);\n            snapshots.values.push(currentValue);\n        }\n    }\n\n    function _lastSnapshotId(uint[] storage ids) private view returns (uint) {\n        if (ids.length == 0) {\n            return 0;\n        } else {\n            return ids[ids.length - 1];\n        }\n    }\n}\n"
			},
			"imports/openzeppelin/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}"
			},
			"imports/openzeppelin/utils/Arrays.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Arrays.sol)\n\npragma solidity ^0.8.19;\n\nimport \"./StorageSlot.sol\";\nimport \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        if (array.length == 0) {\n            return 0;\n        }\n\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds down (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.17/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.17/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.17/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n}\n"
			},
			"imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.19;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"imports/openzeppelin/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"imports/openzeppelin/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"diamonds/facets/slots/SlotToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport 'imports/openzeppelin/utils/Arrays.sol';\nimport 'imports/openzeppelin/utils/Counters.sol';\n\ncontract SlotToken {\n    bytes32 internal constant _TOKEN = keccak256('slot.token');\n\n    struct StorageToken {\n        mapping(address => uint) balances;\n        mapping(address => mapping(address => uint)) allowances;\n        mapping(address => Snapshots) snapshotsOfBalance;\n        Snapshots snapshotsOfTotalSupply;\n        Counters.Counter currentSnapshotId;\n        string name;\n        string symbol;\n        uint totalSupply;\n    }\n\n    struct Snapshots {\n        uint[] ids;\n        uint[] values;\n    }\n\n    function token() internal pure virtual returns (StorageToken storage s) {\n        bytes32 location = _TOKEN;\n        assembly {\n            s.slot := location\n        }\n    }\n}"
			},
			"imports/openzeppelin/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v5.0._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v5.0._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v5.0._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v5.0._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v5.0._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			},
			"imports/openzeppelin/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0, \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"diamonds/facets/FacetToken.sol": {
				"FacetToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "Snapshot",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "oldName",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "newName",
									"type": "string"
								}
							],
							"name": "TokenNameChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "oldSymbol",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "newSymbol",
									"type": "string"
								}
							],
							"name": "TokenSymbolChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "____burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "____mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "newName",
									"type": "string"
								}
							],
							"name": "____setName",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "newSymbol",
									"type": "string"
								}
							],
							"name": "____setSymbol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "snapshotId",
									"type": "uint256"
								}
							],
							"name": "balanceOfAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentSnapshotId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "snapshot",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "snapshotId",
									"type": "uint256"
								}
							],
							"name": "totalSupplyAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"diamonds/facets/FacetToken.sol\":1116:9466  contract FacetToken is SlotToken, Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"diamonds/facets/FacetToken.sol\":1116:9466  contract FacetToken is SlotToken, Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5439ad86\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb74456f2\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe0089dc3\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x5439ad86\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9711715a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x981b24d0\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x23b872dd\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x49e7012c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4ee2cd7e\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1e96c1dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"diamonds/facets/FacetToken.sol\":2156:2261  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"diamonds/facets/FacetToken.sol\":3518:3714  function approve(address spender, uint amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n        /* \"#utility.yul\":1272:1286   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1265:1287   */\n      iszero\n        /* \"#utility.yul\":1247:1288   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1235:1237   */\n      0x20\n        /* \"#utility.yul\":1220:1238   */\n      add\n        /* \"diamonds/facets/FacetToken.sol\":3518:3714  function approve(address spender, uint amount) public virtual override returns (bool) {... */\n      tag_27\n        /* \"#utility.yul\":1107:1294   */\n      jump\n        /* \"diamonds/facets/FacetToken.sol\":2479:2589  function totalSupply() public view virtual override returns (uint) {... */\n    tag_5:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n        /* \"#utility.yul\":1445:1470   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1433:1435   */\n      0x20\n        /* \"#utility.yul\":1418:1436   */\n      add\n        /* \"diamonds/facets/FacetToken.sol\":2479:2589  function totalSupply() public view virtual override returns (uint) {... */\n      tag_27\n        /* \"#utility.yul\":1299:1476   */\n      jump\n        /* \"diamonds/facets/FacetToken.sol\":1669:1903  function ____setSymbol(string memory newSymbol) external virtual {... */\n    tag_6:\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"diamonds/facets/FacetToken.sol\":3914:4167  function transferFrom(address from, address to, uint amount) public virtual override returns (bool) {... */\n    tag_7:\n      tag_29\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n        /* \"diamonds/facets/FacetToken.sol\":2382:2473  function decimals() public view virtual override returns (uint8) {... */\n    tag_8:\n      mload(0x40)\n        /* \"diamonds/facets/FacetToken.sol\":2464:2466  18 */\n      0x12\n        /* \"#utility.yul\":3015:3051   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3003:3005   */\n      0x20\n        /* \"#utility.yul\":2988:3006   */\n      add\n        /* \"diamonds/facets/FacetToken.sol\":2382:2473  function decimals() public view virtual override returns (uint8) {... */\n      tag_27\n        /* \"#utility.yul\":2873:3057   */\n      jump\n        /* \"diamonds/facets/FacetToken.sol\":4173:4407  function increaseAllowance(address spender, uint addedValue) public virtual returns (bool) {... */\n    tag_9:\n      tag_29\n      tag_53\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n        /* \"diamonds/facets/FacetToken.sol\":1909:2022  function ____mint(uint amount) external virtual {... */\n    tag_10:\n      tag_39\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n        /* \"diamonds/facets/FacetToken.sol\":2965:3219  function balanceOfAt(address account, uint snapshotId) public view virtual returns (uint) {... */\n    tag_11:\n      tag_35\n      tag_61\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n        /* \"diamonds/facets/FacetToken.sol\":3386:3512  function getCurrentSnapshotId() public view virtual returns (uint) {... */\n    tag_12:\n      tag_35\n      tag_65\n      jump\t// in\n        /* \"diamonds/facets/FacetToken.sol\":2830:2959  function balanceOf(address account) public view virtual override returns (uint) {... */\n    tag_13:\n      tag_35\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"diamonds/facets/FacetToken.sol\":2267:2376  function symbol() public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_25\n      tag_73\n      jump\t// in\n        /* \"diamonds/facets/FacetToken.sol\":4847:5060  function snapshot() public virtual returns (uint) {... */\n    tag_15:\n      tag_35\n      tag_76\n      jump\t// in\n        /* \"diamonds/facets/FacetToken.sol\":2595:2824  function totalSupplyAt(uint snapshotId) public view virtual returns (uint) {... */\n    tag_16:\n      tag_35\n      tag_79\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n        /* \"diamonds/facets/FacetToken.sol\":4413:4841  function decreaseAllowance(address spender, uint subtractedValue) public virtual returns (bool) {... */\n    tag_17:\n      tag_29\n      tag_83\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n        /* \"diamonds/facets/FacetToken.sol\":3720:3908  function transfer(address to, uint amount) public virtual override returns (bool) {... */\n    tag_18:\n      tag_29\n      tag_87\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n        /* \"diamonds/facets/FacetToken.sol\":2028:2141  function ____burn(uint amount) external virtual {... */\n    tag_19:\n      tag_39\n      tag_91\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n        /* \"diamonds/facets/FacetToken.sol\":3225:3380  function allowance(address owner_, address spender) public view virtual override returns (uint) {... */\n    tag_20:\n      tag_35\n      tag_94\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n        /* \"diamonds/facets/FacetToken.sol\":1447:1663  function ____setName(string memory newName) external virtual {... */\n    tag_21:\n      tag_39\n      tag_99\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n        /* \"diamonds/facets/FacetToken.sol\":2156:2261  function name() public view virtual override returns (string memory) {... */\n    tag_26:\n        /* \"diamonds/facets/FacetToken.sol\":2210:2223  string memory */\n      0x60\n        /* \"diamonds/facets/FacetToken.sol\":2242:2249  token() */\n      tag_102\n        /* \"diamonds/facets/FacetToken.sol\":2242:2247  token */\n      tag_103\n        /* \"diamonds/facets/FacetToken.sol\":2242:2249  token() */\n      jump\t// in\n    tag_102:\n        /* \"diamonds/facets/FacetToken.sol\":2242:2254  token().name */\n      0x06\n      add\n        /* \"diamonds/facets/FacetToken.sol\":2235:2254  return token().name */\n      dup1\n      sload\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_106\n      swap1\n      tag_105\n      jump\t// in\n    tag_106:\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_108\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_107)\n    tag_108:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_109:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_109\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"diamonds/facets/FacetToken.sol\":2156:2261  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"diamonds/facets/FacetToken.sol\":3518:3714  function approve(address spender, uint amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"diamonds/facets/FacetToken.sol\":3598:3602  bool */\n      0x00\n        /* \"imports/openzeppelin/utils/Context.sol\":720:730  msg.sender */\n      caller\n        /* \"diamonds/facets/FacetToken.sol\":3653:3686  _approve(owner_, spender, amount) */\n      tag_113\n        /* \"imports/openzeppelin/utils/Context.sol\":720:730  msg.sender */\n      dup2\n        /* \"diamonds/facets/FacetToken.sol\":3670:3677  spender */\n      dup6\n        /* \"diamonds/facets/FacetToken.sol\":3679:3685  amount */\n      dup6\n        /* \"diamonds/facets/FacetToken.sol\":3653:3661  _approve */\n      tag_114\n        /* \"diamonds/facets/FacetToken.sol\":3653:3686  _approve(owner_, spender, amount) */\n      jump\t// in\n    tag_113:\n        /* \"diamonds/facets/FacetToken.sol\":3703:3707  true */\n      0x01\n        /* \"diamonds/facets/FacetToken.sol\":3696:3707  return true */\n      swap2\n      pop\n      pop\n        /* \"diamonds/facets/FacetToken.sol\":3518:3714  function approve(address spender, uint amount) public virtual override returns (bool) {... */\n    tag_110:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"diamonds/facets/FacetToken.sol\":2479:2589  function totalSupply() public view virtual override returns (uint) {... */\n    tag_36:\n        /* \"diamonds/facets/FacetToken.sol\":2540:2544  uint */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":2563:2570  token() */\n      tag_116\n        /* \"diamonds/facets/FacetToken.sol\":2563:2568  token */\n      tag_103\n        /* \"diamonds/facets/FacetToken.sol\":2563:2570  token() */\n      jump\t// in\n    tag_116:\n        /* \"diamonds/facets/FacetToken.sol\":2563:2582  token().totalSupply */\n      0x08\n      add\n      sload\n        /* \"diamonds/facets/FacetToken.sol\":2556:2582  return token().totalSupply */\n      swap1\n      pop\n        /* \"diamonds/facets/FacetToken.sol\":2479:2589  function totalSupply() public view virtual override returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"diamonds/facets/FacetToken.sol\":1669:1903  function ____setSymbol(string memory newSymbol) external virtual {... */\n    tag_42:\n        /* \"diamonds/facets/FacetToken.sol\":1744:1755  _onlySelf() */\n      tag_118\n        /* \"diamonds/facets/FacetToken.sol\":1744:1753  _onlySelf */\n      tag_119\n        /* \"diamonds/facets/FacetToken.sol\":1744:1755  _onlySelf() */\n      jump\t// in\n    tag_118:\n        /* \"diamonds/facets/FacetToken.sol\":1765:1788  string memory oldSymbol */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":1791:1798  token() */\n      tag_120\n        /* \"diamonds/facets/FacetToken.sol\":1791:1796  token */\n      tag_103\n        /* \"diamonds/facets/FacetToken.sol\":1791:1798  token() */\n      jump\t// in\n    tag_120:\n        /* \"diamonds/facets/FacetToken.sol\":1791:1805  token().symbol */\n      0x07\n      add\n        /* \"diamonds/facets/FacetToken.sol\":1765:1805  string memory oldSymbol = token().symbol */\n      dup1\n      sload\n      tag_121\n      swap1\n      tag_105\n      jump\t// in\n    tag_121:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_122\n      swap1\n      tag_105\n      jump\t// in\n    tag_122:\n      dup1\n      iszero\n      tag_123\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_124\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_123)\n    tag_124:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_125:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_125\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_123:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"diamonds/facets/FacetToken.sol\":1832:1841  newSymbol */\n      dup2\n        /* \"diamonds/facets/FacetToken.sol\":1815:1822  token() */\n      tag_126\n        /* \"diamonds/facets/FacetToken.sol\":1815:1820  token */\n      tag_103\n        /* \"diamonds/facets/FacetToken.sol\":1815:1822  token() */\n      jump\t// in\n    tag_126:\n        /* \"diamonds/facets/FacetToken.sol\":1815:1829  token().symbol */\n      0x07\n      add\n      swap1\n        /* \"diamonds/facets/FacetToken.sol\":1815:1841  token().symbol = newSymbol */\n      tag_127\n      swap1\n        /* \"diamonds/facets/FacetToken.sol\":1815:1829  token().symbol */\n      dup3\n        /* \"diamonds/facets/FacetToken.sol\":1815:1841  token().symbol = newSymbol */\n      tag_128\n      jump\t// in\n    tag_127:\n      pop\n        /* \"diamonds/facets/FacetToken.sol\":1886:1895  newSymbol */\n      dup2\n        /* \"diamonds/facets/FacetToken.sol\":1856:1896  TokenSymbolChanged(oldSymbol, newSymbol) */\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"diamonds/facets/FacetToken.sol\":1875:1884  oldSymbol */\n      dup2\n        /* \"diamonds/facets/FacetToken.sol\":1856:1896  TokenSymbolChanged(oldSymbol, newSymbol) */\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      dup2\n      keccak256\n      swap1\n      0x68023cab388c6052af3fa625f164cd0c14cc9125d57286fbe0d9b384847c4c02\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"diamonds/facets/FacetToken.sol\":1734:1903  {... */\n      pop\n        /* \"diamonds/facets/FacetToken.sol\":1669:1903  function ____setSymbol(string memory newSymbol) external virtual {... */\n      pop\n      jump\t// out\n        /* \"diamonds/facets/FacetToken.sol\":3914:4167  function transferFrom(address from, address to, uint amount) public virtual override returns (bool) {... */\n    tag_46:\n        /* \"diamonds/facets/FacetToken.sol\":4008:4012  bool */\n      0x00\n        /* \"imports/openzeppelin/utils/Context.sol\":720:730  msg.sender */\n      caller\n        /* \"diamonds/facets/FacetToken.sol\":4064:4102  _spendAllowance(from, spender, amount) */\n      tag_134\n        /* \"diamonds/facets/FacetToken.sol\":4080:4084  from */\n      dup6\n        /* \"imports/openzeppelin/utils/Context.sol\":720:730  msg.sender */\n      dup3\n        /* \"diamonds/facets/FacetToken.sol\":4095:4101  amount */\n      dup6\n        /* \"diamonds/facets/FacetToken.sol\":4064:4079  _spendAllowance */\n      tag_135\n        /* \"diamonds/facets/FacetToken.sol\":4064:4102  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_134:\n        /* \"diamonds/facets/FacetToken.sol\":4112:4139  _transfer(from, to, amount) */\n      tag_136\n        /* \"diamonds/facets/FacetToken.sol\":4122:4126  from */\n      dup6\n        /* \"diamonds/facets/FacetToken.sol\":4128:4130  to */\n      dup6\n        /* \"diamonds/facets/FacetToken.sol\":4132:4138  amount */\n      dup6\n        /* \"diamonds/facets/FacetToken.sol\":4112:4121  _transfer */\n      tag_137\n        /* \"diamonds/facets/FacetToken.sol\":4112:4139  _transfer(from, to, amount) */\n      jump\t// in\n    tag_136:\n      pop\n        /* \"diamonds/facets/FacetToken.sol\":4156:4160  true */\n      0x01\n      swap5\n        /* \"diamonds/facets/FacetToken.sol\":3914:4167  function transferFrom(address from, address to, uint amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"diamonds/facets/FacetToken.sol\":4173:4407  function increaseAllowance(address spender, uint addedValue) public virtual returns (bool) {... */\n    tag_54:\n        /* \"diamonds/facets/FacetToken.sol\":4258:4262  bool */\n      0x00\n        /* \"imports/openzeppelin/utils/Context.sol\":720:730  msg.sender */\n      caller\n        /* \"diamonds/facets/FacetToken.sol\":4313:4379  _approve(owner_, spender, allowance(owner_, spender) + addedValue) */\n      tag_113\n        /* \"imports/openzeppelin/utils/Context.sol\":720:730  msg.sender */\n      dup2\n        /* \"diamonds/facets/FacetToken.sol\":4330:4337  spender */\n      dup6\n        /* \"diamonds/facets/FacetToken.sol\":4368:4378  addedValue */\n      dup6\n        /* \"diamonds/facets/FacetToken.sol\":4339:4365  allowance(owner_, spender) */\n      tag_142\n        /* \"imports/openzeppelin/utils/Context.sol\":720:730  msg.sender */\n      dup4\n        /* \"diamonds/facets/FacetToken.sol\":4330:4337  spender */\n      dup4\n        /* \"diamonds/facets/FacetToken.sol\":4339:4348  allowance */\n      tag_96\n        /* \"diamonds/facets/FacetToken.sol\":4339:4365  allowance(owner_, spender) */\n      jump\t// in\n    tag_142:\n        /* \"diamonds/facets/FacetToken.sol\":4339:4378  allowance(owner_, spender) + addedValue */\n      tag_143\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"diamonds/facets/FacetToken.sol\":4313:4321  _approve */\n      tag_114\n        /* \"diamonds/facets/FacetToken.sol\":4313:4379  _approve(owner_, spender, allowance(owner_, spender) + addedValue) */\n      jump\t// in\n        /* \"diamonds/facets/FacetToken.sol\":1909:2022  function ____mint(uint amount) external virtual {... */\n    tag_59:\n        /* \"diamonds/facets/FacetToken.sol\":1967:1978  _onlySelf() */\n      tag_146\n        /* \"diamonds/facets/FacetToken.sol\":1967:1976  _onlySelf */\n      tag_119\n        /* \"diamonds/facets/FacetToken.sol\":1967:1978  _onlySelf() */\n      jump\t// in\n    tag_146:\n        /* \"diamonds/facets/FacetToken.sol\":1988:2015  _mint(_msgSender(), amount) */\n      tag_147\n        /* \"imports/openzeppelin/utils/Context.sol\":720:730  msg.sender */\n      caller\n        /* \"diamonds/facets/FacetToken.sol\":2008:2014  amount */\n      dup3\n        /* \"diamonds/facets/FacetToken.sol\":1988:1993  _mint */\n      tag_149\n        /* \"diamonds/facets/FacetToken.sol\":1988:2015  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_147:\n        /* \"diamonds/facets/FacetToken.sol\":1909:2022  function ____mint(uint amount) external virtual {... */\n      pop\n      jump\t// out\n        /* \"diamonds/facets/FacetToken.sol\":2965:3219  function balanceOfAt(address account, uint snapshotId) public view virtual returns (uint) {... */\n    tag_62:\n        /* \"diamonds/facets/FacetToken.sol\":3049:3053  uint */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":3066:3082  bool snapshotted */\n      dup1\n        /* \"diamonds/facets/FacetToken.sol\":3084:3094  uint value */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":3098:3155  _valueAt(snapshotId, token().snapshotsOfBalance[account]) */\n      tag_151\n        /* \"diamonds/facets/FacetToken.sol\":3107:3117  snapshotId */\n      dup5\n        /* \"diamonds/facets/FacetToken.sol\":3119:3126  token() */\n      tag_152\n        /* \"diamonds/facets/FacetToken.sol\":3119:3124  token */\n      tag_103\n        /* \"diamonds/facets/FacetToken.sol\":3119:3126  token() */\n      jump\t// in\n    tag_152:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetToken.sol\":3119:3154  token().snapshotsOfBalance[account] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"diamonds/facets/FacetToken.sol\":3119:3145  token().snapshotsOfBalance */\n      0x02\n      swap2\n      swap1\n      swap2\n      add\n        /* \"diamonds/facets/FacetToken.sol\":3119:3154  token().snapshotsOfBalance[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"diamonds/facets/FacetToken.sol\":3098:3106  _valueAt */\n      tag_153\n        /* \"diamonds/facets/FacetToken.sol\":3098:3155  _valueAt(snapshotId, token().snapshotsOfBalance[account]) */\n      jump\t// in\n    tag_151:\n        /* \"diamonds/facets/FacetToken.sol\":3065:3155  (bool snapshotted, uint value) = _valueAt(snapshotId, token().snapshotsOfBalance[account]) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"diamonds/facets/FacetToken.sol\":3172:3183  snapshotted */\n      dup2\n        /* \"diamonds/facets/FacetToken.sol\":3172:3212  snapshotted ? value : balanceOf(account) */\n      tag_154\n      jumpi\n        /* \"diamonds/facets/FacetToken.sol\":3194:3212  balanceOf(account) */\n      tag_155\n        /* \"diamonds/facets/FacetToken.sol\":3204:3211  account */\n      dup6\n        /* \"diamonds/facets/FacetToken.sol\":3194:3203  balanceOf */\n      tag_70\n        /* \"diamonds/facets/FacetToken.sol\":3194:3212  balanceOf(account) */\n      jump\t// in\n    tag_155:\n        /* \"diamonds/facets/FacetToken.sol\":3172:3212  snapshotted ? value : balanceOf(account) */\n      jump(tag_156)\n    tag_154:\n        /* \"diamonds/facets/FacetToken.sol\":3186:3191  value */\n      dup1\n        /* \"diamonds/facets/FacetToken.sol\":3172:3212  snapshotted ? value : balanceOf(account) */\n    tag_156:\n        /* \"diamonds/facets/FacetToken.sol\":3165:3212  return snapshotted ? value : balanceOf(account) */\n      swap6\n        /* \"diamonds/facets/FacetToken.sol\":2965:3219  function balanceOfAt(address account, uint snapshotId) public view virtual returns (uint) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"diamonds/facets/FacetToken.sol\":3386:3512  function getCurrentSnapshotId() public view virtual returns (uint) {... */\n    tag_65:\n        /* \"diamonds/facets/FacetToken.sol\":3447:3451  uint */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":3470:3505  token().currentSnapshotId.current() */\n      tag_158\n        /* \"diamonds/facets/FacetToken.sol\":3470:3477  token() */\n      tag_159\n        /* \"diamonds/facets/FacetToken.sol\":3470:3475  token */\n      tag_103\n        /* \"diamonds/facets/FacetToken.sol\":3470:3477  token() */\n      jump\t// in\n    tag_159:\n        /* \"diamonds/facets/FacetToken.sol\":3470:3495  token().currentSnapshotId */\n      0x05\n      add\n        /* \"imports/openzeppelin/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"imports/openzeppelin/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"diamonds/facets/FacetToken.sol\":3470:3505  token().currentSnapshotId.current() */\n    tag_158:\n        /* \"diamonds/facets/FacetToken.sol\":3463:3505  return token().currentSnapshotId.current() */\n      swap1\n      pop\n        /* \"diamonds/facets/FacetToken.sol\":3386:3512  function getCurrentSnapshotId() public view virtual returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"diamonds/facets/FacetToken.sol\":2830:2959  function balanceOf(address account) public view virtual override returns (uint) {... */\n    tag_70:\n        /* \"diamonds/facets/FacetToken.sol\":2904:2908  uint */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":2927:2934  token() */\n      tag_162\n        /* \"diamonds/facets/FacetToken.sol\":2927:2932  token */\n      tag_103\n        /* \"diamonds/facets/FacetToken.sol\":2927:2934  token() */\n      jump\t// in\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetToken.sol\":2927:2952  token().balances[account] */\n      swap1\n      swap3\n      and\n        /* \"diamonds/facets/FacetToken.sol\":2927:2943  token().balances */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":2927:2952  token().balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"diamonds/facets/FacetToken.sol\":2830:2959  function balanceOf(address account) public view virtual override returns (uint) {... */\n      jump\t// out\n        /* \"diamonds/facets/FacetToken.sol\":2267:2376  function symbol() public view virtual override returns (string memory) {... */\n    tag_73:\n        /* \"diamonds/facets/FacetToken.sol\":2323:2336  string memory */\n      0x60\n        /* \"diamonds/facets/FacetToken.sol\":2355:2362  token() */\n      tag_164\n        /* \"diamonds/facets/FacetToken.sol\":2355:2360  token */\n      tag_103\n        /* \"diamonds/facets/FacetToken.sol\":2355:2362  token() */\n      jump\t// in\n    tag_164:\n        /* \"diamonds/facets/FacetToken.sol\":2355:2369  token().symbol */\n      0x07\n      add\n        /* \"diamonds/facets/FacetToken.sol\":2348:2369  return token().symbol */\n      dup1\n      sload\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n        /* \"diamonds/facets/FacetToken.sol\":4847:5060  function snapshot() public virtual returns (uint) {... */\n    tag_76:\n        /* \"diamonds/facets/FacetToken.sol\":4891:4895  uint */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":4907:4944  token().currentSnapshotId.increment() */\n      tag_171\n        /* \"diamonds/facets/FacetToken.sol\":4907:4914  token() */\n      tag_172\n        /* \"diamonds/facets/FacetToken.sol\":4907:4912  token */\n      tag_103\n        /* \"diamonds/facets/FacetToken.sol\":4907:4914  token() */\n      jump\t// in\n    tag_172:\n        /* \"diamonds/facets/FacetToken.sol\":4907:4932  token().currentSnapshotId */\n      0x05\n      add\n        /* \"imports/openzeppelin/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"imports/openzeppelin/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"imports/openzeppelin/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"imports/openzeppelin/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"diamonds/facets/FacetToken.sol\":4907:4944  token().currentSnapshotId.increment() */\n    tag_171:\n        /* \"diamonds/facets/FacetToken.sol\":4954:4968  uint currentId */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":4971:4993  getCurrentSnapshotId() */\n      tag_174\n        /* \"diamonds/facets/FacetToken.sol\":4971:4991  getCurrentSnapshotId */\n      tag_65\n        /* \"diamonds/facets/FacetToken.sol\":4971:4993  getCurrentSnapshotId() */\n      jump\t// in\n    tag_174:\n        /* \"diamonds/facets/FacetToken.sol\":4954:4993  uint currentId = getCurrentSnapshotId() */\n      swap1\n      pop\n        /* \"diamonds/facets/FacetToken.sol\":5008:5027  Snapshot(currentId) */\n      0x8030e83b04d87bef53480e26263266d6ca66863aa8506aca6f2559d18aa1cb67\n        /* \"diamonds/facets/FacetToken.sol\":5017:5026  currentId */\n      dup2\n        /* \"diamonds/facets/FacetToken.sol\":5008:5027  Snapshot(currentId) */\n      mload(0x40)\n      tag_175\n      swap2\n        /* \"#utility.yul\":1445:1470   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1433:1435   */\n      0x20\n        /* \"#utility.yul\":1418:1436   */\n      add\n      swap1\n        /* \"#utility.yul\":1299:1476   */\n      jump\n        /* \"diamonds/facets/FacetToken.sol\":5008:5027  Snapshot(currentId) */\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"diamonds/facets/FacetToken.sol\":5044:5053  currentId */\n      swap2\n        /* \"diamonds/facets/FacetToken.sol\":4847:5060  function snapshot() public virtual returns (uint) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"diamonds/facets/FacetToken.sol\":2595:2824  function totalSupplyAt(uint snapshotId) public view virtual returns (uint) {... */\n    tag_80:\n        /* \"diamonds/facets/FacetToken.sol\":2664:2668  uint */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":2681:2697  bool snapshotted */\n      dup1\n        /* \"diamonds/facets/FacetToken.sol\":2699:2709  uint value */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":2713:2765  _valueAt(snapshotId, token().snapshotsOfTotalSupply) */\n      tag_177\n        /* \"diamonds/facets/FacetToken.sol\":2722:2732  snapshotId */\n      dup5\n        /* \"diamonds/facets/FacetToken.sol\":2734:2741  token() */\n      tag_178\n        /* \"diamonds/facets/FacetToken.sol\":2734:2739  token */\n      tag_103\n        /* \"diamonds/facets/FacetToken.sol\":2734:2741  token() */\n      jump\t// in\n    tag_178:\n        /* \"diamonds/facets/FacetToken.sol\":2734:2764  token().snapshotsOfTotalSupply */\n      0x03\n      add\n        /* \"diamonds/facets/FacetToken.sol\":2713:2721  _valueAt */\n      tag_153\n        /* \"diamonds/facets/FacetToken.sol\":2713:2765  _valueAt(snapshotId, token().snapshotsOfTotalSupply) */\n      jump\t// in\n    tag_177:\n        /* \"diamonds/facets/FacetToken.sol\":2680:2765  (bool snapshotted, uint value) = _valueAt(snapshotId, token().snapshotsOfTotalSupply) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"diamonds/facets/FacetToken.sol\":2782:2793  snapshotted */\n      dup2\n        /* \"diamonds/facets/FacetToken.sol\":2782:2817  snapshotted ? value : totalSupply() */\n      tag_179\n      jumpi\n        /* \"diamonds/facets/FacetToken.sol\":2804:2817  totalSupply() */\n      tag_180\n        /* \"diamonds/facets/FacetToken.sol\":2804:2815  totalSupply */\n      tag_36\n        /* \"diamonds/facets/FacetToken.sol\":2804:2817  totalSupply() */\n      jump\t// in\n    tag_180:\n        /* \"diamonds/facets/FacetToken.sol\":2782:2817  snapshotted ? value : totalSupply() */\n      jump(tag_181)\n    tag_179:\n        /* \"diamonds/facets/FacetToken.sol\":2796:2801  value */\n      dup1\n        /* \"diamonds/facets/FacetToken.sol\":2782:2817  snapshotted ? value : totalSupply() */\n    tag_181:\n        /* \"diamonds/facets/FacetToken.sol\":2775:2817  return snapshotted ? value : totalSupply() */\n      swap5\n        /* \"diamonds/facets/FacetToken.sol\":2595:2824  function totalSupplyAt(uint snapshotId) public view virtual returns (uint) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"diamonds/facets/FacetToken.sol\":4413:4841  function decreaseAllowance(address spender, uint subtractedValue) public virtual returns (bool) {... */\n    tag_84:\n        /* \"diamonds/facets/FacetToken.sol\":4503:4507  bool */\n      0x00\n        /* \"imports/openzeppelin/utils/Context.sol\":720:730  msg.sender */\n      caller\n        /* \"diamonds/facets/FacetToken.sol\":4503:4507  bool */\n      dup2\n        /* \"diamonds/facets/FacetToken.sol\":4582:4608  allowance(owner_, spender) */\n      tag_184\n        /* \"imports/openzeppelin/utils/Context.sol\":720:730  msg.sender */\n      dup3\n        /* \"diamonds/facets/FacetToken.sol\":4600:4607  spender */\n      dup7\n        /* \"diamonds/facets/FacetToken.sol\":4582:4591  allowance */\n      tag_96\n        /* \"diamonds/facets/FacetToken.sol\":4582:4608  allowance(owner_, spender) */\n      jump\t// in\n    tag_184:\n        /* \"diamonds/facets/FacetToken.sol\":4558:4608  uint currentAllowance = allowance(owner_, spender) */\n      swap1\n      pop\n        /* \"diamonds/facets/FacetToken.sol\":4646:4661  subtractedValue */\n      dup4\n        /* \"diamonds/facets/FacetToken.sol\":4626:4642  currentAllowance */\n      dup2\n        /* \"diamonds/facets/FacetToken.sol\":4626:4661  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"diamonds/facets/FacetToken.sol\":4618:4708  require(currentAllowance >= subtractedValue, 'FacetToken: decreased allowance below zero') */\n      tag_185\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7050:7052   */\n      0x20\n        /* \"diamonds/facets/FacetToken.sol\":4618:4708  require(currentAllowance >= subtractedValue, 'FacetToken: decreased allowance below zero') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7032:7053   */\n      mstore\n        /* \"#utility.yul\":7089:7091   */\n      0x2a\n        /* \"#utility.yul\":7069:7087   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7062:7092   */\n      mstore\n        /* \"#utility.yul\":7128:7162   */\n      0x4661636574546f6b656e3a2064656372656173656420616c6c6f77616e636520\n        /* \"#utility.yul\":7108:7126   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7101:7163   */\n      mstore\n      shl(0xb0, 0x62656c6f77207a65726f)\n        /* \"#utility.yul\":7179:7197   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7172:7212   */\n      mstore\n        /* \"#utility.yul\":7229:7248   */\n      0x84\n      add\n        /* \"diamonds/facets/FacetToken.sol\":4618:4708  require(currentAllowance >= subtractedValue, 'FacetToken: decreased allowance below zero') */\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"diamonds/facets/FacetToken.sol\":4742:4803  _approve(owner_, spender, currentAllowance - subtractedValue) */\n      tag_136\n        /* \"diamonds/facets/FacetToken.sol\":4751:4757  owner_ */\n      dup3\n        /* \"diamonds/facets/FacetToken.sol\":4759:4766  spender */\n      dup7\n        /* \"diamonds/facets/FacetToken.sol\":4787:4802  subtractedValue */\n      dup7\n        /* \"diamonds/facets/FacetToken.sol\":4768:4784  currentAllowance */\n      dup5\n        /* \"diamonds/facets/FacetToken.sol\":4768:4802  currentAllowance - subtractedValue */\n      sub\n        /* \"diamonds/facets/FacetToken.sol\":4742:4750  _approve */\n      tag_114\n        /* \"diamonds/facets/FacetToken.sol\":4742:4803  _approve(owner_, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"diamonds/facets/FacetToken.sol\":3720:3908  function transfer(address to, uint amount) public virtual override returns (bool) {... */\n    tag_88:\n        /* \"diamonds/facets/FacetToken.sol\":3796:3800  bool */\n      0x00\n        /* \"imports/openzeppelin/utils/Context.sol\":720:730  msg.sender */\n      caller\n        /* \"diamonds/facets/FacetToken.sol\":3851:3880  _transfer(owner_, to, amount) */\n      tag_113\n        /* \"imports/openzeppelin/utils/Context.sol\":720:730  msg.sender */\n      dup2\n        /* \"diamonds/facets/FacetToken.sol\":3869:3871  to */\n      dup6\n        /* \"diamonds/facets/FacetToken.sol\":3873:3879  amount */\n      dup6\n        /* \"diamonds/facets/FacetToken.sol\":3851:3860  _transfer */\n      tag_137\n        /* \"diamonds/facets/FacetToken.sol\":3851:3880  _transfer(owner_, to, amount) */\n      jump\t// in\n        /* \"diamonds/facets/FacetToken.sol\":2028:2141  function ____burn(uint amount) external virtual {... */\n    tag_92:\n        /* \"diamonds/facets/FacetToken.sol\":2086:2097  _onlySelf() */\n      tag_193\n        /* \"diamonds/facets/FacetToken.sol\":2086:2095  _onlySelf */\n      tag_119\n        /* \"diamonds/facets/FacetToken.sol\":2086:2097  _onlySelf() */\n      jump\t// in\n    tag_193:\n        /* \"diamonds/facets/FacetToken.sol\":2107:2134  _burn(_msgSender(), amount) */\n      tag_147\n        /* \"imports/openzeppelin/utils/Context.sol\":720:730  msg.sender */\n      caller\n        /* \"diamonds/facets/FacetToken.sol\":2127:2133  amount */\n      dup3\n        /* \"diamonds/facets/FacetToken.sol\":2107:2112  _burn */\n      tag_196\n        /* \"diamonds/facets/FacetToken.sol\":2107:2134  _burn(_msgSender(), amount) */\n      jump\t// in\n        /* \"diamonds/facets/FacetToken.sol\":3225:3380  function allowance(address owner_, address spender) public view virtual override returns (uint) {... */\n    tag_96:\n        /* \"diamonds/facets/FacetToken.sol\":3315:3319  uint */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":3338:3345  token() */\n      tag_198\n        /* \"diamonds/facets/FacetToken.sol\":3338:3343  token */\n      tag_103\n        /* \"diamonds/facets/FacetToken.sol\":3338:3345  token() */\n      jump\t// in\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetToken.sol\":3338:3364  token().allowances[owner_] */\n      swap4\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"diamonds/facets/FacetToken.sol\":3338:3356  token().allowances */\n      0x01\n      swap2\n      swap1\n      swap2\n      add\n        /* \"diamonds/facets/FacetToken.sol\":3338:3364  token().allowances[owner_] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"diamonds/facets/FacetToken.sol\":3338:3373  token().allowances[owner_][spender] */\n      swap5\n      swap1\n      swap6\n      and\n      dup3\n      mstore\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n      keccak256\n      sload\n      swap1\n        /* \"diamonds/facets/FacetToken.sol\":3225:3380  function allowance(address owner_, address spender) public view virtual override returns (uint) {... */\n      jump\t// out\n        /* \"diamonds/facets/FacetToken.sol\":1447:1663  function ____setName(string memory newName) external virtual {... */\n    tag_100:\n        /* \"diamonds/facets/FacetToken.sol\":1518:1529  _onlySelf() */\n      tag_200\n        /* \"diamonds/facets/FacetToken.sol\":1518:1527  _onlySelf */\n      tag_119\n        /* \"diamonds/facets/FacetToken.sol\":1518:1529  _onlySelf() */\n      jump\t// in\n    tag_200:\n        /* \"diamonds/facets/FacetToken.sol\":1539:1560  string memory oldName */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":1563:1570  token() */\n      tag_201\n        /* \"diamonds/facets/FacetToken.sol\":1563:1568  token */\n      tag_103\n        /* \"diamonds/facets/FacetToken.sol\":1563:1570  token() */\n      jump\t// in\n    tag_201:\n        /* \"diamonds/facets/FacetToken.sol\":1563:1575  token().name */\n      0x06\n      add\n        /* \"diamonds/facets/FacetToken.sol\":1539:1575  string memory oldName = token().name */\n      dup1\n      sload\n      tag_202\n      swap1\n      tag_105\n      jump\t// in\n    tag_202:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_203\n      swap1\n      tag_105\n      jump\t// in\n    tag_203:\n      dup1\n      iszero\n      tag_204\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_205\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_204)\n    tag_205:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_206:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_206\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_204:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"diamonds/facets/FacetToken.sol\":1600:1607  newName */\n      dup2\n        /* \"diamonds/facets/FacetToken.sol\":1585:1592  token() */\n      tag_207\n        /* \"diamonds/facets/FacetToken.sol\":1585:1590  token */\n      tag_103\n        /* \"diamonds/facets/FacetToken.sol\":1585:1592  token() */\n      jump\t// in\n    tag_207:\n        /* \"diamonds/facets/FacetToken.sol\":1585:1597  token().name */\n      0x06\n      add\n      swap1\n        /* \"diamonds/facets/FacetToken.sol\":1585:1607  token().name = newName */\n      tag_208\n      swap1\n        /* \"diamonds/facets/FacetToken.sol\":1585:1597  token().name */\n      dup3\n        /* \"diamonds/facets/FacetToken.sol\":1585:1607  token().name = newName */\n      tag_128\n      jump\t// in\n    tag_208:\n      pop\n        /* \"diamonds/facets/FacetToken.sol\":1648:1655  newName */\n      dup2\n        /* \"diamonds/facets/FacetToken.sol\":1622:1656  TokenNameChanged(oldName, newName) */\n      mload(0x40)\n      tag_209\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"diamonds/facets/FacetToken.sol\":1639:1646  oldName */\n      dup2\n        /* \"diamonds/facets/FacetToken.sol\":1622:1656  TokenNameChanged(oldName, newName) */\n      mload(0x40)\n      tag_210\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      dup2\n      keccak256\n      swap1\n      0xe08ba098c56583ff7ce264f98fb97b7ddc5e6af834acc0556b24327f72a555f9\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"diamonds/facets/FacetToken.sol\":1508:1663  {... */\n      pop\n        /* \"diamonds/facets/FacetToken.sol\":1447:1663  function ____setName(string memory newName) external virtual {... */\n      pop\n      jump\t// out\n        /* \"diamonds/facets/slots/SlotToken.sol\":673:847  function token() internal pure virtual returns (StorageToken storage s) {... */\n    tag_103:\n        /* \"diamonds/facets/slots/SlotToken.sol\":215:238  keccak256('slot.token') */\n      0x667c0cf071c712f94f97f65a859cdaa470fe424825756c2cae5a4d1adcee538b\n      swap1\n        /* \"diamonds/facets/slots/SlotToken.sol\":673:847  function token() internal pure virtual returns (StorageToken storage s) {... */\n      jump\t// out\n        /* \"diamonds/facets/FacetToken.sol\":7305:7662  function _approve(address owner_, address spender, uint amount) internal virtual {... */\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetToken.sol\":7404:7424  owner_ != address(0) */\n      dup4\n      and\n        /* \"diamonds/facets/FacetToken.sol\":7396:7470  require(owner_ != address(0), 'FacetToken: approve from the zero address') */\n      tag_214\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7461:7463   */\n      0x20\n        /* \"diamonds/facets/FacetToken.sol\":7396:7470  require(owner_ != address(0), 'FacetToken: approve from the zero address') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7443:7464   */\n      mstore\n        /* \"#utility.yul\":7500:7502   */\n      0x29\n        /* \"#utility.yul\":7480:7498   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7473:7503   */\n      mstore\n        /* \"#utility.yul\":7539:7573   */\n      0x4661636574546f6b656e3a20617070726f76652066726f6d20746865207a6572\n        /* \"#utility.yul\":7519:7537   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7512:7574   */\n      mstore\n      shl(0xb8, 0x6f2061646472657373)\n        /* \"#utility.yul\":7590:7608   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7583:7622   */\n      mstore\n        /* \"#utility.yul\":7639:7658   */\n      0x84\n      add\n        /* \"diamonds/facets/FacetToken.sol\":7396:7470  require(owner_ != address(0), 'FacetToken: approve from the zero address') */\n      tag_186\n        /* \"#utility.yul\":7259:7664   */\n      jump\n        /* \"diamonds/facets/FacetToken.sol\":7396:7470  require(owner_ != address(0), 'FacetToken: approve from the zero address') */\n    tag_214:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetToken.sol\":7488:7509  spender != address(0) */\n      dup3\n      and\n        /* \"diamonds/facets/FacetToken.sol\":7480:7553  require(spender != address(0), 'FacetToken: approve to the zero address') */\n      tag_217\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7871:7873   */\n      0x20\n        /* \"diamonds/facets/FacetToken.sol\":7480:7553  require(spender != address(0), 'FacetToken: approve to the zero address') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7853:7874   */\n      mstore\n        /* \"#utility.yul\":7910:7912   */\n      0x27\n        /* \"#utility.yul\":7890:7908   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7883:7913   */\n      mstore\n        /* \"#utility.yul\":7949:7983   */\n      0x4661636574546f6b656e3a20617070726f766520746f20746865207a65726f20\n        /* \"#utility.yul\":7929:7947   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7922:7984   */\n      mstore\n      shl(0xc8, 0x61646472657373)\n        /* \"#utility.yul\":8000:8018   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7993:8030   */\n      mstore\n        /* \"#utility.yul\":8047:8066   */\n      0x84\n      add\n        /* \"diamonds/facets/FacetToken.sol\":7480:7553  require(spender != address(0), 'FacetToken: approve to the zero address') */\n      tag_186\n        /* \"#utility.yul\":7669:8072   */\n      jump\n        /* \"diamonds/facets/FacetToken.sol\":7480:7553  require(spender != address(0), 'FacetToken: approve to the zero address') */\n    tag_217:\n        /* \"diamonds/facets/FacetToken.sol\":7601:7607  amount */\n      dup1\n        /* \"diamonds/facets/FacetToken.sol\":7563:7570  token() */\n      tag_220\n        /* \"diamonds/facets/FacetToken.sol\":7563:7568  token */\n      tag_103\n        /* \"diamonds/facets/FacetToken.sol\":7563:7570  token() */\n      jump\t// in\n    tag_220:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetToken.sol\":7563:7589  token().allowances[owner_] */\n      dup6\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"diamonds/facets/FacetToken.sol\":7563:7581  token().allowances */\n      0x01\n      swap4\n      swap1\n      swap4\n      add\n        /* \"diamonds/facets/FacetToken.sol\":7563:7589  token().allowances[owner_] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"diamonds/facets/FacetToken.sol\":7563:7598  token().allowances[owner_][spender] */\n      swap4\n      dup9\n      and\n      dup1\n      dup7\n      mstore\n      swap4\n      dup3\n      mstore\n      swap4\n      dup5\n      swap1\n      keccak256\n        /* \"diamonds/facets/FacetToken.sol\":7563:7607  token().allowances[owner_][spender] = amount */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"diamonds/facets/FacetToken.sol\":7622:7655  Approval(owner_, spender, amount) */\n      swap2\n      mload\n        /* \"#utility.yul\":1445:1470   */\n      dup5\n      dup2\n      mstore\n        /* \"diamonds/facets/FacetToken.sol\":7563:7598  token().allowances[owner_][spender] */\n      swap1\n      swap3\n        /* \"diamonds/facets/FacetToken.sol\":7622:7655  Approval(owner_, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1418:1436   */\n      add\n        /* \"diamonds/facets/FacetToken.sol\":7622:7655  Approval(owner_, spender, amount) */\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"diamonds/facets/FacetToken.sol\":7305:7662  function _approve(address owner_, address spender, uint amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"diamonds/facets/FacetToken.sol\":5066:5177  function _onlySelf() internal view virtual {... */\n    tag_119:\n        /* \"imports/openzeppelin/utils/Context.sol\":720:730  msg.sender */\n      caller\n        /* \"diamonds/facets/FacetToken.sol\":5151:5155  this */\n      address\n        /* \"diamonds/facets/FacetToken.sol\":5127:5156  _msgSender() == address(this) */\n      eq\n        /* \"diamonds/facets/FacetToken.sol\":5119:5170  require(_msgSender() == address(this), 'only self') */\n      tag_224\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8279:8281   */\n      0x20\n        /* \"diamonds/facets/FacetToken.sol\":5119:5170  require(_msgSender() == address(this), 'only self') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8261:8282   */\n      mstore\n        /* \"#utility.yul\":8318:8319   */\n      0x09\n        /* \"#utility.yul\":8298:8316   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8291:8320   */\n      mstore\n      shl(0xb9, 0x37b7363c9039b2b633)\n        /* \"#utility.yul\":8336:8354   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8329:8368   */\n      mstore\n        /* \"#utility.yul\":8385:8403   */\n      0x64\n      add\n        /* \"diamonds/facets/FacetToken.sol\":5119:5170  require(_msgSender() == address(this), 'only self') */\n      tag_186\n        /* \"#utility.yul\":8077:8409   */\n      jump\n        /* \"diamonds/facets/FacetToken.sol\":5119:5170  require(_msgSender() == address(this), 'only self') */\n    tag_224:\n        /* \"diamonds/facets/FacetToken.sol\":5066:5177  function _onlySelf() internal view virtual {... */\n      jump\t// out\n        /* \"diamonds/facets/FacetToken.sol\":6889:7299  function _spendAllowance(address owner_, address spender, uint amount) internal virtual {... */\n    tag_135:\n        /* \"diamonds/facets/FacetToken.sol\":6987:7008  uint currentAllowance */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":7011:7037  allowance(owner_, spender) */\n      tag_228\n        /* \"diamonds/facets/FacetToken.sol\":7021:7027  owner_ */\n      dup5\n        /* \"diamonds/facets/FacetToken.sol\":7029:7036  spender */\n      dup5\n        /* \"diamonds/facets/FacetToken.sol\":7011:7020  allowance */\n      tag_96\n        /* \"diamonds/facets/FacetToken.sol\":7011:7037  allowance(owner_, spender) */\n      jump\t// in\n    tag_228:\n        /* \"diamonds/facets/FacetToken.sol\":6987:7037  uint currentAllowance = allowance(owner_, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"diamonds/facets/FacetToken.sol\":7051:7067  currentAllowance */\n      dup2\n        /* \"diamonds/facets/FacetToken.sol\":7051:7085  currentAllowance != type(uint).max */\n      eq\n        /* \"diamonds/facets/FacetToken.sol\":7047:7293  if (currentAllowance != type(uint).max) {... */\n      tag_233\n      jumpi\n        /* \"diamonds/facets/FacetToken.sol\":7129:7135  amount */\n      dup2\n        /* \"diamonds/facets/FacetToken.sol\":7109:7125  currentAllowance */\n      dup2\n        /* \"diamonds/facets/FacetToken.sol\":7109:7135  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"diamonds/facets/FacetToken.sol\":7101:7174  require(currentAllowance >= amount, 'FacetToken: insufficient allowance') */\n      tag_230\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8616:8618   */\n      0x20\n        /* \"diamonds/facets/FacetToken.sol\":7101:7174  require(currentAllowance >= amount, 'FacetToken: insufficient allowance') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8598:8619   */\n      mstore\n        /* \"#utility.yul\":8655:8657   */\n      0x22\n        /* \"#utility.yul\":8635:8653   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8628:8658   */\n      mstore\n        /* \"#utility.yul\":8694:8728   */\n      0x4661636574546f6b656e3a20696e73756666696369656e7420616c6c6f77616e\n        /* \"#utility.yul\":8674:8692   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8667:8729   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":8745:8763   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8738:8770   */\n      mstore\n        /* \"#utility.yul\":8787:8806   */\n      0x84\n      add\n        /* \"diamonds/facets/FacetToken.sol\":7101:7174  require(currentAllowance >= amount, 'FacetToken: insufficient allowance') */\n      tag_186\n        /* \"#utility.yul\":8414:8812   */\n      jump\n        /* \"diamonds/facets/FacetToken.sol\":7101:7174  require(currentAllowance >= amount, 'FacetToken: insufficient allowance') */\n    tag_230:\n        /* \"diamonds/facets/FacetToken.sol\":7216:7268  _approve(owner_, spender, currentAllowance - amount) */\n      tag_233\n        /* \"diamonds/facets/FacetToken.sol\":7225:7231  owner_ */\n      dup5\n        /* \"diamonds/facets/FacetToken.sol\":7233:7240  spender */\n      dup5\n        /* \"diamonds/facets/FacetToken.sol\":7261:7267  amount */\n      dup5\n        /* \"diamonds/facets/FacetToken.sol\":7242:7258  currentAllowance */\n      dup5\n        /* \"diamonds/facets/FacetToken.sol\":7242:7267  currentAllowance - amount */\n      sub\n        /* \"diamonds/facets/FacetToken.sol\":7216:7224  _approve */\n      tag_114\n        /* \"diamonds/facets/FacetToken.sol\":7216:7268  _approve(owner_, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_233:\n        /* \"diamonds/facets/FacetToken.sol\":6977:7299  {... */\n      pop\n        /* \"diamonds/facets/FacetToken.sol\":6889:7299  function _spendAllowance(address owner_, address spender, uint amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"diamonds/facets/FacetToken.sol\":5183:5834  function _transfer(address from, address to, uint amount) internal virtual {... */\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetToken.sol\":5276:5294  from != address(0) */\n      dup4\n      and\n        /* \"diamonds/facets/FacetToken.sol\":5268:5341  require(from != address(0), 'FacetToken: transfer from the zero address') */\n      tag_235\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9019:9021   */\n      0x20\n        /* \"diamonds/facets/FacetToken.sol\":5268:5341  require(from != address(0), 'FacetToken: transfer from the zero address') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9001:9022   */\n      mstore\n        /* \"#utility.yul\":9058:9060   */\n      0x2a\n        /* \"#utility.yul\":9038:9056   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9031:9061   */\n      mstore\n        /* \"#utility.yul\":9097:9131   */\n      0x4661636574546f6b656e3a207472616e736665722066726f6d20746865207a65\n        /* \"#utility.yul\":9077:9095   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9070:9132   */\n      mstore\n      shl(0xb0, 0x726f2061646472657373)\n        /* \"#utility.yul\":9148:9166   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9141:9181   */\n      mstore\n        /* \"#utility.yul\":9198:9217   */\n      0x84\n      add\n        /* \"diamonds/facets/FacetToken.sol\":5268:5341  require(from != address(0), 'FacetToken: transfer from the zero address') */\n      tag_186\n        /* \"#utility.yul\":8817:9223   */\n      jump\n        /* \"diamonds/facets/FacetToken.sol\":5268:5341  require(from != address(0), 'FacetToken: transfer from the zero address') */\n    tag_235:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetToken.sol\":5359:5375  to != address(0) */\n      dup3\n      and\n        /* \"diamonds/facets/FacetToken.sol\":5351:5420  require(to != address(0), 'FacetToken: transfer to the zero address') */\n      tag_238\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9430:9432   */\n      0x20\n        /* \"diamonds/facets/FacetToken.sol\":5351:5420  require(to != address(0), 'FacetToken: transfer to the zero address') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9412:9433   */\n      mstore\n        /* \"#utility.yul\":9469:9471   */\n      0x28\n        /* \"#utility.yul\":9449:9467   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9442:9472   */\n      mstore\n        /* \"#utility.yul\":9508:9542   */\n      0x4661636574546f6b656e3a207472616e7366657220746f20746865207a65726f\n        /* \"#utility.yul\":9488:9506   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9481:9543   */\n      mstore\n      shl(0xc0, 0x2061646472657373)\n        /* \"#utility.yul\":9559:9577   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9552:9590   */\n      mstore\n        /* \"#utility.yul\":9607:9626   */\n      0x84\n      add\n        /* \"diamonds/facets/FacetToken.sol\":5351:5420  require(to != address(0), 'FacetToken: transfer to the zero address') */\n      tag_186\n        /* \"#utility.yul\":9228:9632   */\n      jump\n        /* \"diamonds/facets/FacetToken.sol\":5351:5420  require(to != address(0), 'FacetToken: transfer to the zero address') */\n    tag_238:\n        /* \"diamonds/facets/FacetToken.sol\":5430:5468  _beforeTokenTransfer(from, to, amount) */\n      tag_241\n        /* \"diamonds/facets/FacetToken.sol\":5451:5455  from */\n      dup4\n        /* \"diamonds/facets/FacetToken.sol\":5457:5459  to */\n      dup4\n        /* \"diamonds/facets/FacetToken.sol\":5461:5467  amount */\n      dup4\n        /* \"diamonds/facets/FacetToken.sol\":5430:5450  _beforeTokenTransfer */\n      tag_242\n        /* \"diamonds/facets/FacetToken.sol\":5430:5468  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_241:\n        /* \"diamonds/facets/FacetToken.sol\":5478:5494  uint fromBalance */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":5497:5504  token() */\n      tag_243\n        /* \"diamonds/facets/FacetToken.sol\":5497:5502  token */\n      tag_103\n        /* \"diamonds/facets/FacetToken.sol\":5497:5504  token() */\n      jump\t// in\n    tag_243:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetToken.sol\":5497:5519  token().balances[from] */\n      dup6\n      and\n        /* \"diamonds/facets/FacetToken.sol\":5497:5513  token().balances */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":5497:5519  token().balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n      pop\n        /* \"diamonds/facets/FacetToken.sol\":5537:5558  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"diamonds/facets/FacetToken.sol\":5529:5606  require(fromBalance >= amount, 'FacetToken: transfer amount exceeds balance') */\n      tag_244\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9839:9841   */\n      0x20\n        /* \"diamonds/facets/FacetToken.sol\":5529:5606  require(fromBalance >= amount, 'FacetToken: transfer amount exceeds balance') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9821:9842   */\n      mstore\n        /* \"#utility.yul\":9878:9880   */\n      0x2b\n        /* \"#utility.yul\":9858:9876   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9851:9881   */\n      mstore\n        /* \"#utility.yul\":9917:9951   */\n      0x4661636574546f6b656e3a207472616e7366657220616d6f756e742065786365\n        /* \"#utility.yul\":9897:9915   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9890:9952   */\n      mstore\n      shl(0xa8, 0x6564732062616c616e6365)\n        /* \"#utility.yul\":9968:9986   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9961:10002   */\n      mstore\n        /* \"#utility.yul\":10019:10038   */\n      0x84\n      add\n        /* \"diamonds/facets/FacetToken.sol\":5529:5606  require(fromBalance >= amount, 'FacetToken: transfer amount exceeds balance') */\n      tag_186\n        /* \"#utility.yul\":9637:10044   */\n      jump\n        /* \"diamonds/facets/FacetToken.sol\":5529:5606  require(fromBalance >= amount, 'FacetToken: transfer amount exceeds balance') */\n    tag_244:\n        /* \"diamonds/facets/FacetToken.sol\":5679:5685  amount */\n      dup2\n        /* \"diamonds/facets/FacetToken.sol\":5665:5676  fromBalance */\n      dup2\n        /* \"diamonds/facets/FacetToken.sol\":5665:5685  fromBalance - amount */\n      sub\n        /* \"diamonds/facets/FacetToken.sol\":5640:5647  token() */\n      tag_247\n        /* \"diamonds/facets/FacetToken.sol\":5640:5645  token */\n      tag_103\n        /* \"diamonds/facets/FacetToken.sol\":5640:5647  token() */\n      jump\t// in\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetToken.sol\":5640:5662  token().balances[from] */\n      dup7\n      and\n        /* \"diamonds/facets/FacetToken.sol\":5640:5656  token().balances */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":5640:5662  token().balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"diamonds/facets/FacetToken.sol\":5640:5685  token().balances[from] = fromBalance - amount */\n      sstore\n        /* \"diamonds/facets/FacetToken.sol\":5723:5729  amount */\n      dup2\n        /* \"diamonds/facets/FacetToken.sol\":5699:5706  token() */\n      tag_248\n        /* \"diamonds/facets/FacetToken.sol\":5699:5704  token */\n      tag_103\n        /* \"diamonds/facets/FacetToken.sol\":5699:5706  token() */\n      jump\t// in\n    tag_248:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetToken.sol\":5699:5719  token().balances[to] */\n      dup6\n      dup2\n      and\n        /* \"diamonds/facets/FacetToken.sol\":5699:5715  token().balances */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":5699:5719  token().balances[to] */\n      dup2\n      dup2\n      mstore\n      0x20\n      swap4\n      dup5\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"diamonds/facets/FacetToken.sol\":5699:5729  token().balances[to] += amount */\n      dup1\n      sload\n      swap6\n      swap1\n      swap6\n      add\n      swap1\n      swap5\n      sstore\n        /* \"diamonds/facets/FacetToken.sol\":5754:5780  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1445:1470   */\n      dup6\n      dup2\n      mstore\n        /* \"diamonds/facets/FacetToken.sol\":5754:5780  Transfer(from, to, amount) */\n      swap1\n      dup8\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1418:1436   */\n      add\n        /* \"diamonds/facets/FacetToken.sol\":5754:5780  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"diamonds/facets/FacetToken.sol\":5790:5827  _afterTokenTransfer(from, to, amount) */\n      tag_233\n        /* \"diamonds/facets/FacetToken.sol\":6282:6883  function _burn(address account, uint amount) internal virtual {... */\n      jump\n        /* \"diamonds/facets/FacetToken.sol\":5840:6276  function _mint(address account, uint amount) internal virtual {... */\n    tag_149:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetToken.sol\":5920:5941  account != address(0) */\n      dup3\n      and\n        /* \"diamonds/facets/FacetToken.sol\":5912:5982  require(account != address(0), 'FacetToken: mint to the zero address') */\n      tag_253\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10251:10253   */\n      0x20\n        /* \"diamonds/facets/FacetToken.sol\":5912:5982  require(account != address(0), 'FacetToken: mint to the zero address') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10233:10254   */\n      mstore\n        /* \"#utility.yul\":10290:10292   */\n      0x24\n        /* \"#utility.yul\":10270:10288   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":10263:10293   */\n      mstore\n        /* \"#utility.yul\":10329:10363   */\n      0x4661636574546f6b656e3a206d696e7420746f20746865207a65726f20616464\n        /* \"#utility.yul\":10309:10327   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10302:10364   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":10380:10398   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10373:10407   */\n      mstore\n        /* \"#utility.yul\":10424:10443   */\n      0x84\n      add\n        /* \"diamonds/facets/FacetToken.sol\":5912:5982  require(account != address(0), 'FacetToken: mint to the zero address') */\n      tag_186\n        /* \"#utility.yul\":10049:10449   */\n      jump\n        /* \"diamonds/facets/FacetToken.sol\":5912:5982  require(account != address(0), 'FacetToken: mint to the zero address') */\n    tag_253:\n        /* \"diamonds/facets/FacetToken.sol\":5992:6041  _beforeTokenTransfer(address(0), account, amount) */\n      tag_256\n        /* \"diamonds/facets/FacetToken.sol\":6021:6022  0 */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":6025:6032  account */\n      dup4\n        /* \"diamonds/facets/FacetToken.sol\":6034:6040  amount */\n      dup4\n        /* \"diamonds/facets/FacetToken.sol\":5992:6012  _beforeTokenTransfer */\n      tag_242\n        /* \"diamonds/facets/FacetToken.sol\":5992:6041  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_256:\n        /* \"diamonds/facets/FacetToken.sol\":6074:6080  amount */\n      dup1\n        /* \"diamonds/facets/FacetToken.sol\":6051:6058  token() */\n      tag_257\n        /* \"diamonds/facets/FacetToken.sol\":6051:6056  token */\n      tag_103\n        /* \"diamonds/facets/FacetToken.sol\":6051:6058  token() */\n      jump\t// in\n    tag_257:\n        /* \"diamonds/facets/FacetToken.sol\":6051:6070  token().totalSupply */\n      0x08\n      add\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":6051:6080  token().totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_258\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_258:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"diamonds/facets/FacetToken.sol\":6143:6149  amount */\n      dup2\n      swap1\n      pop\n        /* \"diamonds/facets/FacetToken.sol\":6114:6121  token() */\n      tag_259\n        /* \"diamonds/facets/FacetToken.sol\":6114:6119  token */\n      tag_103\n        /* \"diamonds/facets/FacetToken.sol\":6114:6121  token() */\n      jump\t// in\n    tag_259:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetToken.sol\":6114:6139  token().balances[account] */\n      dup5\n      and\n        /* \"diamonds/facets/FacetToken.sol\":6114:6130  token().balances */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":6114:6139  token().balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"diamonds/facets/FacetToken.sol\":6114:6149  token().balances[account] += amount */\n      dup1\n      sload\n      swap1\n      swap5\n      add\n      swap1\n      swap4\n      sstore\n        /* \"diamonds/facets/FacetToken.sol\":6174:6211  Transfer(address(0), account, amount) */\n      swap2\n      mload\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_260\n      swap1\n        /* \"diamonds/facets/FacetToken.sol\":6204:6210  amount */\n      dup6\n        /* \"#utility.yul\":1445:1470   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1433:1435   */\n      0x20\n        /* \"#utility.yul\":1418:1436   */\n      add\n      swap1\n        /* \"#utility.yul\":1299:1476   */\n      jump\n        /* \"diamonds/facets/FacetToken.sol\":6174:6211  Transfer(address(0), account, amount) */\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"diamonds/facets/FacetToken.sol\":5840:6276  function _mint(address account, uint amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"diamonds/facets/FacetToken.sol\":8208:8672  function _valueAt(uint snapshotId, Snapshots storage snapshots) private view returns (bool, uint) {... */\n    tag_153:\n        /* \"diamonds/facets/FacetToken.sol\":8294:8298  bool */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":8300:8304  uint */\n      dup1\n        /* \"diamonds/facets/FacetToken.sol\":8337:8338  0 */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":8324:8334  snapshotId */\n      dup5\n        /* \"diamonds/facets/FacetToken.sol\":8324:8338  snapshotId > 0 */\n      gt\n        /* \"diamonds/facets/FacetToken.sol\":8316:8362  require(snapshotId > 0, 'FacetToken: id is 0') */\n      tag_263\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10656:10658   */\n      0x20\n        /* \"diamonds/facets/FacetToken.sol\":8316:8362  require(snapshotId > 0, 'FacetToken: id is 0') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10638:10659   */\n      mstore\n        /* \"#utility.yul\":10695:10697   */\n      0x13\n        /* \"#utility.yul\":10675:10693   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10668:10698   */\n      mstore\n      shl(0x6c, 0x04661636574546f6b656e3a206964206973203)\n        /* \"#utility.yul\":10714:10732   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10707:10756   */\n      mstore\n        /* \"#utility.yul\":10773:10791   */\n      0x64\n      add\n        /* \"diamonds/facets/FacetToken.sol\":8316:8362  require(snapshotId > 0, 'FacetToken: id is 0') */\n      tag_186\n        /* \"#utility.yul\":10454:10797   */\n      jump\n        /* \"diamonds/facets/FacetToken.sol\":8316:8362  require(snapshotId > 0, 'FacetToken: id is 0') */\n    tag_263:\n        /* \"diamonds/facets/FacetToken.sol\":8394:8416  getCurrentSnapshotId() */\n      tag_266\n        /* \"diamonds/facets/FacetToken.sol\":8394:8414  getCurrentSnapshotId */\n      tag_65\n        /* \"diamonds/facets/FacetToken.sol\":8394:8416  getCurrentSnapshotId() */\n      jump\t// in\n    tag_266:\n        /* \"diamonds/facets/FacetToken.sol\":8380:8390  snapshotId */\n      dup5\n        /* \"diamonds/facets/FacetToken.sol\":8380:8416  snapshotId <= getCurrentSnapshotId() */\n      gt\n      iszero\n        /* \"diamonds/facets/FacetToken.sol\":8372:8447  require(snapshotId <= getCurrentSnapshotId(), 'FacetToken: nonexistent id') */\n      tag_267\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11004:11006   */\n      0x20\n        /* \"diamonds/facets/FacetToken.sol\":8372:8447  require(snapshotId <= getCurrentSnapshotId(), 'FacetToken: nonexistent id') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10986:11007   */\n      mstore\n        /* \"#utility.yul\":11043:11045   */\n      0x1a\n        /* \"#utility.yul\":11023:11041   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11016:11046   */\n      mstore\n        /* \"#utility.yul\":11082:11110   */\n      0x4661636574546f6b656e3a206e6f6e6578697374656e74206964000000000000\n        /* \"#utility.yul\":11062:11080   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11055:11111   */\n      mstore\n        /* \"#utility.yul\":11128:11146   */\n      0x64\n      add\n        /* \"diamonds/facets/FacetToken.sol\":8372:8447  require(snapshotId <= getCurrentSnapshotId(), 'FacetToken: nonexistent id') */\n      tag_186\n        /* \"#utility.yul\":10802:11152   */\n      jump\n        /* \"diamonds/facets/FacetToken.sol\":8372:8447  require(snapshotId <= getCurrentSnapshotId(), 'FacetToken: nonexistent id') */\n    tag_267:\n        /* \"diamonds/facets/FacetToken.sol\":8457:8467  uint index */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":8470:8510  snapshots.ids.findUpperBound(snapshotId) */\n      tag_270\n        /* \"diamonds/facets/FacetToken.sol\":8470:8479  snapshots */\n      dup5\n        /* \"diamonds/facets/FacetToken.sol\":8499:8509  snapshotId */\n      dup7\n        /* \"diamonds/facets/FacetToken.sol\":8470:8498  snapshots.ids.findUpperBound */\n      tag_271\n        /* \"diamonds/facets/FacetToken.sol\":8470:8510  snapshots.ids.findUpperBound(snapshotId) */\n      jump\t// in\n    tag_270:\n        /* \"diamonds/facets/FacetToken.sol\":8533:8553  snapshots.ids.length */\n      dup5\n      sload\n        /* \"diamonds/facets/FacetToken.sol\":8457:8510  uint index = snapshots.ids.findUpperBound(snapshotId) */\n      swap1\n      swap2\n      pop\n        /* \"diamonds/facets/FacetToken.sol\":8524:8553  index == snapshots.ids.length */\n      dup2\n      sub\n        /* \"diamonds/facets/FacetToken.sol\":8520:8666  if (index == snapshots.ids.length) {... */\n      tag_272\n      jumpi\n        /* \"diamonds/facets/FacetToken.sol\":8577:8582  false */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":8584:8585  0 */\n      dup1\n        /* \"diamonds/facets/FacetToken.sol\":8569:8586  return (false, 0) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_262)\n        /* \"diamonds/facets/FacetToken.sol\":8520:8666  if (index == snapshots.ids.length) {... */\n    tag_272:\n        /* \"diamonds/facets/FacetToken.sol\":8625:8629  true */\n      0x01\n        /* \"diamonds/facets/FacetToken.sol\":8631:8640  snapshots */\n      dup5\n        /* \"diamonds/facets/FacetToken.sol\":8631:8647  snapshots.values */\n      0x01\n      add\n        /* \"diamonds/facets/FacetToken.sol\":8648:8653  index */\n      dup3\n        /* \"diamonds/facets/FacetToken.sol\":8631:8654  snapshots.values[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_275\n      jumpi\n      tag_275\n      tag_276\n      jump\t// in\n    tag_275:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"diamonds/facets/FacetToken.sol\":8617:8655  return (true, snapshots.values[index]) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"diamonds/facets/FacetToken.sol\":8208:8672  function _valueAt(uint snapshotId, Snapshots storage snapshots) private view returns (bool, uint) {... */\n    tag_262:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"diamonds/facets/FacetToken.sol\":6282:6883  function _burn(address account, uint amount) internal virtual {... */\n    tag_196:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetToken.sol\":6362:6383  account != address(0) */\n      dup3\n      and\n        /* \"diamonds/facets/FacetToken.sol\":6354:6426  require(account != address(0), 'FacetToken: burn from the zero address') */\n      tag_281\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11491:11493   */\n      0x20\n        /* \"diamonds/facets/FacetToken.sol\":6354:6426  require(account != address(0), 'FacetToken: burn from the zero address') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11473:11494   */\n      mstore\n        /* \"#utility.yul\":11530:11532   */\n      0x26\n        /* \"#utility.yul\":11510:11528   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11503:11533   */\n      mstore\n        /* \"#utility.yul\":11569:11603   */\n      0x4661636574546f6b656e3a206275726e2066726f6d20746865207a65726f2061\n        /* \"#utility.yul\":11549:11567   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11542:11604   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":11620:11638   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11613:11649   */\n      mstore\n        /* \"#utility.yul\":11666:11685   */\n      0x84\n      add\n        /* \"diamonds/facets/FacetToken.sol\":6354:6426  require(account != address(0), 'FacetToken: burn from the zero address') */\n      tag_186\n        /* \"#utility.yul\":11289:11691   */\n      jump\n        /* \"diamonds/facets/FacetToken.sol\":6354:6426  require(account != address(0), 'FacetToken: burn from the zero address') */\n    tag_281:\n        /* \"diamonds/facets/FacetToken.sol\":6436:6485  _beforeTokenTransfer(account, address(0), amount) */\n      tag_284\n        /* \"diamonds/facets/FacetToken.sol\":6457:6464  account */\n      dup3\n        /* \"diamonds/facets/FacetToken.sol\":6474:6475  0 */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":6478:6484  amount */\n      dup4\n        /* \"diamonds/facets/FacetToken.sol\":6436:6456  _beforeTokenTransfer */\n      tag_242\n        /* \"diamonds/facets/FacetToken.sol\":6436:6485  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_284:\n        /* \"diamonds/facets/FacetToken.sol\":6495:6514  uint accountBalance */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":6517:6524  token() */\n      tag_285\n        /* \"diamonds/facets/FacetToken.sol\":6517:6522  token */\n      tag_103\n        /* \"diamonds/facets/FacetToken.sol\":6517:6524  token() */\n      jump\t// in\n    tag_285:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetToken.sol\":6517:6542  token().balances[account] */\n      dup5\n      and\n        /* \"diamonds/facets/FacetToken.sol\":6517:6533  token().balances */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":6517:6542  token().balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n      pop\n        /* \"diamonds/facets/FacetToken.sol\":6560:6584  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"diamonds/facets/FacetToken.sol\":6552:6628  require(accountBalance >= amount, 'FacetToken: burn amount exceeds balance') */\n      tag_286\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11898:11900   */\n      0x20\n        /* \"diamonds/facets/FacetToken.sol\":6552:6628  require(accountBalance >= amount, 'FacetToken: burn amount exceeds balance') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11880:11901   */\n      mstore\n        /* \"#utility.yul\":11937:11939   */\n      0x27\n        /* \"#utility.yul\":11917:11935   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11910:11940   */\n      mstore\n        /* \"#utility.yul\":11976:12010   */\n      0x4661636574546f6b656e3a206275726e20616d6f756e74206578636565647320\n        /* \"#utility.yul\":11956:11974   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11949:12011   */\n      mstore\n      shl(0xc8, 0x62616c616e6365)\n        /* \"#utility.yul\":12027:12045   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12020:12057   */\n      mstore\n        /* \"#utility.yul\":12074:12093   */\n      0x84\n      add\n        /* \"diamonds/facets/FacetToken.sol\":6552:6628  require(accountBalance >= amount, 'FacetToken: burn amount exceeds balance') */\n      tag_186\n        /* \"#utility.yul\":11696:12099   */\n      jump\n        /* \"diamonds/facets/FacetToken.sol\":6552:6628  require(accountBalance >= amount, 'FacetToken: burn amount exceeds balance') */\n    tag_286:\n        /* \"diamonds/facets/FacetToken.sol\":6707:6713  amount */\n      dup2\n        /* \"diamonds/facets/FacetToken.sol\":6690:6704  accountBalance */\n      dup2\n        /* \"diamonds/facets/FacetToken.sol\":6690:6713  accountBalance - amount */\n      sub\n        /* \"diamonds/facets/FacetToken.sol\":6662:6669  token() */\n      tag_289\n        /* \"diamonds/facets/FacetToken.sol\":6662:6667  token */\n      tag_103\n        /* \"diamonds/facets/FacetToken.sol\":6662:6669  token() */\n      jump\t// in\n    tag_289:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetToken.sol\":6662:6687  token().balances[account] */\n      dup6\n      and\n        /* \"diamonds/facets/FacetToken.sol\":6662:6678  token().balances */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":6662:6687  token().balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"diamonds/facets/FacetToken.sol\":6662:6713  token().balances[account] = accountBalance - amount */\n      sstore\n        /* \"diamonds/facets/FacetToken.sol\":6750:6756  amount */\n      dup2\n        /* \"diamonds/facets/FacetToken.sol\":6727:6734  token() */\n      tag_290\n        /* \"diamonds/facets/FacetToken.sol\":6727:6732  token */\n      tag_103\n        /* \"diamonds/facets/FacetToken.sol\":6727:6734  token() */\n      jump\t// in\n    tag_290:\n        /* \"diamonds/facets/FacetToken.sol\":6727:6746  token().totalSupply */\n      0x08\n      add\n        /* \"diamonds/facets/FacetToken.sol\":6727:6756  token().totalSupply -= amount */\n      dup1\n      sload\n      swap2\n      swap1\n      swap2\n      sub\n      swap1\n      sstore\n        /* \"diamonds/facets/FacetToken.sol\":6781:6818  Transfer(account, address(0), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1445:1470   */\n      dup3\n      dup2\n      mstore\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetToken.sol\":6781:6818  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":1433:1435   */\n      0x20\n        /* \"#utility.yul\":1418:1436   */\n      add\n        /* \"diamonds/facets/FacetToken.sol\":6781:6818  Transfer(account, address(0), amount) */\n      tag_221\n        /* \"#utility.yul\":1299:1476   */\n      jump\n        /* \"diamonds/facets/FacetToken.sol\":6828:6876  _afterTokenTransfer(account, address(0), amount) */\n    tag_292:\n        /* \"diamonds/facets/FacetToken.sol\":6344:6883  {... */\n      pop\n        /* \"diamonds/facets/FacetToken.sol\":6282:6883  function _burn(address account, uint amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"diamonds/facets/FacetToken.sol\":7668:8109  function _beforeTokenTransfer(address from, address to, uint amount) internal virtual {... */\n    tag_242:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetToken.sol\":7768:7786  from == address(0) */\n      dup4\n      and\n        /* \"diamonds/facets/FacetToken.sol\":7764:8103  if (from == address(0)) {... */\n      tag_294\n      jumpi\n        /* \"diamonds/facets/FacetToken.sol\":7802:7828  _updateAccountSnapshot(to) */\n      tag_295\n        /* \"diamonds/facets/FacetToken.sol\":7825:7827  to */\n      dup3\n        /* \"diamonds/facets/FacetToken.sol\":7802:7824  _updateAccountSnapshot */\n      tag_296\n        /* \"diamonds/facets/FacetToken.sol\":7802:7828  _updateAccountSnapshot(to) */\n      jump\t// in\n    tag_295:\n        /* \"diamonds/facets/FacetToken.sol\":7842:7870  _updateTotalSupplySnapshot() */\n      tag_292\n        /* \"diamonds/facets/FacetToken.sol\":7842:7868  _updateTotalSupplySnapshot */\n      tag_298\n        /* \"diamonds/facets/FacetToken.sol\":7842:7870  _updateTotalSupplySnapshot() */\n      jump\t// in\n        /* \"diamonds/facets/FacetToken.sol\":7764:8103  if (from == address(0)) {... */\n    tag_294:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetToken.sol\":7891:7907  to == address(0) */\n      dup3\n      and\n        /* \"diamonds/facets/FacetToken.sol\":7887:8103  if (to == address(0)) {... */\n      tag_300\n      jumpi\n        /* \"diamonds/facets/FacetToken.sol\":7923:7951  _updateAccountSnapshot(from) */\n      tag_295\n        /* \"diamonds/facets/FacetToken.sol\":7946:7950  from */\n      dup4\n        /* \"diamonds/facets/FacetToken.sol\":7923:7945  _updateAccountSnapshot */\n      tag_296\n        /* \"diamonds/facets/FacetToken.sol\":7923:7951  _updateAccountSnapshot(from) */\n      jump\t// in\n        /* \"diamonds/facets/FacetToken.sol\":7887:8103  if (to == address(0)) {... */\n    tag_300:\n        /* \"diamonds/facets/FacetToken.sol\":8024:8052  _updateAccountSnapshot(from) */\n      tag_304\n        /* \"diamonds/facets/FacetToken.sol\":8047:8051  from */\n      dup4\n        /* \"diamonds/facets/FacetToken.sol\":8024:8046  _updateAccountSnapshot */\n      tag_296\n        /* \"diamonds/facets/FacetToken.sol\":8024:8052  _updateAccountSnapshot(from) */\n      jump\t// in\n    tag_304:\n        /* \"diamonds/facets/FacetToken.sol\":8066:8092  _updateAccountSnapshot(to) */\n      tag_292\n        /* \"diamonds/facets/FacetToken.sol\":8089:8091  to */\n      dup3\n        /* \"diamonds/facets/FacetToken.sol\":8066:8088  _updateAccountSnapshot */\n      tag_296\n        /* \"diamonds/facets/FacetToken.sol\":8066:8092  _updateAccountSnapshot(to) */\n      jump\t// in\n        /* \"imports/openzeppelin/utils/Arrays.sol\":714:1646  function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {... */\n    tag_271:\n        /* \"imports/openzeppelin/utils/Arrays.sol\":826:838  array.length */\n      dup2\n      sload\n        /* \"imports/openzeppelin/utils/Arrays.sol\":803:810  uint256 */\n      0x00\n      swap1\n        /* \"imports/openzeppelin/utils/Arrays.sol\":826:843  array.length == 0 */\n      dup2\n      sub\n        /* \"imports/openzeppelin/utils/Arrays.sol\":822:878  if (array.length == 0) {... */\n      tag_308\n      jumpi\n      pop\n        /* \"imports/openzeppelin/utils/Arrays.sol\":866:867  0 */\n      0x00\n        /* \"imports/openzeppelin/utils/Arrays.sol\":859:867  return 0 */\n      jump(tag_110)\n        /* \"imports/openzeppelin/utils/Arrays.sol\":822:878  if (array.length == 0) {... */\n    tag_308:\n        /* \"imports/openzeppelin/utils/Arrays.sol\":928:940  array.length */\n      dup3\n      sload\n        /* \"imports/openzeppelin/utils/Arrays.sol\":888:899  uint256 low */\n      0x00\n      swap1\n        /* \"imports/openzeppelin/utils/Arrays.sol\":951:1385  while (low < high) {... */\n    tag_309:\n        /* \"imports/openzeppelin/utils/Arrays.sol\":964:968  high */\n      dup1\n        /* \"imports/openzeppelin/utils/Arrays.sol\":958:961  low */\n      dup3\n        /* \"imports/openzeppelin/utils/Arrays.sol\":958:968  low < high */\n      lt\n        /* \"imports/openzeppelin/utils/Arrays.sol\":951:1385  while (low < high) {... */\n      iszero\n      tag_310\n      jumpi\n        /* \"imports/openzeppelin/utils/Arrays.sol\":984:995  uint256 mid */\n      0x00\n        /* \"imports/openzeppelin/utils/Arrays.sol\":998:1021  Math.average(low, high) */\n      tag_311\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1011:1014  low */\n      dup4\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1016:1020  high */\n      dup4\n        /* \"imports/openzeppelin/utils/Arrays.sol\":998:1010  Math.average */\n      tag_312\n        /* \"imports/openzeppelin/utils/Arrays.sol\":998:1021  Math.average(low, high) */\n      jump\t// in\n    tag_311:\n        /* \"imports/openzeppelin/utils/Arrays.sol\":3479:3510  StorageSlot.Uint256Slot storage */\n      0x00\n        /* \"imports/openzeppelin/utils/Arrays.sol\":3849:3868  mstore(0, arr.slot) */\n      dup8\n      dup2\n      mstore\n        /* \"imports/openzeppelin/utils/Arrays.sol\":3906:3910  0x20 */\n      0x20\n        /* \"imports/openzeppelin/utils/Arrays.sol\":3893:3911  keccak256(0, 0x20) */\n      swap1\n      keccak256\n        /* \"imports/openzeppelin/utils/Arrays.sol\":984:1021  uint256 mid = Math.average(low, high) */\n      swap1\n      swap2\n      pop\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1271:1278  element */\n      dup6\n      swap1\n        /* \"imports/openzeppelin/utils/Arrays.sol\":3889:3917  add(keccak256(0, 0x20), pos) */\n      dup3\n      add\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1238:1268  unsafeAccess(array, mid).value */\n      sload\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1238:1278  unsafeAccess(array, mid).value > element */\n      gt\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1234:1375  if (unsafeAccess(array, mid).value > element) {... */\n      iszero\n      tag_315\n      jumpi\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1305:1308  mid */\n      dup1\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1298:1308  high = mid */\n      swap2\n      pop\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1234:1375  if (unsafeAccess(array, mid).value > element) {... */\n      jump(tag_316)\n    tag_315:\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1353:1360  mid + 1 */\n      tag_317\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1353:1356  mid */\n      dup2\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1359:1360  1 */\n      0x01\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1353:1360  mid + 1 */\n      tag_144\n      jump\t// in\n    tag_317:\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1347:1360  low = mid + 1 */\n      swap3\n      pop\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1234:1375  if (unsafeAccess(array, mid).value > element) {... */\n    tag_316:\n        /* \"imports/openzeppelin/utils/Arrays.sol\":970:1385  {... */\n      pop\n        /* \"imports/openzeppelin/utils/Arrays.sol\":951:1385  while (low < high) {... */\n      jump(tag_309)\n    tag_310:\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1508:1509  0 */\n      0x00\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1502:1505  low */\n      dup3\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1502:1509  low > 0 */\n      gt\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1502:1558  low > 0 && unsafeAccess(array, low - 1).value == element */\n      dup1\n      iszero\n      tag_318\n      jumpi\n      pop\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1551:1558  element */\n      dup4\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1513:1541  unsafeAccess(array, low - 1) */\n      tag_319\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1526:1531  array */\n      dup7\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1533:1540  low - 1 */\n      tag_320\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1539:1540  1 */\n      0x01\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1533:1536  low */\n      dup7\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1533:1540  low - 1 */\n      tag_321\n      jump\t// in\n    tag_320:\n        /* \"imports/openzeppelin/utils/Arrays.sol\":3479:3510  StorageSlot.Uint256Slot storage */\n      0x00\n        /* \"imports/openzeppelin/utils/Arrays.sol\":3849:3868  mstore(0, arr.slot) */\n      swap2\n      dup3\n      mstore\n        /* \"imports/openzeppelin/utils/Arrays.sol\":3906:3910  0x20 */\n      0x20\n        /* \"imports/openzeppelin/utils/Arrays.sol\":3893:3911  keccak256(0, 0x20) */\n      swap1\n      swap2\n      keccak256\n        /* \"imports/openzeppelin/utils/Arrays.sol\":3889:3917  add(keccak256(0, 0x20), pos) */\n      add\n      swap1\n        /* \"imports/openzeppelin/utils/Arrays.sol\":3398:3971  function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {... */\n      jump\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1513:1541  unsafeAccess(array, low - 1) */\n    tag_319:\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1513:1547  unsafeAccess(array, low - 1).value */\n      sload\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1513:1558  unsafeAccess(array, low - 1).value == element */\n      eq\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1502:1558  low > 0 && unsafeAccess(array, low - 1).value == element */\n    tag_318:\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1498:1640  if (low > 0 && unsafeAccess(array, low - 1).value == element) {... */\n      iszero\n      tag_322\n      jumpi\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1581:1588  low - 1 */\n      tag_323\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1587:1588  1 */\n      0x01\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1581:1584  low */\n      dup4\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1581:1588  low - 1 */\n      tag_321\n      jump\t// in\n    tag_323:\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1574:1588  return low - 1 */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_110)\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1498:1640  if (low > 0 && unsafeAccess(array, low - 1).value == element) {... */\n    tag_322:\n      pop\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1626:1629  low */\n      swap1\n      pop\n        /* \"imports/openzeppelin/utils/Arrays.sol\":1619:1629  return low */\n      jump(tag_110)\n        /* \"diamonds/facets/FacetToken.sol\":8678:8824  function _updateAccountSnapshot(address account) private {... */\n    tag_296:\n        /* \"diamonds/facets/FacetToken.sol\":8745:8817  _updateSnapshot(token().snapshotsOfBalance[account], balanceOf(account)) */\n      tag_147\n        /* \"diamonds/facets/FacetToken.sol\":8761:8768  token() */\n      tag_327\n        /* \"diamonds/facets/FacetToken.sol\":8761:8766  token */\n      tag_103\n        /* \"diamonds/facets/FacetToken.sol\":8761:8768  token() */\n      jump\t// in\n    tag_327:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetToken.sol\":8761:8796  token().snapshotsOfBalance[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"diamonds/facets/FacetToken.sol\":8761:8787  token().snapshotsOfBalance */\n      0x02\n      swap2\n      swap1\n      swap2\n      add\n        /* \"diamonds/facets/FacetToken.sol\":8761:8796  token().snapshotsOfBalance[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"diamonds/facets/FacetToken.sol\":8798:8816  balanceOf(account) */\n      tag_328\n        /* \"diamonds/facets/FacetToken.sol\":8788:8795  account */\n      dup4\n        /* \"diamonds/facets/FacetToken.sol\":8798:8807  balanceOf */\n      tag_70\n        /* \"diamonds/facets/FacetToken.sol\":8798:8816  balanceOf(account) */\n      jump\t// in\n    tag_328:\n        /* \"diamonds/facets/FacetToken.sol\":8745:8760  _updateSnapshot */\n      tag_329\n        /* \"diamonds/facets/FacetToken.sol\":8745:8817  _updateSnapshot(token().snapshotsOfBalance[account], balanceOf(account)) */\n      jump\t// in\n        /* \"diamonds/facets/FacetToken.sol\":8830:8955  function _updateTotalSupplySnapshot() private {... */\n    tag_298:\n        /* \"diamonds/facets/FacetToken.sol\":8886:8948  _updateSnapshot(token().snapshotsOfTotalSupply, totalSupply()) */\n      tag_224\n        /* \"diamonds/facets/FacetToken.sol\":8902:8909  token() */\n      tag_332\n        /* \"diamonds/facets/FacetToken.sol\":8902:8907  token */\n      tag_103\n        /* \"diamonds/facets/FacetToken.sol\":8902:8909  token() */\n      jump\t// in\n    tag_332:\n        /* \"diamonds/facets/FacetToken.sol\":8902:8932  token().snapshotsOfTotalSupply */\n      0x03\n      add\n        /* \"diamonds/facets/FacetToken.sol\":8934:8947  totalSupply() */\n      tag_328\n        /* \"diamonds/facets/FacetToken.sol\":8934:8945  totalSupply */\n      tag_36\n        /* \"diamonds/facets/FacetToken.sol\":8934:8947  totalSupply() */\n      jump\t// in\n        /* \"imports/openzeppelin/utils/math/Math.sol\":2827:2980  function average(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_312:\n        /* \"imports/openzeppelin/utils/math/Math.sol\":2889:2896  uint256 */\n      0x00\n        /* \"imports/openzeppelin/utils/math/Math.sol\":2962:2973  (a ^ b) / 2 */\n      tag_335\n        /* \"imports/openzeppelin/utils/math/Math.sol\":2972:2973  2 */\n      0x02\n        /* \"imports/openzeppelin/utils/math/Math.sol\":2963:2968  a ^ b */\n      dup5\n      dup5\n      xor\n        /* \"imports/openzeppelin/utils/math/Math.sol\":2962:2973  (a ^ b) / 2 */\n      tag_336\n      jump\t// in\n    tag_335:\n        /* \"imports/openzeppelin/utils/math/Math.sol\":2952:2973  (a & b) + (a ^ b) / 2 */\n      tag_337\n      swap1\n        /* \"imports/openzeppelin/utils/math/Math.sol\":2953:2958  a & b */\n      dup5\n      dup5\n      and\n        /* \"imports/openzeppelin/utils/math/Math.sol\":2952:2973  (a & b) + (a ^ b) / 2 */\n      tag_144\n      jump\t// in\n    tag_337:\n        /* \"imports/openzeppelin/utils/math/Math.sol\":2945:2973  return (a & b) + (a ^ b) / 2 */\n      swap4\n        /* \"imports/openzeppelin/utils/math/Math.sol\":2827:2980  function average(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"diamonds/facets/FacetToken.sol\":8961:9258  function _updateSnapshot(Snapshots storage snapshots, uint currentValue) private {... */\n    tag_329:\n        /* \"diamonds/facets/FacetToken.sol\":9052:9066  uint currentId */\n      0x00\n        /* \"diamonds/facets/FacetToken.sol\":9069:9091  getCurrentSnapshotId() */\n      tag_342\n        /* \"diamonds/facets/FacetToken.sol\":9069:9089  getCurrentSnapshotId */\n      tag_65\n        /* \"diamonds/facets/FacetToken.sol\":9069:9091  getCurrentSnapshotId() */\n      jump\t// in\n    tag_342:\n        /* \"diamonds/facets/FacetToken.sol\":9052:9091  uint currentId = getCurrentSnapshotId() */\n      swap1\n      pop\n      dup1\n        /* \"diamonds/facets/FacetToken.sol\":9105:9135  _lastSnapshotId(snapshots.ids) */\n      tag_343\n        /* \"diamonds/facets/FacetToken.sol\":9121:9130  snapshots */\n      dup5\n        /* \"diamonds/facets/FacetToken.sol\":9105:9120  _lastSnapshotId */\n      tag_344\n        /* \"diamonds/facets/FacetToken.sol\":9105:9135  _lastSnapshotId(snapshots.ids) */\n      jump\t// in\n    tag_343:\n        /* \"diamonds/facets/FacetToken.sol\":9105:9147  _lastSnapshotId(snapshots.ids) < currentId */\n      lt\n        /* \"diamonds/facets/FacetToken.sol\":9101:9252  if (_lastSnapshotId(snapshots.ids) < currentId) {... */\n      iszero\n      tag_292\n      jumpi\n        /* \"diamonds/facets/FacetToken.sol\":9163:9192  snapshots.ids.push(currentId) */\n      dup3\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      dup6\n      sstore\n      0x00\n      dup6\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      swap1\n      swap4\n      add\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"diamonds/facets/FacetToken.sol\":9206:9222  snapshots.values */\n      swap4\n      dup5\n      add\n        /* \"diamonds/facets/FacetToken.sol\":9206:9241  snapshots.values.push(currentValue) */\n      dup1\n      sload\n      swap5\n      dup6\n      add\n      dup2\n      sstore\n      dup3\n      mstore\n      swap1\n      keccak256\n      swap1\n      swap2\n      add\n      sstore\n        /* \"diamonds/facets/FacetToken.sol\":8961:9258  function _updateSnapshot(Snapshots storage snapshots, uint currentValue) private {... */\n      jump\t// out\n        /* \"diamonds/facets/FacetToken.sol\":9264:9464  function _lastSnapshotId(uint[] storage ids) private view returns (uint) {... */\n    tag_344:\n        /* \"diamonds/facets/FacetToken.sol\":9351:9361  ids.length */\n      dup1\n      sload\n        /* \"diamonds/facets/FacetToken.sol\":9331:9335  uint */\n      0x00\n      swap1\n        /* \"diamonds/facets/FacetToken.sol\":9351:9366  ids.length == 0 */\n      dup2\n      sub\n        /* \"diamonds/facets/FacetToken.sol\":9347:9458  if (ids.length == 0) {... */\n      tag_350\n      jumpi\n      pop\n        /* \"diamonds/facets/FacetToken.sol\":9389:9390  0 */\n      0x00\n      swap2\n        /* \"diamonds/facets/FacetToken.sol\":9264:9464  function _lastSnapshotId(uint[] storage ids) private view returns (uint) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"diamonds/facets/FacetToken.sol\":9347:9458  if (ids.length == 0) {... */\n    tag_350:\n        /* \"diamonds/facets/FacetToken.sol\":9432:9442  ids.length */\n      dup2\n      sload\n        /* \"diamonds/facets/FacetToken.sol\":9428:9431  ids */\n      dup3\n      swap1\n        /* \"diamonds/facets/FacetToken.sol\":9432:9446  ids.length - 1 */\n      tag_352\n      swap1\n        /* \"diamonds/facets/FacetToken.sol\":9445:9446  1 */\n      0x01\n      swap1\n        /* \"diamonds/facets/FacetToken.sol\":9432:9446  ids.length - 1 */\n      tag_321\n      jump\t// in\n    tag_352:\n        /* \"diamonds/facets/FacetToken.sol\":9428:9447  ids[ids.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_354\n      jumpi\n      tag_354\n      tag_276\n      jump\t// in\n    tag_354:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"diamonds/facets/FacetToken.sol\":9421:9447  return ids[ids.length - 1] */\n      swap1\n      pop\n        /* \"diamonds/facets/FacetToken.sol\":9264:9464  function _lastSnapshotId(uint[] storage ids) private view returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"diamonds/facets/FacetToken.sol\":9347:9458  if (ids.length == 0) {... */\n    tag_351:\n        /* \"diamonds/facets/FacetToken.sol\":9264:9464  function _lastSnapshotId(uint[] storage ids) private view returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:264   */\n    tag_356:\n        /* \"#utility.yul\":99:100   */\n      0x00\n        /* \"#utility.yul\":109:222   */\n    tag_365:\n        /* \"#utility.yul\":123:129   */\n      dup4\n        /* \"#utility.yul\":120:121   */\n      dup2\n        /* \"#utility.yul\":117:130   */\n      lt\n        /* \"#utility.yul\":109:222   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":199:210   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":193:211   */\n      mload\n        /* \"#utility.yul\":180:191   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":173:212   */\n      mstore\n        /* \"#utility.yul\":145:147   */\n      0x20\n        /* \"#utility.yul\":138:148   */\n      add\n        /* \"#utility.yul\":109:222   */\n      jump(tag_365)\n    tag_367:\n      pop\n      pop\n        /* \"#utility.yul\":256:257   */\n      0x00\n        /* \"#utility.yul\":238:254   */\n      swap2\n      add\n        /* \"#utility.yul\":231:258   */\n      mstore\n        /* \"#utility.yul\":14:264   */\n      jump\t// out\n        /* \"#utility.yul\":269:665   */\n    tag_28:\n        /* \"#utility.yul\":418:420   */\n      0x20\n        /* \"#utility.yul\":407:416   */\n      dup2\n        /* \"#utility.yul\":400:421   */\n      mstore\n        /* \"#utility.yul\":381:385   */\n      0x00\n        /* \"#utility.yul\":450:456   */\n      dup3\n        /* \"#utility.yul\":444:457   */\n      mload\n        /* \"#utility.yul\":493:499   */\n      dup1\n        /* \"#utility.yul\":488:490   */\n      0x20\n        /* \"#utility.yul\":477:486   */\n      dup5\n        /* \"#utility.yul\":473:491   */\n      add\n        /* \"#utility.yul\":466:500   */\n      mstore\n        /* \"#utility.yul\":509:588   */\n      tag_369\n        /* \"#utility.yul\":581:587   */\n      dup2\n        /* \"#utility.yul\":576:578   */\n      0x40\n        /* \"#utility.yul\":565:574   */\n      dup6\n        /* \"#utility.yul\":561:579   */\n      add\n        /* \"#utility.yul\":556:558   */\n      0x20\n        /* \"#utility.yul\":548:554   */\n      dup8\n        /* \"#utility.yul\":544:559   */\n      add\n        /* \"#utility.yul\":509:588   */\n      tag_356\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":649:651   */\n      0x1f\n        /* \"#utility.yul\":628:643   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":624:653   */\n      and\n        /* \"#utility.yul\":609:654   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":656:658   */\n      0x40\n        /* \"#utility.yul\":605:659   */\n      add\n      swap3\n        /* \"#utility.yul\":269:665   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":670:843   */\n    tag_357:\n        /* \"#utility.yul\":738:758   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":787:818   */\n      dup2\n      and\n        /* \"#utility.yul\":777:819   */\n      dup2\n      eq\n        /* \"#utility.yul\":767:837   */\n      tag_351\n      jumpi\n        /* \"#utility.yul\":833:834   */\n      0x00\n        /* \"#utility.yul\":830:831   */\n      dup1\n        /* \"#utility.yul\":823:835   */\n      revert\n        /* \"#utility.yul\":848:1102   */\n    tag_31:\n        /* \"#utility.yul\":916:922   */\n      0x00\n        /* \"#utility.yul\":924:930   */\n      dup1\n        /* \"#utility.yul\":977:979   */\n      0x40\n        /* \"#utility.yul\":965:974   */\n      dup4\n        /* \"#utility.yul\":956:963   */\n      dup6\n        /* \"#utility.yul\":952:975   */\n      sub\n        /* \"#utility.yul\":948:980   */\n      slt\n        /* \"#utility.yul\":945:997   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":993:994   */\n      0x00\n        /* \"#utility.yul\":990:991   */\n      dup1\n        /* \"#utility.yul\":983:995   */\n      revert\n        /* \"#utility.yul\":945:997   */\n    tag_373:\n        /* \"#utility.yul\":1016:1045   */\n      tag_374\n        /* \"#utility.yul\":1035:1044   */\n      dup4\n        /* \"#utility.yul\":1016:1045   */\n      tag_357\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":1006:1045   */\n      swap5\n        /* \"#utility.yul\":1092:1094   */\n      0x20\n        /* \"#utility.yul\":1077:1095   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1064:1096   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":848:1102   */\n      jump\t// out\n        /* \"#utility.yul\":1481:1608   */\n    tag_358:\n        /* \"#utility.yul\":1542:1552   */\n      0x4e487b71\n        /* \"#utility.yul\":1537:1540   */\n      0xe0\n        /* \"#utility.yul\":1533:1553   */\n      shl\n        /* \"#utility.yul\":1530:1531   */\n      0x00\n        /* \"#utility.yul\":1523:1554   */\n      mstore\n        /* \"#utility.yul\":1573:1577   */\n      0x41\n        /* \"#utility.yul\":1570:1571   */\n      0x04\n        /* \"#utility.yul\":1563:1578   */\n      mstore\n        /* \"#utility.yul\":1597:1601   */\n      0x24\n        /* \"#utility.yul\":1594:1595   */\n      0x00\n        /* \"#utility.yul\":1587:1602   */\n      revert\n        /* \"#utility.yul\":1613:2535   */\n    tag_41:\n        /* \"#utility.yul\":1682:1688   */\n      0x00\n        /* \"#utility.yul\":1735:1737   */\n      0x20\n        /* \"#utility.yul\":1723:1732   */\n      dup3\n        /* \"#utility.yul\":1714:1721   */\n      dup5\n        /* \"#utility.yul\":1710:1733   */\n      sub\n        /* \"#utility.yul\":1706:1738   */\n      slt\n        /* \"#utility.yul\":1703:1755   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":1751:1752   */\n      0x00\n        /* \"#utility.yul\":1748:1749   */\n      dup1\n        /* \"#utility.yul\":1741:1753   */\n      revert\n        /* \"#utility.yul\":1703:1755   */\n    tag_379:\n        /* \"#utility.yul\":1791:1800   */\n      dup2\n        /* \"#utility.yul\":1778:1801   */\n      calldataload\n        /* \"#utility.yul\":1820:1838   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1861:1863   */\n      dup1\n        /* \"#utility.yul\":1853:1859   */\n      dup3\n        /* \"#utility.yul\":1850:1864   */\n      gt\n        /* \"#utility.yul\":1847:1881   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":1877:1878   */\n      0x00\n        /* \"#utility.yul\":1874:1875   */\n      dup1\n        /* \"#utility.yul\":1867:1879   */\n      revert\n        /* \"#utility.yul\":1847:1881   */\n    tag_380:\n        /* \"#utility.yul\":1915:1921   */\n      dup2\n        /* \"#utility.yul\":1904:1913   */\n      dup5\n        /* \"#utility.yul\":1900:1922   */\n      add\n        /* \"#utility.yul\":1890:1922   */\n      swap2\n      pop\n        /* \"#utility.yul\":1960:1967   */\n      dup5\n        /* \"#utility.yul\":1953:1957   */\n      0x1f\n        /* \"#utility.yul\":1949:1951   */\n      dup4\n        /* \"#utility.yul\":1945:1958   */\n      add\n        /* \"#utility.yul\":1941:1968   */\n      slt\n        /* \"#utility.yul\":1931:1986   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":1982:1983   */\n      0x00\n        /* \"#utility.yul\":1979:1980   */\n      dup1\n        /* \"#utility.yul\":1972:1984   */\n      revert\n        /* \"#utility.yul\":1931:1986   */\n    tag_381:\n        /* \"#utility.yul\":2018:2020   */\n      dup2\n        /* \"#utility.yul\":2005:2021   */\n      calldataload\n        /* \"#utility.yul\":2040:2042   */\n      dup2\n        /* \"#utility.yul\":2036:2038   */\n      dup2\n        /* \"#utility.yul\":2033:2043   */\n      gt\n        /* \"#utility.yul\":2030:2066   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":2046:2064   */\n      tag_383\n      tag_358\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":2121:2123   */\n      0x40\n        /* \"#utility.yul\":2115:2124   */\n      mload\n        /* \"#utility.yul\":2089:2091   */\n      0x1f\n        /* \"#utility.yul\":2175:2188   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2171:2193   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2195:2197   */\n      0x3f\n        /* \"#utility.yul\":2167:2198   */\n      add\n        /* \"#utility.yul\":2163:2203   */\n      and\n        /* \"#utility.yul\":2151:2204   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2219:2237   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":2239:2261   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":2216:2262   */\n      or\n        /* \"#utility.yul\":2213:2285   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":2265:2283   */\n      tag_385\n      tag_358\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":2305:2315   */\n      dup2\n        /* \"#utility.yul\":2301:2303   */\n      0x40\n        /* \"#utility.yul\":2294:2316   */\n      mstore\n        /* \"#utility.yul\":2340:2342   */\n      dup3\n        /* \"#utility.yul\":2332:2338   */\n      dup2\n        /* \"#utility.yul\":2325:2343   */\n      mstore\n        /* \"#utility.yul\":2380:2387   */\n      dup8\n        /* \"#utility.yul\":2375:2377   */\n      0x20\n        /* \"#utility.yul\":2370:2372   */\n      dup5\n        /* \"#utility.yul\":2366:2368   */\n      dup8\n        /* \"#utility.yul\":2362:2373   */\n      add\n        /* \"#utility.yul\":2358:2378   */\n      add\n        /* \"#utility.yul\":2355:2388   */\n      gt\n        /* \"#utility.yul\":2352:2405   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":2401:2402   */\n      0x00\n        /* \"#utility.yul\":2398:2399   */\n      dup1\n        /* \"#utility.yul\":2391:2403   */\n      revert\n        /* \"#utility.yul\":2352:2405   */\n    tag_386:\n        /* \"#utility.yul\":2457:2459   */\n      dup3\n        /* \"#utility.yul\":2452:2454   */\n      0x20\n        /* \"#utility.yul\":2448:2450   */\n      dup7\n        /* \"#utility.yul\":2444:2455   */\n      add\n        /* \"#utility.yul\":2439:2441   */\n      0x20\n        /* \"#utility.yul\":2431:2437   */\n      dup4\n        /* \"#utility.yul\":2427:2442   */\n      add\n        /* \"#utility.yul\":2414:2460   */\n      calldatacopy\n        /* \"#utility.yul\":2502:2503   */\n      0x00\n        /* \"#utility.yul\":2480:2495   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":2497:2499   */\n      0x20\n        /* \"#utility.yul\":2476:2500   */\n      add\n        /* \"#utility.yul\":2469:2504   */\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n        /* \"#utility.yul\":2484:2490   */\n      swap6\n        /* \"#utility.yul\":1613:2535   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2540:2868   */\n    tag_45:\n        /* \"#utility.yul\":2617:2623   */\n      0x00\n        /* \"#utility.yul\":2625:2631   */\n      dup1\n        /* \"#utility.yul\":2633:2639   */\n      0x00\n        /* \"#utility.yul\":2686:2688   */\n      0x60\n        /* \"#utility.yul\":2674:2683   */\n      dup5\n        /* \"#utility.yul\":2665:2672   */\n      dup7\n        /* \"#utility.yul\":2661:2684   */\n      sub\n        /* \"#utility.yul\":2657:2689   */\n      slt\n        /* \"#utility.yul\":2654:2706   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":2702:2703   */\n      0x00\n        /* \"#utility.yul\":2699:2700   */\n      dup1\n        /* \"#utility.yul\":2692:2704   */\n      revert\n        /* \"#utility.yul\":2654:2706   */\n    tag_388:\n        /* \"#utility.yul\":2725:2754   */\n      tag_389\n        /* \"#utility.yul\":2744:2753   */\n      dup5\n        /* \"#utility.yul\":2725:2754   */\n      tag_357\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":2715:2754   */\n      swap3\n      pop\n        /* \"#utility.yul\":2773:2811   */\n      tag_390\n        /* \"#utility.yul\":2807:2809   */\n      0x20\n        /* \"#utility.yul\":2796:2805   */\n      dup6\n        /* \"#utility.yul\":2792:2810   */\n      add\n        /* \"#utility.yul\":2773:2811   */\n      tag_357\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":2763:2811   */\n      swap2\n      pop\n        /* \"#utility.yul\":2858:2860   */\n      0x40\n        /* \"#utility.yul\":2847:2856   */\n      dup5\n        /* \"#utility.yul\":2843:2861   */\n      add\n        /* \"#utility.yul\":2830:2862   */\n      calldataload\n        /* \"#utility.yul\":2820:2862   */\n      swap1\n      pop\n        /* \"#utility.yul\":2540:2868   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3062:3242   */\n    tag_58:\n        /* \"#utility.yul\":3121:3127   */\n      0x00\n        /* \"#utility.yul\":3174:3176   */\n      0x20\n        /* \"#utility.yul\":3162:3171   */\n      dup3\n        /* \"#utility.yul\":3153:3160   */\n      dup5\n        /* \"#utility.yul\":3149:3172   */\n      sub\n        /* \"#utility.yul\":3145:3177   */\n      slt\n        /* \"#utility.yul\":3142:3194   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":3190:3191   */\n      0x00\n        /* \"#utility.yul\":3187:3188   */\n      dup1\n        /* \"#utility.yul\":3180:3192   */\n      revert\n        /* \"#utility.yul\":3142:3194   */\n    tag_393:\n      pop\n        /* \"#utility.yul\":3213:3236   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3062:3242   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3247:3433   */\n    tag_69:\n        /* \"#utility.yul\":3306:3312   */\n      0x00\n        /* \"#utility.yul\":3359:3361   */\n      0x20\n        /* \"#utility.yul\":3347:3356   */\n      dup3\n        /* \"#utility.yul\":3338:3345   */\n      dup5\n        /* \"#utility.yul\":3334:3357   */\n      sub\n        /* \"#utility.yul\":3330:3362   */\n      slt\n        /* \"#utility.yul\":3327:3379   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":3375:3376   */\n      0x00\n        /* \"#utility.yul\":3372:3373   */\n      dup1\n        /* \"#utility.yul\":3365:3377   */\n      revert\n        /* \"#utility.yul\":3327:3379   */\n    tag_395:\n        /* \"#utility.yul\":3398:3427   */\n      tag_337\n        /* \"#utility.yul\":3417:3426   */\n      dup3\n        /* \"#utility.yul\":3398:3427   */\n      tag_357\n      jump\t// in\n        /* \"#utility.yul\":3438:3698   */\n    tag_95:\n        /* \"#utility.yul\":3506:3512   */\n      0x00\n        /* \"#utility.yul\":3514:3520   */\n      dup1\n        /* \"#utility.yul\":3567:3569   */\n      0x40\n        /* \"#utility.yul\":3555:3564   */\n      dup4\n        /* \"#utility.yul\":3546:3553   */\n      dup6\n        /* \"#utility.yul\":3542:3565   */\n      sub\n        /* \"#utility.yul\":3538:3570   */\n      slt\n        /* \"#utility.yul\":3535:3587   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":3583:3584   */\n      0x00\n        /* \"#utility.yul\":3580:3581   */\n      dup1\n        /* \"#utility.yul\":3573:3585   */\n      revert\n        /* \"#utility.yul\":3535:3587   */\n    tag_398:\n        /* \"#utility.yul\":3606:3635   */\n      tag_399\n        /* \"#utility.yul\":3625:3634   */\n      dup4\n        /* \"#utility.yul\":3606:3635   */\n      tag_357\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":3596:3635   */\n      swap2\n      pop\n        /* \"#utility.yul\":3654:3692   */\n      tag_400\n        /* \"#utility.yul\":3688:3690   */\n      0x20\n        /* \"#utility.yul\":3677:3686   */\n      dup5\n        /* \"#utility.yul\":3673:3691   */\n      add\n        /* \"#utility.yul\":3654:3692   */\n      tag_357\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":3644:3692   */\n      swap1\n      pop\n        /* \"#utility.yul\":3438:3698   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3703:4083   */\n    tag_105:\n        /* \"#utility.yul\":3782:3783   */\n      0x01\n        /* \"#utility.yul\":3778:3790   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3825:3837   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3846:3907   */\n      tag_402\n      jumpi\n        /* \"#utility.yul\":3900:3904   */\n      0x7f\n        /* \"#utility.yul\":3892:3898   */\n      dup3\n        /* \"#utility.yul\":3888:3905   */\n      and\n        /* \"#utility.yul\":3878:3905   */\n      swap2\n      pop\n        /* \"#utility.yul\":3846:3907   */\n    tag_402:\n        /* \"#utility.yul\":3953:3955   */\n      0x20\n        /* \"#utility.yul\":3945:3951   */\n      dup3\n        /* \"#utility.yul\":3942:3956   */\n      lt\n        /* \"#utility.yul\":3922:3940   */\n      dup2\n        /* \"#utility.yul\":3919:3957   */\n      sub\n        /* \"#utility.yul\":3916:4077   */\n      tag_403\n      jumpi\n        /* \"#utility.yul\":3999:4009   */\n      0x4e487b71\n        /* \"#utility.yul\":3994:3997   */\n      0xe0\n        /* \"#utility.yul\":3990:4010   */\n      shl\n        /* \"#utility.yul\":3987:3988   */\n      0x00\n        /* \"#utility.yul\":3980:4011   */\n      mstore\n        /* \"#utility.yul\":4034:4038   */\n      0x22\n        /* \"#utility.yul\":4031:4032   */\n      0x04\n        /* \"#utility.yul\":4024:4039   */\n      mstore\n        /* \"#utility.yul\":4062:4066   */\n      0x24\n        /* \"#utility.yul\":4059:4060   */\n      0x00\n        /* \"#utility.yul\":4052:4067   */\n      revert\n        /* \"#utility.yul\":3916:4077   */\n    tag_403:\n      pop\n        /* \"#utility.yul\":3703:4083   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4214:4759   */\n    tag_360:\n        /* \"#utility.yul\":4316:4318   */\n      0x1f\n        /* \"#utility.yul\":4311:4314   */\n      dup3\n        /* \"#utility.yul\":4308:4319   */\n      gt\n        /* \"#utility.yul\":4305:4753   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":4352:4353   */\n      0x00\n        /* \"#utility.yul\":4377:4382   */\n      dup2\n        /* \"#utility.yul\":4373:4375   */\n      dup2\n        /* \"#utility.yul\":4366:4383   */\n      mstore\n        /* \"#utility.yul\":4422:4426   */\n      0x20\n        /* \"#utility.yul\":4418:4420   */\n      dup2\n        /* \"#utility.yul\":4408:4427   */\n      keccak256\n        /* \"#utility.yul\":4492:4494   */\n      0x1f\n        /* \"#utility.yul\":4480:4490   */\n      dup6\n        /* \"#utility.yul\":4476:4495   */\n      add\n        /* \"#utility.yul\":4473:4474   */\n      0x05\n        /* \"#utility.yul\":4469:4496   */\n      shr\n        /* \"#utility.yul\":4463:4467   */\n      dup2\n        /* \"#utility.yul\":4459:4497   */\n      add\n        /* \"#utility.yul\":4528:4532   */\n      0x20\n        /* \"#utility.yul\":4516:4526   */\n      dup7\n        /* \"#utility.yul\":4513:4533   */\n      lt\n        /* \"#utility.yul\":4510:4557   */\n      iszero\n      tag_407\n      jumpi\n      pop\n        /* \"#utility.yul\":4551:4555   */\n      dup1\n        /* \"#utility.yul\":4510:4557   */\n    tag_407:\n        /* \"#utility.yul\":4606:4608   */\n      0x1f\n        /* \"#utility.yul\":4601:4604   */\n      dup6\n        /* \"#utility.yul\":4597:4609   */\n      add\n        /* \"#utility.yul\":4594:4595   */\n      0x05\n        /* \"#utility.yul\":4590:4610   */\n      shr\n        /* \"#utility.yul\":4584:4588   */\n      dup3\n        /* \"#utility.yul\":4580:4611   */\n      add\n        /* \"#utility.yul\":4570:4611   */\n      swap2\n      pop\n        /* \"#utility.yul\":4661:4743   */\n    tag_408:\n        /* \"#utility.yul\":4679:4681   */\n      dup2\n        /* \"#utility.yul\":4672:4677   */\n      dup2\n        /* \"#utility.yul\":4669:4682   */\n      lt\n        /* \"#utility.yul\":4661:4743   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":4724:4741   */\n      dup3\n      dup2\n      sstore\n        /* \"#utility.yul\":4705:4706   */\n      0x01\n        /* \"#utility.yul\":4694:4707   */\n      add\n        /* \"#utility.yul\":4661:4743   */\n      jump(tag_408)\n    tag_410:\n        /* \"#utility.yul\":4665:4668   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4214:4759   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4935:6287   */\n    tag_128:\n        /* \"#utility.yul\":5061:5064   */\n      dup2\n        /* \"#utility.yul\":5055:5065   */\n      mload\n        /* \"#utility.yul\":5088:5106   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5080:5086   */\n      dup2\n        /* \"#utility.yul\":5077:5107   */\n      gt\n        /* \"#utility.yul\":5074:5130   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":5110:5128   */\n      tag_414\n      tag_358\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":5139:5236   */\n      tag_415\n        /* \"#utility.yul\":5229:5235   */\n      dup2\n        /* \"#utility.yul\":5189:5227   */\n      tag_416\n        /* \"#utility.yul\":5221:5225   */\n      dup5\n        /* \"#utility.yul\":5215:5226   */\n      sload\n        /* \"#utility.yul\":5189:5227   */\n      tag_105\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":5183:5187   */\n      dup5\n        /* \"#utility.yul\":5139:5236   */\n      tag_360\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":5291:5295   */\n      0x20\n      dup1\n        /* \"#utility.yul\":5355:5357   */\n      0x1f\n        /* \"#utility.yul\":5344:5358   */\n      dup4\n      gt\n        /* \"#utility.yul\":5372:5373   */\n      0x01\n        /* \"#utility.yul\":5367:6030   */\n      dup2\n      eq\n      tag_418\n      jumpi\n        /* \"#utility.yul\":6074:6075   */\n      0x00\n        /* \"#utility.yul\":6091:6097   */\n      dup5\n        /* \"#utility.yul\":6088:6177   */\n      iszero\n      tag_419\n      jumpi\n      pop\n        /* \"#utility.yul\":6143:6162   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":6137:6163   */\n      mload\n        /* \"#utility.yul\":6088:6177   */\n    tag_419:\n      not(0x00)\n        /* \"#utility.yul\":4892:4893   */\n      0x03\n        /* \"#utility.yul\":4888:4899   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":4884:4908   */\n      shr\n        /* \"#utility.yul\":4880:4909   */\n      not\n        /* \"#utility.yul\":4870:4910   */\n      and\n        /* \"#utility.yul\":4916:4917   */\n      0x01\n        /* \"#utility.yul\":4912:4923   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":4867:4924   */\n      or\n        /* \"#utility.yul\":6190:6271   */\n      dup6\n      sstore\n        /* \"#utility.yul\":5337:6281   */\n      jump(tag_410)\n        /* \"#utility.yul\":5367:6030   */\n    tag_418:\n        /* \"#utility.yul\":4161:4162   */\n      0x00\n        /* \"#utility.yul\":4154:4168   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":4198:4202   */\n      0x20\n        /* \"#utility.yul\":4185:4203   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":5403:5423   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":5521:5757   */\n    tag_422:\n        /* \"#utility.yul\":5535:5542   */\n      dup3\n        /* \"#utility.yul\":5532:5533   */\n      dup2\n        /* \"#utility.yul\":5529:5543   */\n      lt\n        /* \"#utility.yul\":5521:5757   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":5624:5643   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":5618:5644   */\n      mload\n        /* \"#utility.yul\":5603:5645   */\n      dup3\n      sstore\n        /* \"#utility.yul\":5716:5743   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":5684:5685   */\n      0x01\n        /* \"#utility.yul\":5672:5686   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":5551:5570   */\n      dup5\n      add\n        /* \"#utility.yul\":5521:5757   */\n      jump(tag_422)\n    tag_424:\n        /* \"#utility.yul\":5525:5528   */\n      pop\n        /* \"#utility.yul\":5785:5791   */\n      dup6\n        /* \"#utility.yul\":5776:5783   */\n      dup3\n        /* \"#utility.yul\":5773:5792   */\n      lt\n        /* \"#utility.yul\":5770:5971   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":5846:5865   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":5840:5866   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":5929:5930   */\n      0x03\n        /* \"#utility.yul\":5925:5939   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":5941:5944   */\n      0xf8\n        /* \"#utility.yul\":5921:5945   */\n      and\n        /* \"#utility.yul\":5917:5954   */\n      shr\n        /* \"#utility.yul\":5913:5955   */\n      not\n        /* \"#utility.yul\":5898:5956   */\n      and\n        /* \"#utility.yul\":5883:5957   */\n      dup2\n      sstore\n        /* \"#utility.yul\":5770:5971   */\n    tag_425:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6017:6018   */\n      0x01\n        /* \"#utility.yul\":6001:6015   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":5997:6019   */\n      add\n        /* \"#utility.yul\":5984:6020   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":4935:6287   */\n      jump\t// out\n        /* \"#utility.yul\":6292:6581   */\n    tag_130:\n        /* \"#utility.yul\":6423:6426   */\n      0x00\n        /* \"#utility.yul\":6461:6467   */\n      dup3\n        /* \"#utility.yul\":6455:6468   */\n      mload\n        /* \"#utility.yul\":6477:6543   */\n      tag_427\n        /* \"#utility.yul\":6536:6542   */\n      dup2\n        /* \"#utility.yul\":6531:6534   */\n      dup5\n        /* \"#utility.yul\":6524:6528   */\n      0x20\n        /* \"#utility.yul\":6516:6522   */\n      dup8\n        /* \"#utility.yul\":6512:6529   */\n      add\n        /* \"#utility.yul\":6477:6543   */\n      tag_356\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":6559:6575   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":6292:6581   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6586:6713   */\n    tag_362:\n        /* \"#utility.yul\":6647:6657   */\n      0x4e487b71\n        /* \"#utility.yul\":6642:6645   */\n      0xe0\n        /* \"#utility.yul\":6638:6658   */\n      shl\n        /* \"#utility.yul\":6635:6636   */\n      0x00\n        /* \"#utility.yul\":6628:6659   */\n      mstore\n        /* \"#utility.yul\":6678:6682   */\n      0x11\n        /* \"#utility.yul\":6675:6676   */\n      0x04\n        /* \"#utility.yul\":6668:6683   */\n      mstore\n        /* \"#utility.yul\":6702:6706   */\n      0x24\n        /* \"#utility.yul\":6699:6700   */\n      0x00\n        /* \"#utility.yul\":6692:6707   */\n      revert\n        /* \"#utility.yul\":6718:6843   */\n    tag_144:\n        /* \"#utility.yul\":6783:6792   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6804:6814   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6801:6837   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":6817:6835   */\n      tag_110\n      tag_362\n      jump\t// in\n        /* \"#utility.yul\":11157:11284   */\n    tag_276:\n        /* \"#utility.yul\":11218:11228   */\n      0x4e487b71\n        /* \"#utility.yul\":11213:11216   */\n      0xe0\n        /* \"#utility.yul\":11209:11229   */\n      shl\n        /* \"#utility.yul\":11206:11207   */\n      0x00\n        /* \"#utility.yul\":11199:11230   */\n      mstore\n        /* \"#utility.yul\":11249:11253   */\n      0x32\n        /* \"#utility.yul\":11246:11247   */\n      0x04\n        /* \"#utility.yul\":11239:11254   */\n      mstore\n        /* \"#utility.yul\":11273:11277   */\n      0x24\n        /* \"#utility.yul\":11270:11271   */\n      0x00\n        /* \"#utility.yul\":11263:11278   */\n      revert\n        /* \"#utility.yul\":12104:12232   */\n    tag_321:\n        /* \"#utility.yul\":12171:12180   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":12192:12203   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":12189:12226   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":12206:12224   */\n      tag_110\n      tag_362\n      jump\t// in\n        /* \"#utility.yul\":12237:12454   */\n    tag_336:\n        /* \"#utility.yul\":12277:12278   */\n      0x00\n        /* \"#utility.yul\":12303:12304   */\n      dup3\n        /* \"#utility.yul\":12293:12425   */\n      tag_450\n      jumpi\n        /* \"#utility.yul\":12347:12357   */\n      0x4e487b71\n        /* \"#utility.yul\":12342:12345   */\n      0xe0\n        /* \"#utility.yul\":12338:12358   */\n      shl\n        /* \"#utility.yul\":12335:12336   */\n      0x00\n        /* \"#utility.yul\":12328:12359   */\n      mstore\n        /* \"#utility.yul\":12382:12386   */\n      0x12\n        /* \"#utility.yul\":12379:12380   */\n      0x04\n        /* \"#utility.yul\":12372:12387   */\n      mstore\n        /* \"#utility.yul\":12410:12414   */\n      0x24\n        /* \"#utility.yul\":12407:12408   */\n      0x00\n        /* \"#utility.yul\":12400:12415   */\n      revert\n        /* \"#utility.yul\":12293:12425   */\n    tag_450:\n      pop\n        /* \"#utility.yul\":12439:12448   */\n      div\n      swap1\n        /* \"#utility.yul\":12237:12454   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b14b2778c0d2c2125a37ccb1fcea266a39077357974af641c6d8fe074b4a968f64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061156f806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80635439ad86116100ad578063a457c2d711610071578063a457c2d71461022b578063a9059cbb1461023e578063b74456f214610251578063dd62ed3e14610264578063e0089dc31461027757600080fd5b80635439ad86146101ed57806370a08231146101f557806395d89b41146102085780639711715a14610210578063981b24d01461021857600080fd5b806323b872dd116100f457806323b872dd14610192578063313ce567146101a557806339509351146101b457806349e7012c146101c75780634ee2cd7e146101da57600080fd5b806306fdde0314610126578063095ea7b31461014457806318160ddd146101675780631e96c1dd1461017d575b600080fd5b61012e61028a565b60405161013b9190611183565b60405180910390f35b6101576101523660046111cd565b610325565b604051901515815260200161013b565b61016f61033f565b60405190815260200161013b565b61019061018b36600461120d565b610352565b005b6101576101a03660046112be565b610462565b6040516012815260200161013b565b6101576101c23660046111cd565b610486565b6101906101d53660046112fa565b6104a8565b61016f6101e83660046111cd565b6104bd565b61016f610511565b61016f610203366004611313565b61052a565b61012e610553565b61016f61056b565b61016f6102263660046112fa565b6105ce565b6101576102393660046111cd565b610607565b61015761024c3660046111cd565b61068c565b61019061025f3660046112fa565b61069a565b61016f61027236600461132e565b6106ac565b61019061028536600461120d565b6106e6565b60606102946107f6565b60060180546102a290611361565b80601f01602080910402602001604051908101604052809291908181526020018280546102ce90611361565b801561031b5780601f106102f05761010080835404028352916020019161031b565b820191906000526020600020905b8154815290600101906020018083116102fe57829003601f168201915b5050505050905090565b60003361033381858561081a565b60019150505b92915050565b60006103496107f6565b60080154905090565b61035a61095a565b60006103646107f6565b600701805461037290611361565b80601f016020809104026020016040519081016040528092919081815260200182805461039e90611361565b80156103eb5780601f106103c0576101008083540402835291602001916103eb565b820191906000526020600020905b8154815290600101906020018083116103ce57829003601f168201915b50505050509050816103fb6107f6565b6007019061040990826113e9565b508160405161041891906114a9565b60405180910390208160405161042e91906114a9565b604051908190038120907f68023cab388c6052af3fa625f164cd0c14cc9125d57286fbe0d9b384847c4c0290600090a35050565b600033610470858285610997565b61047b858585610a1c565b506001949350505050565b60003361033381858561049983836106ac565b6104a391906114db565b61081a565b6104b061095a565b6104ba3382610c0c565b50565b60008060006104ef846104ce6107f6565b6001600160a01b038816600090815260029190910160205260409020610d03565b9150915081610506576105018561052a565b610508565b805b95945050505050565b600061052561051e6107f6565b6005015490565b905090565b60006105346107f6565b6001600160a01b03909216600090815260209290925250604090205490565b606061055d6107f6565b60070180546102a290611361565b60006105846105786107f6565b60050180546001019055565b600061058e610511565b90507f8030e83b04d87bef53480e26263266d6ca66863aa8506aca6f2559d18aa1cb67816040516105c191815260200190565b60405180910390a1919050565b60008060006105e7846105df6107f6565b600301610d03565b91509150816105fd576105f861033f565b6105ff565b805b949350505050565b6000338161061582866106ac565b90508381101561067f5760405162461bcd60e51b815260206004820152602a60248201527f4661636574546f6b656e3a2064656372656173656420616c6c6f77616e63652060448201526962656c6f77207a65726f60b01b60648201526084015b60405180910390fd5b61047b828686840361081a565b600033610333818585610a1c565b6106a261095a565b6104ba3382610df6565b60006106b66107f6565b6001600160a01b039384166000908152600191909101602090815260408083209490951682529290925250205490565b6106ee61095a565b60006106f86107f6565b600601805461070690611361565b80601f016020809104026020016040519081016040528092919081815260200182805461073290611361565b801561077f5780601f106107545761010080835404028352916020019161077f565b820191906000526020600020905b81548152906001019060200180831161076257829003601f168201915b505050505090508161078f6107f6565b6006019061079d90826113e9565b50816040516107ac91906114a9565b6040518091039020816040516107c291906114a9565b604051908190038120907fe08ba098c56583ff7ce264f98fb97b7ddc5e6af834acc0556b24327f72a555f990600090a35050565b7f667c0cf071c712f94f97f65a859cdaa470fe424825756c2cae5a4d1adcee538b90565b6001600160a01b0383166108825760405162461bcd60e51b815260206004820152602960248201527f4661636574546f6b656e3a20617070726f76652066726f6d20746865207a65726044820152686f206164647265737360b81b6064820152608401610676565b6001600160a01b0382166108e85760405162461bcd60e51b815260206004820152602760248201527f4661636574546f6b656e3a20617070726f766520746f20746865207a65726f206044820152666164647265737360c81b6064820152608401610676565b806108f16107f6565b6001600160a01b038581166000818152600193909301602090815260408085209388168086529382529384902094909455915184815290927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b3330146109955760405162461bcd60e51b815260206004820152600960248201526837b7363c9039b2b63360b91b6044820152606401610676565b565b60006109a384846106ac565b90506000198114610a165781811015610a095760405162461bcd60e51b815260206004820152602260248201527f4661636574546f6b656e3a20696e73756666696369656e7420616c6c6f77616e604482015261636560f01b6064820152608401610676565b610a16848484840361081a565b50505050565b6001600160a01b038316610a855760405162461bcd60e51b815260206004820152602a60248201527f4661636574546f6b656e3a207472616e736665722066726f6d20746865207a65604482015269726f206164647265737360b01b6064820152608401610676565b6001600160a01b038216610aec5760405162461bcd60e51b815260206004820152602860248201527f4661636574546f6b656e3a207472616e7366657220746f20746865207a65726f604482015267206164647265737360c01b6064820152608401610676565b610af7838383610f69565b6000610b016107f6565b6001600160a01b03851660009081526020919091526040902054905081811015610b815760405162461bcd60e51b815260206004820152602b60248201527f4661636574546f6b656e3a207472616e7366657220616d6f756e74206578636560448201526a6564732062616c616e636560a81b6064820152608401610676565b818103610b8c6107f6565b6001600160a01b0386166000908152602091909152604090205581610baf6107f6565b6001600160a01b03858116600081815260209384526040908190208054959095019094559251858152908716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610a16565b6001600160a01b038216610c6e5760405162461bcd60e51b8152602060048201526024808201527f4661636574546f6b656e3a206d696e7420746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610676565b610c7a60008383610f69565b80610c836107f6565b6008016000828254610c9591906114db565b90915550819050610ca46107f6565b6001600160a01b03841660008181526020929092526040808320805490940190935591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610cf79085815260200190565b60405180910390a35050565b60008060008411610d4c5760405162461bcd60e51b815260206004820152601360248201527204661636574546f6b656e3a206964206973203606c1b6044820152606401610676565b610d54610511565b841115610da35760405162461bcd60e51b815260206004820152601a60248201527f4661636574546f6b656e3a206e6f6e6578697374656e742069640000000000006044820152606401610676565b6000610daf8486610fb1565b84549091508103610dc7576000809250925050610def565b6001846001018281548110610dde57610dde6114ee565b906000526020600020015492509250505b9250929050565b6001600160a01b038216610e5b5760405162461bcd60e51b815260206004820152602660248201527f4661636574546f6b656e3a206275726e2066726f6d20746865207a65726f206160448201526564647265737360d01b6064820152608401610676565b610e6782600083610f69565b6000610e716107f6565b6001600160a01b03841660009081526020919091526040902054905081811015610eed5760405162461bcd60e51b815260206004820152602760248201527f4661636574546f6b656e3a206275726e20616d6f756e7420657863656564732060448201526662616c616e636560c81b6064820152608401610676565b818103610ef86107f6565b6001600160a01b0385166000908152602091909152604090205581610f1b6107f6565b60080180549190910390556040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161094d565b505050565b6001600160a01b038316610f8857610f808261105e565b610f64611093565b6001600160a01b038216610f9f57610f808361105e565b610fa88361105e565b610f648261105e565b81546000908103610fc457506000610339565b82546000905b80821015611011576000610fde83836110a9565b60008781526020902090915085908201541115610ffd5780915061100b565b6110088160016114db565b92505b50610fca565b60008211801561103d57508361103a8661102c600186611504565b600091825260209091200190565b54145b156110565761104d600183611504565b92505050610339565b509050610339565b6104ba6110696107f6565b6001600160a01b03831660009081526002919091016020526040902061108e8361052a565b6110cb565b61099561109e6107f6565b60030161108e61033f565b60006110b86002848418611517565b6110c4908484166114db565b9392505050565b60006110d5610511565b9050806110e184611115565b1015610f64578254600180820185556000858152602080822090930193909355938401805494850181558252902090910155565b8054600090810361112857506000919050565b8154829061113890600190611504565b81548110611148576111486114ee565b90600052602060002001549050919050565b919050565b60005b8381101561117a578181015183820152602001611162565b50506000910152565b60208152600082518060208401526111a281604085016020870161115f565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461115a57600080fd5b600080604083850312156111e057600080fd5b6111e9836111b6565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561121f57600080fd5b813567ffffffffffffffff8082111561123757600080fd5b818401915084601f83011261124b57600080fd5b81358181111561125d5761125d6111f7565b604051601f8201601f19908116603f01168101908382118183101715611285576112856111f7565b8160405282815287602084870101111561129e57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000806000606084860312156112d357600080fd5b6112dc846111b6565b92506112ea602085016111b6565b9150604084013590509250925092565b60006020828403121561130c57600080fd5b5035919050565b60006020828403121561132557600080fd5b6110c4826111b6565b6000806040838503121561134157600080fd5b61134a836111b6565b9150611358602084016111b6565b90509250929050565b600181811c9082168061137557607f821691505b60208210810361139557634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610f6457600081815260208120601f850160051c810160208610156113c25750805b601f850160051c820191505b818110156113e1578281556001016113ce565b505050505050565b815167ffffffffffffffff811115611403576114036111f7565b611417816114118454611361565b8461139b565b602080601f83116001811461144c57600084156114345750858301515b600019600386901b1c1916600185901b1785556113e1565b600085815260208120601f198616915b8281101561147b5788860151825594840194600190910190840161145c565b50858210156114995787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516114bb81846020870161115f565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610339576103396114c5565b634e487b7160e01b600052603260045260246000fd5b81810381811115610339576103396114c5565b60008261153457634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220b14b2778c0d2c2125a37ccb1fcea266a39077357974af641c6d8fe074b4a968f64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156F DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5439AD86 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xB74456F2 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xE0089DC3 EQ PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5439AD86 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x9711715A EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x981B24D0 EQ PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x49E7012C EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x4EE2CD7E EQ PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x1E96C1DD EQ PUSH2 0x17D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x28A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x11CD JUMP JUMPDEST PUSH2 0x325 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST PUSH2 0x16F PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST PUSH2 0x190 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x120D JUMP JUMPDEST PUSH2 0x352 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x157 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x12BE JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST PUSH2 0x157 PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x11CD JUMP JUMPDEST PUSH2 0x486 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x1D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x1E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x11CD JUMP JUMPDEST PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x16F PUSH2 0x511 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0x52A JUMP JUMPDEST PUSH2 0x12E PUSH2 0x553 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x56B JUMP JUMPDEST PUSH2 0x16F PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x5CE JUMP JUMPDEST PUSH2 0x157 PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x11CD JUMP JUMPDEST PUSH2 0x607 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x11CD JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST PUSH2 0x190 PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST PUSH2 0x16F PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x132E JUMP JUMPDEST PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x190 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x120D JUMP JUMPDEST PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x294 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x6 ADD DUP1 SLOAD PUSH2 0x2A2 SWAP1 PUSH2 0x1361 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2CE SWAP1 PUSH2 0x1361 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x31B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x31B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x333 DUP2 DUP6 DUP6 PUSH2 0x81A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x349 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x8 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x35A PUSH2 0x95A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x364 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x7 ADD DUP1 SLOAD PUSH2 0x372 SWAP1 PUSH2 0x1361 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39E SWAP1 PUSH2 0x1361 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3EB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3EB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3CE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP2 PUSH2 0x3FB PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x7 ADD SWAP1 PUSH2 0x409 SWAP1 DUP3 PUSH2 0x13E9 JUMP JUMPDEST POP DUP2 PUSH1 0x40 MLOAD PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 PUSH1 0x40 MLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 PUSH32 0x68023CAB388C6052AF3FA625F164CD0C14CC9125D57286FBE0D9B384847C4C02 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x470 DUP6 DUP3 DUP6 PUSH2 0x997 JUMP JUMPDEST PUSH2 0x47B DUP6 DUP6 DUP6 PUSH2 0xA1C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x333 DUP2 DUP6 DUP6 PUSH2 0x499 DUP4 DUP4 PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0x81A JUMP JUMPDEST PUSH2 0x4B0 PUSH2 0x95A JUMP JUMPDEST PUSH2 0x4BA CALLER DUP3 PUSH2 0xC0C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x4EF DUP5 PUSH2 0x4CE PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xD03 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x506 JUMPI PUSH2 0x501 DUP6 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST DUP1 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x525 PUSH2 0x51E PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x5 ADD SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x534 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP3 SWAP1 SWAP3 MSTORE POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x55D PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x7 ADD DUP1 SLOAD PUSH2 0x2A2 SWAP1 PUSH2 0x1361 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x584 PUSH2 0x578 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58E PUSH2 0x511 JUMP JUMPDEST SWAP1 POP PUSH32 0x8030E83B04D87BEF53480E26263266D6CA66863AA8506ACA6F2559D18AA1CB67 DUP2 PUSH1 0x40 MLOAD PUSH2 0x5C1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x5E7 DUP5 PUSH2 0x5DF PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x3 ADD PUSH2 0xD03 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x5FD JUMPI PUSH2 0x5F8 PUSH2 0x33F JUMP JUMPDEST PUSH2 0x5FF JUMP JUMPDEST DUP1 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x615 DUP3 DUP7 PUSH2 0x6AC JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x67F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661636574546F6B656E3A2064656372656173656420616C6C6F77616E636520 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x62656C6F77207A65726F PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x47B DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x81A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x333 DUP2 DUP6 DUP6 PUSH2 0xA1C JUMP JUMPDEST PUSH2 0x6A2 PUSH2 0x95A JUMP JUMPDEST PUSH2 0x4BA CALLER DUP3 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B6 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP6 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE POP KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6EE PUSH2 0x95A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F8 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x6 ADD DUP1 SLOAD PUSH2 0x706 SWAP1 PUSH2 0x1361 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x732 SWAP1 PUSH2 0x1361 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x77F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x754 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x77F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x762 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP2 PUSH2 0x78F PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x6 ADD SWAP1 PUSH2 0x79D SWAP1 DUP3 PUSH2 0x13E9 JUMP JUMPDEST POP DUP2 PUSH1 0x40 MLOAD PUSH2 0x7AC SWAP2 SWAP1 PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 PUSH1 0x40 MLOAD PUSH2 0x7C2 SWAP2 SWAP1 PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 PUSH32 0xE08BA098C56583FF7CE264F98FB97B7DDC5E6AF834ACC0556B24327F72A555F9 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH32 0x667C0CF071C712F94F97F65A859CDAA470FE424825756C2CAE5A4D1ADCEE538B SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x882 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661636574546F6B656E3A20617070726F76652066726F6D20746865207A6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x6F2061646472657373 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x676 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661636574546F6B656E3A20617070726F766520746F20746865207A65726F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x61646472657373 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x676 JUMP JUMPDEST DUP1 PUSH2 0x8F1 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP4 DUP9 AND DUP1 DUP7 MSTORE SWAP4 DUP3 MSTORE SWAP4 DUP5 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x995 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x37B7363C9039B2B633 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x676 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A3 DUP5 DUP5 PUSH2 0x6AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0xA16 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661636574546F6B656E3A20696E73756666696369656E7420616C6C6F77616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x676 JUMP JUMPDEST PUSH2 0xA16 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x81A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661636574546F6B656E3A207472616E736665722066726F6D20746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x676 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661636574546F6B656E3A207472616E7366657220746F20746865207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x2061646472657373 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x676 JUMP JUMPDEST PUSH2 0xAF7 DUP4 DUP4 DUP4 PUSH2 0xF69 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB01 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xB81 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661636574546F6B656E3A207472616E7366657220616D6F756E742065786365 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6564732062616C616E6365 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x676 JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0xB8C PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP2 PUSH2 0xBAF PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 SWAP4 DUP5 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD SWAP6 SWAP1 SWAP6 ADD SWAP1 SWAP5 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4661636574546F6B656E3A206D696E7420746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x676 JUMP JUMPDEST PUSH2 0xC7A PUSH1 0x0 DUP4 DUP4 PUSH2 0xF69 JUMP JUMPDEST DUP1 PUSH2 0xC83 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x8 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC95 SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0xCA4 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP5 ADD SWAP1 SWAP4 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xCF7 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 GT PUSH2 0xD4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4661636574546F6B656E3A206964206973203 PUSH1 0x6C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x676 JUMP JUMPDEST PUSH2 0xD54 PUSH2 0x511 JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0xDA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661636574546F6B656E3A206E6F6E6578697374656E74206964000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x676 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAF DUP5 DUP7 PUSH2 0xFB1 JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP DUP2 SUB PUSH2 0xDC7 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x1 DUP5 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDDE JUMPI PUSH2 0xDDE PUSH2 0x14EE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661636574546F6B656E3A206275726E2066726F6D20746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x676 JUMP JUMPDEST PUSH2 0xE67 DUP3 PUSH1 0x0 DUP4 PUSH2 0xF69 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE71 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xEED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661636574546F6B656E3A206275726E20616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x62616C616E6365 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x676 JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0xEF8 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP2 PUSH2 0xF1B PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x8 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP2 SUB SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x94D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF88 JUMPI PUSH2 0xF80 DUP3 PUSH2 0x105E JUMP JUMPDEST PUSH2 0xF64 PUSH2 0x1093 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF9F JUMPI PUSH2 0xF80 DUP4 PUSH2 0x105E JUMP JUMPDEST PUSH2 0xFA8 DUP4 PUSH2 0x105E JUMP JUMPDEST PUSH2 0xF64 DUP3 PUSH2 0x105E JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP2 SUB PUSH2 0xFC4 JUMPI POP PUSH1 0x0 PUSH2 0x339 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 SWAP1 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1011 JUMPI PUSH1 0x0 PUSH2 0xFDE DUP4 DUP4 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 POP DUP6 SWAP1 DUP3 ADD SLOAD GT ISZERO PUSH2 0xFFD JUMPI DUP1 SWAP2 POP PUSH2 0x100B JUMP JUMPDEST PUSH2 0x1008 DUP2 PUSH1 0x1 PUSH2 0x14DB JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x103D JUMPI POP DUP4 PUSH2 0x103A DUP7 PUSH2 0x102C PUSH1 0x1 DUP7 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SWAP1 JUMP JUMPDEST SLOAD EQ JUMPDEST ISZERO PUSH2 0x1056 JUMPI PUSH2 0x104D PUSH1 0x1 DUP4 PUSH2 0x1504 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x339 JUMP JUMPDEST POP SWAP1 POP PUSH2 0x339 JUMP JUMPDEST PUSH2 0x4BA PUSH2 0x1069 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x108E DUP4 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x10CB JUMP JUMPDEST PUSH2 0x995 PUSH2 0x109E PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x3 ADD PUSH2 0x108E PUSH2 0x33F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10B8 PUSH1 0x2 DUP5 DUP5 XOR PUSH2 0x1517 JUMP JUMPDEST PUSH2 0x10C4 SWAP1 DUP5 DUP5 AND PUSH2 0x14DB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D5 PUSH2 0x511 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x10E1 DUP5 PUSH2 0x1115 JUMP JUMPDEST LT ISZERO PUSH2 0xF64 JUMPI DUP3 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP6 SSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP4 DUP5 ADD DUP1 SLOAD SWAP5 DUP6 ADD DUP2 SSTORE DUP3 MSTORE SWAP1 KECCAK256 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 SUB PUSH2 0x1128 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 SLOAD DUP3 SWAP1 PUSH2 0x1138 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1504 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1148 JUMPI PUSH2 0x1148 PUSH2 0x14EE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x117A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1162 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11A2 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x115F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x115A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11E9 DUP4 PUSH2 0x11B6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x121F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x124B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x125D JUMPI PUSH2 0x125D PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1285 JUMPI PUSH2 0x1285 PUSH2 0x11F7 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x129E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12DC DUP5 PUSH2 0x11B6 JUMP JUMPDEST SWAP3 POP PUSH2 0x12EA PUSH1 0x20 DUP6 ADD PUSH2 0x11B6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x130C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10C4 DUP3 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x134A DUP4 PUSH2 0x11B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1358 PUSH1 0x20 DUP5 ADD PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1375 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1395 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xF64 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x13C2 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13E1 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x13CE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1403 JUMPI PUSH2 0x1403 PUSH2 0x11F7 JUMP JUMPDEST PUSH2 0x1417 DUP2 PUSH2 0x1411 DUP5 SLOAD PUSH2 0x1361 JUMP JUMPDEST DUP5 PUSH2 0x139B JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x144C JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1434 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x13E1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x147B JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x145C JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1499 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x14BB DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x115F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x339 JUMPI PUSH2 0x339 PUSH2 0x14C5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x339 JUMPI PUSH2 0x339 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1534 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0x4B 0x27 PUSH25 0xC0D2C2125A37CCB1FCEA266A39077357974AF641C6D8FE074B 0x4A SWAP7 DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "1116:8350:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@____burn_188": {
									"entryPoint": 1690,
									"id": 188,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@____mint_173": {
									"entryPoint": 1192,
									"id": 173,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@____setName_132": {
									"entryPoint": 1766,
									"id": 132,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@____setSymbol_158": {
									"entryPoint": 850,
									"id": 158,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_883": {
									"entryPoint": null,
									"id": 883,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_824": {
									"entryPoint": 2074,
									"id": 824,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_873": {
									"entryPoint": 3945,
									"id": 873,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_736": {
									"entryPoint": 3574,
									"id": 736,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_lastSnapshotId_1030": {
									"entryPoint": 4373,
									"id": 1030,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_mint_659": {
									"entryPoint": 3084,
									"id": 659,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1359": {
									"entryPoint": null,
									"id": 1359,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_onlySelf_517": {
									"entryPoint": 2394,
									"id": 517,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_778": {
									"entryPoint": 2455,
									"id": 778,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_599": {
									"entryPoint": 2588,
									"id": 599,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_updateAccountSnapshot_955": {
									"entryPoint": 4190,
									"id": 955,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateSnapshot_1005": {
									"entryPoint": 4299,
									"id": 1005,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_updateTotalSupplySnapshot_967": {
									"entryPoint": 4243,
									"id": 967,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_valueAt_938": {
									"entryPoint": 3331,
									"id": 938,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@allowance_319": {
									"entryPoint": 1708,
									"id": 319,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_355": {
									"entryPoint": 805,
									"id": 355,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@average_1777": {
									"entryPoint": 4265,
									"id": 1777,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOfAt_300": {
									"entryPoint": 1213,
									"id": 300,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_270": {
									"entryPoint": 1322,
									"id": 270,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@current_1387": {
									"entryPoint": null,
									"id": 1387,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_219": {
									"entryPoint": null,
									"id": 219,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_479": {
									"entryPoint": 1543,
									"id": 479,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@findUpperBound_1283": {
									"entryPoint": 4017,
									"id": 1283,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getCurrentSnapshotId_331": {
									"entryPoint": 1297,
									"id": 331,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getUint256Slot_1508": {
									"entryPoint": null,
									"id": 1508,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increaseAllowance_439": {
									"entryPoint": 1158,
									"id": 439,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increment_1401": {
									"entryPoint": null,
									"id": 1401,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_199": {
									"entryPoint": 650,
									"id": 199,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@snapshot_502": {
									"entryPoint": 1387,
									"id": 502,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_210": {
									"entryPoint": 1363,
									"id": 210,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@token_1087": {
									"entryPoint": 2038,
									"id": 1087,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupplyAt_255": {
									"entryPoint": 1486,
									"id": 255,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_230": {
									"entryPoint": 831,
									"id": 230,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_411": {
									"entryPoint": 1122,
									"id": 411,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_379": {
									"entryPoint": 1676,
									"id": 379,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unsafeAccess_1346": {
									"entryPoint": null,
									"id": 1346,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 4534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 4621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0b2d7c8fd57b3280510afdeeb421822dc9af34c71af058448618ece1bb28de9b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_103eb3ec2d22cec9bff15c1a8d78bdd8202785596cba6cd8b051514c7b67cc94__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2797c884c4585c7b953f669fab85ef8d3021f63627ba9e1cc63545514be0ba14__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3d2c43538ee66f7e067c5d7820b5e577a2cf536bc1bc6029d1b0c588e999b493__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5b4b2e984d5504d0a346c9cdddc976f498151d3cac0319e2d2759a6ffd9134c5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_791925ddecb6f148a0c3b5d735e9ec4592b761e148599530bcae99c22106da8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ab0a890e359cdbd3f860cf24e9c85832c3bea7d1c1383610aa87befbc4c7c868__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b2ef32a2644c26a8e0eb5783eff91b6f383e570e659476654a8d71d6842e21a1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c41b46843efcd21b2abb1c8097095433b7f9de7ade295c7c4187f3a37b380230__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc53681508223d4184d95bb18bc55963fe937a15bb1553a915c4d9da65095b3d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d413533332a2b73f3a80856933a14d503815d1b47fe6777fc65ef033fe4e892a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dafb281253a5bded7239a128c0b3b124e3ffe1160cab1f3158d94ef33a7dd810__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f41e43f7462b41e3a284dc65a850f138b298a54fa33ba018c1e10381c9ba5c35__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 5019,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 5097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4447,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5317,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5358,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4599,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12456:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "80:184:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "90:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "99:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "94:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "159:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "184:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "189:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "180:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "180:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "203:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "208:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "199:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "199:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "193:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "193:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "173:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "173:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "173:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "120:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "123:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "117:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "117:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "131:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "133:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "142:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "145:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "138:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "138:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "133:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "113:3:9",
																"statements": []
															},
															"src": "109:113:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "242:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "247:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "238:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "238:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "256:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "231:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "231:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "58:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "63:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:9",
														"type": ""
													}
												],
												"src": "14:250:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "390:275:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "407:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "418:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "400:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "430:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "450:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "444:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "444:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "434:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "477:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "488:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "473:18:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "493:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "466:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "466:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "466:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "548:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "556:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "544:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "544:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "565:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "576:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "561:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "561:18:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "581:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "509:34:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:79:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:79:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "597:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "613:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "632:6:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "640:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "628:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "628:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "649:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "645:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "645:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "624:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "624:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "609:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "609:45:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "656:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "605:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "605:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "597:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "359:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "370:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "381:4:9",
														"type": ""
													}
												],
												"src": "269:396:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "719:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "729:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "751:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "738:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "738:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "729:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "821:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "830:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "833:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "823:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "823:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "823:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "780:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "791:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "806:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "811:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "802:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "802:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "815:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "798:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "798:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "787:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "787:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "777:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "777:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "770:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "770:50:9"
															},
															"nodeType": "YulIf",
															"src": "767:70:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "698:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "709:5:9",
														"type": ""
													}
												],
												"src": "670:173:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "935:167:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "981:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "990:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "993:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "983:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "983:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "983:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "956:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "965:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "952:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "952:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "977:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "948:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "948:32:9"
															},
															"nodeType": "YulIf",
															"src": "945:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1006:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1035:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1016:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1016:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1006:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1054:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1081:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1092:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1077:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1077:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1064:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1064:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1054:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "893:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "904:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "916:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "924:6:9",
														"type": ""
													}
												],
												"src": "848:254:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1224:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1235:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1220:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1220:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1212:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1254:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1279:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1272:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1272:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1265:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1265:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1247:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1247:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1247:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1171:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1182:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1193:4:9",
														"type": ""
													}
												],
												"src": "1107:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1400:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1410:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1422:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1433:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1418:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1418:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1410:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1452:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1463:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1445:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1445:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1445:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1369:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1380:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1391:4:9",
														"type": ""
													}
												],
												"src": "1299:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1513:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1530:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1537:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1542:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1533:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1533:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1523:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1523:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1523:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1570:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1563:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1563:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1594:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1597:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1587:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1587:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1587:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1481:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1693:842:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1739:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1748:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1751:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1741:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1741:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1741:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1714:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1723:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1710:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1735:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1706:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1706:32:9"
															},
															"nodeType": "YulIf",
															"src": "1703:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1764:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1791:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1778:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1778:23:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1768:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1810:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1820:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1814:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1865:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1874:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1877:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1867:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1867:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1867:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1853:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1861:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1850:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1850:14:9"
															},
															"nodeType": "YulIf",
															"src": "1847:34:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1890:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1904:9:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1915:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1900:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1900:22:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1894:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1970:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1979:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1982:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1972:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1972:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1972:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1949:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1953:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1945:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1945:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1960:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1941:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1941:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1934:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1934:35:9"
															},
															"nodeType": "YulIf",
															"src": "1931:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1995:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2018:2:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2005:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2005:16:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1999:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2044:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2046:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2046:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2046:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2036:2:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2040:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2033:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2033:10:9"
															},
															"nodeType": "YulIf",
															"src": "2030:36:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2075:17:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2089:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "2085:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2085:7:9"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "2079:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2101:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2121:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2115:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2115:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2105:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2133:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2155:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "2179:2:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2183:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2175:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2175:13:9"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "2190:2:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "2171:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2171:22:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2195:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2167:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2167:31:9"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "2200:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2163:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2163:40:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2151:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2151:53:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2137:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2263:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2265:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2265:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2265:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2222:10:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2234:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2219:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2219:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2242:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2254:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2239:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2239:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2216:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2216:46:9"
															},
															"nodeType": "YulIf",
															"src": "2213:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2301:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2305:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2294:22:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2332:6:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2340:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2325:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2325:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2325:18:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2389:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2398:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2401:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2391:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2391:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2391:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2366:2:9"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2370:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2362:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2362:11:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2375:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2358:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2358:20:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2380:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2355:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2355:33:9"
															},
															"nodeType": "YulIf",
															"src": "2352:53:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2431:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2439:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2427:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2427:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2448:2:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2452:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:11:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2457:2:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2414:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2414:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2414:46:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "2484:6:9"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2492:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2480:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2480:15:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2497:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2476:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2476:24:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2502:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2469:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2469:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2469:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2513:16:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2523:6:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2513:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1659:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1670:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1682:6:9",
														"type": ""
													}
												],
												"src": "1613:922:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2644:224:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2690:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2699:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2702:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2692:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2692:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2692:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2665:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2674:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2661:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2661:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2686:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2657:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2657:32:9"
															},
															"nodeType": "YulIf",
															"src": "2654:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2715:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2744:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2725:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2725:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2715:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2763:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2796:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2807:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2792:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2792:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2773:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2773:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2763:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2820:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2847:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2858:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2843:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2843:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2830:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2830:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2820:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2594:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2605:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2617:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2625:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2633:6:9",
														"type": ""
													}
												],
												"src": "2540:328:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2970:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2980:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2992:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3003:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2988:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2988:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2980:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3022:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3037:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3045:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3033:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3033:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3015:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3015:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3015:36:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2939:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2950:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2961:4:9",
														"type": ""
													}
												],
												"src": "2873:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3132:110:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3178:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3187:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3190:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3180:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3180:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3180:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3153:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3162:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3149:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3149:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3174:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3145:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3145:32:9"
															},
															"nodeType": "YulIf",
															"src": "3142:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3203:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3226:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3213:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3213:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3203:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3098:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3109:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3121:6:9",
														"type": ""
													}
												],
												"src": "3062:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3317:116:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3363:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3372:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3375:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3365:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3365:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3365:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3338:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3347:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3334:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3334:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3359:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:32:9"
															},
															"nodeType": "YulIf",
															"src": "3327:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3388:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3417:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3398:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3398:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3388:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3283:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3294:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:9",
														"type": ""
													}
												],
												"src": "3247:186:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3525:173:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3571:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3580:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3583:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3573:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3573:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3573:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3546:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3555:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3542:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3542:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3567:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3538:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3538:32:9"
															},
															"nodeType": "YulIf",
															"src": "3535:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3596:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3625:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3606:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3606:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3596:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3644:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3677:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3688:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3673:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3673:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3654:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3654:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3644:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3483:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3494:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3506:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3514:6:9",
														"type": ""
													}
												],
												"src": "3438:260:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3758:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3768:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3782:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3785:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3778:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3778:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3768:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3799:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3829:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3835:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3825:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3825:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3803:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3876:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3878:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3892:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3900:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3888:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3888:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3878:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3856:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3849:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3849:26:9"
															},
															"nodeType": "YulIf",
															"src": "3846:61:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3966:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3987:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3994:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3999:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3990:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3990:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3980:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3980:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3980:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4031:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4034:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4024:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4024:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4024:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4059:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4062:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4052:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4052:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4052:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3922:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3945:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3953:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3942:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3942:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3919:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3919:38:9"
															},
															"nodeType": "YulIf",
															"src": "3916:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3738:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3747:6:9",
														"type": ""
													}
												],
												"src": "3703:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4144:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4161:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4164:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4154:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4154:14:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4154:14:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4177:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4195:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4198:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4185:9:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4185:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4177:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4127:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4135:4:9",
														"type": ""
													}
												],
												"src": "4088:121:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4295:464:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4328:425:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4342:11:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4352:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "4346:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4373:2:9"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "4377:5:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4366:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4366:17:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4366:17:9"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4396:31:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4418:2:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4422:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "4408:9:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4408:19:9"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "4400:4:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4440:57:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "4463:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4473:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "4480:10:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4492:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4476:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4476:19:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "4469:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4469:27:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4459:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4459:38:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "4444:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4534:23:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "4536:19:9",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "4551:4:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "4536:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "4516:10:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4528:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "4513:2:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4513:20:9"
																		},
																		"nodeType": "YulIf",
																		"src": "4510:47:9"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4570:41:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "4584:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4594:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "4601:3:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4606:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4597:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4597:12:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "4590:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4590:20:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4580:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4580:31:9"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "4574:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4624:24:9",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "4637:11:9"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "4628:5:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4722:21:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "4731:5:9"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "4738:2:9"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "4724:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4724:17:9"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "4724:17:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "4672:5:9"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "4679:2:9"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "4669:2:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4669:13:9"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "4683:26:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "4685:22:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "4698:5:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4705:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4694:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4694:13:9"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "4685:5:9"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "4665:3:9",
																			"statements": []
																		},
																		"src": "4661:82:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "4311:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4316:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4308:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4308:11:9"
															},
															"nodeType": "YulIf",
															"src": "4305:448:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4267:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "4274:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "4279:10:9",
														"type": ""
													}
												],
												"src": "4214:545:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4849:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4859:65:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "4874:4:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4892:1:9",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "4895:3:9"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "4888:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4888:11:9"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4905:1:9",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "4901:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4901:6:9"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "4884:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4884:24:9"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4880:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4880:29:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4870:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4870:40:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4916:1:9",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "4919:3:9"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4912:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4912:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4867:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4867:57:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "4859:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4826:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "4832:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "4840:4:9",
														"type": ""
													}
												],
												"src": "4764:166:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5031:1256:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5041:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5061:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5055:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5055:10:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "5045:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5108:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5110:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5110:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5110:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5080:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5088:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5077:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5077:30:9"
															},
															"nodeType": "YulIf",
															"src": "5074:56:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5183:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5221:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5215:5:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5215:11:9"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "5189:25:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5189:38:9"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5229:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "5139:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5139:97:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5139:97:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5245:18:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5262:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "5249:9:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5272:23:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5291:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "5276:11:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5304:24:9",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "5317:11:9"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "5304:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5374:656:9",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5388:35:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5407:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5419:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "5415:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5415:7:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "5403:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5403:20:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "5392:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5436:49:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5480:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "5450:29:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5450:35:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "5440:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5498:10:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5507:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "5502:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5585:172:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5610:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "5628:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "5633:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "5624:3:9"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "5624:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "5618:5:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5618:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "5603:6:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5603:42:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "5603:42:9"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "5662:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5676:6:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5684:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5672:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5672:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "5662:6:9"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "5703:40:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "5720:9:9"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "5731:11:9"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5716:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5716:27:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "5703:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5532:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "5535:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "5529:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5529:14:9"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "5544:28:9",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5546:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "5555:1:9"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "5558:11:9"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5551:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5551:19:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5546:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "5525:3:9",
																					"statements": []
																				},
																				"src": "5521:236:9"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5805:166:9",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "5823:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5850:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5855:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5846:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5846:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5840:5:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5840:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "5827:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5890:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "5902:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "5929:1:9",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "5932:6:9"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "5925:3:9"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "5925:14:9"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "5941:3:9",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "5921:3:9"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "5921:24:9"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "5951:1:9",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "5947:3:9"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "5947:6:9"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "5917:3:9"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "5917:37:9"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "5913:3:9"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "5913:42:9"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "5898:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5898:58:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "5883:6:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5883:74:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "5883:74:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "5776:7:9"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5785:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "5773:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5773:19:9"
																				},
																				"nodeType": "YulIf",
																				"src": "5770:201:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5991:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6005:1:9",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "6008:6:9"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "6001:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6001:14:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6017:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5997:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5997:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5984:6:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5984:36:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5984:36:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5367:663:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5372:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6047:234:9",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6061:14:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6074:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "6065:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6110:67:9",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6128:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6147:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6152:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6143:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6143:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6137:5:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6137:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6128:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "6091:6:9"
																				},
																				"nodeType": "YulIf",
																				"src": "6088:89:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6197:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6256:5:9"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "6263:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "6203:52:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6203:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6190:6:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6190:81:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6190:81:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6039:242:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5347:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5355:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5344:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5344:14:9"
															},
															"nodeType": "YulSwitch",
															"src": "5337:944:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5016:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5022:3:9",
														"type": ""
													}
												],
												"src": "4935:1352:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6431:150:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6441:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6461:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6455:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6455:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6445:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6516:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6524:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6512:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6512:17:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6531:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6536:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "6477:34:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6477:66:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6477:66:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6552:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6563:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6568:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6559:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6559:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6407:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6412:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6423:3:9",
														"type": ""
													}
												],
												"src": "6292:289:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6618:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6635:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6642:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6647:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6638:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6638:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6628:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6628:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6628:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6675:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6678:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6668:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6668:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6668:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6699:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6702:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6692:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6692:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6692:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6586:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6766:77:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6776:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6787:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6790:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6783:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6783:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6776:3:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6815:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6817:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6817:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6817:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6807:1:9"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6810:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6804:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6804:10:9"
															},
															"nodeType": "YulIf",
															"src": "6801:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6749:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6752:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6758:3:9",
														"type": ""
													}
												],
												"src": "6718:125:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7022:232:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7039:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7050:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7032:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7032:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7032:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7073:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7084:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7069:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7069:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7089:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7062:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7062:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7062:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7112:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7123:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7108:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7108:18:9"
																	},
																	{
																		"hexValue": "4661636574546f6b656e3a2064656372656173656420616c6c6f77616e636520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7128:34:9",
																		"type": "",
																		"value": "FacetToken: decreased allowance "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7101:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7101:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7101:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7183:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7194:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7179:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7179:18:9"
																	},
																	{
																		"hexValue": "62656c6f77207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7199:12:9",
																		"type": "",
																		"value": "below zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7172:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7172:40:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7172:40:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7221:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7233:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7244:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7229:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7229:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7221:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0b2d7c8fd57b3280510afdeeb421822dc9af34c71af058448618ece1bb28de9b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6999:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7013:4:9",
														"type": ""
													}
												],
												"src": "6848:406:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7433:231:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7450:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7461:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7443:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7443:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7443:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7484:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7495:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7480:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7480:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7500:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7473:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7473:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7473:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7523:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7534:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7519:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7519:18:9"
																	},
																	{
																		"hexValue": "4661636574546f6b656e3a20617070726f76652066726f6d20746865207a6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7539:34:9",
																		"type": "",
																		"value": "FacetToken: approve from the zer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7512:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7512:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7512:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7594:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7605:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7590:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7590:18:9"
																	},
																	{
																		"hexValue": "6f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7610:11:9",
																		"type": "",
																		"value": "o address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7583:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7583:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7583:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7631:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7643:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7654:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7639:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7639:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7631:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_103eb3ec2d22cec9bff15c1a8d78bdd8202785596cba6cd8b051514c7b67cc94__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7410:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7424:4:9",
														"type": ""
													}
												],
												"src": "7259:405:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7843:229:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7860:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7871:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7853:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7853:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7853:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7894:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7905:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7890:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7890:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7910:2:9",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7883:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7883:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7883:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7933:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7944:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7929:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7929:18:9"
																	},
																	{
																		"hexValue": "4661636574546f6b656e3a20617070726f766520746f20746865207a65726f20",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7949:34:9",
																		"type": "",
																		"value": "FacetToken: approve to the zero "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7922:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7922:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7922:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8004:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8015:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8000:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8000:18:9"
																	},
																	{
																		"hexValue": "61646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8020:9:9",
																		"type": "",
																		"value": "address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7993:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7993:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7993:37:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8039:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8051:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8062:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8047:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8047:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8039:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc53681508223d4184d95bb18bc55963fe937a15bb1553a915c4d9da65095b3d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7820:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7834:4:9",
														"type": ""
													}
												],
												"src": "7669:403:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8251:158:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8268:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8279:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8261:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8261:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8261:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8302:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8313:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8298:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8298:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8318:1:9",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8291:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8291:29:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8291:29:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8340:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8351:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8336:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8336:18:9"
																	},
																	{
																		"hexValue": "6f6e6c792073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8356:11:9",
																		"type": "",
																		"value": "only self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8329:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8329:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8329:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8377:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8389:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8400:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8385:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8385:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8377:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2797c884c4585c7b953f669fab85ef8d3021f63627ba9e1cc63545514be0ba14__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8228:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8242:4:9",
														"type": ""
													}
												],
												"src": "8077:332:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8588:224:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8605:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8616:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8598:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8598:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8598:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8639:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8650:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8635:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8635:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8655:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8628:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8628:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8628:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8678:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8689:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8674:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8674:18:9"
																	},
																	{
																		"hexValue": "4661636574546f6b656e3a20696e73756666696369656e7420616c6c6f77616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8694:34:9",
																		"type": "",
																		"value": "FacetToken: insufficient allowan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8667:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8667:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8667:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8749:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8760:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8745:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8745:18:9"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8765:4:9",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8738:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8738:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8738:32:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8779:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8791:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8802:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8787:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8787:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8779:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d413533332a2b73f3a80856933a14d503815d1b47fe6777fc65ef033fe4e892a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8565:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8579:4:9",
														"type": ""
													}
												],
												"src": "8414:398:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8991:232:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9008:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9019:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9001:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9001:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9001:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9042:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9053:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9038:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9038:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9058:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9031:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9031:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9031:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9081:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9092:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9077:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9077:18:9"
																	},
																	{
																		"hexValue": "4661636574546f6b656e3a207472616e736665722066726f6d20746865207a65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9097:34:9",
																		"type": "",
																		"value": "FacetToken: transfer from the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9070:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9070:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9070:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9152:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9163:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9148:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9148:18:9"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9168:12:9",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9141:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9141:40:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9141:40:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9190:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9202:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9213:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9198:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9198:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9190:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ab0a890e359cdbd3f860cf24e9c85832c3bea7d1c1383610aa87befbc4c7c868__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8968:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8982:4:9",
														"type": ""
													}
												],
												"src": "8817:406:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9402:230:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9419:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9430:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9412:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9412:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9412:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9453:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9464:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9449:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9449:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9469:2:9",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9442:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9442:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9442:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9492:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9503:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9488:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9488:18:9"
																	},
																	{
																		"hexValue": "4661636574546f6b656e3a207472616e7366657220746f20746865207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9508:34:9",
																		"type": "",
																		"value": "FacetToken: transfer to the zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9481:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9481:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9481:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9563:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9574:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9559:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9559:18:9"
																	},
																	{
																		"hexValue": "2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9579:10:9",
																		"type": "",
																		"value": " address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9552:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9552:38:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9552:38:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9599:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9611:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9622:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9607:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9607:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9599:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f41e43f7462b41e3a284dc65a850f138b298a54fa33ba018c1e10381c9ba5c35__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9379:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9393:4:9",
														"type": ""
													}
												],
												"src": "9228:404:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9811:233:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9828:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9839:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9821:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9821:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9821:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9862:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9873:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9858:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9858:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9878:2:9",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9851:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9851:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9851:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9901:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9912:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9897:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9897:18:9"
																	},
																	{
																		"hexValue": "4661636574546f6b656e3a207472616e7366657220616d6f756e742065786365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9917:34:9",
																		"type": "",
																		"value": "FacetToken: transfer amount exce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9890:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9890:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9890:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9972:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9983:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9968:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9968:18:9"
																	},
																	{
																		"hexValue": "6564732062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9988:13:9",
																		"type": "",
																		"value": "eds balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9961:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9961:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9961:41:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10011:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10023:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10034:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10019:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10019:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10011:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dafb281253a5bded7239a128c0b3b124e3ffe1160cab1f3158d94ef33a7dd810__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9788:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9802:4:9",
														"type": ""
													}
												],
												"src": "9637:407:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10223:226:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10240:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10251:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10233:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10233:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10233:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10274:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10285:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10270:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10270:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10290:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10263:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10263:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10263:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10313:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10324:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10309:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10309:18:9"
																	},
																	{
																		"hexValue": "4661636574546f6b656e3a206d696e7420746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10329:34:9",
																		"type": "",
																		"value": "FacetToken: mint to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10302:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10302:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10302:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10384:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10395:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10380:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10380:18:9"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10400:6:9",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10373:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10373:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10373:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10416:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10428:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10439:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10424:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10424:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10416:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_791925ddecb6f148a0c3b5d735e9ec4592b761e148599530bcae99c22106da8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10200:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10214:4:9",
														"type": ""
													}
												],
												"src": "10049:400:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10628:169:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10645:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10656:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10638:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10638:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10638:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10679:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10690:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10675:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10675:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10695:2:9",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10668:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10668:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10668:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10718:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10729:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10714:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10714:18:9"
																	},
																	{
																		"hexValue": "4661636574546f6b656e3a2069642069732030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10734:21:9",
																		"type": "",
																		"value": "FacetToken: id is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10707:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10707:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10707:49:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10765:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10777:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10788:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10773:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10773:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10765:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3d2c43538ee66f7e067c5d7820b5e577a2cf536bc1bc6029d1b0c588e999b493__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10605:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10619:4:9",
														"type": ""
													}
												],
												"src": "10454:343:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10976:176:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10993:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11004:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10986:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10986:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10986:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11027:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11038:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11023:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11023:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11043:2:9",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11016:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11016:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11016:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11066:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11077:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11062:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11062:18:9"
																	},
																	{
																		"hexValue": "4661636574546f6b656e3a206e6f6e6578697374656e74206964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11082:28:9",
																		"type": "",
																		"value": "FacetToken: nonexistent id"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11055:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11055:56:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11055:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11120:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11132:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11143:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11128:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11128:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11120:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c41b46843efcd21b2abb1c8097095433b7f9de7ade295c7c4187f3a37b380230__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10953:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10967:4:9",
														"type": ""
													}
												],
												"src": "10802:350:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11189:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11206:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11213:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11218:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11209:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11209:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11199:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11199:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11199:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11246:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11249:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11239:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11239:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11239:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11270:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11273:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11263:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11263:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11263:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "11157:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11463:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11480:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11491:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11473:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11473:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11473:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11514:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11525:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11510:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11510:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11530:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11503:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11503:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11503:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11553:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11564:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11549:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11549:18:9"
																	},
																	{
																		"hexValue": "4661636574546f6b656e3a206275726e2066726f6d20746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11569:34:9",
																		"type": "",
																		"value": "FacetToken: burn from the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11542:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11542:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11542:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11624:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11635:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11620:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11620:18:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11640:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11613:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11613:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11613:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11658:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11670:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11681:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11666:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11666:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11658:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5b4b2e984d5504d0a346c9cdddc976f498151d3cac0319e2d2759a6ffd9134c5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11440:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11454:4:9",
														"type": ""
													}
												],
												"src": "11289:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11870:229:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11887:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11898:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11880:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11880:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11880:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11921:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11932:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11917:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11917:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11937:2:9",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11910:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11910:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11910:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11960:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11971:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11956:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11956:18:9"
																	},
																	{
																		"hexValue": "4661636574546f6b656e3a206275726e20616d6f756e74206578636565647320",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11976:34:9",
																		"type": "",
																		"value": "FacetToken: burn amount exceeds "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11949:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11949:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11949:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12031:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12042:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12027:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12027:18:9"
																	},
																	{
																		"hexValue": "62616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12047:9:9",
																		"type": "",
																		"value": "balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12020:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12020:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12020:37:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12066:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12078:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12089:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12074:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12074:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12066:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b2ef32a2644c26a8e0eb5783eff91b6f383e570e659476654a8d71d6842e21a1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11847:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11861:4:9",
														"type": ""
													}
												],
												"src": "11696:403:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12153:79:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12163:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12175:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12178:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12171:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12171:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12163:4:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12204:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12206:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12206:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12206:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "12195:4:9"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12201:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12192:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12192:11:9"
															},
															"nodeType": "YulIf",
															"src": "12189:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12135:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12138:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12144:4:9",
														"type": ""
													}
												],
												"src": "12104:128:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12283:171:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12314:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12335:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12342:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12347:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "12338:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12338:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12328:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12328:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12328:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12379:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12382:4:9",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12372:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12372:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12372:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12407:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12410:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12400:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12400:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12400:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12303:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12296:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12296:9:9"
															},
															"nodeType": "YulIf",
															"src": "12293:132:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12434:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12443:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12446:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12439:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12439:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12434:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12268:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12271:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12277:1:9",
														"type": ""
													}
												],
												"src": "12237:217:9"
											}
										]
									},
									"contents": "{\n    { }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_0b2d7c8fd57b3280510afdeeb421822dc9af34c71af058448618ece1bb28de9b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"FacetToken: decreased allowance \")\n        mstore(add(headStart, 96), \"below zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_103eb3ec2d22cec9bff15c1a8d78bdd8202785596cba6cd8b051514c7b67cc94__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"FacetToken: approve from the zer\")\n        mstore(add(headStart, 96), \"o address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc53681508223d4184d95bb18bc55963fe937a15bb1553a915c4d9da65095b3d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"FacetToken: approve to the zero \")\n        mstore(add(headStart, 96), \"address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2797c884c4585c7b953f669fab85ef8d3021f63627ba9e1cc63545514be0ba14__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"only self\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d413533332a2b73f3a80856933a14d503815d1b47fe6777fc65ef033fe4e892a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"FacetToken: insufficient allowan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ab0a890e359cdbd3f860cf24e9c85832c3bea7d1c1383610aa87befbc4c7c868__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"FacetToken: transfer from the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f41e43f7462b41e3a284dc65a850f138b298a54fa33ba018c1e10381c9ba5c35__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"FacetToken: transfer to the zero\")\n        mstore(add(headStart, 96), \" address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_dafb281253a5bded7239a128c0b3b124e3ffe1160cab1f3158d94ef33a7dd810__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"FacetToken: transfer amount exce\")\n        mstore(add(headStart, 96), \"eds balance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_791925ddecb6f148a0c3b5d735e9ec4592b761e148599530bcae99c22106da8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"FacetToken: mint to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3d2c43538ee66f7e067c5d7820b5e577a2cf536bc1bc6029d1b0c588e999b493__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"FacetToken: id is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c41b46843efcd21b2abb1c8097095433b7f9de7ade295c7c4187f3a37b380230__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"FacetToken: nonexistent id\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_5b4b2e984d5504d0a346c9cdddc976f498151d3cac0319e2d2759a6ffd9134c5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"FacetToken: burn from the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b2ef32a2644c26a8e0eb5783eff91b6f383e570e659476654a8d71d6842e21a1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"FacetToken: burn amount exceeds \")\n        mstore(add(headStart, 96), \"balance\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101215760003560e01c80635439ad86116100ad578063a457c2d711610071578063a457c2d71461022b578063a9059cbb1461023e578063b74456f214610251578063dd62ed3e14610264578063e0089dc31461027757600080fd5b80635439ad86146101ed57806370a08231146101f557806395d89b41146102085780639711715a14610210578063981b24d01461021857600080fd5b806323b872dd116100f457806323b872dd14610192578063313ce567146101a557806339509351146101b457806349e7012c146101c75780634ee2cd7e146101da57600080fd5b806306fdde0314610126578063095ea7b31461014457806318160ddd146101675780631e96c1dd1461017d575b600080fd5b61012e61028a565b60405161013b9190611183565b60405180910390f35b6101576101523660046111cd565b610325565b604051901515815260200161013b565b61016f61033f565b60405190815260200161013b565b61019061018b36600461120d565b610352565b005b6101576101a03660046112be565b610462565b6040516012815260200161013b565b6101576101c23660046111cd565b610486565b6101906101d53660046112fa565b6104a8565b61016f6101e83660046111cd565b6104bd565b61016f610511565b61016f610203366004611313565b61052a565b61012e610553565b61016f61056b565b61016f6102263660046112fa565b6105ce565b6101576102393660046111cd565b610607565b61015761024c3660046111cd565b61068c565b61019061025f3660046112fa565b61069a565b61016f61027236600461132e565b6106ac565b61019061028536600461120d565b6106e6565b60606102946107f6565b60060180546102a290611361565b80601f01602080910402602001604051908101604052809291908181526020018280546102ce90611361565b801561031b5780601f106102f05761010080835404028352916020019161031b565b820191906000526020600020905b8154815290600101906020018083116102fe57829003601f168201915b5050505050905090565b60003361033381858561081a565b60019150505b92915050565b60006103496107f6565b60080154905090565b61035a61095a565b60006103646107f6565b600701805461037290611361565b80601f016020809104026020016040519081016040528092919081815260200182805461039e90611361565b80156103eb5780601f106103c0576101008083540402835291602001916103eb565b820191906000526020600020905b8154815290600101906020018083116103ce57829003601f168201915b50505050509050816103fb6107f6565b6007019061040990826113e9565b508160405161041891906114a9565b60405180910390208160405161042e91906114a9565b604051908190038120907f68023cab388c6052af3fa625f164cd0c14cc9125d57286fbe0d9b384847c4c0290600090a35050565b600033610470858285610997565b61047b858585610a1c565b506001949350505050565b60003361033381858561049983836106ac565b6104a391906114db565b61081a565b6104b061095a565b6104ba3382610c0c565b50565b60008060006104ef846104ce6107f6565b6001600160a01b038816600090815260029190910160205260409020610d03565b9150915081610506576105018561052a565b610508565b805b95945050505050565b600061052561051e6107f6565b6005015490565b905090565b60006105346107f6565b6001600160a01b03909216600090815260209290925250604090205490565b606061055d6107f6565b60070180546102a290611361565b60006105846105786107f6565b60050180546001019055565b600061058e610511565b90507f8030e83b04d87bef53480e26263266d6ca66863aa8506aca6f2559d18aa1cb67816040516105c191815260200190565b60405180910390a1919050565b60008060006105e7846105df6107f6565b600301610d03565b91509150816105fd576105f861033f565b6105ff565b805b949350505050565b6000338161061582866106ac565b90508381101561067f5760405162461bcd60e51b815260206004820152602a60248201527f4661636574546f6b656e3a2064656372656173656420616c6c6f77616e63652060448201526962656c6f77207a65726f60b01b60648201526084015b60405180910390fd5b61047b828686840361081a565b600033610333818585610a1c565b6106a261095a565b6104ba3382610df6565b60006106b66107f6565b6001600160a01b039384166000908152600191909101602090815260408083209490951682529290925250205490565b6106ee61095a565b60006106f86107f6565b600601805461070690611361565b80601f016020809104026020016040519081016040528092919081815260200182805461073290611361565b801561077f5780601f106107545761010080835404028352916020019161077f565b820191906000526020600020905b81548152906001019060200180831161076257829003601f168201915b505050505090508161078f6107f6565b6006019061079d90826113e9565b50816040516107ac91906114a9565b6040518091039020816040516107c291906114a9565b604051908190038120907fe08ba098c56583ff7ce264f98fb97b7ddc5e6af834acc0556b24327f72a555f990600090a35050565b7f667c0cf071c712f94f97f65a859cdaa470fe424825756c2cae5a4d1adcee538b90565b6001600160a01b0383166108825760405162461bcd60e51b815260206004820152602960248201527f4661636574546f6b656e3a20617070726f76652066726f6d20746865207a65726044820152686f206164647265737360b81b6064820152608401610676565b6001600160a01b0382166108e85760405162461bcd60e51b815260206004820152602760248201527f4661636574546f6b656e3a20617070726f766520746f20746865207a65726f206044820152666164647265737360c81b6064820152608401610676565b806108f16107f6565b6001600160a01b038581166000818152600193909301602090815260408085209388168086529382529384902094909455915184815290927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b3330146109955760405162461bcd60e51b815260206004820152600960248201526837b7363c9039b2b63360b91b6044820152606401610676565b565b60006109a384846106ac565b90506000198114610a165781811015610a095760405162461bcd60e51b815260206004820152602260248201527f4661636574546f6b656e3a20696e73756666696369656e7420616c6c6f77616e604482015261636560f01b6064820152608401610676565b610a16848484840361081a565b50505050565b6001600160a01b038316610a855760405162461bcd60e51b815260206004820152602a60248201527f4661636574546f6b656e3a207472616e736665722066726f6d20746865207a65604482015269726f206164647265737360b01b6064820152608401610676565b6001600160a01b038216610aec5760405162461bcd60e51b815260206004820152602860248201527f4661636574546f6b656e3a207472616e7366657220746f20746865207a65726f604482015267206164647265737360c01b6064820152608401610676565b610af7838383610f69565b6000610b016107f6565b6001600160a01b03851660009081526020919091526040902054905081811015610b815760405162461bcd60e51b815260206004820152602b60248201527f4661636574546f6b656e3a207472616e7366657220616d6f756e74206578636560448201526a6564732062616c616e636560a81b6064820152608401610676565b818103610b8c6107f6565b6001600160a01b0386166000908152602091909152604090205581610baf6107f6565b6001600160a01b03858116600081815260209384526040908190208054959095019094559251858152908716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610a16565b6001600160a01b038216610c6e5760405162461bcd60e51b8152602060048201526024808201527f4661636574546f6b656e3a206d696e7420746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610676565b610c7a60008383610f69565b80610c836107f6565b6008016000828254610c9591906114db565b90915550819050610ca46107f6565b6001600160a01b03841660008181526020929092526040808320805490940190935591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610cf79085815260200190565b60405180910390a35050565b60008060008411610d4c5760405162461bcd60e51b815260206004820152601360248201527204661636574546f6b656e3a206964206973203606c1b6044820152606401610676565b610d54610511565b841115610da35760405162461bcd60e51b815260206004820152601a60248201527f4661636574546f6b656e3a206e6f6e6578697374656e742069640000000000006044820152606401610676565b6000610daf8486610fb1565b84549091508103610dc7576000809250925050610def565b6001846001018281548110610dde57610dde6114ee565b906000526020600020015492509250505b9250929050565b6001600160a01b038216610e5b5760405162461bcd60e51b815260206004820152602660248201527f4661636574546f6b656e3a206275726e2066726f6d20746865207a65726f206160448201526564647265737360d01b6064820152608401610676565b610e6782600083610f69565b6000610e716107f6565b6001600160a01b03841660009081526020919091526040902054905081811015610eed5760405162461bcd60e51b815260206004820152602760248201527f4661636574546f6b656e3a206275726e20616d6f756e7420657863656564732060448201526662616c616e636560c81b6064820152608401610676565b818103610ef86107f6565b6001600160a01b0385166000908152602091909152604090205581610f1b6107f6565b60080180549190910390556040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161094d565b505050565b6001600160a01b038316610f8857610f808261105e565b610f64611093565b6001600160a01b038216610f9f57610f808361105e565b610fa88361105e565b610f648261105e565b81546000908103610fc457506000610339565b82546000905b80821015611011576000610fde83836110a9565b60008781526020902090915085908201541115610ffd5780915061100b565b6110088160016114db565b92505b50610fca565b60008211801561103d57508361103a8661102c600186611504565b600091825260209091200190565b54145b156110565761104d600183611504565b92505050610339565b509050610339565b6104ba6110696107f6565b6001600160a01b03831660009081526002919091016020526040902061108e8361052a565b6110cb565b61099561109e6107f6565b60030161108e61033f565b60006110b86002848418611517565b6110c4908484166114db565b9392505050565b60006110d5610511565b9050806110e184611115565b1015610f64578254600180820185556000858152602080822090930193909355938401805494850181558252902090910155565b8054600090810361112857506000919050565b8154829061113890600190611504565b81548110611148576111486114ee565b90600052602060002001549050919050565b919050565b60005b8381101561117a578181015183820152602001611162565b50506000910152565b60208152600082518060208401526111a281604085016020870161115f565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461115a57600080fd5b600080604083850312156111e057600080fd5b6111e9836111b6565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561121f57600080fd5b813567ffffffffffffffff8082111561123757600080fd5b818401915084601f83011261124b57600080fd5b81358181111561125d5761125d6111f7565b604051601f8201601f19908116603f01168101908382118183101715611285576112856111f7565b8160405282815287602084870101111561129e57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000806000606084860312156112d357600080fd5b6112dc846111b6565b92506112ea602085016111b6565b9150604084013590509250925092565b60006020828403121561130c57600080fd5b5035919050565b60006020828403121561132557600080fd5b6110c4826111b6565b6000806040838503121561134157600080fd5b61134a836111b6565b9150611358602084016111b6565b90509250929050565b600181811c9082168061137557607f821691505b60208210810361139557634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610f6457600081815260208120601f850160051c810160208610156113c25750805b601f850160051c820191505b818110156113e1578281556001016113ce565b505050505050565b815167ffffffffffffffff811115611403576114036111f7565b611417816114118454611361565b8461139b565b602080601f83116001811461144c57600084156114345750858301515b600019600386901b1c1916600185901b1785556113e1565b600085815260208120601f198616915b8281101561147b5788860151825594840194600190910190840161145c565b50858210156114995787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516114bb81846020870161115f565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610339576103396114c5565b634e487b7160e01b600052603260045260246000fd5b81810381811115610339576103396114c5565b60008261153457634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220b14b2778c0d2c2125a37ccb1fcea266a39077357974af641c6d8fe074b4a968f64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5439AD86 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xB74456F2 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xE0089DC3 EQ PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5439AD86 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x9711715A EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x981B24D0 EQ PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x49E7012C EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x4EE2CD7E EQ PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x1E96C1DD EQ PUSH2 0x17D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x28A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x11CD JUMP JUMPDEST PUSH2 0x325 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST PUSH2 0x16F PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST PUSH2 0x190 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x120D JUMP JUMPDEST PUSH2 0x352 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x157 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x12BE JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13B JUMP JUMPDEST PUSH2 0x157 PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x11CD JUMP JUMPDEST PUSH2 0x486 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x1D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x1E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x11CD JUMP JUMPDEST PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x16F PUSH2 0x511 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0x52A JUMP JUMPDEST PUSH2 0x12E PUSH2 0x553 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x56B JUMP JUMPDEST PUSH2 0x16F PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x5CE JUMP JUMPDEST PUSH2 0x157 PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x11CD JUMP JUMPDEST PUSH2 0x607 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x11CD JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST PUSH2 0x190 PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x69A JUMP JUMPDEST PUSH2 0x16F PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x132E JUMP JUMPDEST PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x190 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x120D JUMP JUMPDEST PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x294 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x6 ADD DUP1 SLOAD PUSH2 0x2A2 SWAP1 PUSH2 0x1361 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2CE SWAP1 PUSH2 0x1361 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x31B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x31B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2FE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x333 DUP2 DUP6 DUP6 PUSH2 0x81A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x349 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x8 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x35A PUSH2 0x95A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x364 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x7 ADD DUP1 SLOAD PUSH2 0x372 SWAP1 PUSH2 0x1361 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39E SWAP1 PUSH2 0x1361 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3EB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3EB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3CE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP2 PUSH2 0x3FB PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x7 ADD SWAP1 PUSH2 0x409 SWAP1 DUP3 PUSH2 0x13E9 JUMP JUMPDEST POP DUP2 PUSH1 0x40 MLOAD PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 PUSH1 0x40 MLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 PUSH32 0x68023CAB388C6052AF3FA625F164CD0C14CC9125D57286FBE0D9B384847C4C02 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x470 DUP6 DUP3 DUP6 PUSH2 0x997 JUMP JUMPDEST PUSH2 0x47B DUP6 DUP6 DUP6 PUSH2 0xA1C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x333 DUP2 DUP6 DUP6 PUSH2 0x499 DUP4 DUP4 PUSH2 0x6AC JUMP JUMPDEST PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0x81A JUMP JUMPDEST PUSH2 0x4B0 PUSH2 0x95A JUMP JUMPDEST PUSH2 0x4BA CALLER DUP3 PUSH2 0xC0C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x4EF DUP5 PUSH2 0x4CE PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xD03 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x506 JUMPI PUSH2 0x501 DUP6 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST DUP1 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x525 PUSH2 0x51E PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x5 ADD SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x534 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP3 SWAP1 SWAP3 MSTORE POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x55D PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x7 ADD DUP1 SLOAD PUSH2 0x2A2 SWAP1 PUSH2 0x1361 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x584 PUSH2 0x578 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58E PUSH2 0x511 JUMP JUMPDEST SWAP1 POP PUSH32 0x8030E83B04D87BEF53480E26263266D6CA66863AA8506ACA6F2559D18AA1CB67 DUP2 PUSH1 0x40 MLOAD PUSH2 0x5C1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x5E7 DUP5 PUSH2 0x5DF PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x3 ADD PUSH2 0xD03 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x5FD JUMPI PUSH2 0x5F8 PUSH2 0x33F JUMP JUMPDEST PUSH2 0x5FF JUMP JUMPDEST DUP1 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x615 DUP3 DUP7 PUSH2 0x6AC JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x67F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661636574546F6B656E3A2064656372656173656420616C6C6F77616E636520 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x62656C6F77207A65726F PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x47B DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x81A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x333 DUP2 DUP6 DUP6 PUSH2 0xA1C JUMP JUMPDEST PUSH2 0x6A2 PUSH2 0x95A JUMP JUMPDEST PUSH2 0x4BA CALLER DUP3 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B6 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP6 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE POP KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6EE PUSH2 0x95A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F8 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x6 ADD DUP1 SLOAD PUSH2 0x706 SWAP1 PUSH2 0x1361 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x732 SWAP1 PUSH2 0x1361 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x77F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x754 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x77F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x762 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP2 PUSH2 0x78F PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x6 ADD SWAP1 PUSH2 0x79D SWAP1 DUP3 PUSH2 0x13E9 JUMP JUMPDEST POP DUP2 PUSH1 0x40 MLOAD PUSH2 0x7AC SWAP2 SWAP1 PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP2 PUSH1 0x40 MLOAD PUSH2 0x7C2 SWAP2 SWAP1 PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 PUSH32 0xE08BA098C56583FF7CE264F98FB97B7DDC5E6AF834ACC0556B24327F72A555F9 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH32 0x667C0CF071C712F94F97F65A859CDAA470FE424825756C2CAE5A4D1ADCEE538B SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x882 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661636574546F6B656E3A20617070726F76652066726F6D20746865207A6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x6F2061646472657373 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x676 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661636574546F6B656E3A20617070726F766520746F20746865207A65726F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x61646472657373 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x676 JUMP JUMPDEST DUP1 PUSH2 0x8F1 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP4 DUP9 AND DUP1 DUP7 MSTORE SWAP4 DUP3 MSTORE SWAP4 DUP5 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x995 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x37B7363C9039B2B633 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x676 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A3 DUP5 DUP5 PUSH2 0x6AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0xA16 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661636574546F6B656E3A20696E73756666696369656E7420616C6C6F77616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x676 JUMP JUMPDEST PUSH2 0xA16 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x81A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661636574546F6B656E3A207472616E736665722066726F6D20746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x676 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661636574546F6B656E3A207472616E7366657220746F20746865207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x2061646472657373 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x676 JUMP JUMPDEST PUSH2 0xAF7 DUP4 DUP4 DUP4 PUSH2 0xF69 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB01 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xB81 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661636574546F6B656E3A207472616E7366657220616D6F756E742065786365 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6564732062616C616E6365 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x676 JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0xB8C PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP2 PUSH2 0xBAF PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 SWAP4 DUP5 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD SWAP6 SWAP1 SWAP6 ADD SWAP1 SWAP5 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4661636574546F6B656E3A206D696E7420746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x676 JUMP JUMPDEST PUSH2 0xC7A PUSH1 0x0 DUP4 DUP4 PUSH2 0xF69 JUMP JUMPDEST DUP1 PUSH2 0xC83 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x8 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC95 SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0xCA4 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP5 ADD SWAP1 SWAP4 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xCF7 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 GT PUSH2 0xD4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4661636574546F6B656E3A206964206973203 PUSH1 0x6C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x676 JUMP JUMPDEST PUSH2 0xD54 PUSH2 0x511 JUMP JUMPDEST DUP5 GT ISZERO PUSH2 0xDA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661636574546F6B656E3A206E6F6E6578697374656E74206964000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x676 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAF DUP5 DUP7 PUSH2 0xFB1 JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP DUP2 SUB PUSH2 0xDC7 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x1 DUP5 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDDE JUMPI PUSH2 0xDDE PUSH2 0x14EE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661636574546F6B656E3A206275726E2066726F6D20746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x676 JUMP JUMPDEST PUSH2 0xE67 DUP3 PUSH1 0x0 DUP4 PUSH2 0xF69 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE71 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xEED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661636574546F6B656E3A206275726E20616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x62616C616E6365 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x676 JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0xEF8 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP2 PUSH2 0xF1B PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x8 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP2 SUB SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x94D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF88 JUMPI PUSH2 0xF80 DUP3 PUSH2 0x105E JUMP JUMPDEST PUSH2 0xF64 PUSH2 0x1093 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF9F JUMPI PUSH2 0xF80 DUP4 PUSH2 0x105E JUMP JUMPDEST PUSH2 0xFA8 DUP4 PUSH2 0x105E JUMP JUMPDEST PUSH2 0xF64 DUP3 PUSH2 0x105E JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP2 SUB PUSH2 0xFC4 JUMPI POP PUSH1 0x0 PUSH2 0x339 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 SWAP1 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1011 JUMPI PUSH1 0x0 PUSH2 0xFDE DUP4 DUP4 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 POP DUP6 SWAP1 DUP3 ADD SLOAD GT ISZERO PUSH2 0xFFD JUMPI DUP1 SWAP2 POP PUSH2 0x100B JUMP JUMPDEST PUSH2 0x1008 DUP2 PUSH1 0x1 PUSH2 0x14DB JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x103D JUMPI POP DUP4 PUSH2 0x103A DUP7 PUSH2 0x102C PUSH1 0x1 DUP7 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SWAP1 JUMP JUMPDEST SLOAD EQ JUMPDEST ISZERO PUSH2 0x1056 JUMPI PUSH2 0x104D PUSH1 0x1 DUP4 PUSH2 0x1504 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x339 JUMP JUMPDEST POP SWAP1 POP PUSH2 0x339 JUMP JUMPDEST PUSH2 0x4BA PUSH2 0x1069 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x108E DUP4 PUSH2 0x52A JUMP JUMPDEST PUSH2 0x10CB JUMP JUMPDEST PUSH2 0x995 PUSH2 0x109E PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x3 ADD PUSH2 0x108E PUSH2 0x33F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10B8 PUSH1 0x2 DUP5 DUP5 XOR PUSH2 0x1517 JUMP JUMPDEST PUSH2 0x10C4 SWAP1 DUP5 DUP5 AND PUSH2 0x14DB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D5 PUSH2 0x511 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x10E1 DUP5 PUSH2 0x1115 JUMP JUMPDEST LT ISZERO PUSH2 0xF64 JUMPI DUP3 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP6 SSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP4 DUP5 ADD DUP1 SLOAD SWAP5 DUP6 ADD DUP2 SSTORE DUP3 MSTORE SWAP1 KECCAK256 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 SUB PUSH2 0x1128 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 SLOAD DUP3 SWAP1 PUSH2 0x1138 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1504 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1148 JUMPI PUSH2 0x1148 PUSH2 0x14EE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x117A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1162 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11A2 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x115F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x115A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11E9 DUP4 PUSH2 0x11B6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x121F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x124B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x125D JUMPI PUSH2 0x125D PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1285 JUMPI PUSH2 0x1285 PUSH2 0x11F7 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x129E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12DC DUP5 PUSH2 0x11B6 JUMP JUMPDEST SWAP3 POP PUSH2 0x12EA PUSH1 0x20 DUP6 ADD PUSH2 0x11B6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x130C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10C4 DUP3 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x134A DUP4 PUSH2 0x11B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1358 PUSH1 0x20 DUP5 ADD PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1375 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1395 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xF64 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x13C2 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13E1 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x13CE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1403 JUMPI PUSH2 0x1403 PUSH2 0x11F7 JUMP JUMPDEST PUSH2 0x1417 DUP2 PUSH2 0x1411 DUP5 SLOAD PUSH2 0x1361 JUMP JUMPDEST DUP5 PUSH2 0x139B JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x144C JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1434 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x13E1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x147B JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x145C JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1499 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x14BB DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x115F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x339 JUMPI PUSH2 0x339 PUSH2 0x14C5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x339 JUMPI PUSH2 0x339 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1534 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0x4B 0x27 PUSH25 0xC0D2C2125A37CCB1FCEA266A39077357974AF641C6D8FE074B 0x4A SWAP7 DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "1116:8350:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:105;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3518:196;;;;;;:::i;:::-;;:::i;:::-;;;1272:14:9;;1265:22;1247:41;;1235:2;1220:18;3518:196:0;1107:187:9;2479:110:0;;;:::i;:::-;;;1445:25:9;;;1433:2;1418:18;2479:110:0;1299:177:9;1669:234:0;;;;;;:::i;:::-;;:::i;:::-;;3914:253;;;;;;:::i;:::-;;:::i;2382:91::-;;;2464:2;3015:36:9;;3003:2;2988:18;2382:91:0;2873:184:9;4173:234:0;;;;;;:::i;:::-;;:::i;1909:113::-;;;;;;:::i;:::-;;:::i;2965:254::-;;;;;;:::i;:::-;;:::i;3386:126::-;;;:::i;2830:129::-;;;;;;:::i;:::-;;:::i;2267:109::-;;;:::i;4847:213::-;;;:::i;2595:229::-;;;;;;:::i;:::-;;:::i;4413:428::-;;;;;;:::i;:::-;;:::i;3720:188::-;;;;;;:::i;:::-;;:::i;2028:113::-;;;;;;:::i;:::-;;:::i;3225:155::-;;;;;;:::i;:::-;;:::i;1447:216::-;;;;;;:::i;:::-;;:::i;2156:105::-;2210:13;2242:7;:5;:7::i;:::-;:12;;2235:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:105;:::o;3518:196::-;3598:4;720:10:5;3653:33:0;720:10:5;3670:7:0;3679:6;3653:8;:33::i;:::-;3703:4;3696:11;;;3518:196;;;;;:::o;2479:110::-;2540:4;2563:7;:5;:7::i;:::-;:19;;;2556:26;;2479:110;:::o;1669:234::-;1744:11;:9;:11::i;:::-;1765:23;1791:7;:5;:7::i;:::-;:14;;1765:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1832:9;1815:7;:5;:7::i;:::-;:14;;;:26;;:14;:26;:::i;:::-;;1886:9;1856:40;;;;;;:::i;:::-;;;;;;;;1875:9;1856:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;1734:169;1669:234;:::o;3914:253::-;4008:4;720:10:5;4064:38:0;4080:4;720:10:5;4095:6:0;4064:15;:38::i;:::-;4112:27;4122:4;4128:2;4132:6;4112:9;:27::i;:::-;-1:-1:-1;4156:4:0;;3914:253;-1:-1:-1;;;;3914:253:0:o;4173:234::-;4258:4;720:10:5;4313:66:0;720:10:5;4330:7:0;4368:10;4339:26;720:10:5;4330:7:0;4339:9;:26::i;:::-;:39;;;;:::i;:::-;4313:8;:66::i;1909:113::-;1967:11;:9;:11::i;:::-;1988:27;720:10:5;2008:6:0;1988:5;:27::i;:::-;1909:113;:::o;2965:254::-;3049:4;3066:16;3084:10;3098:57;3107:10;3119:7;:5;:7::i;:::-;-1:-1:-1;;;;;3119:35:0;;;;;;:26;;;;;:35;;;;;3098:8;:57::i;:::-;3065:90;;;;3172:11;:40;;3194:18;3204:7;3194:9;:18::i;:::-;3172:40;;;3186:5;3172:40;3165:47;2965:254;-1:-1:-1;;;;;2965:254:0:o;3386:126::-;3447:4;3470:35;:7;:5;:7::i;:::-;:25;;918:14:6;;827:112;3470:35:0;3463:42;;3386:126;:::o;2830:129::-;2904:4;2927:7;:5;:7::i;:::-;-1:-1:-1;;;;;2927:25:0;;;:16;:25;;;;;;;;-1:-1:-1;2927:25:0;;;;;2830:129::o;2267:109::-;2323:13;2355:7;:5;:7::i;:::-;:14;;2348:21;;;;;:::i;4847:213::-;4891:4;4907:37;:7;:5;:7::i;:::-;:25;;1032:19:6;;1050:1;1032:19;;;945:123;4907:37:0;4954:14;4971:22;:20;:22::i;:::-;4954:39;;5008:19;5017:9;5008:19;;;;1445:25:9;;1433:2;1418:18;;1299:177;5008:19:0;;;;;;;;5044:9;4847:213;-1:-1:-1;4847:213:0:o;2595:229::-;2664:4;2681:16;2699:10;2713:52;2722:10;2734:7;:5;:7::i;:::-;:30;;2713:8;:52::i;:::-;2680:85;;;;2782:11;:35;;2804:13;:11;:13::i;:::-;2782:35;;;2796:5;2782:35;2775:42;2595:229;-1:-1:-1;;;;2595:229:0:o;4413:428::-;4503:4;720:10:5;4503:4:0;4582:26;720:10:5;4600:7:0;4582:9;:26::i;:::-;4558:50;;4646:15;4626:16;:35;;4618:90;;;;-1:-1:-1;;;4618:90:0;;7050:2:9;4618:90:0;;;7032:21:9;7089:2;7069:18;;;7062:30;7128:34;7108:18;;;7101:62;-1:-1:-1;;;7179:18:9;;;7172:40;7229:19;;4618:90:0;;;;;;;;;4742:61;4751:6;4759:7;4787:15;4768:16;:34;4742:8;:61::i;3720:188::-;3796:4;720:10:5;3851:29:0;720:10:5;3869:2:0;3873:6;3851:9;:29::i;2028:113::-;2086:11;:9;:11::i;:::-;2107:27;720:10:5;2127:6:0;2107:5;:27::i;3225:155::-;3315:4;3338:7;:5;:7::i;:::-;-1:-1:-1;;;;;3338:26:0;;;;;;;:18;;;;;:26;;;;;;;;:35;;;;;;;;;;-1:-1:-1;3338:35:0;;;3225:155::o;1447:216::-;1518:11;:9;:11::i;:::-;1539:21;1563:7;:5;:7::i;:::-;:12;;1539:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1600:7;1585;:5;:7::i;:::-;:12;;;:22;;:12;:22;:::i;:::-;;1648:7;1622:34;;;;;;:::i;:::-;;;;;;;;1639:7;1622:34;;;;;;:::i;:::-;;;;;;;;;;;;;;;1508:155;1447:216;:::o;673:174:1:-;215:23;;673:174::o;7305:357:0:-;-1:-1:-1;;;;;7404:20:0;;7396:74;;;;-1:-1:-1;;;7396:74:0;;7461:2:9;7396:74:0;;;7443:21:9;7500:2;7480:18;;;7473:30;7539:34;7519:18;;;7512:62;-1:-1:-1;;;7590:18:9;;;7583:39;7639:19;;7396:74:0;7259:405:9;7396:74:0;-1:-1:-1;;;;;7488:21:0;;7480:73;;;;-1:-1:-1;;;7480:73:0;;7871:2:9;7480:73:0;;;7853:21:9;7910:2;7890:18;;;7883:30;7949:34;7929:18;;;7922:62;-1:-1:-1;;;8000:18:9;;;7993:37;8047:19;;7480:73:0;7669:403:9;7480:73:0;7601:6;7563:7;:5;:7::i;:::-;-1:-1:-1;;;;;7563:26:0;;;;;;;:18;;;;;:26;;;;;;;;:35;;;;;;;;;;;;;:44;;;;7622:33;;1445:25:9;;;7563:35:0;;7622:33;;1418:18:9;7622:33:0;;;;;;;;7305:357;;;:::o;5066:111::-;720:10:5;5151:4:0;5127:29;5119:51;;;;-1:-1:-1;;;5119:51:0;;8279:2:9;5119:51:0;;;8261:21:9;8318:1;8298:18;;;8291:29;-1:-1:-1;;;8336:18:9;;;8329:39;8385:18;;5119:51:0;8077:332:9;5119:51:0;5066:111::o;6889:410::-;6987:21;7011:26;7021:6;7029:7;7011:9;:26::i;:::-;6987:50;;-1:-1:-1;;7051:16:0;:34;7047:246;;7129:6;7109:16;:26;;7101:73;;;;-1:-1:-1;;;7101:73:0;;8616:2:9;7101:73:0;;;8598:21:9;8655:2;8635:18;;;8628:30;8694:34;8674:18;;;8667:62;-1:-1:-1;;;8745:18:9;;;8738:32;8787:19;;7101:73:0;8414:398:9;7101:73:0;7216:52;7225:6;7233:7;7261:6;7242:16;:25;7216:8;:52::i;:::-;6977:322;6889:410;;;:::o;5183:651::-;-1:-1:-1;;;;;5276:18:0;;5268:73;;;;-1:-1:-1;;;5268:73:0;;9019:2:9;5268:73:0;;;9001:21:9;9058:2;9038:18;;;9031:30;9097:34;9077:18;;;9070:62;-1:-1:-1;;;9148:18:9;;;9141:40;9198:19;;5268:73:0;8817:406:9;5268:73:0;-1:-1:-1;;;;;5359:16:0;;5351:69;;;;-1:-1:-1;;;5351:69:0;;9430:2:9;5351:69:0;;;9412:21:9;9469:2;9449:18;;;9442:30;9508:34;9488:18;;;9481:62;-1:-1:-1;;;9559:18:9;;;9552:38;9607:19;;5351:69:0;9228:404:9;5351:69:0;5430:38;5451:4;5457:2;5461:6;5430:20;:38::i;:::-;5478:16;5497:7;:5;:7::i;:::-;-1:-1:-1;;;;;5497:22:0;;:16;:22;;;;;;;;;;;;;-1:-1:-1;5537:21:0;;;;5529:77;;;;-1:-1:-1;;;5529:77:0;;9839:2:9;5529:77:0;;;9821:21:9;9878:2;9858:18;;;9851:30;9917:34;9897:18;;;9890:62;-1:-1:-1;;;9968:18:9;;;9961:41;10019:19;;5529:77:0;9637:407:9;5529:77:0;5679:6;5665:11;:20;5640:7;:5;:7::i;:::-;-1:-1:-1;;;;;5640:22:0;;:16;:22;;;;;;;;;;;:45;5723:6;5699:7;:5;:7::i;:::-;-1:-1:-1;;;;;5699:20:0;;;:16;:20;;;;;;;;;;;;:30;;;;;;;;;5754:26;;1445:25:9;;;5754:26:0;;;;;;1418:18:9;5754:26:0;;;;;;;5790:37;6282:601;5840:436;-1:-1:-1;;;;;5920:21:0;;5912:70;;;;-1:-1:-1;;;5912:70:0;;10251:2:9;5912:70:0;;;10233:21:9;10290:2;10270:18;;;10263:30;10329:34;10309:18;;;10302:62;-1:-1:-1;;;10380:18:9;;;10373:34;10424:19;;5912:70:0;10049:400:9;5912:70:0;5992:49;6021:1;6025:7;6034:6;5992:20;:49::i;:::-;6074:6;6051:7;:5;:7::i;:::-;:19;;;:29;;;;;;;:::i;:::-;;;;-1:-1:-1;6143:6:0;;-1:-1:-1;6114:7:0;:5;:7::i;:::-;-1:-1:-1;;;;;6114:25:0;;:16;:25;;;;;;;;;;;;:35;;;;;;;;6174:37;;;;;;6204:6;1445:25:9;;1433:2;1418:18;;1299:177;6174:37:0;;;;;;;;5840:436;;:::o;8208:464::-;8294:4;8300;8337:1;8324:10;:14;8316:46;;;;-1:-1:-1;;;8316:46:0;;10656:2:9;8316:46:0;;;10638:21:9;10695:2;10675:18;;;10668:30;-1:-1:-1;;;10714:18:9;;;10707:49;10773:18;;8316:46:0;10454:343:9;8316:46:0;8394:22;:20;:22::i;:::-;8380:10;:36;;8372:75;;;;-1:-1:-1;;;8372:75:0;;11004:2:9;8372:75:0;;;10986:21:9;11043:2;11023:18;;;11016:30;11082:28;11062:18;;;11055:56;11128:18;;8372:75:0;10802:350:9;8372:75:0;8457:10;8470:40;:9;8499:10;8470:28;:40::i;:::-;8533:20;;8457:53;;-1:-1:-1;8524:29:0;;8520:146;;8577:5;8584:1;8569:17;;;;;;;8520:146;8625:4;8631:9;:16;;8648:5;8631:23;;;;;;;;:::i;:::-;;;;;;;;;8617:38;;;;;8208:464;;;;;;:::o;6282:601::-;-1:-1:-1;;;;;6362:21:0;;6354:72;;;;-1:-1:-1;;;6354:72:0;;11491:2:9;6354:72:0;;;11473:21:9;11530:2;11510:18;;;11503:30;11569:34;11549:18;;;11542:62;-1:-1:-1;;;11620:18:9;;;11613:36;11666:19;;6354:72:0;11289:402:9;6354:72:0;6436:49;6457:7;6474:1;6478:6;6436:20;:49::i;:::-;6495:19;6517:7;:5;:7::i;:::-;-1:-1:-1;;;;;6517:25:0;;:16;:25;;;;;;;;;;;;;-1:-1:-1;6560:24:0;;;;6552:76;;;;-1:-1:-1;;;6552:76:0;;11898:2:9;6552:76:0;;;11880:21:9;11937:2;11917:18;;;11910:30;11976:34;11956:18;;;11949:62;-1:-1:-1;;;12027:18:9;;;12020:37;12074:19;;6552:76:0;11696:403:9;6552:76:0;6707:6;6690:14;:23;6662:7;:5;:7::i;:::-;-1:-1:-1;;;;;6662:25:0;;:16;:25;;;;;;;;;;;:51;6750:6;6727:7;:5;:7::i;:::-;:19;;:29;;;;;;;;6781:37;;1445:25:9;;;-1:-1:-1;;;;;;;6781:37:0;;;;;1433:2:9;1418:18;6781:37:0;1299:177:9;6828:48:0;6344:539;6282:601;;:::o;7668:441::-;-1:-1:-1;;;;;7768:18:0;;7764:339;;7802:26;7825:2;7802:22;:26::i;:::-;7842:28;:26;:28::i;7764:339::-;-1:-1:-1;;;;;7891:16:0;;7887:216;;7923:28;7946:4;7923:22;:28::i;7887:216::-;8024:28;8047:4;8024:22;:28::i;:::-;8066:26;8089:2;8066:22;:26::i;714:932:4:-;826:12;;803:7;;826:17;;822:56;;-1:-1:-1;866:1:4;859:8;;822:56;928:12;;888:11;;951:434;964:4;958:3;:10;951:434;;;984:11;998:23;1011:3;1016:4;998:12;:23::i;:::-;3479:31;3849:19;;;3906:4;3893:18;;984:37;;-1:-1:-1;1271:7:4;;3889:28;;1238:30;:40;1234:141;;;1305:3;1298:10;;1234:141;;;1353:7;:3;1359:1;1353:7;:::i;:::-;1347:13;;1234:141;970:415;951:434;;;1508:1;1502:3;:7;:56;;;;-1:-1:-1;1551:7:4;1513:28;1526:5;1533:7;1539:1;1533:3;:7;:::i;:::-;3479:31;3849:19;;;3906:4;3893:18;;;3889:28;;3398:573;1513:28;:34;:45;1502:56;1498:142;;;1581:7;1587:1;1581:3;:7;:::i;:::-;1574:14;;;;;;1498:142;-1:-1:-1;1626:3:4;-1:-1:-1;1619:10:4;;8678:146:0;8745:72;8761:7;:5;:7::i;:::-;-1:-1:-1;;;;;8761:35:0;;;;;;:26;;;;;:35;;;;;8798:18;8788:7;8798:9;:18::i;:::-;8745:15;:72::i;8830:125::-;8886:62;8902:7;:5;:7::i;:::-;:30;;8934:13;:11;:13::i;2827:153:8:-;2889:7;2962:11;2972:1;2963:5;;;2962:11;:::i;:::-;2952:21;;2953:5;;;2952:21;:::i;:::-;2945:28;2827:153;-1:-1:-1;;;2827:153:8:o;8961:297:0:-;9052:14;9069:22;:20;:22::i;:::-;9052:39;-1:-1:-1;9052:39:0;9105:30;9121:9;9105:15;:30::i;:::-;:42;9101:151;;;9163:29;;;;;;;;-1:-1:-1;9163:29:0;;;;;;;;;;;;;;9206:16;;;:35;;;;;;;;;;;;;;;8961:297::o;9264:200::-;9351:10;;9331:4;;9351:15;;9347:111;;-1:-1:-1;9389:1:0;;9264:200;-1:-1:-1;9264:200:0:o;9347:111::-;9432:10;;9428:3;;9432:14;;9445:1;;9432:14;:::i;:::-;9428:19;;;;;;;;:::i;:::-;;;;;;;;;9421:26;;9264:200;;;:::o;9347:111::-;9264:200;;;:::o;14:250:9:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:9;238:16;;231:27;14:250::o;269:396::-;418:2;407:9;400:21;381:4;450:6;444:13;493:6;488:2;477:9;473:18;466:34;509:79;581:6;576:2;565:9;561:18;556:2;548:6;544:15;509:79;:::i;:::-;649:2;628:15;-1:-1:-1;;624:29:9;609:45;;;;656:2;605:54;;269:396;-1:-1:-1;;269:396:9:o;670:173::-;738:20;;-1:-1:-1;;;;;787:31:9;;777:42;;767:70;;833:1;830;823:12;848:254;916:6;924;977:2;965:9;956:7;952:23;948:32;945:52;;;993:1;990;983:12;945:52;1016:29;1035:9;1016:29;:::i;:::-;1006:39;1092:2;1077:18;;;;1064:32;;-1:-1:-1;;;848:254:9:o;1481:127::-;1542:10;1537:3;1533:20;1530:1;1523:31;1573:4;1570:1;1563:15;1597:4;1594:1;1587:15;1613:922;1682:6;1735:2;1723:9;1714:7;1710:23;1706:32;1703:52;;;1751:1;1748;1741:12;1703:52;1791:9;1778:23;1820:18;1861:2;1853:6;1850:14;1847:34;;;1877:1;1874;1867:12;1847:34;1915:6;1904:9;1900:22;1890:32;;1960:7;1953:4;1949:2;1945:13;1941:27;1931:55;;1982:1;1979;1972:12;1931:55;2018:2;2005:16;2040:2;2036;2033:10;2030:36;;;2046:18;;:::i;:::-;2121:2;2115:9;2089:2;2175:13;;-1:-1:-1;;2171:22:9;;;2195:2;2167:31;2163:40;2151:53;;;2219:18;;;2239:22;;;2216:46;2213:72;;;2265:18;;:::i;:::-;2305:10;2301:2;2294:22;2340:2;2332:6;2325:18;2380:7;2375:2;2370;2366;2362:11;2358:20;2355:33;2352:53;;;2401:1;2398;2391:12;2352:53;2457:2;2452;2448;2444:11;2439:2;2431:6;2427:15;2414:46;2502:1;2480:15;;;2497:2;2476:24;2469:35;;;;-1:-1:-1;2484:6:9;1613:922;-1:-1:-1;;;;;1613:922:9:o;2540:328::-;2617:6;2625;2633;2686:2;2674:9;2665:7;2661:23;2657:32;2654:52;;;2702:1;2699;2692:12;2654:52;2725:29;2744:9;2725:29;:::i;:::-;2715:39;;2773:38;2807:2;2796:9;2792:18;2773:38;:::i;:::-;2763:48;;2858:2;2847:9;2843:18;2830:32;2820:42;;2540:328;;;;;:::o;3062:180::-;3121:6;3174:2;3162:9;3153:7;3149:23;3145:32;3142:52;;;3190:1;3187;3180:12;3142:52;-1:-1:-1;3213:23:9;;3062:180;-1:-1:-1;3062:180:9:o;3247:186::-;3306:6;3359:2;3347:9;3338:7;3334:23;3330:32;3327:52;;;3375:1;3372;3365:12;3327:52;3398:29;3417:9;3398:29;:::i;3438:260::-;3506:6;3514;3567:2;3555:9;3546:7;3542:23;3538:32;3535:52;;;3583:1;3580;3573:12;3535:52;3606:29;3625:9;3606:29;:::i;:::-;3596:39;;3654:38;3688:2;3677:9;3673:18;3654:38;:::i;:::-;3644:48;;3438:260;;;;;:::o;3703:380::-;3782:1;3778:12;;;;3825;;;3846:61;;3900:4;3892:6;3888:17;3878:27;;3846:61;3953:2;3945:6;3942:14;3922:18;3919:38;3916:161;;3999:10;3994:3;3990:20;3987:1;3980:31;4034:4;4031:1;4024:15;4062:4;4059:1;4052:15;3916:161;;3703:380;;;:::o;4214:545::-;4316:2;4311:3;4308:11;4305:448;;;4352:1;4377:5;4373:2;4366:17;4422:4;4418:2;4408:19;4492:2;4480:10;4476:19;4473:1;4469:27;4463:4;4459:38;4528:4;4516:10;4513:20;4510:47;;;-1:-1:-1;4551:4:9;4510:47;4606:2;4601:3;4597:12;4594:1;4590:20;4584:4;4580:31;4570:41;;4661:82;4679:2;4672:5;4669:13;4661:82;;;4724:17;;;4705:1;4694:13;4661:82;;;4665:3;;;4214:545;;;:::o;4935:1352::-;5061:3;5055:10;5088:18;5080:6;5077:30;5074:56;;;5110:18;;:::i;:::-;5139:97;5229:6;5189:38;5221:4;5215:11;5189:38;:::i;:::-;5183:4;5139:97;:::i;:::-;5291:4;;5355:2;5344:14;;5372:1;5367:663;;;;6074:1;6091:6;6088:89;;;-1:-1:-1;6143:19:9;;;6137:26;6088:89;-1:-1:-1;;4892:1:9;4888:11;;;4884:24;4880:29;4870:40;4916:1;4912:11;;;4867:57;6190:81;;5337:944;;5367:663;4161:1;4154:14;;;4198:4;4185:18;;-1:-1:-1;;5403:20:9;;;5521:236;5535:7;5532:1;5529:14;5521:236;;;5624:19;;;5618:26;5603:42;;5716:27;;;;5684:1;5672:14;;;;5551:19;;5521:236;;;5525:3;5785:6;5776:7;5773:19;5770:201;;;5846:19;;;5840:26;-1:-1:-1;;5929:1:9;5925:14;;;5941:3;5921:24;5917:37;5913:42;5898:58;5883:74;;5770:201;-1:-1:-1;;;;;6017:1:9;6001:14;;;5997:22;5984:36;;-1:-1:-1;4935:1352:9:o;6292:289::-;6423:3;6461:6;6455:13;6477:66;6536:6;6531:3;6524:4;6516:6;6512:17;6477:66;:::i;:::-;6559:16;;;;;6292:289;-1:-1:-1;;6292:289:9:o;6586:127::-;6647:10;6642:3;6638:20;6635:1;6628:31;6678:4;6675:1;6668:15;6702:4;6699:1;6692:15;6718:125;6783:9;;;6804:10;;;6801:36;;;6817:18;;:::i;11157:127::-;11218:10;11213:3;11209:20;11206:1;11199:31;11249:4;11246:1;11239:15;11273:4;11270:1;11263:15;12104:128;12171:9;;;12192:11;;;12189:37;;;12206:18;;:::i;12237:217::-;12277:1;12303;12293:132;;12347:10;12342:3;12338:20;12335:1;12328:31;12382:4;12379:1;12372:15;12410:4;12407:1;12400:15;12293:132;-1:-1:-1;12439:9:9;;12237:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1097400",
								"executionCost": "1140",
								"totalCost": "1098540"
							},
							"external": {
								"____burn(uint256)": "infinite",
								"____mint(uint256)": "infinite",
								"____setName(string)": "infinite",
								"____setSymbol(string)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24706",
								"balanceOf(address)": "2641",
								"balanceOfAt(address,uint256)": "infinite",
								"decimals()": "222",
								"decreaseAllowance(address,uint256)": "infinite",
								"getCurrentSnapshotId()": "2386",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"snapshot()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2416",
								"totalSupplyAt(uint256)": "infinite",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_lastSnapshotId(uint256[] storage pointer)": "8618",
								"_mint(address,uint256)": "infinite",
								"_onlySelf()": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_updateAccountSnapshot(address)": "infinite",
								"_updateSnapshot(struct SlotToken.Snapshots storage pointer,uint256)": "103632",
								"_updateTotalSupplySnapshot()": "infinite",
								"_valueAt(uint256,struct SlotToken.Snapshots storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1116,
									"end": 9466,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1116,
									"end": 9466,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1116,
									"end": 9466,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 9466,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 9466,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 9466,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 9466,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1116,
									"end": 9466,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 9466,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1116,
									"end": 9466,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 9466,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 9466,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1116,
									"end": 9466,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 9466,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 9466,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1116,
									"end": 9466,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 9466,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1116,
									"end": 9466,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1116,
									"end": 9466,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 9466,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1116,
									"end": 9466,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b14b2778c0d2c2125a37ccb1fcea266a39077357974af641c6d8fe074b4a968f64736f6c63430008130033",
									".code": [
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "5439AD86"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "B74456F2"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "E0089DC3"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "5439AD86"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "9711715A"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "981B24D0"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "49E7012C"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2CD7E"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "1E96C1DD"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 9466,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2261,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2156,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2156,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2156,
											"end": 2261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2261,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2156,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2261,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2156,
											"end": 2261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2156,
											"end": 2261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2261,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2156,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2261,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2261,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2261,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3714,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3518,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3518,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3518,
											"end": 3714,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3714,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3518,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3518,
											"end": 3714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3714,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3518,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3518,
											"end": 3714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3714,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3518,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3518,
											"end": 3714,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1286,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1272,
											"end": 1286,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1287,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1247,
											"end": 1288,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1235,
											"end": 1237,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1220,
											"end": 1238,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3518,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1107,
											"end": 1294,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2479,
											"end": 2589,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2479,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2479,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2479,
											"end": 2589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2589,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2479,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2589,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2479,
											"end": 2589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2479,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1299,
											"end": 1476,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1669,
											"end": 1903,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1669,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1669,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1903,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1903,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1669,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1669,
											"end": 1903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1903,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1669,
											"end": 1903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1903,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1669,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1903,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3914,
											"end": 4167,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3914,
											"end": 4167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3914,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3914,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3914,
											"end": 4167,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3914,
											"end": 4167,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3914,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3914,
											"end": 4167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3914,
											"end": 4167,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3914,
											"end": 4167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3914,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3914,
											"end": 4167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2466,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3015,
											"end": 3051,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3015,
											"end": 3051,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3003,
											"end": 3005,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2988,
											"end": 3006,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2382,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2873,
											"end": 3057,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4407,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4173,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4173,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4173,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4173,
											"end": 4407,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4173,
											"end": 4407,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4173,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4173,
											"end": 4407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4173,
											"end": 4407,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4173,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4173,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4173,
											"end": 4407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1909,
											"end": 2022,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1909,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1909,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1909,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1909,
											"end": 2022,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1909,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1909,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1909,
											"end": 2022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1909,
											"end": 2022,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1909,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1909,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1909,
											"end": 2022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 3219,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2965,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2965,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2965,
											"end": 3219,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 3219,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2965,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2965,
											"end": 3219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 3219,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2965,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2965,
											"end": 3219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3386,
											"end": 3512,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3386,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3386,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3386,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3386,
											"end": 3512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2959,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2830,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2830,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2830,
											"end": 2959,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2830,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2830,
											"end": 2959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2959,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2830,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2830,
											"end": 2959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2376,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2267,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2267,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2267,
											"end": 2376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4847,
											"end": 5060,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4847,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4847,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4847,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4847,
											"end": 5060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2824,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2595,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2595,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2595,
											"end": 2824,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2824,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2595,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2595,
											"end": 2824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2824,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2595,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2595,
											"end": 2824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4413,
											"end": 4841,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 4413,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4413,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4413,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4413,
											"end": 4841,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4413,
											"end": 4841,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4413,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4413,
											"end": 4841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4413,
											"end": 4841,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4413,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4413,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4413,
											"end": 4841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3720,
											"end": 3908,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3720,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3720,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3720,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3720,
											"end": 3908,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3720,
											"end": 3908,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3720,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3720,
											"end": 3908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3720,
											"end": 3908,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3720,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3720,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3720,
											"end": 3908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2141,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2028,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2028,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2028,
											"end": 2141,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2141,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2028,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2028,
											"end": 2141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2141,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2028,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2028,
											"end": 2141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3380,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3225,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3225,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3225,
											"end": 3380,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3225,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3225,
											"end": 3380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3380,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3225,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3225,
											"end": 3380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1663,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1447,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1447,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1447,
											"end": 1663,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1663,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1447,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1447,
											"end": 1663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1663,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1447,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1447,
											"end": 1663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2261,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2156,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2223,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2242,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2242,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2242,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2242,
											"end": 2249,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2242,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2235,
											"end": 2254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2235,
											"end": 2254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3714,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3518,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 730,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3653,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 720,
											"end": 730,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3670,
											"end": 3677,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3679,
											"end": 3685,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3653,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3653,
											"end": 3686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3653,
											"end": 3686,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3653,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3703,
											"end": 3707,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3696,
											"end": 3707,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3696,
											"end": 3707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3696,
											"end": 3707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3714,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3518,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3714,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2589,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2479,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2563,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2563,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2563,
											"end": 2570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2570,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2563,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2582,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2563,
											"end": 2582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2582,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2556,
											"end": 2582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1903,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1669,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1744,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1744,
											"end": 1755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1755,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1744,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1791,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1798,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1791,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1765,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1765,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1815,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1815,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1815,
											"end": 1822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1815,
											"end": 1822,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1815,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1815,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1815,
											"end": 1829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1815,
											"end": 1829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1815,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1815,
											"end": 1841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1815,
											"end": 1829,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1815,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1815,
											"end": 1841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1815,
											"end": 1841,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1815,
											"end": 1841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1815,
											"end": 1841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1886,
											"end": 1895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1856,
											"end": 1896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1856,
											"end": 1896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "PUSH",
											"source": 0,
											"value": "68023CAB388C6052AF3FA625F164CD0C14CC9125D57286FBE0D9B384847C4C02"
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1896,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1734,
											"end": 1903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3914,
											"end": 4167,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3914,
											"end": 4167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4008,
											"end": 4012,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 730,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4064,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4080,
											"end": 4084,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 720,
											"end": 730,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4095,
											"end": 4101,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4064,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4064,
											"end": 4102,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4064,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4112,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4122,
											"end": 4126,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4130,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4132,
											"end": 4138,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4112,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4112,
											"end": 4139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4112,
											"end": 4139,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4112,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4156,
											"end": 4160,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4156,
											"end": 4160,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3914,
											"end": 4167,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3914,
											"end": 4167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4173,
											"end": 4407,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4173,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 730,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4313,
											"end": 4379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 720,
											"end": 730,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4337,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4378,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4339,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 720,
											"end": 730,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4337,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4339,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4339,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4339,
											"end": 4365,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4339,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4339,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4339,
											"end": 4378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4339,
											"end": 4378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4339,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 4339,
											"end": 4378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4339,
											"end": 4378,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4339,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4313,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4313,
											"end": 4379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1909,
											"end": 2022,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1909,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1967,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1967,
											"end": 1978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 1978,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1967,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1988,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 720,
											"end": 730,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1988,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1988,
											"end": 2015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1988,
											"end": 2015,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1988,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1909,
											"end": 2022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1909,
											"end": 2022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 3219,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2965,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3049,
											"end": 3053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3082,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3107,
											"end": 3117,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3119,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3119,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3119,
											"end": 3126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3119,
											"end": 3126,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3119,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3119,
											"end": 3154,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3119,
											"end": 3154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3119,
											"end": 3154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3119,
											"end": 3154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3119,
											"end": 3154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3119,
											"end": 3154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3119,
											"end": 3145,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3119,
											"end": 3145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3119,
											"end": 3145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3119,
											"end": 3145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3119,
											"end": 3145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3119,
											"end": 3154,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3119,
											"end": 3154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3119,
											"end": 3154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3119,
											"end": 3154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3119,
											"end": 3154,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3098,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3098,
											"end": 3155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3098,
											"end": 3155,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3098,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3065,
											"end": 3155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3065,
											"end": 3155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3065,
											"end": 3155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3065,
											"end": 3155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3172,
											"end": 3212,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3204,
											"end": 3211,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3194,
											"end": 3212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3212,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3194,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3172,
											"end": 3212,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3212,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3172,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3212,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3172,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3212,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 3219,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2965,
											"end": 3219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3386,
											"end": 3512,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3386,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 3451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3470,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3470,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3470,
											"end": 3477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3470,
											"end": 3477,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3470,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3470,
											"end": 3495,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3470,
											"end": 3495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3505,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3470,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3386,
											"end": 3512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3386,
											"end": 3512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2959,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2830,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2904,
											"end": 2908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2927,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2927,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2927,
											"end": 2952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 2952,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 2952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 2943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 2952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 2952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 2952,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2927,
											"end": 2952,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 2952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 2952,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 2952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2927,
											"end": 2952,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2927,
											"end": 2952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 2952,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 2952,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 2952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2376,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2267,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2355,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2355,
											"end": 2369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2369,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2348,
											"end": 2369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2348,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4847,
											"end": 5060,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4847,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4891,
											"end": 4895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4907,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 4907,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 4907,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4907,
											"end": 4914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4907,
											"end": 4914,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 4907,
											"end": 4914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4907,
											"end": 4932,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4907,
											"end": 4932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4907,
											"end": 4944,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 4907,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4954,
											"end": 4968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4971,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 4971,
											"end": 4991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4971,
											"end": 4993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4971,
											"end": 4993,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 4971,
											"end": 4993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4954,
											"end": 4993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4954,
											"end": 4993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5008,
											"end": 5027,
											"name": "PUSH",
											"source": 0,
											"value": "8030E83B04D87BEF53480E26263266D6CA66863AA8506ACA6F2559D18AA1CB67"
										},
										{
											"begin": 5017,
											"end": 5026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5008,
											"end": 5027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5008,
											"end": 5027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5008,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 5008,
											"end": 5027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1299,
											"end": 1476,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 5027,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 5008,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5008,
											"end": 5027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5008,
											"end": 5027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5008,
											"end": 5027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5008,
											"end": 5027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5008,
											"end": 5027,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5008,
											"end": 5027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5008,
											"end": 5027,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 5044,
											"end": 5053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4847,
											"end": 5060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4847,
											"end": 5060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2824,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2595,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2681,
											"end": 2697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2713,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2722,
											"end": 2732,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2734,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2734,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2734,
											"end": 2741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2734,
											"end": 2741,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2734,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2734,
											"end": 2764,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2734,
											"end": 2764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2713,
											"end": 2765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2765,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2713,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2680,
											"end": 2765,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2680,
											"end": 2765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2680,
											"end": 2765,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2680,
											"end": 2765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2782,
											"end": 2793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2782,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2782,
											"end": 2817,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2804,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2804,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2804,
											"end": 2817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2804,
											"end": 2817,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2804,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2782,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2782,
											"end": 2817,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2782,
											"end": 2817,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2782,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2796,
											"end": 2801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2782,
											"end": 2817,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2782,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2775,
											"end": 2817,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2824,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2595,
											"end": 2824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4413,
											"end": 4841,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4413,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4503,
											"end": 4507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 730,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4503,
											"end": 4507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4582,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 720,
											"end": 730,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4607,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4582,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4582,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4582,
											"end": 4608,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 4582,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4646,
											"end": 4661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4626,
											"end": 4642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4626,
											"end": 4661,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4626,
											"end": 4661,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 4618,
											"end": 4708,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4618,
											"end": 4708,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4618,
											"end": 4708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7052,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4618,
											"end": 4708,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4618,
											"end": 4708,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7032,
											"end": 7053,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7089,
											"end": 7091,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 7069,
											"end": 7087,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7069,
											"end": 7087,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7069,
											"end": 7087,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7062,
											"end": 7092,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7162,
											"name": "PUSH",
											"source": 9,
											"value": "4661636574546F6B656E3A2064656372656173656420616C6C6F77616E636520"
										},
										{
											"begin": 7108,
											"end": 7126,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7108,
											"end": 7126,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7108,
											"end": 7126,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7101,
											"end": 7163,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62656C6F77207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7179,
											"end": 7197,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7179,
											"end": 7197,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7179,
											"end": 7197,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7172,
											"end": 7212,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7229,
											"end": 7248,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 7229,
											"end": 7248,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4618,
											"end": 4708,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 4618,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4618,
											"end": 4708,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4708,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4708,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4708,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4708,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4708,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 4618,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4751,
											"end": 4757,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4766,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4787,
											"end": 4802,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4768,
											"end": 4784,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4768,
											"end": 4802,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4742,
											"end": 4803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3720,
											"end": 3908,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3720,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3796,
											"end": 3800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 730,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3851,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 720,
											"end": 730,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3869,
											"end": 3871,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3873,
											"end": 3879,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3851,
											"end": 3880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2141,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2028,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2086,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2086,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2086,
											"end": 2097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2086,
											"end": 2097,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2086,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 720,
											"end": 730,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2127,
											"end": 2133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2107,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3380,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3225,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3338,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 3338,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3338,
											"end": 3345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3345,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 3338,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3356,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3338,
											"end": 3356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3373,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3373,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3373,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3373,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3373,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3373,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3338,
											"end": 3373,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3373,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3338,
											"end": 3373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1663,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1447,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1518,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1518,
											"end": 1529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1529,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1518,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1563,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1563,
											"end": 1570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1570,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1563,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1563,
											"end": 1575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1539,
											"end": 1575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1539,
											"end": 1575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1600,
											"end": 1607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1585,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1585,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1592,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1585,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1597,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1585,
											"end": 1597,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1585,
											"end": 1607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1597,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1585,
											"end": 1607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1607,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1585,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1622,
											"end": 1656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1639,
											"end": 1646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1622,
											"end": 1656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "PUSH",
											"source": 0,
											"value": "E08BA098C56583FF7CE264F98FB97B7DDC5E6AF834ACC0556B24327F72A555F9"
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1656,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1508,
											"end": 1663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1447,
											"end": 1663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 673,
											"end": 847,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 673,
											"end": 847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 215,
											"end": 238,
											"name": "PUSH",
											"source": 1,
											"value": "667C0CF071C712F94F97F65A859CDAA470FE424825756C2CAE5A4D1ADCEE538B"
										},
										{
											"begin": 215,
											"end": 238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 673,
											"end": 847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7662,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 7305,
											"end": 7662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7404,
											"end": 7424,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7404,
											"end": 7424,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7396,
											"end": 7470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 7396,
											"end": 7470,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7396,
											"end": 7470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7396,
											"end": 7470,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7396,
											"end": 7470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7396,
											"end": 7470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 7463,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7396,
											"end": 7470,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7396,
											"end": 7470,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7396,
											"end": 7470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7443,
											"end": 7464,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7500,
											"end": 7502,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 7480,
											"end": 7498,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7480,
											"end": 7498,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7480,
											"end": 7498,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7473,
											"end": 7503,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7539,
											"end": 7573,
											"name": "PUSH",
											"source": 9,
											"value": "4661636574546F6B656E3A20617070726F76652066726F6D20746865207A6572"
										},
										{
											"begin": 7519,
											"end": 7537,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7519,
											"end": 7537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7519,
											"end": 7537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7512,
											"end": 7574,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7590,
											"end": 7608,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7590,
											"end": 7608,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7590,
											"end": 7608,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7583,
											"end": 7622,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7639,
											"end": 7658,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 7639,
											"end": 7658,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7396,
											"end": 7470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 7259,
											"end": 7664,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7396,
											"end": 7470,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 7396,
											"end": 7470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7488,
											"end": 7509,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7488,
											"end": 7509,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7480,
											"end": 7553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 7480,
											"end": 7553,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7480,
											"end": 7553,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7480,
											"end": 7553,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7480,
											"end": 7553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7480,
											"end": 7553,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7871,
											"end": 7873,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7480,
											"end": 7553,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7480,
											"end": 7553,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7480,
											"end": 7553,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7853,
											"end": 7874,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7910,
											"end": 7912,
											"name": "PUSH",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 7890,
											"end": 7908,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7890,
											"end": 7908,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7890,
											"end": 7908,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7883,
											"end": 7913,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7949,
											"end": 7983,
											"name": "PUSH",
											"source": 9,
											"value": "4661636574546F6B656E3A20617070726F766520746F20746865207A65726F20"
										},
										{
											"begin": 7929,
											"end": 7947,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7929,
											"end": 7947,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7929,
											"end": 7947,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8000,
											"end": 8018,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8000,
											"end": 8018,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8000,
											"end": 8018,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7993,
											"end": 8030,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8047,
											"end": 8066,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 8047,
											"end": 8066,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7480,
											"end": 7553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 7669,
											"end": 8072,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7480,
											"end": 7553,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 7480,
											"end": 7553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7601,
											"end": 7607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 7563,
											"end": 7568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 7563,
											"end": 7570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7570,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 7563,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7563,
											"end": 7589,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7589,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7563,
											"end": 7589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7589,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7581,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7563,
											"end": 7581,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7581,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7589,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7563,
											"end": 7589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7589,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7589,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7563,
											"end": 7589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7589,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7589,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7598,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7598,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7598,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7598,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7598,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7598,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7598,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7607,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7607,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7607,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7622,
											"end": 7655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7622,
											"end": 7655,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7563,
											"end": 7598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7563,
											"end": 7598,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7622,
											"end": 7655,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 7622,
											"end": 7655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7622,
											"end": 7655,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 7622,
											"end": 7655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7622,
											"end": 7655,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7655,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7622,
											"end": 7655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7622,
											"end": 7655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7622,
											"end": 7655,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7622,
											"end": 7655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7622,
											"end": 7655,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5066,
											"end": 5177,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 5066,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 720,
											"end": 730,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5151,
											"end": 5155,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5127,
											"end": 5156,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5119,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 5119,
											"end": 5170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5119,
											"end": 5170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5119,
											"end": 5170,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5119,
											"end": 5170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5119,
											"end": 5170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8279,
											"end": 8281,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5119,
											"end": 5170,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5119,
											"end": 5170,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5119,
											"end": 5170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8261,
											"end": 8282,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8318,
											"end": 8319,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8291,
											"end": 8320,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37B7363C9039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8336,
											"end": 8354,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8336,
											"end": 8354,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8336,
											"end": 8354,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8329,
											"end": 8368,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8385,
											"end": 8403,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8385,
											"end": 8403,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5119,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 8077,
											"end": 8409,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5119,
											"end": 5170,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 5119,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5066,
											"end": 5177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 7299,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6889,
											"end": 7299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7011,
											"end": 7037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7029,
											"end": 7036,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7011,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 7011,
											"end": 7037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7011,
											"end": 7037,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 7011,
											"end": 7037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6987,
											"end": 7037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7051,
											"end": 7067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7051,
											"end": 7085,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 7047,
											"end": 7293,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7129,
											"end": 7135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7135,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7135,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 7101,
											"end": 7174,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7174,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7101,
											"end": 7174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7101,
											"end": 7174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8616,
											"end": 8618,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7101,
											"end": 7174,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7101,
											"end": 7174,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8598,
											"end": 8619,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8655,
											"end": 8657,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 8635,
											"end": 8653,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8635,
											"end": 8653,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8635,
											"end": 8653,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8628,
											"end": 8658,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8694,
											"end": 8728,
											"name": "PUSH",
											"source": 9,
											"value": "4661636574546F6B656E3A20696E73756666696369656E7420616C6C6F77616E"
										},
										{
											"begin": 8674,
											"end": 8692,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8674,
											"end": 8692,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8674,
											"end": 8692,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8667,
											"end": 8729,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8745,
											"end": 8763,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8745,
											"end": 8763,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8745,
											"end": 8763,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8738,
											"end": 8770,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8787,
											"end": 8806,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 8787,
											"end": 8806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7101,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 8414,
											"end": 8812,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7101,
											"end": 7174,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 7101,
											"end": 7174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7216,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 7225,
											"end": 7231,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7240,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7261,
											"end": 7267,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7242,
											"end": 7258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7242,
											"end": 7267,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7216,
											"end": 7224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 7216,
											"end": 7268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7216,
											"end": 7268,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 7216,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6977,
											"end": 7299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 7299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 7299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 7299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 7299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5183,
											"end": 5834,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 5183,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5276,
											"end": 5294,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5276,
											"end": 5294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 5268,
											"end": 5341,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5268,
											"end": 5341,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5268,
											"end": 5341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5341,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9019,
											"end": 9021,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5268,
											"end": 5341,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5268,
											"end": 5341,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5341,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9001,
											"end": 9022,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9058,
											"end": 9060,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 9038,
											"end": 9056,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9038,
											"end": 9056,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9038,
											"end": 9056,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9031,
											"end": 9061,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9097,
											"end": 9131,
											"name": "PUSH",
											"source": 9,
											"value": "4661636574546F6B656E3A207472616E736665722066726F6D20746865207A65"
										},
										{
											"begin": 9077,
											"end": 9095,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9077,
											"end": 9095,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9077,
											"end": 9095,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9070,
											"end": 9132,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9148,
											"end": 9166,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9148,
											"end": 9166,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9148,
											"end": 9166,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9141,
											"end": 9181,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9198,
											"end": 9217,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 9198,
											"end": 9217,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5268,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 8817,
											"end": 9223,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5268,
											"end": 5341,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 5268,
											"end": 5341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5359,
											"end": 5375,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5359,
											"end": 5375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5351,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 5351,
											"end": 5420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5351,
											"end": 5420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5351,
											"end": 5420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5351,
											"end": 5420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5351,
											"end": 5420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9430,
											"end": 9432,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5351,
											"end": 5420,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5351,
											"end": 5420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5351,
											"end": 5420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9412,
											"end": 9433,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9469,
											"end": 9471,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 9449,
											"end": 9467,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9449,
											"end": 9467,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9449,
											"end": 9467,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9442,
											"end": 9472,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9508,
											"end": 9542,
											"name": "PUSH",
											"source": 9,
											"value": "4661636574546F6B656E3A207472616E7366657220746F20746865207A65726F"
										},
										{
											"begin": 9488,
											"end": 9506,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9488,
											"end": 9506,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9488,
											"end": 9506,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9481,
											"end": 9543,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9559,
											"end": 9577,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9559,
											"end": 9577,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9559,
											"end": 9577,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9552,
											"end": 9590,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9607,
											"end": 9626,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 9607,
											"end": 9626,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5351,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 9228,
											"end": 9632,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5351,
											"end": 5420,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 5351,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 5451,
											"end": 5455,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5457,
											"end": 5459,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5461,
											"end": 5467,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 5430,
											"end": 5468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 5430,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5497,
											"end": 5504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 5497,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5497,
											"end": 5504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5497,
											"end": 5504,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 5497,
											"end": 5504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5497,
											"end": 5519,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5497,
											"end": 5519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5497,
											"end": 5513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5497,
											"end": 5519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5497,
											"end": 5519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5497,
											"end": 5519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5497,
											"end": 5519,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5497,
											"end": 5519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5497,
											"end": 5519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5497,
											"end": 5519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5497,
											"end": 5519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5497,
											"end": 5519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5497,
											"end": 5519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5497,
											"end": 5519,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5497,
											"end": 5519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5497,
											"end": 5519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5537,
											"end": 5558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5537,
											"end": 5558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5537,
											"end": 5558,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5537,
											"end": 5558,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 5529,
											"end": 5606,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5529,
											"end": 5606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5529,
											"end": 5606,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5606,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9839,
											"end": 9841,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5529,
											"end": 5606,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5529,
											"end": 5606,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5606,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9821,
											"end": 9842,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9878,
											"end": 9880,
											"name": "PUSH",
											"source": 9,
											"value": "2B"
										},
										{
											"begin": 9858,
											"end": 9876,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9858,
											"end": 9876,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9858,
											"end": 9876,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9851,
											"end": 9881,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9917,
											"end": 9951,
											"name": "PUSH",
											"source": 9,
											"value": "4661636574546F6B656E3A207472616E7366657220616D6F756E742065786365"
										},
										{
											"begin": 9897,
											"end": 9915,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9897,
											"end": 9915,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9897,
											"end": 9915,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9890,
											"end": 9952,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6564732062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9968,
											"end": 9986,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9968,
											"end": 9986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 9986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9961,
											"end": 10002,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10019,
											"end": 10038,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 10019,
											"end": 10038,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5529,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 9637,
											"end": 10044,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5529,
											"end": 5606,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 5529,
											"end": 5606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5679,
											"end": 5685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5685,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 5640,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5640,
											"end": 5647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5647,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 5640,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5640,
											"end": 5662,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5640,
											"end": 5662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5640,
											"end": 5662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5640,
											"end": 5662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5662,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5640,
											"end": 5685,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5723,
											"end": 5729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5699,
											"end": 5706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 5699,
											"end": 5704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5699,
											"end": 5706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5699,
											"end": 5706,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 5699,
											"end": 5706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5699,
											"end": 5719,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5699,
											"end": 5719,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5699,
											"end": 5719,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5699,
											"end": 5715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5699,
											"end": 5719,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5699,
											"end": 5719,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5699,
											"end": 5719,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5699,
											"end": 5719,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5699,
											"end": 5719,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5699,
											"end": 5719,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5699,
											"end": 5719,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5699,
											"end": 5719,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5699,
											"end": 5719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5699,
											"end": 5719,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5699,
											"end": 5719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5699,
											"end": 5719,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5699,
											"end": 5729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5699,
											"end": 5729,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5699,
											"end": 5729,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 5699,
											"end": 5729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5699,
											"end": 5729,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 5699,
											"end": 5729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5699,
											"end": 5729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5699,
											"end": 5729,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5699,
											"end": 5729,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5754,
											"end": 5780,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 5790,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 6282,
											"end": 6883,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6276,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5840,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5920,
											"end": 5941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5920,
											"end": 5941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 5912,
											"end": 5982,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 5982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5912,
											"end": 5982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5912,
											"end": 5982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 5982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10251,
											"end": 10253,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5912,
											"end": 5982,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5912,
											"end": 5982,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 5982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10254,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10290,
											"end": 10292,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10270,
											"end": 10288,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10270,
											"end": 10288,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10270,
											"end": 10288,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10263,
											"end": 10293,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10329,
											"end": 10363,
											"name": "PUSH",
											"source": 9,
											"value": "4661636574546F6B656E3A206D696E7420746F20746865207A65726F20616464"
										},
										{
											"begin": 10309,
											"end": 10327,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10309,
											"end": 10327,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10309,
											"end": 10327,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10302,
											"end": 10364,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10380,
											"end": 10398,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10380,
											"end": 10398,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10380,
											"end": 10398,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10373,
											"end": 10407,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10424,
											"end": 10443,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 10424,
											"end": 10443,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5912,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 10049,
											"end": 10449,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5912,
											"end": 5982,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 5912,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5992,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 6021,
											"end": 6022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6025,
											"end": 6032,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6034,
											"end": 6040,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5992,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 5992,
											"end": 6041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5992,
											"end": 6041,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 5992,
											"end": 6041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6074,
											"end": 6080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6051,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 6051,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6051,
											"end": 6058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6051,
											"end": 6058,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 6051,
											"end": 6058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6051,
											"end": 6070,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6051,
											"end": 6070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6051,
											"end": 6070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6051,
											"end": 6080,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6051,
											"end": 6080,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6051,
											"end": 6080,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6051,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 6051,
											"end": 6080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6051,
											"end": 6080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6051,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 6051,
											"end": 6080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6051,
											"end": 6080,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 6051,
											"end": 6080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6051,
											"end": 6080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6051,
											"end": 6080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6051,
											"end": 6080,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6114,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 6114,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6114,
											"end": 6121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6121,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 6114,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6114,
											"end": 6139,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6139,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6114,
											"end": 6139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6114,
											"end": 6139,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6139,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6114,
											"end": 6139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6139,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6139,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6149,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6149,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6149,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6149,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6149,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6174,
											"end": 6211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6174,
											"end": 6211,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6174,
											"end": 6211,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6174,
											"end": 6211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6174,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 6174,
											"end": 6211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6210,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1299,
											"end": 1476,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6174,
											"end": 6211,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 6174,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6174,
											"end": 6211,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6174,
											"end": 6211,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6174,
											"end": 6211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6174,
											"end": 6211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6174,
											"end": 6211,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6174,
											"end": 6211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6174,
											"end": 6211,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 6276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8208,
											"end": 8672,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 8208,
											"end": 8672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8294,
											"end": 8298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8300,
											"end": 8304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8337,
											"end": 8338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8324,
											"end": 8334,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8324,
											"end": 8338,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8316,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 8316,
											"end": 8362,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8316,
											"end": 8362,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8316,
											"end": 8362,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8316,
											"end": 8362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8316,
											"end": 8362,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10656,
											"end": 10658,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8316,
											"end": 8362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8316,
											"end": 8362,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8316,
											"end": 8362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10638,
											"end": 10659,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10695,
											"end": 10697,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 10675,
											"end": 10693,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10675,
											"end": 10693,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10675,
											"end": 10693,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10668,
											"end": 10698,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4661636574546F6B656E3A206964206973203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10714,
											"end": 10732,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10714,
											"end": 10732,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10714,
											"end": 10732,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10707,
											"end": 10756,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10773,
											"end": 10791,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10773,
											"end": 10791,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8316,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 10454,
											"end": 10797,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8316,
											"end": 8362,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 8316,
											"end": 8362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8394,
											"end": 8416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 8394,
											"end": 8414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8394,
											"end": 8416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8394,
											"end": 8416,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 8394,
											"end": 8416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8380,
											"end": 8390,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8380,
											"end": 8416,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8380,
											"end": 8416,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8372,
											"end": 8447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 8372,
											"end": 8447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8372,
											"end": 8447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8372,
											"end": 8447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8372,
											"end": 8447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8372,
											"end": 8447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11004,
											"end": 11006,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8372,
											"end": 8447,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8372,
											"end": 8447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8372,
											"end": 8447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10986,
											"end": 11007,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11043,
											"end": 11045,
											"name": "PUSH",
											"source": 9,
											"value": "1A"
										},
										{
											"begin": 11023,
											"end": 11041,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11023,
											"end": 11041,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11023,
											"end": 11041,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11016,
											"end": 11046,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11082,
											"end": 11110,
											"name": "PUSH",
											"source": 9,
											"value": "4661636574546F6B656E3A206E6F6E6578697374656E74206964000000000000"
										},
										{
											"begin": 11062,
											"end": 11080,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11062,
											"end": 11080,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11062,
											"end": 11080,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11055,
											"end": 11111,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11128,
											"end": 11146,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11128,
											"end": 11146,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8372,
											"end": 8447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 10802,
											"end": 11152,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8372,
											"end": 8447,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 8372,
											"end": 8447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8457,
											"end": 8467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8470,
											"end": 8510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 8470,
											"end": 8479,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8499,
											"end": 8509,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8470,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 8470,
											"end": 8510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8470,
											"end": 8510,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 8470,
											"end": 8510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8533,
											"end": 8553,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8533,
											"end": 8553,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8457,
											"end": 8510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8457,
											"end": 8510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8524,
											"end": 8553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8553,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8520,
											"end": 8666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 8520,
											"end": 8666,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8577,
											"end": 8582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8584,
											"end": 8585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8569,
											"end": 8586,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8569,
											"end": 8586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8569,
											"end": 8586,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8569,
											"end": 8586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8569,
											"end": 8586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8569,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 8569,
											"end": 8586,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8520,
											"end": 8666,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 8520,
											"end": 8666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8625,
											"end": 8629,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8631,
											"end": 8640,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8631,
											"end": 8647,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8631,
											"end": 8647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8648,
											"end": 8653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8631,
											"end": 8654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8631,
											"end": 8654,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8631,
											"end": 8654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8631,
											"end": 8654,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8631,
											"end": 8654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 8631,
											"end": 8654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8631,
											"end": 8654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 8631,
											"end": 8654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 8631,
											"end": 8654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8631,
											"end": 8654,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 8631,
											"end": 8654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8631,
											"end": 8654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8631,
											"end": 8654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8631,
											"end": 8654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8631,
											"end": 8654,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8631,
											"end": 8654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8631,
											"end": 8654,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8631,
											"end": 8654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8631,
											"end": 8654,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8617,
											"end": 8655,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8617,
											"end": 8655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8617,
											"end": 8655,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8617,
											"end": 8655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8617,
											"end": 8655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8208,
											"end": 8672,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 8208,
											"end": 8672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8208,
											"end": 8672,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8208,
											"end": 8672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8208,
											"end": 8672,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8208,
											"end": 8672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8208,
											"end": 8672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8208,
											"end": 8672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6282,
											"end": 6883,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 6282,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6362,
											"end": 6383,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6362,
											"end": 6383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6354,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 6354,
											"end": 6426,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6354,
											"end": 6426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6354,
											"end": 6426,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6354,
											"end": 6426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6354,
											"end": 6426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11491,
											"end": 11493,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6354,
											"end": 6426,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6354,
											"end": 6426,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6354,
											"end": 6426,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11473,
											"end": 11494,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11530,
											"end": 11532,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 11510,
											"end": 11528,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11510,
											"end": 11528,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11510,
											"end": 11528,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11503,
											"end": 11533,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11569,
											"end": 11603,
											"name": "PUSH",
											"source": 9,
											"value": "4661636574546F6B656E3A206275726E2066726F6D20746865207A65726F2061"
										},
										{
											"begin": 11549,
											"end": 11567,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11549,
											"end": 11567,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11549,
											"end": 11567,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11542,
											"end": 11604,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11620,
											"end": 11638,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11620,
											"end": 11638,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11620,
											"end": 11638,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11613,
											"end": 11649,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11666,
											"end": 11685,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 11666,
											"end": 11685,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6354,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 11289,
											"end": 11691,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6354,
											"end": 6426,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 6354,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6436,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 6457,
											"end": 6464,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6474,
											"end": 6475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6436,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 6436,
											"end": 6485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6436,
											"end": 6485,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 6436,
											"end": 6485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6495,
											"end": 6514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6517,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 6517,
											"end": 6522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6517,
											"end": 6524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6524,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 6517,
											"end": 6524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6517,
											"end": 6542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6560,
											"end": 6584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6584,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6560,
											"end": 6584,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6552,
											"end": 6628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 6552,
											"end": 6628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6552,
											"end": 6628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6552,
											"end": 6628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6552,
											"end": 6628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11898,
											"end": 11900,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6628,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6552,
											"end": 6628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6552,
											"end": 6628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11880,
											"end": 11901,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11937,
											"end": 11939,
											"name": "PUSH",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 11917,
											"end": 11935,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11917,
											"end": 11935,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11917,
											"end": 11935,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11910,
											"end": 11940,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11976,
											"end": 12010,
											"name": "PUSH",
											"source": 9,
											"value": "4661636574546F6B656E3A206275726E20616D6F756E74206578636565647320"
										},
										{
											"begin": 11956,
											"end": 11974,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 11956,
											"end": 11974,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11956,
											"end": 11974,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11949,
											"end": 12011,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12027,
											"end": 12045,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12027,
											"end": 12045,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12027,
											"end": 12045,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12020,
											"end": 12057,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12074,
											"end": 12093,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 12074,
											"end": 12093,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6552,
											"end": 6628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 11696,
											"end": 12099,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6552,
											"end": 6628,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 6552,
											"end": 6628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6707,
											"end": 6713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6690,
											"end": 6713,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6662,
											"end": 6669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 6662,
											"end": 6667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6662,
											"end": 6669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6662,
											"end": 6669,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 6662,
											"end": 6669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6662,
											"end": 6687,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6662,
											"end": 6687,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6662,
											"end": 6678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6662,
											"end": 6687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6662,
											"end": 6687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6662,
											"end": 6687,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6662,
											"end": 6687,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6662,
											"end": 6687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6662,
											"end": 6687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6662,
											"end": 6687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6662,
											"end": 6687,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6662,
											"end": 6687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6662,
											"end": 6687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6662,
											"end": 6687,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6662,
											"end": 6713,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 6727,
											"end": 6732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6727,
											"end": 6734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6734,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 6727,
											"end": 6734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6746,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6727,
											"end": 6746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6756,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6756,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1445,
											"end": 1470,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6781,
											"end": 6818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1299,
											"end": 1476,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6828,
											"end": 6876,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 6828,
											"end": 6876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6344,
											"end": 6883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6282,
											"end": 6883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6282,
											"end": 6883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6282,
											"end": 6883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7668,
											"end": 8109,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 7668,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7764,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 7764,
											"end": 8103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7802,
											"end": 7828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 7825,
											"end": 7827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7802,
											"end": 7824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 7802,
											"end": 7828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7802,
											"end": 7828,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 7802,
											"end": 7828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 7842,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 7842,
											"end": 7870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7764,
											"end": 8103,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 7764,
											"end": 8103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7891,
											"end": 7907,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7907,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7887,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 7887,
											"end": 8103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7923,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 7946,
											"end": 7950,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7923,
											"end": 7945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 7923,
											"end": 7951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7887,
											"end": 8103,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 7887,
											"end": 8103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8024,
											"end": 8052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 8047,
											"end": 8051,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8024,
											"end": 8046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 8024,
											"end": 8052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8024,
											"end": 8052,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 8024,
											"end": 8052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8066,
											"end": 8092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 8089,
											"end": 8091,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8066,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 8066,
											"end": 8092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 714,
											"end": 1646,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 714,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 826,
											"end": 838,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 826,
											"end": 838,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 803,
											"end": 810,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 826,
											"end": 843,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 826,
											"end": 843,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 822,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 822,
											"end": 878,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 866,
											"end": 867,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 859,
											"end": 867,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 822,
											"end": 878,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 822,
											"end": 878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 928,
											"end": 940,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 928,
											"end": 940,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 888,
											"end": 899,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 951,
											"end": 1385,
											"name": "tag",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 951,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 964,
											"end": 968,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 958,
											"end": 961,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 958,
											"end": 968,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 951,
											"end": 1385,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 951,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 951,
											"end": 1385,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 984,
											"end": 995,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 1011,
											"end": 1014,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1016,
											"end": 1020,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 998,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1021,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 998,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3479,
											"end": 3510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3849,
											"end": 3868,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3849,
											"end": 3868,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3849,
											"end": 3868,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 3910,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3893,
											"end": 3911,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3911,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 984,
											"end": 1021,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 984,
											"end": 1021,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1268,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1278,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1234,
											"end": 1375,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1234,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 1234,
											"end": 1375,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1305,
											"end": 1308,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1298,
											"end": 1308,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1298,
											"end": 1308,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1234,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 1234,
											"end": 1375,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1234,
											"end": 1375,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 1234,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 1353,
											"end": 1356,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1360,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1353,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1353,
											"end": 1360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1360,
											"name": "tag",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 1353,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1360,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1360,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1234,
											"end": 1375,
											"name": "tag",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 1234,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1385,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 951,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 951,
											"end": 1385,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 951,
											"end": 1385,
											"name": "tag",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 951,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1508,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1502,
											"end": 1505,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1502,
											"end": 1509,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1502,
											"end": 1558,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1502,
											"end": 1558,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1502,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 1502,
											"end": 1558,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1551,
											"end": 1558,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 1526,
											"end": 1531,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1533,
											"end": 1536,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 1533,
											"end": 1540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3479,
											"end": 3510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3849,
											"end": 3868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3849,
											"end": 3868,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3849,
											"end": 3868,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 3910,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3893,
											"end": 3911,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3911,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3911,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3971,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "tag",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 1513,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1547,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1558,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1502,
											"end": 1558,
											"name": "tag",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 1502,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1640,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 1498,
											"end": 1640,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1581,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1581,
											"end": 1584,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1581,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 1581,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1581,
											"end": 1588,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 1581,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1588,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1588,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1588,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1588,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1574,
											"end": 1588,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1640,
											"name": "tag",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 1498,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1626,
											"end": 1629,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1619,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1619,
											"end": 1629,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8678,
											"end": 8824,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 8678,
											"end": 8824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8745,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 8761,
											"end": 8768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 8761,
											"end": 8766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 8761,
											"end": 8768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8768,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 8761,
											"end": 8768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8761,
											"end": 8796,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8761,
											"end": 8796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8787,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8761,
											"end": 8787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8796,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8761,
											"end": 8796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8761,
											"end": 8796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8796,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8798,
											"end": 8816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 8788,
											"end": 8795,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8798,
											"end": 8807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8798,
											"end": 8816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8798,
											"end": 8816,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 8798,
											"end": 8816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8745,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 8745,
											"end": 8817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8830,
											"end": 8955,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 8830,
											"end": 8955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8886,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 8902,
											"end": 8909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 8902,
											"end": 8907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 8902,
											"end": 8909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 8909,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 8902,
											"end": 8909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 8932,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8902,
											"end": 8932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8934,
											"end": 8947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 8934,
											"end": 8945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8934,
											"end": 8947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2827,
											"end": 2980,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 2827,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2889,
											"end": 2896,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2962,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 2972,
											"end": 2973,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2963,
											"end": 2968,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2963,
											"end": 2968,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2963,
											"end": 2968,
											"name": "XOR",
											"source": 8
										},
										{
											"begin": 2962,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 2962,
											"end": 2973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2962,
											"end": 2973,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 2962,
											"end": 2973,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2952,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 2952,
											"end": 2973,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2953,
											"end": 2958,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2953,
											"end": 2958,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2953,
											"end": 2958,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2952,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 2952,
											"end": 2973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2952,
											"end": 2973,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 2952,
											"end": 2973,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2945,
											"end": 2973,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2827,
											"end": 2980,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2827,
											"end": 2980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8961,
											"end": 9258,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 8961,
											"end": 9258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9052,
											"end": 9066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9069,
											"end": 9091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 9069,
											"end": 9089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 9069,
											"end": 9091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9069,
											"end": 9091,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 9069,
											"end": 9091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9052,
											"end": 9091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9052,
											"end": 9091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9105,
											"end": 9135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 9121,
											"end": 9130,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9105,
											"end": 9120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 9105,
											"end": 9135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9105,
											"end": 9135,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 9105,
											"end": 9135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9105,
											"end": 9147,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9101,
											"end": 9252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9101,
											"end": 9252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 9101,
											"end": 9252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9163,
											"end": 9192,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9163,
											"end": 9192,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9163,
											"end": 9192,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9163,
											"end": 9192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9163,
											"end": 9192,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9163,
											"end": 9192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9163,
											"end": 9192,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9163,
											"end": 9192,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9163,
											"end": 9192,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9163,
											"end": 9192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9163,
											"end": 9192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9163,
											"end": 9192,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9163,
											"end": 9192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9163,
											"end": 9192,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9163,
											"end": 9192,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9163,
											"end": 9192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9163,
											"end": 9192,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9163,
											"end": 9192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9163,
											"end": 9192,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9163,
											"end": 9192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9163,
											"end": 9192,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9163,
											"end": 9192,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9206,
											"end": 9222,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9206,
											"end": 9222,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9206,
											"end": 9222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9206,
											"end": 9241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9206,
											"end": 9241,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9206,
											"end": 9241,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9206,
											"end": 9241,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9206,
											"end": 9241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9206,
											"end": 9241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9206,
											"end": 9241,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9206,
											"end": 9241,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9206,
											"end": 9241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9206,
											"end": 9241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9206,
											"end": 9241,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9206,
											"end": 9241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9206,
											"end": 9241,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9206,
											"end": 9241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9206,
											"end": 9241,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 9258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9264,
											"end": 9464,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 9264,
											"end": 9464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9351,
											"end": 9361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9351,
											"end": 9361,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9331,
											"end": 9335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9331,
											"end": 9335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9351,
											"end": 9366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9351,
											"end": 9366,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 9347,
											"end": 9458,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9389,
											"end": 9390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9389,
											"end": 9390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9264,
											"end": 9464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9264,
											"end": 9464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9458,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 9347,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9442,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9431,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 9432,
											"end": 9446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9446,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9445,
											"end": 9446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 9432,
											"end": 9446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9446,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 9432,
											"end": 9446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9447,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9447,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 9428,
											"end": 9447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 9428,
											"end": 9447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 9428,
											"end": 9447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9447,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 9428,
											"end": 9447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9428,
											"end": 9447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9447,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9428,
											"end": 9447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9428,
											"end": 9447,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9447,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9421,
											"end": 9447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9421,
											"end": 9447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9264,
											"end": 9464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9264,
											"end": 9464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9264,
											"end": 9464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9264,
											"end": 9464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9458,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 9347,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9264,
											"end": 9464,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9264,
											"end": 9464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9264,
											"end": 9464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9264,
											"end": 9464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 264,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 14,
											"end": 264,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 123,
											"end": 129,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 120,
											"end": 121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 117,
											"end": 130,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 109,
											"end": 222,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 109,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 199,
											"end": 210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 199,
											"end": 210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 199,
											"end": 210,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 193,
											"end": 211,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 180,
											"end": 191,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 180,
											"end": 191,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 180,
											"end": 191,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 173,
											"end": 212,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 145,
											"end": 147,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 138,
											"end": 148,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 109,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 109,
											"end": 222,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 256,
											"end": 257,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 254,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 238,
											"end": 254,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 231,
											"end": 258,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14,
											"end": 264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 269,
											"end": 665,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 269,
											"end": 665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 418,
											"end": 420,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 400,
											"end": 421,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 381,
											"end": 385,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 450,
											"end": 456,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 444,
											"end": 457,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 493,
											"end": 499,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 488,
											"end": 490,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 477,
											"end": 486,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 473,
											"end": 491,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 466,
											"end": 500,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 509,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 581,
											"end": 587,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 576,
											"end": 578,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 565,
											"end": 574,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 561,
											"end": 579,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 556,
											"end": 558,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 548,
											"end": 554,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 544,
											"end": 559,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 509,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 509,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 509,
											"end": 588,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 509,
											"end": 588,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 649,
											"end": 651,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 628,
											"end": 643,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 624,
											"end": 653,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 609,
											"end": 654,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 609,
											"end": 654,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 609,
											"end": 654,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 609,
											"end": 654,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 656,
											"end": 658,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 605,
											"end": 659,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 605,
											"end": 659,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 269,
											"end": 665,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 269,
											"end": 665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 670,
											"end": 843,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 670,
											"end": 843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 738,
											"end": 758,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 738,
											"end": 758,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 787,
											"end": 818,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 787,
											"end": 818,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 777,
											"end": 819,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 777,
											"end": 819,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 767,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 767,
											"end": 837,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 833,
											"end": 834,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 831,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 823,
											"end": 835,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 848,
											"end": 1102,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 848,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 916,
											"end": 922,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 924,
											"end": 930,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 977,
											"end": 979,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 965,
											"end": 974,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 956,
											"end": 963,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 952,
											"end": 975,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 948,
											"end": 980,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 945,
											"end": 997,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 945,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 945,
											"end": 997,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 993,
											"end": 994,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 983,
											"end": 995,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 945,
											"end": 997,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 945,
											"end": 997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1016,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 1035,
											"end": 1044,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1016,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 1016,
											"end": 1045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1016,
											"end": 1045,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 1016,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1006,
											"end": 1045,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1092,
											"end": 1094,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1064,
											"end": 1096,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1064,
											"end": 1096,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 848,
											"end": 1102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1481,
											"end": 1608,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 1481,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1552,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 1537,
											"end": 1540,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1533,
											"end": 1553,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1531,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1523,
											"end": 1554,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1577,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1570,
											"end": 1571,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1563,
											"end": 1578,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1597,
											"end": 1601,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1594,
											"end": 1595,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 1602,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1613,
											"end": 2535,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1613,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1737,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1723,
											"end": 1732,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1714,
											"end": 1721,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 1733,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1706,
											"end": 1738,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 1755,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 1703,
											"end": 1755,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1751,
											"end": 1752,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1749,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1741,
											"end": 1753,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 1755,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 1703,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1791,
											"end": 1800,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1801,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1838,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1861,
											"end": 1863,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 1859,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1864,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 1881,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 1847,
											"end": 1881,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1877,
											"end": 1878,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1875,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 1879,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 1881,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 1847,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1913,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1900,
											"end": 1922,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1890,
											"end": 1922,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1890,
											"end": 1922,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1960,
											"end": 1967,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1953,
											"end": 1957,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1949,
											"end": 1951,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1958,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1941,
											"end": 1968,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 1931,
											"end": 1986,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1982,
											"end": 1983,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 1980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1972,
											"end": 1984,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 1986,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 1931,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2018,
											"end": 2020,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2005,
											"end": 2021,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2040,
											"end": 2042,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2038,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2033,
											"end": 2043,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2066,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 2030,
											"end": 2066,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2046,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 2046,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 2046,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2046,
											"end": 2064,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 2046,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2123,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2115,
											"end": 2124,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2091,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2175,
											"end": 2188,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2175,
											"end": 2188,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2171,
											"end": 2193,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2171,
											"end": 2193,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2171,
											"end": 2193,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2195,
											"end": 2197,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 2167,
											"end": 2198,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2151,
											"end": 2204,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2151,
											"end": 2204,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2151,
											"end": 2204,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2237,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2237,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2237,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2216,
											"end": 2262,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2213,
											"end": 2285,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2213,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 2213,
											"end": 2285,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 2265,
											"end": 2283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 2265,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2305,
											"end": 2315,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2301,
											"end": 2303,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2294,
											"end": 2316,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2340,
											"end": 2342,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2338,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2325,
											"end": 2343,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2380,
											"end": 2387,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2375,
											"end": 2377,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2372,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2366,
											"end": 2368,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2373,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2355,
											"end": 2388,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2405,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 2352,
											"end": 2405,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2401,
											"end": 2402,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2398,
											"end": 2399,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2391,
											"end": 2403,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2352,
											"end": 2405,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 2352,
											"end": 2405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2457,
											"end": 2459,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2452,
											"end": 2454,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2450,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2444,
											"end": 2455,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2439,
											"end": 2441,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2431,
											"end": 2437,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2427,
											"end": 2442,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2414,
											"end": 2460,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 2502,
											"end": 2503,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2495,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2495,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2495,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2497,
											"end": 2499,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2476,
											"end": 2500,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2504,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2504,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2504,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2504,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2484,
											"end": 2490,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1613,
											"end": 2535,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1613,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2868,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2540,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2625,
											"end": 2631,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2633,
											"end": 2639,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2688,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2674,
											"end": 2683,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2665,
											"end": 2672,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2661,
											"end": 2684,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2657,
											"end": 2689,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2706,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 2654,
											"end": 2706,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2702,
											"end": 2703,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2700,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2692,
											"end": 2704,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2706,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 2654,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2725,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 2744,
											"end": 2753,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2725,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 2725,
											"end": 2754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2725,
											"end": 2754,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 2725,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2715,
											"end": 2754,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2715,
											"end": 2754,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2773,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 2807,
											"end": 2809,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2805,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2773,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 2773,
											"end": 2811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2773,
											"end": 2811,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 2773,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2811,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2858,
											"end": 2860,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2847,
											"end": 2856,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 2861,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2830,
											"end": 2862,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2820,
											"end": 2862,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2820,
											"end": 2862,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2868,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2868,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2868,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2868,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2868,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3242,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3062,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3121,
											"end": 3127,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3174,
											"end": 3176,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3162,
											"end": 3171,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3153,
											"end": 3160,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3149,
											"end": 3172,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3177,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3142,
											"end": 3194,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3142,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 3142,
											"end": 3194,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3190,
											"end": 3191,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3187,
											"end": 3188,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3192,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3142,
											"end": 3194,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 3142,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3213,
											"end": 3236,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3236,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3242,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3062,
											"end": 3242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3247,
											"end": 3433,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 3247,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3306,
											"end": 3312,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3361,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3347,
											"end": 3356,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3338,
											"end": 3345,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3362,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3327,
											"end": 3379,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3327,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 3327,
											"end": 3379,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3375,
											"end": 3376,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3372,
											"end": 3373,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3327,
											"end": 3379,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 3327,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3398,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 3417,
											"end": 3426,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3398,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 3398,
											"end": 3427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3438,
											"end": 3698,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 3438,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 3512,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3514,
											"end": 3520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3567,
											"end": 3569,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3555,
											"end": 3564,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3553,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3542,
											"end": 3565,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3538,
											"end": 3570,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3535,
											"end": 3587,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3535,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 3535,
											"end": 3587,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3583,
											"end": 3584,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3581,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3573,
											"end": 3585,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3535,
											"end": 3587,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 3535,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3606,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 3625,
											"end": 3634,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3606,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 3606,
											"end": 3635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3606,
											"end": 3635,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 3606,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3596,
											"end": 3635,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3596,
											"end": 3635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3654,
											"end": 3692,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 3688,
											"end": 3690,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3677,
											"end": 3686,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3654,
											"end": 3692,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 3654,
											"end": 3692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3654,
											"end": 3692,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 3654,
											"end": 3692,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3692,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3644,
											"end": 3692,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3438,
											"end": 3698,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3438,
											"end": 3698,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3438,
											"end": 3698,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3438,
											"end": 3698,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3438,
											"end": 3698,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3438,
											"end": 3698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3703,
											"end": 4083,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 3703,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3778,
											"end": 3790,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3790,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3790,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3790,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3825,
											"end": 3837,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3825,
											"end": 3837,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3825,
											"end": 3837,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3846,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 3846,
											"end": 3907,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3900,
											"end": 3904,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 3892,
											"end": 3898,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3888,
											"end": 3905,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3905,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3905,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3846,
											"end": 3907,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 3846,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3953,
											"end": 3955,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3945,
											"end": 3951,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3942,
											"end": 3956,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3940,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3919,
											"end": 3957,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3916,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 3916,
											"end": 4077,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4009,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3990,
											"end": 4010,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3987,
											"end": 3988,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3980,
											"end": 4011,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4034,
											"end": 4038,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 4031,
											"end": 4032,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4024,
											"end": 4039,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4066,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4059,
											"end": 4060,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4052,
											"end": 4067,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3916,
											"end": 4077,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 3916,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3916,
											"end": 4077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3703,
											"end": 4083,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3703,
											"end": 4083,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3703,
											"end": 4083,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3703,
											"end": 4083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4214,
											"end": 4759,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 4214,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4318,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4311,
											"end": 4314,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4308,
											"end": 4319,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4305,
											"end": 4753,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4305,
											"end": 4753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 4305,
											"end": 4753,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4352,
											"end": 4353,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4377,
											"end": 4382,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4373,
											"end": 4375,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4366,
											"end": 4383,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4422,
											"end": 4426,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4418,
											"end": 4420,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4427,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4492,
											"end": 4494,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4480,
											"end": 4490,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4495,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4473,
											"end": 4474,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4469,
											"end": 4496,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 4463,
											"end": 4467,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4459,
											"end": 4497,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4528,
											"end": 4532,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4516,
											"end": 4526,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4513,
											"end": 4533,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4557,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 4510,
											"end": 4557,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4551,
											"end": 4555,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4510,
											"end": 4557,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 4510,
											"end": 4557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4606,
											"end": 4608,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4601,
											"end": 4604,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4609,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4594,
											"end": 4595,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4590,
											"end": 4610,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 4584,
											"end": 4588,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4580,
											"end": 4611,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4570,
											"end": 4611,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4570,
											"end": 4611,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4661,
											"end": 4743,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 4661,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4679,
											"end": 4681,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4672,
											"end": 4677,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4669,
											"end": 4682,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4661,
											"end": 4743,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4661,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 4661,
											"end": 4743,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4724,
											"end": 4741,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4724,
											"end": 4741,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4724,
											"end": 4741,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4705,
											"end": 4706,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4694,
											"end": 4707,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4661,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 4661,
											"end": 4743,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4661,
											"end": 4743,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 4661,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4665,
											"end": 4668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4665,
											"end": 4668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4665,
											"end": 4668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4214,
											"end": 4759,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4214,
											"end": 4759,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4214,
											"end": 4759,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4214,
											"end": 4759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4935,
											"end": 6287,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 4935,
											"end": 6287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5061,
											"end": 5064,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5055,
											"end": 5065,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5088,
											"end": 5106,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5080,
											"end": 5086,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5077,
											"end": 5107,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5074,
											"end": 5130,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5074,
											"end": 5130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 5074,
											"end": 5130,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5110,
											"end": 5128,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 5110,
											"end": 5128,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 5110,
											"end": 5128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5110,
											"end": 5128,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 5110,
											"end": 5128,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5139,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 5229,
											"end": 5235,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5189,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 5221,
											"end": 5225,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5215,
											"end": 5226,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5189,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 5189,
											"end": 5227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5189,
											"end": 5227,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 5189,
											"end": 5227,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5183,
											"end": 5187,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5139,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 5139,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5139,
											"end": 5236,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 5139,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5291,
											"end": 5295,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5291,
											"end": 5295,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5355,
											"end": 5357,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5344,
											"end": 5358,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5344,
											"end": 5358,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5372,
											"end": 5373,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5367,
											"end": 6030,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5367,
											"end": 6030,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5367,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 5367,
											"end": 6030,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6074,
											"end": 6075,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6091,
											"end": 6097,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6088,
											"end": 6177,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6088,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 6088,
											"end": 6177,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6143,
											"end": 6162,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6143,
											"end": 6162,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6143,
											"end": 6162,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6137,
											"end": 6163,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6088,
											"end": 6177,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 6088,
											"end": 6177,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4892,
											"end": 4893,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4888,
											"end": 4899,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4888,
											"end": 4899,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4888,
											"end": 4899,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4884,
											"end": 4908,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 4880,
											"end": 4909,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4870,
											"end": 4910,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4916,
											"end": 4917,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4912,
											"end": 4923,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4912,
											"end": 4923,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4912,
											"end": 4923,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4867,
											"end": 4924,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 6190,
											"end": 6271,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6190,
											"end": 6271,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 5337,
											"end": 6281,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5367,
											"end": 6030,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 5367,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4161,
											"end": 4162,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4154,
											"end": 4168,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4154,
											"end": 4168,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4154,
											"end": 4168,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4198,
											"end": 4202,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5403,
											"end": 5423,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5403,
											"end": 5423,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5403,
											"end": 5423,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5757,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 5521,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5535,
											"end": 5542,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5532,
											"end": 5533,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5529,
											"end": 5543,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5757,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 5521,
											"end": 5757,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5624,
											"end": 5643,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5624,
											"end": 5643,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5624,
											"end": 5643,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5618,
											"end": 5644,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 5645,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 5645,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5716,
											"end": 5743,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5716,
											"end": 5743,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5716,
											"end": 5743,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5716,
											"end": 5743,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 5685,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5672,
											"end": 5686,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5672,
											"end": 5686,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5672,
											"end": 5686,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5672,
											"end": 5686,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5551,
											"end": 5570,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5551,
											"end": 5570,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 5521,
											"end": 5757,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5521,
											"end": 5757,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 5521,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5525,
											"end": 5528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5785,
											"end": 5791,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5776,
											"end": 5783,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5773,
											"end": 5792,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 5971,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 5770,
											"end": 5971,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5846,
											"end": 5865,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5846,
											"end": 5865,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5846,
											"end": 5865,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5840,
											"end": 5866,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5929,
											"end": 5930,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5925,
											"end": 5939,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5939,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5939,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 5941,
											"end": 5944,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 5921,
											"end": 5945,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5917,
											"end": 5954,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 5913,
											"end": 5955,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5898,
											"end": 5956,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5883,
											"end": 5957,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5883,
											"end": 5957,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5770,
											"end": 5971,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 5770,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6017,
											"end": 6018,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6001,
											"end": 6015,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6001,
											"end": 6015,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6001,
											"end": 6015,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 5997,
											"end": 6019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5984,
											"end": 6020,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5984,
											"end": 6020,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4935,
											"end": 6287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6292,
											"end": 6581,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 6292,
											"end": 6581,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6423,
											"end": 6426,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6461,
											"end": 6467,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6455,
											"end": 6468,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6477,
											"end": 6543,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6531,
											"end": 6534,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6524,
											"end": 6528,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6516,
											"end": 6522,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6529,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6477,
											"end": 6543,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 6477,
											"end": 6543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6477,
											"end": 6543,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 6477,
											"end": 6543,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6559,
											"end": 6575,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6559,
											"end": 6575,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6559,
											"end": 6575,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6559,
											"end": 6575,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6559,
											"end": 6575,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6292,
											"end": 6581,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6292,
											"end": 6581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6586,
											"end": 6713,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 6586,
											"end": 6713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6647,
											"end": 6657,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 6642,
											"end": 6645,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 6638,
											"end": 6658,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 6635,
											"end": 6636,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6659,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6678,
											"end": 6682,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 6675,
											"end": 6676,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6668,
											"end": 6683,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6702,
											"end": 6706,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6699,
											"end": 6700,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6692,
											"end": 6707,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6718,
											"end": 6843,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 6718,
											"end": 6843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6783,
											"end": 6792,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6783,
											"end": 6792,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6783,
											"end": 6792,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6804,
											"end": 6814,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6804,
											"end": 6814,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6804,
											"end": 6814,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6801,
											"end": 6837,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6801,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 6801,
											"end": 6837,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6817,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 6817,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 6817,
											"end": 6835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11157,
											"end": 11284,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 11157,
											"end": 11284,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11218,
											"end": 11228,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 11213,
											"end": 11216,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 11209,
											"end": 11229,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 11206,
											"end": 11207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11199,
											"end": 11230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11249,
											"end": 11253,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 11246,
											"end": 11247,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11239,
											"end": 11254,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11273,
											"end": 11277,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11270,
											"end": 11271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11263,
											"end": 11278,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12104,
											"end": 12232,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 12104,
											"end": 12232,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12171,
											"end": 12180,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12171,
											"end": 12180,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12171,
											"end": 12180,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12192,
											"end": 12203,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12192,
											"end": 12203,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12192,
											"end": 12203,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12189,
											"end": 12226,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12189,
											"end": 12226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 12189,
											"end": 12226,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12206,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 12206,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 12206,
											"end": 12224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12237,
											"end": 12454,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 12237,
											"end": 12454,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12277,
											"end": 12278,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12293,
											"end": 12425,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 12293,
											"end": 12425,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12347,
											"end": 12357,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 12342,
											"end": 12345,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 12338,
											"end": 12358,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 12335,
											"end": 12336,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12328,
											"end": 12359,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12382,
											"end": 12386,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 12379,
											"end": 12380,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12372,
											"end": 12387,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12410,
											"end": 12414,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12407,
											"end": 12408,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12400,
											"end": 12415,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12293,
											"end": 12425,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 12293,
											"end": 12425,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12439,
											"end": 12448,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12439,
											"end": 12448,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12237,
											"end": 12454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"diamonds/facets/FacetToken.sol",
								"diamonds/facets/slots/SlotToken.sol",
								"imports/openzeppelin/token/ERC20/IERC20.sol",
								"imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol",
								"imports/openzeppelin/utils/Arrays.sol",
								"imports/openzeppelin/utils/Context.sol",
								"imports/openzeppelin/utils/Counters.sol",
								"imports/openzeppelin/utils/StorageSlot.sol",
								"imports/openzeppelin/utils/math/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"____burn(uint256)": "b74456f2",
							"____mint(uint256)": "49e7012c",
							"____setName(string)": "e0089dc3",
							"____setSymbol(string)": "1e96c1dd",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balanceOfAt(address,uint256)": "4ee2cd7e",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getCurrentSnapshotId()": "5439ad86",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"snapshot()": "9711715a",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"totalSupplyAt(uint256)": "981b24d0",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Snapshot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"oldName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"newName\",\"type\":\"string\"}],\"name\":\"TokenNameChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"oldSymbol\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"newSymbol\",\"type\":\"string\"}],\"name\":\"TokenSymbolChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"____burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"____mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newName\",\"type\":\"string\"}],\"name\":\"____setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newSymbol\",\"type\":\"string\"}],\"name\":\"____setSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentSnapshotId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"diamonds/facets/FacetToken.sol\":\"FacetToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"diamonds/facets/FacetToken.sol\":{\"keccak256\":\"0x12a3b513ef47c88421a0946ee22f70d40eb01a9a33bca8c97a211312abf60874\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d97dad8a5afd08c623431f561efb06a240486933853c329fdb82617cdefe4d\",\"dweb:/ipfs/QmVQu6uJxu2WL2wUYDt6NZTBK6J45kaZTr9n9NVAKvUJ2j\"]},\"diamonds/facets/slots/SlotToken.sol\":{\"keccak256\":\"0x86e54644f6e914859a2a9fb1a16131936e39f4400fadf6b54ddd2a4804bded7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d924fe171aa658a92df82270e73a4daee685968e8dcd12f949d21136000462\",\"dweb:/ipfs/QmX7y3SaQpS6qjed34uWd9e1b6ZXuEhC6MaTdNsFDozy7Q\"]},\"imports/openzeppelin/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x25c33569824f7653c064ccac6b9c63ba19833c7818debaa3f7f7737f5175d7d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c002fe819fd2da94ef4cbcddcd4a62ba42454b000d2321314bfff73353792e7\",\"dweb:/ipfs/QmadL9VMe3jTyf5sg8g8Y9Q4ESsyos42rZPnvJaKuhUacK\"]},\"imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x2837661e72b15493671ff5e5099b565b626c53f4d90f347211dd78924aca24ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34ced2145df7d08fbb3fba9471faf5a1609fc3def76d004c658f480e5cebb013\",\"dweb:/ipfs/QmSJ42tRU39HdpJSLXCinUtzzxnxBFncnCbfK6juqqep7U\"]},\"imports/openzeppelin/utils/Arrays.sol\":{\"keccak256\":\"0x574acffb11f924844c152e562688142ab6e54bbdf4ca3f4abc87b28a69e5cead\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8347a9e49cd21ced3d83bf834caa57de8c4a9cc386d7fde14766480921d01a82\",\"dweb:/ipfs/QmfUBz7mComtHR6YAT1w5dGSjwSkM1Q8N4NuCc5a3YPFEw\"]},\"imports/openzeppelin/utils/Context.sol\":{\"keccak256\":\"0x639f180f9bedd48998c68f1bf4f8d01b37a4573bc496acb04a55308c6de0045c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ff2313c66e4e14d167aae923b38509ec68dcaa281d2314f45b527139d33d4af\",\"dweb:/ipfs/QmU7aik96EmKeG8feBbQZ8BufngtYB6guGTkZoX5umP73i\"]},\"imports/openzeppelin/utils/Counters.sol\":{\"keccak256\":\"0x632d89cfbd5134bb48ab9f27f8acb3ef6230858240a06c01860523508cce9502\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a5aa5f1e2c16072e5b0976a2441d03b2a64e54b89eaed53b68f93d5838b4f0\",\"dweb:/ipfs/Qmax5x4ubHZdFoRRFKdiCKX9FY78UiKMSAQmP81Mszecop\"]},\"imports/openzeppelin/utils/StorageSlot.sol\":{\"keccak256\":\"0x3f82fa58b82665ea4454b705f47d00417c63587ce418f9a1a6ce8abf16c51d1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://910362331bf2befc3c29b7db1fde7a82f32217ea31fc107f3b7771b32e8500f4\",\"dweb:/ipfs/QmT95CFiHtSso6XVG1PBztsgmnZfU7inGZRxKiLtsxUHgz\"]},\"imports/openzeppelin/utils/math/Math.sol\":{\"keccak256\":\"0xffe8a176523d38132299bc22fd6bb138954ba3f35d41a86d004dac50dc31b615\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67b3d7e2d3042e5061168827e518b2eb546be0f4a3f764f654c28205c5a428e5\",\"dweb:/ipfs/Qma3d9Vim9NrzWAFASxpDppgGXo8MWZ6zorsgAYYXsbXph\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IFacetToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "Snapshot",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "oldName",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "newName",
									"type": "string"
								}
							],
							"name": "TokenNameChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "oldSymbol",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "newSymbol",
									"type": "string"
								}
							],
							"name": "TokenSymbolChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "____burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "____mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "newName",
									"type": "string"
								}
							],
							"name": "____setName",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "newSymbol",
									"type": "string"
								}
							],
							"name": "____setSymbol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "snapshotId",
									"type": "uint256"
								}
							],
							"name": "balanceOfAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentSnapshotId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "snapshot",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "snapshotId",
									"type": "uint256"
								}
							],
							"name": "totalSupplyAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"____burn(uint256)": "b74456f2",
							"____mint(uint256)": "49e7012c",
							"____setName(string)": "e0089dc3",
							"____setSymbol(string)": "1e96c1dd",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balanceOfAt(address,uint256)": "4ee2cd7e",
							"decimals()": "313ce567",
							"getCurrentSnapshotId()": "5439ad86",
							"name()": "06fdde03",
							"snapshot()": "9711715a",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"totalSupplyAt(uint256)": "981b24d0",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Snapshot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"oldName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"newName\",\"type\":\"string\"}],\"name\":\"TokenNameChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"oldSymbol\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"newSymbol\",\"type\":\"string\"}],\"name\":\"TokenSymbolChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"____burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"____mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newName\",\"type\":\"string\"}],\"name\":\"____setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newSymbol\",\"type\":\"string\"}],\"name\":\"____setSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentSnapshotId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"diamonds/facets/FacetToken.sol\":\"IFacetToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"diamonds/facets/FacetToken.sol\":{\"keccak256\":\"0x12a3b513ef47c88421a0946ee22f70d40eb01a9a33bca8c97a211312abf60874\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d97dad8a5afd08c623431f561efb06a240486933853c329fdb82617cdefe4d\",\"dweb:/ipfs/QmVQu6uJxu2WL2wUYDt6NZTBK6J45kaZTr9n9NVAKvUJ2j\"]},\"diamonds/facets/slots/SlotToken.sol\":{\"keccak256\":\"0x86e54644f6e914859a2a9fb1a16131936e39f4400fadf6b54ddd2a4804bded7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d924fe171aa658a92df82270e73a4daee685968e8dcd12f949d21136000462\",\"dweb:/ipfs/QmX7y3SaQpS6qjed34uWd9e1b6ZXuEhC6MaTdNsFDozy7Q\"]},\"imports/openzeppelin/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x25c33569824f7653c064ccac6b9c63ba19833c7818debaa3f7f7737f5175d7d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c002fe819fd2da94ef4cbcddcd4a62ba42454b000d2321314bfff73353792e7\",\"dweb:/ipfs/QmadL9VMe3jTyf5sg8g8Y9Q4ESsyos42rZPnvJaKuhUacK\"]},\"imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x2837661e72b15493671ff5e5099b565b626c53f4d90f347211dd78924aca24ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34ced2145df7d08fbb3fba9471faf5a1609fc3def76d004c658f480e5cebb013\",\"dweb:/ipfs/QmSJ42tRU39HdpJSLXCinUtzzxnxBFncnCbfK6juqqep7U\"]},\"imports/openzeppelin/utils/Arrays.sol\":{\"keccak256\":\"0x574acffb11f924844c152e562688142ab6e54bbdf4ca3f4abc87b28a69e5cead\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8347a9e49cd21ced3d83bf834caa57de8c4a9cc386d7fde14766480921d01a82\",\"dweb:/ipfs/QmfUBz7mComtHR6YAT1w5dGSjwSkM1Q8N4NuCc5a3YPFEw\"]},\"imports/openzeppelin/utils/Context.sol\":{\"keccak256\":\"0x639f180f9bedd48998c68f1bf4f8d01b37a4573bc496acb04a55308c6de0045c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ff2313c66e4e14d167aae923b38509ec68dcaa281d2314f45b527139d33d4af\",\"dweb:/ipfs/QmU7aik96EmKeG8feBbQZ8BufngtYB6guGTkZoX5umP73i\"]},\"imports/openzeppelin/utils/Counters.sol\":{\"keccak256\":\"0x632d89cfbd5134bb48ab9f27f8acb3ef6230858240a06c01860523508cce9502\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a5aa5f1e2c16072e5b0976a2441d03b2a64e54b89eaed53b68f93d5838b4f0\",\"dweb:/ipfs/Qmax5x4ubHZdFoRRFKdiCKX9FY78UiKMSAQmP81Mszecop\"]},\"imports/openzeppelin/utils/StorageSlot.sol\":{\"keccak256\":\"0x3f82fa58b82665ea4454b705f47d00417c63587ce418f9a1a6ce8abf16c51d1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://910362331bf2befc3c29b7db1fde7a82f32217ea31fc107f3b7771b32e8500f4\",\"dweb:/ipfs/QmT95CFiHtSso6XVG1PBztsgmnZfU7inGZRxKiLtsxUHgz\"]},\"imports/openzeppelin/utils/math/Math.sol\":{\"keccak256\":\"0xffe8a176523d38132299bc22fd6bb138954ba3f35d41a86d004dac50dc31b615\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67b3d7e2d3042e5061168827e518b2eb546be0f4a3f764f654c28205c5a428e5\",\"dweb:/ipfs/Qma3d9Vim9NrzWAFASxpDppgGXo8MWZ6zorsgAYYXsbXph\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"diamonds/facets/slots/SlotToken.sol": {
				"SlotToken": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"diamonds/facets/slots/SlotToken.sol\":155:849  contract SlotToken {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"diamonds/facets/slots/SlotToken.sol\":155:849  contract SlotToken {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c5652b11bdb9f928d235def2a4dbcc06e78cb6a25e151cba18e76ded0decdb5464736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220c5652b11bdb9f928d235def2a4dbcc06e78cb6a25e151cba18e76ded0decdb5464736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 PUSH6 0x2B11BDB9F928 0xD2 CALLDATALOAD 0xDE CALLCODE LOG4 0xDB 0xCC MOD 0xE7 DUP13 0xB6 LOG2 0x5E ISZERO SHR 0xBA XOR 0xE7 PUSH14 0xED0DECDB5464736F6C6343000813 STOP CALLER ",
							"sourceMap": "155:694:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220c5652b11bdb9f928d235def2a4dbcc06e78cb6a25e151cba18e76ded0decdb5464736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 PUSH6 0x2B11BDB9F928 0xD2 CALLDATALOAD 0xDE CALLCODE LOG4 0xDB 0xCC MOD 0xE7 DUP13 0xB6 LOG2 0x5E ISZERO SHR 0xBA XOR 0xE7 PUSH14 0xED0DECDB5464736F6C6343000813 STOP CALLER ",
							"sourceMap": "155:694:1:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"token()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 155,
									"end": 849,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 155,
									"end": 849,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 155,
									"end": 849,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 155,
									"end": 849,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 155,
									"end": 849,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 155,
									"end": 849,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 155,
									"end": 849,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 155,
									"end": 849,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 155,
									"end": 849,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 155,
									"end": 849,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 155,
									"end": 849,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 155,
									"end": 849,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 155,
									"end": 849,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 155,
									"end": 849,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 155,
									"end": 849,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 155,
									"end": 849,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 155,
									"end": 849,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 155,
									"end": 849,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 155,
									"end": 849,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 155,
									"end": 849,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 155,
									"end": 849,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c5652b11bdb9f928d235def2a4dbcc06e78cb6a25e151cba18e76ded0decdb5464736f6c63430008130033",
									".code": [
										{
											"begin": 155,
											"end": 849,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 155,
											"end": 849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 155,
											"end": 849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 155,
											"end": 849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 849,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"diamonds/facets/FacetToken.sol",
								"diamonds/facets/slots/SlotToken.sol",
								"imports/openzeppelin/token/ERC20/IERC20.sol",
								"imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol",
								"imports/openzeppelin/utils/Arrays.sol",
								"imports/openzeppelin/utils/Context.sol",
								"imports/openzeppelin/utils/Counters.sol",
								"imports/openzeppelin/utils/StorageSlot.sol",
								"imports/openzeppelin/utils/math/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"diamonds/facets/slots/SlotToken.sol\":\"SlotToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"diamonds/facets/slots/SlotToken.sol\":{\"keccak256\":\"0x86e54644f6e914859a2a9fb1a16131936e39f4400fadf6b54ddd2a4804bded7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d924fe171aa658a92df82270e73a4daee685968e8dcd12f949d21136000462\",\"dweb:/ipfs/QmX7y3SaQpS6qjed34uWd9e1b6ZXuEhC6MaTdNsFDozy7Q\"]},\"imports/openzeppelin/utils/Arrays.sol\":{\"keccak256\":\"0x574acffb11f924844c152e562688142ab6e54bbdf4ca3f4abc87b28a69e5cead\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8347a9e49cd21ced3d83bf834caa57de8c4a9cc386d7fde14766480921d01a82\",\"dweb:/ipfs/QmfUBz7mComtHR6YAT1w5dGSjwSkM1Q8N4NuCc5a3YPFEw\"]},\"imports/openzeppelin/utils/Counters.sol\":{\"keccak256\":\"0x632d89cfbd5134bb48ab9f27f8acb3ef6230858240a06c01860523508cce9502\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a5aa5f1e2c16072e5b0976a2441d03b2a64e54b89eaed53b68f93d5838b4f0\",\"dweb:/ipfs/Qmax5x4ubHZdFoRRFKdiCKX9FY78UiKMSAQmP81Mszecop\"]},\"imports/openzeppelin/utils/StorageSlot.sol\":{\"keccak256\":\"0x3f82fa58b82665ea4454b705f47d00417c63587ce418f9a1a6ce8abf16c51d1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://910362331bf2befc3c29b7db1fde7a82f32217ea31fc107f3b7771b32e8500f4\",\"dweb:/ipfs/QmT95CFiHtSso6XVG1PBztsgmnZfU7inGZRxKiLtsxUHgz\"]},\"imports/openzeppelin/utils/math/Math.sol\":{\"keccak256\":\"0xffe8a176523d38132299bc22fd6bb138954ba3f35d41a86d004dac50dc31b615\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67b3d7e2d3042e5061168827e518b2eb546be0f4a3f764f654c28205c5a428e5\",\"dweb:/ipfs/Qma3d9Vim9NrzWAFASxpDppgGXo8MWZ6zorsgAYYXsbXph\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/openzeppelin/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/openzeppelin/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/openzeppelin/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x25c33569824f7653c064ccac6b9c63ba19833c7818debaa3f7f7737f5175d7d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c002fe819fd2da94ef4cbcddcd4a62ba42454b000d2321314bfff73353792e7\",\"dweb:/ipfs/QmadL9VMe3jTyf5sg8g8Y9Q4ESsyos42rZPnvJaKuhUacK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/openzeppelin/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x25c33569824f7653c064ccac6b9c63ba19833c7818debaa3f7f7737f5175d7d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c002fe819fd2da94ef4cbcddcd4a62ba42454b000d2321314bfff73353792e7\",\"dweb:/ipfs/QmadL9VMe3jTyf5sg8g8Y9Q4ESsyos42rZPnvJaKuhUacK\"]},\"imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x2837661e72b15493671ff5e5099b565b626c53f4d90f347211dd78924aca24ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34ced2145df7d08fbb3fba9471faf5a1609fc3def76d004c658f480e5cebb013\",\"dweb:/ipfs/QmSJ42tRU39HdpJSLXCinUtzzxnxBFncnCbfK6juqqep7U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/openzeppelin/utils/Arrays.sol": {
				"Arrays": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to array types.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"imports/openzeppelin/utils/Arrays.sol\":245:3973  library Arrays {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"imports/openzeppelin/utils/Arrays.sol\":245:3973  library Arrays {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209293642fd73cb484c94605ddbe4fa8d40e20015598efec731a57e3612358ef7764736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209293642fd73cb484c94605ddbe4fa8d40e20015598efec731a57e3612358ef7764736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 SWAP4 PUSH5 0x2FD73CB484 0xC9 CHAINID SDIV 0xDD 0xBE 0x4F 0xA8 0xD4 0xE KECCAK256 ADD SSTORE SWAP9 0xEF 0xEC PUSH20 0x1A57E3612358EF7764736F6C6343000813003300 ",
							"sourceMap": "245:3728:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;245:3728:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209293642fd73cb484c94605ddbe4fa8d40e20015598efec731a57e3612358ef7764736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 SWAP4 PUSH5 0x2FD73CB484 0xC9 CHAINID SDIV 0xDD 0xBE 0x4F 0xA8 0xD4 0xE KECCAK256 ADD SSTORE SWAP9 0xEF 0xEC PUSH20 0x1A57E3612358EF7764736F6C6343000813003300 ",
							"sourceMap": "245:3728:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"findUpperBound(uint256[] storage pointer,uint256)": "infinite",
								"unsafeAccess(address[] storage pointer,uint256)": "infinite",
								"unsafeAccess(bytes32[] storage pointer,uint256)": "infinite",
								"unsafeAccess(uint256[] storage pointer,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 245,
									"end": 3973,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 245,
									"end": 3973,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209293642fd73cb484c94605ddbe4fa8d40e20015598efec731a57e3612358ef7764736f6c63430008130033",
									".code": [
										{
											"begin": 245,
											"end": 3973,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 245,
											"end": 3973,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 245,
											"end": 3973,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 245,
											"end": 3973,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 245,
											"end": 3973,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 245,
											"end": 3973,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 245,
											"end": 3973,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 3973,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 245,
											"end": 3973,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"diamonds/facets/FacetToken.sol",
								"diamonds/facets/slots/SlotToken.sol",
								"imports/openzeppelin/token/ERC20/IERC20.sol",
								"imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol",
								"imports/openzeppelin/utils/Arrays.sol",
								"imports/openzeppelin/utils/Context.sol",
								"imports/openzeppelin/utils/Counters.sol",
								"imports/openzeppelin/utils/StorageSlot.sol",
								"imports/openzeppelin/utils/math/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/openzeppelin/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/openzeppelin/utils/Arrays.sol\":{\"keccak256\":\"0x574acffb11f924844c152e562688142ab6e54bbdf4ca3f4abc87b28a69e5cead\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8347a9e49cd21ced3d83bf834caa57de8c4a9cc386d7fde14766480921d01a82\",\"dweb:/ipfs/QmfUBz7mComtHR6YAT1w5dGSjwSkM1Q8N4NuCc5a3YPFEw\"]},\"imports/openzeppelin/utils/StorageSlot.sol\":{\"keccak256\":\"0x3f82fa58b82665ea4454b705f47d00417c63587ce418f9a1a6ce8abf16c51d1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://910362331bf2befc3c29b7db1fde7a82f32217ea31fc107f3b7771b32e8500f4\",\"dweb:/ipfs/QmT95CFiHtSso6XVG1PBztsgmnZfU7inGZRxKiLtsxUHgz\"]},\"imports/openzeppelin/utils/math/Math.sol\":{\"keccak256\":\"0xffe8a176523d38132299bc22fd6bb138954ba3f35d41a86d004dac50dc31b615\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67b3d7e2d3042e5061168827e518b2eb546be0f4a3f764f654c28205c5a428e5\",\"dweb:/ipfs/Qma3d9Vim9NrzWAFASxpDppgGXo8MWZ6zorsgAYYXsbXph\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/openzeppelin/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/openzeppelin/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/openzeppelin/utils/Context.sol\":{\"keccak256\":\"0x639f180f9bedd48998c68f1bf4f8d01b37a4573bc496acb04a55308c6de0045c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ff2313c66e4e14d167aae923b38509ec68dcaa281d2314f45b527139d33d4af\",\"dweb:/ipfs/QmU7aik96EmKeG8feBbQZ8BufngtYB6guGTkZoX5umP73i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/openzeppelin/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"imports/openzeppelin/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"imports/openzeppelin/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ae61e5f95ca978b63180fd742cc3c293dc581642654a05a66ff86322eaeb753c64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ae61e5f95ca978b63180fd742cc3c293dc581642654a05a66ff86322eaeb753c64736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE PUSH2 0xE5F9 0x5C 0xA9 PUSH25 0xB63180FD742CC3C293DC581642654A05A66FF86322EAEB753C PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "424:971:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ae61e5f95ca978b63180fd742cc3c293dc581642654a05a66ff86322eaeb753c64736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE PUSH2 0xE5F9 0x5C 0xA9 PUSH25 0xB63180FD742CC3C293DC581642654A05A66FF86322EAEB753C PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "424:971:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ae61e5f95ca978b63180fd742cc3c293dc581642654a05a66ff86322eaeb753c64736f6c63430008130033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"diamonds/facets/FacetToken.sol",
								"diamonds/facets/slots/SlotToken.sol",
								"imports/openzeppelin/token/ERC20/IERC20.sol",
								"imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol",
								"imports/openzeppelin/utils/Arrays.sol",
								"imports/openzeppelin/utils/Context.sol",
								"imports/openzeppelin/utils/Counters.sol",
								"imports/openzeppelin/utils/StorageSlot.sol",
								"imports/openzeppelin/utils/math/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/openzeppelin/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/openzeppelin/utils/Counters.sol\":{\"keccak256\":\"0x632d89cfbd5134bb48ab9f27f8acb3ef6230858240a06c01860523508cce9502\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a5aa5f1e2c16072e5b0976a2441d03b2a64e54b89eaed53b68f93d5838b4f0\",\"dweb:/ipfs/Qmax5x4ubHZdFoRRFKdiCKX9FY78UiKMSAQmP81Mszecop\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/openzeppelin/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0, \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"imports/openzeppelin/utils/StorageSlot.sol\":1417:4102  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"imports/openzeppelin/utils/StorageSlot.sol\":1417:4102  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b208b0aced667da84b353c02d439d9ab4267ac9ba47935bbb95236f0bd91753064736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b208b0aced667da84b353c02d439d9ab4267ac9ba47935bbb95236f0bd91753064736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 ADDMOD 0xB0 0xAC 0xED PUSH7 0x7DA84B353C02D4 CODECOPY 0xD9 0xAB TIMESTAMP PUSH8 0xAC9BA47935BBB952 CALLDATASIZE CREATE 0xBD SWAP2 PUSH22 0x3064736F6C6343000813003300000000000000000000 ",
							"sourceMap": "1417:2685:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1417:2685:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b208b0aced667da84b353c02d439d9ab4267ac9ba47935bbb95236f0bd91753064736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 ADDMOD 0xB0 0xAC 0xED PUSH7 0x7DA84B353C02D4 CODECOPY 0xD9 0xAB TIMESTAMP PUSH8 0xAC9BA47935BBB952 CALLDATASIZE CREATE 0xBD SWAP2 PUSH22 0x3064736F6C6343000813003300000000000000000000 ",
							"sourceMap": "1417:2685:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1417,
									"end": 4102,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 4102,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b208b0aced667da84b353c02d439d9ab4267ac9ba47935bbb95236f0bd91753064736f6c63430008130033",
									".code": [
										{
											"begin": 1417,
											"end": 4102,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 1417,
											"end": 4102,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1417,
											"end": 4102,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1417,
											"end": 4102,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1417,
											"end": 4102,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1417,
											"end": 4102,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1417,
											"end": 4102,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 4102,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1417,
											"end": 4102,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"diamonds/facets/FacetToken.sol",
								"diamonds/facets/slots/SlotToken.sol",
								"imports/openzeppelin/token/ERC20/IERC20.sol",
								"imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol",
								"imports/openzeppelin/utils/Arrays.sol",
								"imports/openzeppelin/utils/Context.sol",
								"imports/openzeppelin/utils/Counters.sol",
								"imports/openzeppelin/utils/StorageSlot.sol",
								"imports/openzeppelin/utils/math/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0, \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/openzeppelin/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/openzeppelin/utils/StorageSlot.sol\":{\"keccak256\":\"0x3f82fa58b82665ea4454b705f47d00417c63587ce418f9a1a6ce8abf16c51d1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://910362331bf2befc3c29b7db1fde7a82f32217ea31fc107f3b7771b32e8500f4\",\"dweb:/ipfs/QmT95CFiHtSso6XVG1PBztsgmnZfU7inGZRxKiLtsxUHgz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/openzeppelin/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"imports/openzeppelin/utils/math/Math.sol\":203:14806  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"imports/openzeppelin/utils/math/Math.sol\":203:14806  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202d3e38d2dfcf991454e5753b956fa642f26a1a595f4459f8d3eb89007ad4db4c64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202d3e38d2dfcf991454e5753b956fa642f26a1a595f4459f8d3eb89007ad4db4c64736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D RETURNDATACOPY CODESIZE 0xD2 0xDF 0xCF SWAP10 EQ SLOAD 0xE5 PUSH22 0x3B956FA642F26A1A595F4459F8D3EB89007AD4DB4C64 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "203:14603:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14603:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202d3e38d2dfcf991454e5753b956fa642f26a1a595f4459f8d3eb89007ad4db4c64736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D RETURNDATACOPY CODESIZE 0xD2 0xDF 0xCF SWAP10 EQ SLOAD 0xE5 PUSH22 0x3B956FA642F26A1A595F4459F8D3EB89007AD4DB4C64 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "203:14603:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 203,
									"end": 14806,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202d3e38d2dfcf991454e5753b956fa642f26a1a595f4459f8d3eb89007ad4db4c64736f6c63430008130033",
									".code": [
										{
											"begin": 203,
											"end": 14806,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 203,
											"end": 14806,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"diamonds/facets/FacetToken.sol",
								"diamonds/facets/slots/SlotToken.sol",
								"imports/openzeppelin/token/ERC20/IERC20.sol",
								"imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol",
								"imports/openzeppelin/utils/Arrays.sol",
								"imports/openzeppelin/utils/Context.sol",
								"imports/openzeppelin/utils/Counters.sol",
								"imports/openzeppelin/utils/StorageSlot.sol",
								"imports/openzeppelin/utils/math/Math.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/openzeppelin/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/openzeppelin/utils/math/Math.sol\":{\"keccak256\":\"0xffe8a176523d38132299bc22fd6bb138954ba3f35d41a86d004dac50dc31b615\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67b3d7e2d3042e5061168827e518b2eb546be0f4a3f764f654c28205c5a428e5\",\"dweb:/ipfs/Qma3d9Vim9NrzWAFASxpDppgGXo8MWZ6zorsgAYYXsbXph\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> diamonds/facets/FacetToken.sol:201:61:\n    |\n201 |     function _beforeTokenTransfer(address from, address to, uint amount) internal virtual {\n    |                                                             ^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 7735,
					"file": "diamonds/facets/FacetToken.sol",
					"start": 7724
				},
				"type": "Warning"
			}
		],
		"sources": {
			"diamonds/facets/FacetToken.sol": {
				"ast": {
					"absolutePath": "diamonds/facets/FacetToken.sol",
					"exportedSymbols": {
						"Arrays": [
							1347
						],
						"Context": [
							1369
						],
						"Counters": [
							1443
						],
						"FacetToken": [
							1031
						],
						"IERC20": [
							1166
						],
						"IERC20Metadata": [
							1191
						],
						"IFacetToken": [
							74
						],
						"Math": [
							2577
						],
						"SlotToken": [
							1088
						],
						"StorageSlot": [
							1553
						]
					},
					"id": 1032,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "diamonds/facets/slots/SlotToken.sol",
							"file": "diamonds/facets/slots/SlotToken.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1032,
							"sourceUnit": 1089,
							"src": "56:45:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/openzeppelin/utils/Context.sol",
							"file": "imports/openzeppelin/utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1032,
							"sourceUnit": 1370,
							"src": "102:48:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/openzeppelin/token/ERC20/IERC20.sol",
							"file": "imports/openzeppelin/token/ERC20/IERC20.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1032,
							"sourceUnit": 1167,
							"src": "151:53:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1032,
							"sourceUnit": 1192,
							"src": "205:72:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/openzeppelin/utils/Arrays.sol",
							"file": "imports/openzeppelin/utils/Arrays.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1032,
							"sourceUnit": 1348,
							"src": "278:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/openzeppelin/utils/Counters.sol",
							"file": "imports/openzeppelin/utils/Counters.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1032,
							"sourceUnit": 1444,
							"src": "326:49:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 8,
										"name": "IERC20",
										"nameLocations": [
											"402:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1166,
										"src": "402:6:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "402:6:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "IERC20Metadata",
										"nameLocations": [
											"410:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1191,
										"src": "410:14:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "410:14:0"
								}
							],
							"canonicalName": "IFacetToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 74,
							"linearizedBaseContracts": [
								74,
								1191,
								1166
							],
							"name": "IFacetToken",
							"nameLocation": "387:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "8030e83b04d87bef53480e26263266d6ca66863aa8506aca6f2559d18aa1cb67",
									"id": 15,
									"name": "Snapshot",
									"nameLocation": "437:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "451:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "446:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "446:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "445:9:0"
									},
									"src": "431:24:0"
								},
								{
									"anonymous": false,
									"eventSelector": "e08ba098c56583ff7ce264f98fb97b7ddc5e6af834acc0556b24327f72a555f9",
									"id": 21,
									"name": "TokenNameChanged",
									"nameLocation": "466:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldName",
												"nameLocation": "498:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "483:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 16,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "483:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"mutability": "mutable",
												"name": "newName",
												"nameLocation": "522:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "507:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 18,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "507:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "482:48:0"
									},
									"src": "460:71:0"
								},
								{
									"anonymous": false,
									"eventSelector": "68023cab388c6052af3fa625f164cd0c14cc9125d57286fbe0d9b384847c4c02",
									"id": 27,
									"name": "TokenSymbolChanged",
									"nameLocation": "542:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldSymbol",
												"nameLocation": "576:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "561:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 22,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "561:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"indexed": true,
												"mutability": "mutable",
												"name": "newSymbol",
												"nameLocation": "602:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "587:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 24,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "587:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "560:52:0"
									},
									"src": "536:77:0"
								},
								{
									"functionSelector": "e0089dc3",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "____setName",
									"nameLocation": "628:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "newName",
												"nameLocation": "654:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "640:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 28,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "640:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "639:23:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "671:0:0"
									},
									"scope": 74,
									"src": "619:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1e96c1dd",
									"id": 37,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "____setSymbol",
									"nameLocation": "686:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "newSymbol",
												"nameLocation": "714:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "700:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 33,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "700:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "699:25:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "733:0:0"
									},
									"scope": 74,
									"src": "677:57:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "49e7012c",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "____mint",
									"nameLocation": "748:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "762:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "757:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "757:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:13:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "778:0:0"
									},
									"scope": 74,
									"src": "739:40:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b74456f2",
									"id": 47,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "____burn",
									"nameLocation": "793:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "807:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "802:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "802:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "801:13:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "823:0:0"
									},
									"scope": 74,
									"src": "784:40:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "981b24d0",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupplyAt",
									"nameLocation": "848:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "snapshotId",
												"nameLocation": "867:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "862:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:17:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "902:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "902:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:6:0"
									},
									"scope": 74,
									"src": "839:69:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4ee2cd7e",
									"id": 63,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfAt",
									"nameLocation": "922:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "942:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "934:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "snapshotId",
												"nameLocation": "956:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "951:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "951:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "933:34:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "991:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "991:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "990:6:0"
									},
									"scope": 74,
									"src": "913:84:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5439ad86",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentSnapshotId",
									"nameLocation": "1011:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1031:2:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1057:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1057:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1056:6:0"
									},
									"scope": 74,
									"src": "1002:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9711715a",
									"id": 73,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshot",
									"nameLocation": "1077:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1085:2:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1106:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1106:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1105:6:0"
									},
									"scope": 74,
									"src": "1068:44:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1032,
							"src": "377:737:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 75,
										"name": "SlotToken",
										"nameLocations": [
											"1139:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1088,
										"src": "1139:9:0"
									},
									"id": 76,
									"nodeType": "InheritanceSpecifier",
									"src": "1139:9:0"
								},
								{
									"baseName": {
										"id": 77,
										"name": "Context",
										"nameLocations": [
											"1150:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1369,
										"src": "1150:7:0"
									},
									"id": 78,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:7:0"
								},
								{
									"baseName": {
										"id": 79,
										"name": "IERC20",
										"nameLocations": [
											"1159:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1166,
										"src": "1159:6:0"
									},
									"id": 80,
									"nodeType": "InheritanceSpecifier",
									"src": "1159:6:0"
								},
								{
									"baseName": {
										"id": 81,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1167:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1191,
										"src": "1167:14:0"
									},
									"id": 82,
									"nodeType": "InheritanceSpecifier",
									"src": "1167:14:0"
								}
							],
							"canonicalName": "FacetToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1031,
							"linearizedBaseContracts": [
								1031,
								1191,
								1166,
								1369,
								1088
							],
							"name": "FacetToken",
							"nameLocation": "1125:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 86,
									"libraryName": {
										"id": 83,
										"name": "Arrays",
										"nameLocations": [
											"1194:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1347,
										"src": "1194:6:0"
									},
									"nodeType": "UsingForDirective",
									"src": "1188:24:0",
									"typeName": {
										"baseType": {
											"id": 84,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1205:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 85,
										"nodeType": "ArrayTypeName",
										"src": "1205:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									}
								},
								{
									"global": false,
									"id": 90,
									"libraryName": {
										"id": 87,
										"name": "Counters",
										"nameLocations": [
											"1223:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1443,
										"src": "1223:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "1217:36:0",
									"typeName": {
										"id": 89,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 88,
											"name": "Counters.Counter",
											"nameLocations": [
												"1236:8:0",
												"1245:7:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1375,
											"src": "1236:16:0"
										},
										"referencedDeclaration": 1375,
										"src": "1236:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1375_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"anonymous": false,
									"eventSelector": "8030e83b04d87bef53480e26263266d6ca66863aa8506aca6f2559d18aa1cb67",
									"id": 94,
									"name": "Snapshot",
									"nameLocation": "1265:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1279:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1274:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1274:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:9:0"
									},
									"src": "1259:24:0"
								},
								{
									"anonymous": false,
									"eventSelector": "e08ba098c56583ff7ce264f98fb97b7ddc5e6af834acc0556b24327f72a555f9",
									"id": 100,
									"name": "TokenNameChanged",
									"nameLocation": "1294:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldName",
												"nameLocation": "1326:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1311:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 95,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1311:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": true,
												"mutability": "mutable",
												"name": "newName",
												"nameLocation": "1350:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1335:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 97,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1335:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1310:48:0"
									},
									"src": "1288:71:0"
								},
								{
									"anonymous": false,
									"eventSelector": "68023cab388c6052af3fa625f164cd0c14cc9125d57286fbe0d9b384847c4c02",
									"id": 106,
									"name": "TokenSymbolChanged",
									"nameLocation": "1370:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldSymbol",
												"nameLocation": "1404:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1389:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 101,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1389:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"indexed": true,
												"mutability": "mutable",
												"name": "newSymbol",
												"nameLocation": "1430:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1415:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 103,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1415:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1388:52:0"
									},
									"src": "1364:77:0"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "1508:155:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_onlySelf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "1518:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1518:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "1518:11:0"
											},
											{
												"assignments": [
													115
												],
												"declarations": [
													{
														"constant": false,
														"id": 115,
														"mutability": "mutable",
														"name": "oldName",
														"nameLocation": "1553:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 131,
														"src": "1539:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 114,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1539:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 119,
												"initialValue": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 116,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "1563:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageToken_$1068_storage_ptr_$",
																"typeString": "function () pure returns (struct SlotToken.StorageToken storage pointer)"
															}
														},
														"id": 117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1563:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StorageToken_$1068_storage_ptr",
															"typeString": "struct SlotToken.StorageToken storage pointer"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1571:4:0",
													"memberName": "name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1063,
													"src": "1563:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1539:36:0"
											},
											{
												"expression": {
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 120,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "1585:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageToken_$1068_storage_ptr_$",
																	"typeString": "function () pure returns (struct SlotToken.StorageToken storage pointer)"
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1585:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StorageToken_$1068_storage_ptr",
																"typeString": "struct SlotToken.StorageToken storage pointer"
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1593:4:0",
														"memberName": "name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1063,
														"src": "1585:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 123,
														"name": "newName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "1600:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1585:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "1585:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 127,
															"name": "oldName",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "1639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 128,
															"name": "newName",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "1648:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 126,
														"name": "TokenNameChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "1622:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1622:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 130,
												"nodeType": "EmitStatement",
												"src": "1617:39:0"
											}
										]
									},
									"functionSelector": "e0089dc3",
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "____setName",
									"nameLocation": "1456:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "newName",
												"nameLocation": "1482:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1468:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 107,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1468:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1467:23:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1508:0:0"
									},
									"scope": 1031,
									"src": "1447:216:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "1734:169:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 137,
														"name": "_onlySelf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "1744:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1744:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "1744:11:0"
											},
											{
												"assignments": [
													141
												],
												"declarations": [
													{
														"constant": false,
														"id": 141,
														"mutability": "mutable",
														"name": "oldSymbol",
														"nameLocation": "1779:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "1765:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 140,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1765:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 145,
												"initialValue": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 142,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "1791:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageToken_$1068_storage_ptr_$",
																"typeString": "function () pure returns (struct SlotToken.StorageToken storage pointer)"
															}
														},
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1791:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StorageToken_$1068_storage_ptr",
															"typeString": "struct SlotToken.StorageToken storage pointer"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1799:6:0",
													"memberName": "symbol",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1065,
													"src": "1791:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1765:40:0"
											},
											{
												"expression": {
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 146,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "1815:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageToken_$1068_storage_ptr_$",
																	"typeString": "function () pure returns (struct SlotToken.StorageToken storage pointer)"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1815:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StorageToken_$1068_storage_ptr",
																"typeString": "struct SlotToken.StorageToken storage pointer"
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1823:6:0",
														"memberName": "symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1065,
														"src": "1815:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 149,
														"name": "newSymbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "1832:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1815:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "1815:26:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 153,
															"name": "oldSymbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "1875:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 154,
															"name": "newSymbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "1886:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 152,
														"name": "TokenSymbolChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "1856:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1856:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "EmitStatement",
												"src": "1851:45:0"
											}
										]
									},
									"functionSelector": "1e96c1dd",
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "____setSymbol",
									"nameLocation": "1678:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "newSymbol",
												"nameLocation": "1706:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1692:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 133,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1692:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1691:25:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:0"
									},
									"scope": 1031,
									"src": "1669:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "1957:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 163,
														"name": "_onlySelf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "1967:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1967:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "1967:11:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 167,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1359,
																"src": "1994:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1994:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 169,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "2008:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 166,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "1988:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1988:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "1988:27:0"
											}
										]
									},
									"functionSelector": "49e7012c",
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "____mint",
									"nameLocation": "1918:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1932:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1927:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1927:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1926:13:0"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1957:0:0"
									},
									"scope": 1031,
									"src": "1909:113:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "2076:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 178,
														"name": "_onlySelf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "2086:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2086:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "2086:11:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 182,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1359,
																"src": "2113:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2113:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 184,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "2127:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 181,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "2107:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2107:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2107:27:0"
											}
										]
									},
									"functionSelector": "b74456f2",
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "____burn",
									"nameLocation": "2037:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2051:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2046:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2046:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2045:13:0"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2076:0:0"
									},
									"scope": 1031,
									"src": "2028:113:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1178
									],
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "2225:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 194,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "2242:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageToken_$1068_storage_ptr_$",
																"typeString": "function () pure returns (struct SlotToken.StorageToken storage pointer)"
															}
														},
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2242:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StorageToken_$1068_storage_ptr",
															"typeString": "struct SlotToken.StorageToken storage pointer"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2250:4:0",
													"memberName": "name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1063,
													"src": "2242:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 197,
												"nodeType": "Return",
												"src": "2235:19:0"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2165:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 190,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2192:8:0"
									},
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2169:2:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "2210:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2210:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:15:0"
									},
									"scope": 1031,
									"src": "2156:105:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1184
									],
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2338:38:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 205,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "2355:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageToken_$1068_storage_ptr_$",
																"typeString": "function () pure returns (struct SlotToken.StorageToken storage pointer)"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2355:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StorageToken_$1068_storage_ptr",
															"typeString": "struct SlotToken.StorageToken storage pointer"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2363:6:0",
													"memberName": "symbol",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1065,
													"src": "2355:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 204,
												"id": 208,
												"nodeType": "Return",
												"src": "2348:21:0"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2276:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 201,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2305:8:0"
									},
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2282:2:0"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2323:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 202,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:0"
									},
									"scope": 1031,
									"src": "2267:109:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1190
									],
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "2447:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2464:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 215,
												"id": 217,
												"nodeType": "Return",
												"src": "2457:9:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2391:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 212,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2422:8:0"
									},
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2399:2:0"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2440:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 213,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2440:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:7:0"
									},
									"scope": 1031,
									"src": "2382:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1115
									],
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "2546:43:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 225,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "2563:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageToken_$1068_storage_ptr_$",
																"typeString": "function () pure returns (struct SlotToken.StorageToken storage pointer)"
															}
														},
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2563:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StorageToken_$1068_storage_ptr",
															"typeString": "struct SlotToken.StorageToken storage pointer"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2571:11:0",
													"memberName": "totalSupply",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1067,
													"src": "2563:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 224,
												"id": 228,
												"nodeType": "Return",
												"src": "2556:26:0"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2488:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 221,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2522:8:0"
									},
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2499:2:0"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "2540:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2540:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:6:0"
									},
									"scope": 1031,
									"src": "2479:110:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "2670:154:0",
										"statements": [
											{
												"assignments": [
													238,
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 238,
														"mutability": "mutable",
														"name": "snapshotted",
														"nameLocation": "2686:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 254,
														"src": "2681:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 237,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2681:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "2704:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 254,
														"src": "2699:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 239,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2699:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 247,
												"initialValue": {
													"arguments": [
														{
															"id": 242,
															"name": "snapshotId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "2722:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 243,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "2734:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageToken_$1068_storage_ptr_$",
																		"typeString": "function () pure returns (struct SlotToken.StorageToken storage pointer)"
																	}
																},
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2734:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StorageToken_$1068_storage_ptr",
																	"typeString": "struct SlotToken.StorageToken storage pointer"
																}
															},
															"id": 245,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2742:22:0",
															"memberName": "snapshotsOfTotalSupply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1058,
															"src": "2734:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Snapshots_$1075_storage",
																"typeString": "struct SlotToken.Snapshots storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_struct$_Snapshots_$1075_storage",
																"typeString": "struct SlotToken.Snapshots storage ref"
															}
														],
														"id": 241,
														"name": "_valueAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "2713:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_struct$_Snapshots_$1075_storage_ptr_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,struct SlotToken.Snapshots storage pointer) view returns (bool,uint256)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2713:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2680:85:0"
											},
											{
												"expression": {
													"condition": {
														"id": 248,
														"name": "snapshotted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 238,
														"src": "2782:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 250,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "2804:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2804:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2782:35:0",
													"trueExpression": {
														"id": 249,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2796:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 236,
												"id": 253,
												"nodeType": "Return",
												"src": "2775:42:0"
											}
										]
									},
									"functionSelector": "981b24d0",
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupplyAt",
									"nameLocation": "2604:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "snapshotId",
												"nameLocation": "2623:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2618:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2618:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2617:17:0"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2664:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2664:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2663:6:0"
									},
									"scope": 1031,
									"src": "2595:229:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1123
									],
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "2910:49:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 263,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "2927:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageToken_$1068_storage_ptr_$",
																	"typeString": "function () pure returns (struct SlotToken.StorageToken storage pointer)"
																}
															},
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2927:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StorageToken_$1068_storage_ptr",
																"typeString": "struct SlotToken.StorageToken storage pointer"
															}
														},
														"id": 265,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2935:8:0",
														"memberName": "balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1044,
														"src": "2927:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 267,
													"indexExpression": {
														"id": 266,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "2944:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2927:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 268,
												"nodeType": "Return",
												"src": "2920:32:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2839:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 259,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2886:8:0"
									},
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2857:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "2849:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2849:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2848:17:0"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "2904:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2904:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2903:6:0"
									},
									"scope": 1031,
									"src": "2830:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "3055:164:0",
										"statements": [
											{
												"assignments": [
													280,
													282
												],
												"declarations": [
													{
														"constant": false,
														"id": 280,
														"mutability": "mutable",
														"name": "snapshotted",
														"nameLocation": "3071:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 299,
														"src": "3066:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 279,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3066:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 282,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "3089:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 299,
														"src": "3084:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 281,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3084:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 291,
												"initialValue": {
													"arguments": [
														{
															"id": 284,
															"name": "snapshotId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "3107:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 285,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "3119:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageToken_$1068_storage_ptr_$",
																			"typeString": "function () pure returns (struct SlotToken.StorageToken storage pointer)"
																		}
																	},
																	"id": 286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3119:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StorageToken_$1068_storage_ptr",
																		"typeString": "struct SlotToken.StorageToken storage pointer"
																	}
																},
																"id": 287,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3127:18:0",
																"memberName": "snapshotsOfBalance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1055,
																"src": "3119:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Snapshots_$1075_storage_$",
																	"typeString": "mapping(address => struct SlotToken.Snapshots storage ref)"
																}
															},
															"id": 289,
															"indexExpression": {
																"id": 288,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "3146:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3119:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Snapshots_$1075_storage",
																"typeString": "struct SlotToken.Snapshots storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_struct$_Snapshots_$1075_storage",
																"typeString": "struct SlotToken.Snapshots storage ref"
															}
														],
														"id": 283,
														"name": "_valueAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "3098:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_struct$_Snapshots_$1075_storage_ptr_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,struct SlotToken.Snapshots storage pointer) view returns (bool,uint256)"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3098:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3065:90:0"
											},
											{
												"expression": {
													"condition": {
														"id": 292,
														"name": "snapshotted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "3172:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 295,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "3204:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 294,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "3194:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3194:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3172:40:0",
													"trueExpression": {
														"id": 293,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "3186:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 278,
												"id": 298,
												"nodeType": "Return",
												"src": "3165:47:0"
											}
										]
									},
									"functionSelector": "4ee2cd7e",
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfAt",
									"nameLocation": "2974:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2994:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "2986:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2986:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "snapshotId",
												"nameLocation": "3008:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3003:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3003:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:34:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3049:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3049:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3048:6:0"
									},
									"scope": 1031,
									"src": "2965:254:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1143
									],
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "3321:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 310,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "3338:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageToken_$1068_storage_ptr_$",
																		"typeString": "function () pure returns (struct SlotToken.StorageToken storage pointer)"
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3338:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StorageToken_$1068_storage_ptr",
																	"typeString": "struct SlotToken.StorageToken storage pointer"
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3346:10:0",
															"memberName": "allowances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1050,
															"src": "3338:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 314,
														"indexExpression": {
															"id": 313,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "3357:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3338:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 316,
													"indexExpression": {
														"id": 315,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "3365:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3338:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 309,
												"id": 317,
												"nodeType": "Return",
												"src": "3331:42:0"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3234:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 306,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3297:8:0"
									},
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "owner_",
												"nameLocation": "3252:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "3244:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3244:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3268:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "3260:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3260:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3243:33:0"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "3315:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3315:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3314:6:0"
									},
									"scope": 1031,
									"src": "3225:155:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "3453:59:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 324,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "3470:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageToken_$1068_storage_ptr_$",
																		"typeString": "function () pure returns (struct SlotToken.StorageToken storage pointer)"
																	}
																},
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3470:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StorageToken_$1068_storage_ptr",
																	"typeString": "struct SlotToken.StorageToken storage pointer"
																}
															},
															"id": 326,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3478:17:0",
															"memberName": "currentSnapshotId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1061,
															"src": "3470:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1375_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3496:7:0",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1387,
														"src": "3470:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1375_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1375_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3470:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 323,
												"id": 329,
												"nodeType": "Return",
												"src": "3463:42:0"
											}
										]
									},
									"functionSelector": "5439ad86",
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentSnapshotId",
									"nameLocation": "3395:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3415:2:0"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "3447:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3447:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:6:0"
									},
									"scope": 1031,
									"src": "3386:126:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1153
									],
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "3604:110:0",
										"statements": [
											{
												"assignments": [
													342
												],
												"declarations": [
													{
														"constant": false,
														"id": 342,
														"mutability": "mutable",
														"name": "owner_",
														"nameLocation": "3622:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 354,
														"src": "3614:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 341,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3614:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 345,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 343,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1359,
														"src": "3631:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3631:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3614:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 347,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "3662:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 348,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "3670:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 349,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "3679:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 346,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "3653:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3653:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 351,
												"nodeType": "ExpressionStatement",
												"src": "3653:33:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3703:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 340,
												"id": 353,
												"nodeType": "Return",
												"src": "3696:11:0"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3527:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 337,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3580:8:0"
									},
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3543:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3535:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3557:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3552:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3552:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:30:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3598:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 338,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3598:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3597:6:0"
									},
									"scope": 1031,
									"src": "3518:196:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1133
									],
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "3802:106:0",
										"statements": [
											{
												"assignments": [
													366
												],
												"declarations": [
													{
														"constant": false,
														"id": 366,
														"mutability": "mutable",
														"name": "owner_",
														"nameLocation": "3820:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 378,
														"src": "3812:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 365,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3812:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 369,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 367,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1359,
														"src": "3829:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3829:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3812:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 371,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "3861:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 372,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "3869:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 373,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "3873:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 370,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "3851:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3851:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 375,
												"nodeType": "ExpressionStatement",
												"src": "3851:29:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3897:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 364,
												"id": 377,
												"nodeType": "Return",
												"src": "3890:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3729:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 361,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3778:8:0"
									},
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3746:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "3738:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3755:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "3750:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3750:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3737:25:0"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "3796:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3796:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3795:6:0"
									},
									"scope": 1031,
									"src": "3720:188:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1165
									],
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "4014:153:0",
										"statements": [
											{
												"assignments": [
													392
												],
												"declarations": [
													{
														"constant": false,
														"id": 392,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4032:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 410,
														"src": "4024:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 391,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4024:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 395,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 393,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1359,
														"src": "4042:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4042:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4024:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 397,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "4080:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4086:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 399,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "4095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 396,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "4064:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4064:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "4064:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 403,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "4122:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 404,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "4128:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 405,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "4132:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 402,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "4112:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4112:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "4112:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4156:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 390,
												"id": 409,
												"nodeType": "Return",
												"src": "4149:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3923:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 387,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3990:8:0"
									},
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3944:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "3936:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3958:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "3950:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3950:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3967:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "3962:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3962:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3935:39:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "4008:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 388,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4008:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:6:0"
									},
									"scope": 1031,
									"src": "3914:253:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "4264:143:0",
										"statements": [
											{
												"assignments": [
													421
												],
												"declarations": [
													{
														"constant": false,
														"id": 421,
														"mutability": "mutable",
														"name": "owner_",
														"nameLocation": "4282:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 438,
														"src": "4274:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 420,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4274:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 424,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 422,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1359,
														"src": "4291:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4291:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4274:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 426,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "4322:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 427,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "4330:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 429,
																		"name": "owner_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "4349:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 430,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 413,
																		"src": "4357:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 428,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "4339:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4339:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 432,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "4368:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4339:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 425,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "4313:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4313:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "4313:66:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4396:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 419,
												"id": 437,
												"nodeType": "Return",
												"src": "4389:11:0"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "4182:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4208:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "4200:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4200:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "4222:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "4217:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4217:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4199:34:0"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "4258:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 417,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4258:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:6:0"
									},
									"scope": 1031,
									"src": "4173:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 478,
										"nodeType": "Block",
										"src": "4509:332:0",
										"statements": [
											{
												"assignments": [
													449
												],
												"declarations": [
													{
														"constant": false,
														"id": 449,
														"mutability": "mutable",
														"name": "owner_",
														"nameLocation": "4527:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 478,
														"src": "4519:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 448,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4519:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 452,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 450,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1359,
														"src": "4536:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4536:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4519:29:0"
											},
											{
												"assignments": [
													454
												],
												"declarations": [
													{
														"constant": false,
														"id": 454,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "4563:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 478,
														"src": "4558:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 453,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4558:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 459,
												"initialValue": {
													"arguments": [
														{
															"id": 456,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "4592:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 457,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "4600:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 455,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "4582:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4582:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4558:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 461,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "4626:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 462,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "4646:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4626:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661636574546f6b656e3a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4663:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b2d7c8fd57b3280510afdeeb421822dc9af34c71af058448618ece1bb28de9b",
																"typeString": "literal_string \"FacetToken: decreased allowance below zero\""
															},
															"value": "FacetToken: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0b2d7c8fd57b3280510afdeeb421822dc9af34c71af058448618ece1bb28de9b",
																"typeString": "literal_string \"FacetToken: decreased allowance below zero\""
															}
														],
														"id": 460,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4618:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "4618:90:0"
											},
											{
												"id": 475,
												"nodeType": "UncheckedBlock",
												"src": "4718:96:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 468,
																	"name": "owner_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "4751:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 469,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "4759:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 470,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "4768:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 471,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 443,
																		"src": "4787:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4768:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 467,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "4742:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4742:61:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 474,
														"nodeType": "ExpressionStatement",
														"src": "4742:61:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4830:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 447,
												"id": 477,
												"nodeType": "Return",
												"src": "4823:11:0"
											}
										]
									},
									"functionSelector": "a457c2d7",
									"id": 479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "4422:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4448:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "4440:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "4462:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "4457:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4457:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4439:39:0"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "4503:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 445,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4503:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4502:6:0"
									},
									"scope": 1031,
									"src": "4413:428:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "4897:163:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 484,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "4907:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageToken_$1068_storage_ptr_$",
																		"typeString": "function () pure returns (struct SlotToken.StorageToken storage pointer)"
																	}
																},
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4907:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StorageToken_$1068_storage_ptr",
																	"typeString": "struct SlotToken.StorageToken storage pointer"
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4915:17:0",
															"memberName": "currentSnapshotId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1061,
															"src": "4907:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1375_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 487,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4933:9:0",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1401,
														"src": "4907:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1375_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1375_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4907:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "4907:37:0"
											},
											{
												"assignments": [
													491
												],
												"declarations": [
													{
														"constant": false,
														"id": 491,
														"mutability": "mutable",
														"name": "currentId",
														"nameLocation": "4959:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 501,
														"src": "4954:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 490,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4954:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 494,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 492,
														"name": "getCurrentSnapshotId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "4971:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4971:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4954:39:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 496,
															"name": "currentId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "5017:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 495,
														"name": "Snapshot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "5008:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5008:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "EmitStatement",
												"src": "5003:24:0"
											},
											{
												"expression": {
													"id": 499,
													"name": "currentId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 491,
													"src": "5044:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 483,
												"id": 500,
												"nodeType": "Return",
												"src": "5037:16:0"
											}
										]
									},
									"functionSelector": "9711715a",
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "snapshot",
									"nameLocation": "4856:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4864:2:0"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "4891:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4891:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4890:6:0"
									},
									"scope": 1031,
									"src": "4847:213:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "5109:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 506,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1359,
																	"src": "5127:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5127:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 510,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "5151:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_FacetToken_$1031",
																			"typeString": "contract FacetToken"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_FacetToken_$1031",
																			"typeString": "contract FacetToken"
																		}
																	],
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5143:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 508,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5143:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5143:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5127:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c792073656c66",
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5158:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2797c884c4585c7b953f669fab85ef8d3021f63627ba9e1cc63545514be0ba14",
																"typeString": "literal_string \"only self\""
															},
															"value": "only self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2797c884c4585c7b953f669fab85ef8d3021f63627ba9e1cc63545514be0ba14",
																"typeString": "literal_string \"only self\""
															}
														],
														"id": 505,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5119:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5119:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "5119:51:0"
											}
										]
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_onlySelf",
									"nameLocation": "5075:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5084:2:0"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5109:0:0"
									},
									"scope": 1031,
									"src": "5066:111:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "5258:576:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 527,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "5276:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5292:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5284:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 528,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5284:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5284:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5276:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661636574546f6b656e3a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5296:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ab0a890e359cdbd3f860cf24e9c85832c3bea7d1c1383610aa87befbc4c7c868",
																"typeString": "literal_string \"FacetToken: transfer from the zero address\""
															},
															"value": "FacetToken: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ab0a890e359cdbd3f860cf24e9c85832c3bea7d1c1383610aa87befbc4c7c868",
																"typeString": "literal_string \"FacetToken: transfer from the zero address\""
															}
														],
														"id": 526,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5268:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5268:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "5268:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 537,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "5359:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5373:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5365:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 538,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5365:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5365:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5359:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661636574546f6b656e3a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5377:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f41e43f7462b41e3a284dc65a850f138b298a54fa33ba018c1e10381c9ba5c35",
																"typeString": "literal_string \"FacetToken: transfer to the zero address\""
															},
															"value": "FacetToken: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f41e43f7462b41e3a284dc65a850f138b298a54fa33ba018c1e10381c9ba5c35",
																"typeString": "literal_string \"FacetToken: transfer to the zero address\""
															}
														],
														"id": 536,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5351:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5351:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "5351:69:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 547,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "5451:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 548,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "5457:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 549,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "5461:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 546,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "5430:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5430:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 551,
												"nodeType": "ExpressionStatement",
												"src": "5430:38:0"
											},
											{
												"assignments": [
													553
												],
												"declarations": [
													{
														"constant": false,
														"id": 553,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5483:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 598,
														"src": "5478:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 552,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5478:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 559,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 554,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "5497:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageToken_$1068_storage_ptr_$",
																	"typeString": "function () pure returns (struct SlotToken.StorageToken storage pointer)"
																}
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5497:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StorageToken_$1068_storage_ptr",
																"typeString": "struct SlotToken.StorageToken storage pointer"
															}
														},
														"id": 556,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5505:8:0",
														"memberName": "balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1044,
														"src": "5497:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 558,
													"indexExpression": {
														"id": 557,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "5514:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5497:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5478:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 561,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 553,
																"src": "5537:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 562,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "5552:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5537:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661636574546f6b656e3a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5560:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dafb281253a5bded7239a128c0b3b124e3ffe1160cab1f3158d94ef33a7dd810",
																"typeString": "literal_string \"FacetToken: transfer amount exceeds balance\""
															},
															"value": "FacetToken: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dafb281253a5bded7239a128c0b3b124e3ffe1160cab1f3158d94ef33a7dd810",
																"typeString": "literal_string \"FacetToken: transfer amount exceeds balance\""
															}
														],
														"id": 560,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5529:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "5529:77:0"
											},
											{
												"id": 585,
												"nodeType": "UncheckedBlock",
												"src": "5616:124:0",
												"statements": [
													{
														"expression": {
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"expression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 567,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1087,
																			"src": "5640:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageToken_$1068_storage_ptr_$",
																				"typeString": "function () pure returns (struct SlotToken.StorageToken storage pointer)"
																			}
																		},
																		"id": 568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5640:7:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StorageToken_$1068_storage_ptr",
																			"typeString": "struct SlotToken.StorageToken storage pointer"
																		}
																	},
																	"id": 569,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5648:8:0",
																	"memberName": "balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1044,
																	"src": "5640:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 571,
																"indexExpression": {
																	"id": 570,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "5657:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5640:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 572,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "5665:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 573,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "5679:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5665:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5640:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 576,
														"nodeType": "ExpressionStatement",
														"src": "5640:45:0"
													},
													{
														"expression": {
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"expression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 577,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1087,
																			"src": "5699:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageToken_$1068_storage_ptr_$",
																				"typeString": "function () pure returns (struct SlotToken.StorageToken storage pointer)"
																			}
																		},
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5699:7:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StorageToken_$1068_storage_ptr",
																			"typeString": "struct SlotToken.StorageToken storage pointer"
																		}
																	},
																	"id": 579,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5707:8:0",
																	"memberName": "balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1044,
																	"src": "5699:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 581,
																"indexExpression": {
																	"id": 580,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "5716:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5699:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 582,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "5723:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5699:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 584,
														"nodeType": "ExpressionStatement",
														"src": "5699:30:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 587,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "5763:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 588,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "5769:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "5773:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 586,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "5754:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5754:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 591,
												"nodeType": "EmitStatement",
												"src": "5749:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 593,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "5810:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 594,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "5816:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 595,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "5820:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 592,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "5790:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5790:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "5790:37:0"
											}
										]
									},
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5192:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5210:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "5202:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5224:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "5216:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5216:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5233:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "5228:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5228:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5201:39:0"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5258:0:0"
									},
									"scope": 1031,
									"src": "5183:651:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 658,
										"nodeType": "Block",
										"src": "5902:374:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 607,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "5920:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5939:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5931:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 608,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5931:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5931:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5920:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661636574546f6b656e3a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5943:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_791925ddecb6f148a0c3b5d735e9ec4592b761e148599530bcae99c22106da8a",
																"typeString": "literal_string \"FacetToken: mint to the zero address\""
															},
															"value": "FacetToken: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_791925ddecb6f148a0c3b5d735e9ec4592b761e148599530bcae99c22106da8a",
																"typeString": "literal_string \"FacetToken: mint to the zero address\""
															}
														],
														"id": 606,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5912:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5912:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 615,
												"nodeType": "ExpressionStatement",
												"src": "5912:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6021:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6013:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 617,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6013:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6013:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 621,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "6025:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 622,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "6034:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 616,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "5992:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5992:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "5992:49:0"
											},
											{
												"expression": {
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 625,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "6051:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageToken_$1068_storage_ptr_$",
																	"typeString": "function () pure returns (struct SlotToken.StorageToken storage pointer)"
																}
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6051:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StorageToken_$1068_storage_ptr",
																"typeString": "struct SlotToken.StorageToken storage pointer"
															}
														},
														"id": 627,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6059:11:0",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1067,
														"src": "6051:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 628,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "6074:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6051:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "6051:29:0"
											},
											{
												"id": 639,
												"nodeType": "UncheckedBlock",
												"src": "6090:70:0",
												"statements": [
													{
														"expression": {
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"expression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 631,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1087,
																			"src": "6114:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageToken_$1068_storage_ptr_$",
																				"typeString": "function () pure returns (struct SlotToken.StorageToken storage pointer)"
																			}
																		},
																		"id": 632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6114:7:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StorageToken_$1068_storage_ptr",
																			"typeString": "struct SlotToken.StorageToken storage pointer"
																		}
																	},
																	"id": 633,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6122:8:0",
																	"memberName": "balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1044,
																	"src": "6114:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 635,
																"indexExpression": {
																	"id": 634,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6131:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "6114:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 636,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "6143:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6114:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 638,
														"nodeType": "ExpressionStatement",
														"src": "6114:35:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6191:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 642,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6183:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 641,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6183:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6183:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "6195:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 646,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "6204:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 640,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "6174:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 648,
												"nodeType": "EmitStatement",
												"src": "6169:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6249:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6241:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 650,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6241:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6241:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 654,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "6253:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 655,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "6262:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 649,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "6221:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6221:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 657,
												"nodeType": "ExpressionStatement",
												"src": "6221:48:0"
											}
										]
									},
									"id": 659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "5849:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5863:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "5855:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5855:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5877:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "5872:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5872:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5854:30:0"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5902:0:0"
									},
									"scope": 1031,
									"src": "5840:436:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "6344:539:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 667,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 661,
																"src": "6362:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6381:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6373:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 668,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6373:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6373:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6362:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661636574546f6b656e3a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6385:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b4b2e984d5504d0a346c9cdddc976f498151d3cac0319e2d2759a6ffd9134c5",
																"typeString": "literal_string \"FacetToken: burn from the zero address\""
															},
															"value": "FacetToken: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b4b2e984d5504d0a346c9cdddc976f498151d3cac0319e2d2759a6ffd9134c5",
																"typeString": "literal_string \"FacetToken: burn from the zero address\""
															}
														],
														"id": 666,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6354:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6354:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "6354:72:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 677,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "6457:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6474:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6466:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 678,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6466:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6466:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 682,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "6478:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 676,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "6436:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6436:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 684,
												"nodeType": "ExpressionStatement",
												"src": "6436:49:0"
											},
											{
												"assignments": [
													686
												],
												"declarations": [
													{
														"constant": false,
														"id": 686,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "6500:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 735,
														"src": "6495:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 685,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6495:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 692,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 687,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "6517:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageToken_$1068_storage_ptr_$",
																	"typeString": "function () pure returns (struct SlotToken.StorageToken storage pointer)"
																}
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6517:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StorageToken_$1068_storage_ptr",
																"typeString": "struct SlotToken.StorageToken storage pointer"
															}
														},
														"id": 689,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6525:8:0",
														"memberName": "balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1044,
														"src": "6517:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 691,
													"indexExpression": {
														"id": 690,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "6534:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6517:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6495:47:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 694,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "6560:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 695,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "6578:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6560:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661636574546f6b656e3a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6586:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b2ef32a2644c26a8e0eb5783eff91b6f383e570e659476654a8d71d6842e21a1",
																"typeString": "literal_string \"FacetToken: burn amount exceeds balance\""
															},
															"value": "FacetToken: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b2ef32a2644c26a8e0eb5783eff91b6f383e570e659476654a8d71d6842e21a1",
																"typeString": "literal_string \"FacetToken: burn amount exceeds balance\""
															}
														],
														"id": 693,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6552:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6552:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "6552:76:0"
											},
											{
												"id": 716,
												"nodeType": "UncheckedBlock",
												"src": "6638:129:0",
												"statements": [
													{
														"expression": {
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"expression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 700,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1087,
																			"src": "6662:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageToken_$1068_storage_ptr_$",
																				"typeString": "function () pure returns (struct SlotToken.StorageToken storage pointer)"
																			}
																		},
																		"id": 701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6662:7:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StorageToken_$1068_storage_ptr",
																			"typeString": "struct SlotToken.StorageToken storage pointer"
																		}
																	},
																	"id": 702,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6670:8:0",
																	"memberName": "balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1044,
																	"src": "6662:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 704,
																"indexExpression": {
																	"id": 703,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "6679:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "6662:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 705,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 686,
																	"src": "6690:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 706,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "6707:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6690:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6662:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 709,
														"nodeType": "ExpressionStatement",
														"src": "6662:51:0"
													},
													{
														"expression": {
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 710,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "6727:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageToken_$1068_storage_ptr_$",
																			"typeString": "function () pure returns (struct SlotToken.StorageToken storage pointer)"
																		}
																	},
																	"id": 711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6727:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StorageToken_$1068_storage_ptr",
																		"typeString": "struct SlotToken.StorageToken storage pointer"
																	}
																},
																"id": 712,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "6735:11:0",
																"memberName": "totalSupply",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1067,
																"src": "6727:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 713,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "6750:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6727:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 715,
														"nodeType": "ExpressionStatement",
														"src": "6727:29:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 718,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "6790:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6807:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6799:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 719,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6799:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6799:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 723,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "6811:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 717,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "6781:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6781:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 725,
												"nodeType": "EmitStatement",
												"src": "6776:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 727,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "6848:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6865:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6857:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 728,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6857:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6857:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 732,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "6869:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 726,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "6828:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "6828:48:0"
											}
										]
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "6291:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6305:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "6297:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6297:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6319:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "6314:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6314:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6296:30:0"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6344:0:0"
									},
									"scope": 1031,
									"src": "6282:601:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "6977:322:0",
										"statements": [
											{
												"assignments": [
													746
												],
												"declarations": [
													{
														"constant": false,
														"id": 746,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6992:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "6987:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 745,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6987:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 751,
												"initialValue": {
													"arguments": [
														{
															"id": 748,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "7021:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "7029:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 747,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "7011:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7011:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6987:50:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 752,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "7051:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7076:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 754,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "7076:4:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 753,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7071:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7071:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 757,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7082:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7071:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7051:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 776,
												"nodeType": "IfStatement",
												"src": "7047:246:0",
												"trueBody": {
													"id": 775,
													"nodeType": "Block",
													"src": "7087:206:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 760,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 746,
																			"src": "7109:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 761,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 742,
																			"src": "7129:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7109:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4661636574546f6b656e3a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7137:36:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d413533332a2b73f3a80856933a14d503815d1b47fe6777fc65ef033fe4e892a",
																			"typeString": "literal_string \"FacetToken: insufficient allowance\""
																		},
																		"value": "FacetToken: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_d413533332a2b73f3a80856933a14d503815d1b47fe6777fc65ef033fe4e892a",
																			"typeString": "literal_string \"FacetToken: insufficient allowance\""
																		}
																	],
																	"id": 759,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7101:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7101:73:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 765,
															"nodeType": "ExpressionStatement",
															"src": "7101:73:0"
														},
														{
															"id": 774,
															"nodeType": "UncheckedBlock",
															"src": "7188:95:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 767,
																				"name": "owner_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 738,
																				"src": "7225:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 768,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 740,
																				"src": "7233:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 771,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 769,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "7242:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 770,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 742,
																					"src": "7261:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7242:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 766,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 824,
																			"src": "7216:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7216:52:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 773,
																	"nodeType": "ExpressionStatement",
																	"src": "7216:52:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "6898:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "owner_",
												"nameLocation": "6922:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "6914:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6914:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "6930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6952:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "6947:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6947:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6913:46:0"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6977:0:0"
									},
									"scope": 1031,
									"src": "6889:410:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "7386:276:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 788,
																"name": "owner_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "7404:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7422:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7414:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 789,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7414:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 792,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7414:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7404:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661636574546f6b656e3a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7426:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_103eb3ec2d22cec9bff15c1a8d78bdd8202785596cba6cd8b051514c7b67cc94",
																"typeString": "literal_string \"FacetToken: approve from the zero address\""
															},
															"value": "FacetToken: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_103eb3ec2d22cec9bff15c1a8d78bdd8202785596cba6cd8b051514c7b67cc94",
																"typeString": "literal_string \"FacetToken: approve from the zero address\""
															}
														],
														"id": 787,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7396:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7396:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "7396:74:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 798,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 782,
																"src": "7488:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7507:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7499:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 799,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7499:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7499:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7488:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661636574546f6b656e3a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7511:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc53681508223d4184d95bb18bc55963fe937a15bb1553a915c4d9da65095b3d",
																"typeString": "literal_string \"FacetToken: approve to the zero address\""
															},
															"value": "FacetToken: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc53681508223d4184d95bb18bc55963fe937a15bb1553a915c4d9da65095b3d",
																"typeString": "literal_string \"FacetToken: approve to the zero address\""
															}
														],
														"id": 797,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7480:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7480:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "7480:73:0"
											},
											{
												"expression": {
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 807,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "7563:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageToken_$1068_storage_ptr_$",
																			"typeString": "function () pure returns (struct SlotToken.StorageToken storage pointer)"
																		}
																	},
																	"id": 808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7563:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StorageToken_$1068_storage_ptr",
																		"typeString": "struct SlotToken.StorageToken storage pointer"
																	}
																},
																"id": 809,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7571:10:0",
																"memberName": "allowances",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1050,
																"src": "7563:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 811,
															"indexExpression": {
																"id": 810,
																"name": "owner_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "7582:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7563:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 813,
														"indexExpression": {
															"id": 812,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "7590:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7563:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 814,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "7601:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7563:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "7563:44:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 818,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "7631:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 819,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "7639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 820,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "7648:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 817,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "7622:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7622:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 822,
												"nodeType": "EmitStatement",
												"src": "7617:38:0"
											}
										]
									},
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "7314:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "owner_",
												"nameLocation": "7331:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "7323:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7323:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7347:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "7339:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7339:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7361:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "7356:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7356:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7322:46:0"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7386:0:0"
									},
									"scope": 1031,
									"src": "7305:357:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "7754:355:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 833,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "7768:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7784:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7776:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 834,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7776:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7776:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7768:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 847,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "7891:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7905:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7897:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 848,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7897:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7897:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "7891:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 869,
														"nodeType": "Block",
														"src": "8010:93:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 862,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "8047:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 861,
																		"name": "_updateAccountSnapshot",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "8024:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																			"typeString": "function (address)"
																		}
																	},
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8024:28:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 864,
																"nodeType": "ExpressionStatement",
																"src": "8024:28:0"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 866,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 828,
																			"src": "8089:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 865,
																		"name": "_updateAccountSnapshot",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "8066:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																			"typeString": "function (address)"
																		}
																	},
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8066:26:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 868,
																"nodeType": "ExpressionStatement",
																"src": "8066:26:0"
															}
														]
													},
													"id": 870,
													"nodeType": "IfStatement",
													"src": "7887:216:0",
													"trueBody": {
														"id": 860,
														"nodeType": "Block",
														"src": "7909:95:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 854,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "7946:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 853,
																		"name": "_updateAccountSnapshot",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "7923:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																			"typeString": "function (address)"
																		}
																	},
																	"id": 855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7923:28:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 856,
																"nodeType": "ExpressionStatement",
																"src": "7923:28:0"
															},
															{
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 857,
																		"name": "_updateTotalSupplySnapshot",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 967,
																		"src": "7965:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																			"typeString": "function ()"
																		}
																	},
																	"id": 858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7965:28:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 859,
																"nodeType": "ExpressionStatement",
																"src": "7965:28:0"
															}
														]
													}
												},
												"id": 871,
												"nodeType": "IfStatement",
												"src": "7764:339:0",
												"trueBody": {
													"id": 846,
													"nodeType": "Block",
													"src": "7788:93:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 840,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 828,
																		"src": "7825:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 839,
																	"name": "_updateAccountSnapshot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "7802:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7802:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 842,
															"nodeType": "ExpressionStatement",
															"src": "7802:26:0"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 843,
																	"name": "_updateTotalSupplySnapshot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "7842:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7842:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 845,
															"nodeType": "ExpressionStatement",
															"src": "7842:28:0"
														}
													]
												}
											}
										]
									},
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "7677:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7706:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "7698:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7720:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "7712:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7729:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "7724:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7724:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7697:39:0"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7754:0:0"
									},
									"scope": 1031,
									"src": "7668:441:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "8200:2:0",
										"statements": []
									},
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "8124:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8152:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "8144:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8144:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8166:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "8158:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8158:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8175:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "8170:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8170:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8143:39:0"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8200:0:0"
									},
									"scope": 1031,
									"src": "8115:87:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "8306:366:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 896,
																"name": "snapshotId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 885,
																"src": "8324:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8337:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8324:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661636574546f6b656e3a2069642069732030",
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8340:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d2c43538ee66f7e067c5d7820b5e577a2cf536bc1bc6029d1b0c588e999b493",
																"typeString": "literal_string \"FacetToken: id is 0\""
															},
															"value": "FacetToken: id is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3d2c43538ee66f7e067c5d7820b5e577a2cf536bc1bc6029d1b0c588e999b493",
																"typeString": "literal_string \"FacetToken: id is 0\""
															}
														],
														"id": 895,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8316:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8316:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "8316:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 903,
																"name": "snapshotId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 885,
																"src": "8380:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 904,
																	"name": "getCurrentSnapshotId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "8394:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8394:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8380:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661636574546f6b656e3a206e6f6e6578697374656e74206964",
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8418:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c41b46843efcd21b2abb1c8097095433b7f9de7ade295c7c4187f3a37b380230",
																"typeString": "literal_string \"FacetToken: nonexistent id\""
															},
															"value": "FacetToken: nonexistent id"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c41b46843efcd21b2abb1c8097095433b7f9de7ade295c7c4187f3a37b380230",
																"typeString": "literal_string \"FacetToken: nonexistent id\""
															}
														],
														"id": 902,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8372:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8372:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "8372:75:0"
											},
											{
												"assignments": [
													911
												],
												"declarations": [
													{
														"constant": false,
														"id": 911,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "8462:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 937,
														"src": "8457:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 910,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8457:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 917,
												"initialValue": {
													"arguments": [
														{
															"id": 915,
															"name": "snapshotId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "8499:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 912,
																"name": "snapshots",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "8470:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Snapshots_$1075_storage_ptr",
																	"typeString": "struct SlotToken.Snapshots storage pointer"
																}
															},
															"id": 913,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8480:3:0",
															"memberName": "ids",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1071,
															"src": "8470:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8484:14:0",
														"memberName": "findUpperBound",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1283,
														"src": "8470:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256) view returns (uint256)"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8470:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8457:53:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 918,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "8524:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 919,
																"name": "snapshots",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "8533:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Snapshots_$1075_storage_ptr",
																	"typeString": "struct SlotToken.Snapshots storage pointer"
																}
															},
															"id": 920,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8543:3:0",
															"memberName": "ids",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1071,
															"src": "8533:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8547:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8533:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8524:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 935,
													"nodeType": "Block",
													"src": "8603:63:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8625:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"baseExpression": {
																			"expression": {
																				"id": 929,
																				"name": "snapshots",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 888,
																				"src": "8631:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Snapshots_$1075_storage_ptr",
																					"typeString": "struct SlotToken.Snapshots storage pointer"
																				}
																			},
																			"id": 930,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8641:6:0",
																			"memberName": "values",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1074,
																			"src": "8631:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																				"typeString": "uint256[] storage ref"
																			}
																		},
																		"id": 932,
																		"indexExpression": {
																			"id": 931,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 911,
																			"src": "8648:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8631:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 933,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8624:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																	"typeString": "tuple(bool,uint256)"
																}
															},
															"functionReturnParameters": 894,
															"id": 934,
															"nodeType": "Return",
															"src": "8617:38:0"
														}
													]
												},
												"id": 936,
												"nodeType": "IfStatement",
												"src": "8520:146:0",
												"trueBody": {
													"id": 927,
													"nodeType": "Block",
													"src": "8555:42:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8577:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8584:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 925,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8576:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 894,
															"id": 926,
															"nodeType": "Return",
															"src": "8569:17:0"
														}
													]
												}
											}
										]
									},
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_valueAt",
									"nameLocation": "8217:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "snapshotId",
												"nameLocation": "8231:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "8226:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8226:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "snapshots",
												"nameLocation": "8261:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "8243:27:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Snapshots_$1075_storage_ptr",
													"typeString": "struct SlotToken.Snapshots"
												},
												"typeName": {
													"id": 887,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 886,
														"name": "Snapshots",
														"nameLocations": [
															"8243:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1075,
														"src": "8243:9:0"
													},
													"referencedDeclaration": 1075,
													"src": "8243:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Snapshots_$1075_storage_ptr",
														"typeString": "struct SlotToken.Snapshots"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8225:46:0"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "8294:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 890,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8294:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "8300:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8300:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8293:12:0"
									},
									"scope": 1031,
									"src": "8208:464:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "8735:89:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 944,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "8761:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageToken_$1068_storage_ptr_$",
																			"typeString": "function () pure returns (struct SlotToken.StorageToken storage pointer)"
																		}
																	},
																	"id": 945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8761:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StorageToken_$1068_storage_ptr",
																		"typeString": "struct SlotToken.StorageToken storage pointer"
																	}
																},
																"id": 946,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8769:18:0",
																"memberName": "snapshotsOfBalance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1055,
																"src": "8761:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Snapshots_$1075_storage_$",
																	"typeString": "mapping(address => struct SlotToken.Snapshots storage ref)"
																}
															},
															"id": 948,
															"indexExpression": {
																"id": 947,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "8788:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8761:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Snapshots_$1075_storage",
																"typeString": "struct SlotToken.Snapshots storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 950,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "8808:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 949,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 270,
																"src": "8798:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8798:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Snapshots_$1075_storage",
																"typeString": "struct SlotToken.Snapshots storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 943,
														"name": "_updateSnapshot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "8745:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Snapshots_$1075_storage_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (struct SlotToken.Snapshots storage pointer,uint256)"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8745:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "8745:72:0"
											}
										]
									},
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateAccountSnapshot",
									"nameLocation": "8687:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8718:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "8710:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8710:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8709:17:0"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8735:0:0"
									},
									"scope": 1031,
									"src": "8678:146:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "8876:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 959,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "8902:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageToken_$1068_storage_ptr_$",
																		"typeString": "function () pure returns (struct SlotToken.StorageToken storage pointer)"
																	}
																},
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8902:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StorageToken_$1068_storage_ptr",
																	"typeString": "struct SlotToken.StorageToken storage pointer"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8910:22:0",
															"memberName": "snapshotsOfTotalSupply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1058,
															"src": "8902:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Snapshots_$1075_storage",
																"typeString": "struct SlotToken.Snapshots storage ref"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 962,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "8934:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8934:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Snapshots_$1075_storage",
																"typeString": "struct SlotToken.Snapshots storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 958,
														"name": "_updateSnapshot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "8886:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Snapshots_$1075_storage_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (struct SlotToken.Snapshots storage pointer,uint256)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8886:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "8886:62:0"
											}
										]
									},
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateTotalSupplySnapshot",
									"nameLocation": "8839:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8865:2:0"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8876:0:0"
									},
									"scope": 1031,
									"src": "8830:125:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "9042:216:0",
										"statements": [
											{
												"assignments": [
													976
												],
												"declarations": [
													{
														"constant": false,
														"id": 976,
														"mutability": "mutable",
														"name": "currentId",
														"nameLocation": "9057:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1004,
														"src": "9052:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 975,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9052:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 979,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 977,
														"name": "getCurrentSnapshotId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "9069:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9069:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9052:39:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 981,
																	"name": "snapshots",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "9121:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Snapshots_$1075_storage_ptr",
																		"typeString": "struct SlotToken.Snapshots storage pointer"
																	}
																},
																"id": 982,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9131:3:0",
																"memberName": "ids",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1071,
																"src": "9121:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																	"typeString": "uint256[] storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																	"typeString": "uint256[] storage ref"
																}
															],
															"id": 980,
															"name": "_lastSnapshotId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "9105:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_storage_ptr_$returns$_t_uint256_$",
																"typeString": "function (uint256[] storage pointer) view returns (uint256)"
															}
														},
														"id": 983,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9105:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 984,
														"name": "currentId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "9138:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9105:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1003,
												"nodeType": "IfStatement",
												"src": "9101:151:0",
												"trueBody": {
													"id": 1002,
													"nodeType": "Block",
													"src": "9149:103:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 991,
																		"name": "currentId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "9182:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 986,
																			"name": "snapshots",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 970,
																			"src": "9163:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Snapshots_$1075_storage_ptr",
																				"typeString": "struct SlotToken.Snapshots storage pointer"
																			}
																		},
																		"id": 989,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9173:3:0",
																		"memberName": "ids",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1071,
																		"src": "9163:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9177:4:0",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "9163:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256)"
																	}
																},
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9163:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 993,
															"nodeType": "ExpressionStatement",
															"src": "9163:29:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 999,
																		"name": "currentValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 972,
																		"src": "9228:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 994,
																			"name": "snapshots",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 970,
																			"src": "9206:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Snapshots_$1075_storage_ptr",
																				"typeString": "struct SlotToken.Snapshots storage pointer"
																			}
																		},
																		"id": 997,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9216:6:0",
																		"memberName": "values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1074,
																		"src": "9206:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9223:4:0",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "9206:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256)"
																	}
																},
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9206:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1001,
															"nodeType": "ExpressionStatement",
															"src": "9206:35:0"
														}
													]
												}
											}
										]
									},
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateSnapshot",
									"nameLocation": "8970:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "snapshots",
												"nameLocation": "9004:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "8986:27:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Snapshots_$1075_storage_ptr",
													"typeString": "struct SlotToken.Snapshots"
												},
												"typeName": {
													"id": 969,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 968,
														"name": "Snapshots",
														"nameLocations": [
															"8986:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1075,
														"src": "8986:9:0"
													},
													"referencedDeclaration": 1075,
													"src": "8986:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Snapshots_$1075_storage_ptr",
														"typeString": "struct SlotToken.Snapshots"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "currentValue",
												"nameLocation": "9020:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "9015:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9015:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8985:48:0"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9042:0:0"
									},
									"scope": 1031,
									"src": "8961:297:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "9337:127:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1013,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "9351:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9355:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9351:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9365:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9351:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1027,
													"nodeType": "Block",
													"src": "9407:51:0",
													"statements": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1020,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "9428:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[] storage pointer"
																	}
																},
																"id": 1025,
																"indexExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1021,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "9432:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																				"typeString": "uint256[] storage pointer"
																			}
																		},
																		"id": 1022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9436:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9432:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9445:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9432:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9428:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1012,
															"id": 1026,
															"nodeType": "Return",
															"src": "9421:26:0"
														}
													]
												},
												"id": 1028,
												"nodeType": "IfStatement",
												"src": "9347:111:0",
												"trueBody": {
													"id": 1019,
													"nodeType": "Block",
													"src": "9368:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9389:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1012,
															"id": 1018,
															"nodeType": "Return",
															"src": "9382:8:0"
														}
													]
												}
											}
										]
									},
									"id": 1030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_lastSnapshotId",
									"nameLocation": "9273:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9304:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "9289:18:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1006,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "9289:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1007,
													"nodeType": "ArrayTypeName",
													"src": "9289:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9288:20:0"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "9331:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9331:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9330:6:0"
									},
									"scope": 1031,
									"src": "9264:200:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1032,
							"src": "1116:8350:0",
							"usedErrors": []
						}
					],
					"src": "32:9435:0"
				},
				"id": 0
			},
			"diamonds/facets/slots/SlotToken.sol": {
				"ast": {
					"absolutePath": "diamonds/facets/slots/SlotToken.sol",
					"exportedSymbols": {
						"Arrays": [
							1347
						],
						"Counters": [
							1443
						],
						"Math": [
							2577
						],
						"SlotToken": [
							1088
						],
						"StorageSlot": [
							1553
						]
					},
					"id": 1089,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1033,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "imports/openzeppelin/utils/Arrays.sol",
							"file": "imports/openzeppelin/utils/Arrays.sol",
							"id": 1034,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1089,
							"sourceUnit": 1348,
							"src": "56:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/openzeppelin/utils/Counters.sol",
							"file": "imports/openzeppelin/utils/Counters.sol",
							"id": 1035,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1089,
							"sourceUnit": 1444,
							"src": "104:49:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SlotToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1088,
							"linearizedBaseContracts": [
								1088
							],
							"name": "SlotToken",
							"nameLocation": "164:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1040,
									"mutability": "constant",
									"name": "_TOKEN",
									"nameLocation": "206:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 1088,
									"src": "180:58:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1036,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "180:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "736c6f742e746f6b656e",
												"id": 1038,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "225:12:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_667c0cf071c712f94f97f65a859cdaa470fe424825756c2cae5a4d1adcee538b",
													"typeString": "literal_string \"slot.token\""
												},
												"value": "slot.token"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_667c0cf071c712f94f97f65a859cdaa470fe424825756c2cae5a4d1adcee538b",
													"typeString": "literal_string \"slot.token\""
												}
											],
											"id": 1037,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "215:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1039,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "215:23:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "SlotToken.StorageToken",
									"id": 1068,
									"members": [
										{
											"constant": false,
											"id": 1044,
											"mutability": "mutable",
											"name": "balances",
											"nameLocation": "300:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 1068,
											"src": "275:33:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 1043,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "283:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "275:24:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1042,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "294:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1050,
											"mutability": "mutable",
											"name": "allowances",
											"nameLocation": "363:10:1",
											"nodeType": "VariableDeclaration",
											"scope": 1068,
											"src": "318:55:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(address => uint256))"
											},
											"typeName": {
												"id": 1049,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "318:44:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1048,
													"keyName": "",
													"keyNameLocation": "-1:-1:-1",
													"keyType": {
														"id": 1046,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "345:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "337:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
														"typeString": "mapping(address => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 1047,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "356:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1055,
											"mutability": "mutable",
											"name": "snapshotsOfBalance",
											"nameLocation": "413:18:1",
											"nodeType": "VariableDeclaration",
											"scope": 1068,
											"src": "383:48:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Snapshots_$1075_storage_$",
												"typeString": "mapping(address => struct SlotToken.Snapshots)"
											},
											"typeName": {
												"id": 1054,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "383:29:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Snapshots_$1075_storage_$",
													"typeString": "mapping(address => struct SlotToken.Snapshots)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1053,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1052,
														"name": "Snapshots",
														"nameLocations": [
															"402:9:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1075,
														"src": "402:9:1"
													},
													"referencedDeclaration": 1075,
													"src": "402:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Snapshots_$1075_storage_ptr",
														"typeString": "struct SlotToken.Snapshots"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1058,
											"mutability": "mutable",
											"name": "snapshotsOfTotalSupply",
											"nameLocation": "451:22:1",
											"nodeType": "VariableDeclaration",
											"scope": 1068,
											"src": "441:32:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Snapshots_$1075_storage_ptr",
												"typeString": "struct SlotToken.Snapshots"
											},
											"typeName": {
												"id": 1057,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1056,
													"name": "Snapshots",
													"nameLocations": [
														"441:9:1"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1075,
													"src": "441:9:1"
												},
												"referencedDeclaration": 1075,
												"src": "441:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Snapshots_$1075_storage_ptr",
													"typeString": "struct SlotToken.Snapshots"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1061,
											"mutability": "mutable",
											"name": "currentSnapshotId",
											"nameLocation": "500:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 1068,
											"src": "483:34:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Counter_$1375_storage_ptr",
												"typeString": "struct Counters.Counter"
											},
											"typeName": {
												"id": 1060,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1059,
													"name": "Counters.Counter",
													"nameLocations": [
														"483:8:1",
														"492:7:1"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1375,
													"src": "483:16:1"
												},
												"referencedDeclaration": 1375,
												"src": "483:16:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1375_storage_ptr",
													"typeString": "struct Counters.Counter"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1063,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "534:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 1068,
											"src": "527:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1062,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "527:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1065,
											"mutability": "mutable",
											"name": "symbol",
											"nameLocation": "555:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 1068,
											"src": "548:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1064,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "548:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1067,
											"mutability": "mutable",
											"name": "totalSupply",
											"nameLocation": "576:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 1068,
											"src": "571:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1066,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "571:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StorageToken",
									"nameLocation": "252:12:1",
									"nodeType": "StructDefinition",
									"scope": 1088,
									"src": "245:349:1",
									"visibility": "public"
								},
								{
									"canonicalName": "SlotToken.Snapshots",
									"id": 1075,
									"members": [
										{
											"constant": false,
											"id": 1071,
											"mutability": "mutable",
											"name": "ids",
											"nameLocation": "634:3:1",
											"nodeType": "VariableDeclaration",
											"scope": 1075,
											"src": "627:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 1069,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "627:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1070,
												"nodeType": "ArrayTypeName",
												"src": "627:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1074,
											"mutability": "mutable",
											"name": "values",
											"nameLocation": "654:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 1075,
											"src": "647:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 1072,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "647:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1073,
												"nodeType": "ArrayTypeName",
												"src": "647:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Snapshots",
									"nameLocation": "607:9:1",
									"nodeType": "StructDefinition",
									"scope": 1088,
									"src": "600:67:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1086,
										"nodeType": "Block",
										"src": "745:102:1",
										"statements": [
											{
												"assignments": [
													1082
												],
												"declarations": [
													{
														"constant": false,
														"id": 1082,
														"mutability": "mutable",
														"name": "location",
														"nameLocation": "763:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 1086,
														"src": "755:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1081,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "755:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1084,
												"initialValue": {
													"id": 1083,
													"name": "_TOKEN",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1040,
													"src": "774:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "755:25:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "799:42:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "813:18:1",
															"value": {
																"name": "location",
																"nodeType": "YulIdentifier",
																"src": "823:8:1"
															},
															"variableNames": [
																{
																	"name": "s.slot",
																	"nodeType": "YulIdentifier",
																	"src": "813:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1082,
														"isOffset": false,
														"isSlot": false,
														"src": "823:8:1",
														"valueSize": 1
													},
													{
														"declaration": 1079,
														"isOffset": false,
														"isSlot": true,
														"src": "813:6:1",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1085,
												"nodeType": "InlineAssembly",
												"src": "790:51:1"
											}
										]
									},
									"id": 1087,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nameLocation": "682:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "687:2:1"
									},
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "742:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "721:22:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StorageToken_$1068_storage_ptr",
													"typeString": "struct SlotToken.StorageToken"
												},
												"typeName": {
													"id": 1078,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1077,
														"name": "StorageToken",
														"nameLocations": [
															"721:12:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1068,
														"src": "721:12:1"
													},
													"referencedDeclaration": 1068,
													"src": "721:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StorageToken_$1068_storage_ptr",
														"typeString": "struct SlotToken.StorageToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "720:24:1"
									},
									"scope": 1088,
									"src": "673:174:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1089,
							"src": "155:694:1",
							"usedErrors": []
						}
					],
					"src": "32:817:1"
				},
				"id": 1
			},
			"imports/openzeppelin/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "imports/openzeppelin/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1166
						]
					},
					"id": 1167,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1090,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1091,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1166,
							"linearizedBaseContracts": [
								1166
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1100,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1109,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 1110,
										"nodeType": "StructuredDocumentation",
										"src": "704:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 1166,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "836:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1123,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "932:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:2"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "972:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:2"
									},
									"scope": 1166,
									"src": "913:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1124,
										"nodeType": "StructuredDocumentation",
										"src": "987:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1133,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1203:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1220:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "1212:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1232:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "1224:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1211:28:2"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "1258:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1130,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1258:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1257:6:2"
									},
									"scope": 1166,
									"src": "1194:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1134,
										"nodeType": "StructuredDocumentation",
										"src": "1270:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1143,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1548:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1566:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1558:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1581:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1573:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1573:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1557:32:2"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1613:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:9:2"
									},
									"scope": 1166,
									"src": "1539:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "1628:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2284:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2300:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "2292:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2292:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2317:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "2309:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2309:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2291:33:2"
									},
									"returnParameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "2343:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1150,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2343:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2342:6:2"
									},
									"scope": 1166,
									"src": "2275:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1154,
										"nodeType": "StructuredDocumentation",
										"src": "2355:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1165,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2656:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2677:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "2669:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2691:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "2683:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2703:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "2695:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2668:42:2"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "2729:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1162,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2729:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2728:6:2"
									},
									"scope": 1166,
									"src": "2647:88:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1167,
							"src": "203:2534:2",
							"usedErrors": []
						}
					],
					"src": "106:2632:2"
				},
				"id": 2
			},
			"imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1166
						],
						"IERC20Metadata": [
							1191
						]
					},
					"id": 1192,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1168,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:3"
						},
						{
							"absolutePath": "imports/openzeppelin/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1169,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1192,
							"sourceUnit": 1167,
							"src": "136:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1171,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1166,
										"src": "306:6:3"
									},
									"id": 1172,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1170,
								"nodeType": "StructuredDocumentation",
								"src": "161:116:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1191,
							"linearizedBaseContracts": [
								1191,
								1166
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1173,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1178,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 1191,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1181,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 1191,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1185,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1187,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 1191,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1192,
							"src": "278:405:3",
							"usedErrors": []
						}
					],
					"src": "110:574:3"
				},
				"id": 3
			},
			"imports/openzeppelin/utils/Arrays.sol": {
				"ast": {
					"absolutePath": "imports/openzeppelin/utils/Arrays.sol",
					"exportedSymbols": {
						"Arrays": [
							1347
						],
						"Math": [
							2577
						],
						"StorageSlot": [
							1553
						]
					},
					"id": 1348,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1193,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:4"
						},
						{
							"absolutePath": "imports/openzeppelin/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 1194,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1348,
							"sourceUnit": 1554,
							"src": "126:27:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/openzeppelin/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1195,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1348,
							"sourceUnit": 2578,
							"src": "154:25:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arrays",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1196,
								"nodeType": "StructuredDocumentation",
								"src": "181:63:4",
								"text": " @dev Collection of functions related to array types."
							},
							"fullyImplemented": true,
							"id": 1347,
							"linearizedBaseContracts": [
								1347
							],
							"name": "Arrays",
							"nameLocation": "253:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1199,
									"libraryName": {
										"id": 1197,
										"name": "StorageSlot",
										"nameLocations": [
											"272:11:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1553,
										"src": "272:11:4"
									},
									"nodeType": "UsingForDirective",
									"src": "266:30:4",
									"typeName": {
										"id": 1198,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "288:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1282,
										"nodeType": "Block",
										"src": "812:834:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1210,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "826:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 1211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "832:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "826:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "842:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "826:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1217,
												"nodeType": "IfStatement",
												"src": "822:56:4",
												"trueBody": {
													"id": 1216,
													"nodeType": "Block",
													"src": "845:33:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "866:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1209,
															"id": 1215,
															"nodeType": "Return",
															"src": "859:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													1219
												],
												"declarations": [
													{
														"constant": false,
														"id": 1219,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "896:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 1282,
														"src": "888:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1218,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "888:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1221,
												"initialValue": {
													"hexValue": "30",
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "902:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "888:15:4"
											},
											{
												"assignments": [
													1223
												],
												"declarations": [
													{
														"constant": false,
														"id": 1223,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "921:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1282,
														"src": "913:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1222,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "913:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1226,
												"initialValue": {
													"expression": {
														"id": 1224,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1203,
														"src": "928:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[] storage pointer"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "934:6:4",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "928:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "913:27:4"
											},
											{
												"body": {
													"id": 1258,
													"nodeType": "Block",
													"src": "970:415:4",
													"statements": [
														{
															"assignments": [
																1231
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1231,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "992:3:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1258,
																	"src": "984:11:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1230,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "984:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1237,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1234,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1219,
																		"src": "1011:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1235,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1223,
																		"src": "1016:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1232,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2577,
																		"src": "998:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2577_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1003:7:4",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1777,
																	"src": "998:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "998:23:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "984:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1239,
																				"name": "array",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1203,
																				"src": "1251:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				}
																			},
																			{
																				"id": 1240,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1231,
																				"src": "1258:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1238,
																			"name": "unsafeAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1304,
																				1325,
																				1346
																			],
																			"referencedDeclaration": 1346,
																			"src": "1238:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1458_storage_ptr_$",
																				"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																			}
																		},
																		"id": 1241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1238:24:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Uint256Slot_$1458_storage_ptr",
																			"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																		}
																	},
																	"id": 1242,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1263:5:4",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1457,
																	"src": "1238:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1243,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1205,
																	"src": "1271:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1238:40:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1256,
																"nodeType": "Block",
																"src": "1329:46:4",
																"statements": [
																	{
																		"expression": {
																			"id": 1254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1250,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1219,
																				"src": "1347:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1253,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1251,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1231,
																					"src": "1353:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1252,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1359:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "1353:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1347:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1255,
																		"nodeType": "ExpressionStatement",
																		"src": "1347:13:4"
																	}
																]
															},
															"id": 1257,
															"nodeType": "IfStatement",
															"src": "1234:141:4",
															"trueBody": {
																"id": 1249,
																"nodeType": "Block",
																"src": "1280:43:4",
																"statements": [
																	{
																		"expression": {
																			"id": 1247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1245,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1223,
																				"src": "1298:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1246,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1231,
																				"src": "1305:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1298:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1248,
																		"nodeType": "ExpressionStatement",
																		"src": "1298:10:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1227,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "958:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1228,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "964:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "958:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1259,
												"nodeType": "WhileStatement",
												"src": "951:434:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1260,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "1502:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1508:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1502:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1264,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1203,
																		"src": "1526:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1265,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "1533:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1539:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1533:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1263,
																	"name": "unsafeAccess",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1304,
																		1325,
																		1346
																	],
																	"referencedDeclaration": 1346,
																	"src": "1513:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1458_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																	}
																},
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1513:28:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Uint256Slot_$1458_storage_ptr",
																	"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																}
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1542:5:4",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1457,
															"src": "1513:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1270,
															"name": "element",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "1551:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1513:45:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1502:56:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1280,
													"nodeType": "Block",
													"src": "1605:35:4",
													"statements": [
														{
															"expression": {
																"id": 1278,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "1626:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1209,
															"id": 1279,
															"nodeType": "Return",
															"src": "1619:10:4"
														}
													]
												},
												"id": 1281,
												"nodeType": "IfStatement",
												"src": "1498:142:4",
												"trueBody": {
													"id": 1277,
													"nodeType": "Block",
													"src": "1560:39:4",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1273,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1219,
																	"src": "1581:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1587:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1581:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1209,
															"id": 1276,
															"nodeType": "Return",
															"src": "1574:14:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "302:407:4",
										"text": " @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."
									},
									"id": 1283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findUpperBound",
									"nameLocation": "723:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "756:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "738:23:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1201,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "738:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1202,
													"nodeType": "ArrayTypeName",
													"src": "738:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "771:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "763:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "763:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:42:4"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "803:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:9:4"
									},
									"scope": 1347,
									"src": "714:932:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1303,
										"nodeType": "Block",
										"src": "1962:459:4",
										"statements": [
											{
												"assignments": [
													1296
												],
												"declarations": [
													{
														"constant": false,
														"id": 1296,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "1980:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1303,
														"src": "1972:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1295,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1972:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1297,
												"nodeType": "VariableDeclarationStatement",
												"src": "1972:12:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2285:92:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2306:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nodeType": "YulIdentifier",
																		"src": "2309:8:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2299:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2299:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2331:36:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2353:1:4",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2356:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "2343:9:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2343:18:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2363:3:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2339:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2339:28:4"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nodeType": "YulIdentifier",
																	"src": "2331:4:4"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1287,
														"isOffset": false,
														"isSlot": true,
														"src": "2309:8:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1289,
														"isOffset": false,
														"isSlot": false,
														"src": "2363:3:4",
														"valueSize": 1
													},
													{
														"declaration": 1296,
														"isOffset": false,
														"isSlot": false,
														"src": "2331:4:4",
														"valueSize": 1
													}
												],
												"id": 1298,
												"nodeType": "InlineAssembly",
												"src": "2276:101:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1299,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "2393:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2398:14:4",
														"memberName": "getAddressSlot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1475,
														"src": "2393:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1449_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2393:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1449_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot storage pointer"
													}
												},
												"functionReturnParameters": 1294,
												"id": 1302,
												"nodeType": "Return",
												"src": "2386:28:4"
											}
										]
									},
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "1652:191:4",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "1857:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "1888:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "1870:21:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1285,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1870:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1286,
													"nodeType": "ArrayTypeName",
													"src": "1870:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "1901:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "1893:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1893:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1869:36:4"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "1929:31:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1449_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1292,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1291,
														"name": "StorageSlot.AddressSlot",
														"nameLocations": [
															"1929:11:4",
															"1941:11:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1449,
														"src": "1929:23:4"
													},
													"referencedDeclaration": 1449,
													"src": "1929:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1449_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1928:33:4"
									},
									"scope": 1347,
									"src": "1848:573:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "2737:459:4",
										"statements": [
											{
												"assignments": [
													1317
												],
												"declarations": [
													{
														"constant": false,
														"id": 1317,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2755:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1324,
														"src": "2747:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1316,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2747:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1318,
												"nodeType": "VariableDeclarationStatement",
												"src": "2747:12:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3060:92:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3081:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nodeType": "YulIdentifier",
																		"src": "3084:8:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3074:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3074:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3074:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3106:36:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3128:1:4",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3131:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "3118:9:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3118:18:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3138:3:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3114:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3114:28:4"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nodeType": "YulIdentifier",
																	"src": "3106:4:4"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1308,
														"isOffset": false,
														"isSlot": true,
														"src": "3084:8:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1310,
														"isOffset": false,
														"isSlot": false,
														"src": "3138:3:4",
														"valueSize": 1
													},
													{
														"declaration": 1317,
														"isOffset": false,
														"isSlot": false,
														"src": "3106:4:4",
														"valueSize": 1
													}
												],
												"id": 1319,
												"nodeType": "InlineAssembly",
												"src": "3051:101:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1320,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "3168:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3173:14:4",
														"memberName": "getBytes32Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1497,
														"src": "3168:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$1455_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1455_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot storage pointer"
													}
												},
												"functionReturnParameters": 1315,
												"id": 1323,
												"nodeType": "Return",
												"src": "3161:28:4"
											}
										]
									},
									"documentation": {
										"id": 1305,
										"nodeType": "StructuredDocumentation",
										"src": "2427:191:4",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "2632:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "2663:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "2645:21:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1306,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2645:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1307,
													"nodeType": "ArrayTypeName",
													"src": "2645:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "2676:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "2668:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2644:36:4"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "2704:31:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1455_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1313,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1312,
														"name": "StorageSlot.Bytes32Slot",
														"nameLocations": [
															"2704:11:4",
															"2716:11:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1455,
														"src": "2704:23:4"
													},
													"referencedDeclaration": 1455,
													"src": "2704:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1455_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:33:4"
									},
									"scope": 1347,
									"src": "2623:573:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1345,
										"nodeType": "Block",
										"src": "3512:459:4",
										"statements": [
											{
												"assignments": [
													1338
												],
												"declarations": [
													{
														"constant": false,
														"id": 1338,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "3530:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1345,
														"src": "3522:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1337,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3522:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1339,
												"nodeType": "VariableDeclarationStatement",
												"src": "3522:12:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3835:92:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3856:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nodeType": "YulIdentifier",
																		"src": "3859:8:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3849:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3849:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3849:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3881:36:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3903:1:4",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3906:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "3893:9:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3893:18:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3913:3:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3889:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3889:28:4"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nodeType": "YulIdentifier",
																	"src": "3881:4:4"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1329,
														"isOffset": false,
														"isSlot": true,
														"src": "3859:8:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1331,
														"isOffset": false,
														"isSlot": false,
														"src": "3913:3:4",
														"valueSize": 1
													},
													{
														"declaration": 1338,
														"isOffset": false,
														"isSlot": false,
														"src": "3881:4:4",
														"valueSize": 1
													}
												],
												"id": 1340,
												"nodeType": "InlineAssembly",
												"src": "3826:101:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1341,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "3943:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3948:14:4",
														"memberName": "getUint256Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1508,
														"src": "3943:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$1458_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1458_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot storage pointer"
													}
												},
												"functionReturnParameters": 1336,
												"id": 1344,
												"nodeType": "Return",
												"src": "3936:28:4"
											}
										]
									},
									"documentation": {
										"id": 1326,
										"nodeType": "StructuredDocumentation",
										"src": "3202:191:4",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "3407:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "3438:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "3420:21:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1327,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3420:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1328,
													"nodeType": "ArrayTypeName",
													"src": "3420:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "3451:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "3443:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3443:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3419:36:4"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "3479:31:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1458_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1334,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1333,
														"name": "StorageSlot.Uint256Slot",
														"nameLocations": [
															"3479:11:4",
															"3491:11:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1458,
														"src": "3479:23:4"
													},
													"referencedDeclaration": 1458,
													"src": "3479:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1458_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3478:33:4"
									},
									"scope": 1347,
									"src": "3398:573:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1348,
							"src": "245:3728:4",
							"usedErrors": []
						}
					],
					"src": "100:3874:4"
				},
				"id": 4
			},
			"imports/openzeppelin/utils/Context.sol": {
				"ast": {
					"absolutePath": "imports/openzeppelin/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1369
						]
					},
					"id": 1370,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1349,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "86:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1350,
								"nodeType": "StructuredDocumentation",
								"src": "112:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1369,
							"linearizedBaseContracts": [
								1369
							],
							"name": "Context",
							"nameLocation": "627:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1358,
										"nodeType": "Block",
										"src": "703:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1355,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "720:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "724:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "720:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1354,
												"id": 1357,
												"nodeType": "Return",
												"src": "713:17:5"
											}
										]
									},
									"id": 1359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "650:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "660:2:5"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "694:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:9:5"
									},
									"scope": 1369,
									"src": "641:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1367,
										"nodeType": "Block",
										"src": "810:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1364,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "827:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "831:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "827:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1363,
												"id": 1366,
												"nodeType": "Return",
												"src": "820:15:5"
											}
										]
									},
									"id": 1368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "752:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "760:2:5"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "794:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1361,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "794:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:16:5"
									},
									"scope": 1369,
									"src": "743:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1370,
							"src": "609:235:5",
							"usedErrors": []
						}
					],
					"src": "86:759:5"
				},
				"id": 5
			},
			"imports/openzeppelin/utils/Counters.sol": {
				"ast": {
					"absolutePath": "imports/openzeppelin/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1443
						]
					},
					"id": 1444,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1371,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1372,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:6",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1443,
							"linearizedBaseContracts": [
								1443
							],
							"name": "Counters",
							"nameLocation": "432:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1375,
									"members": [
										{
											"constant": false,
											"id": 1374,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1375,
											"src": "786:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1373,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:6",
									"nodeType": "StructDefinition",
									"scope": 1443,
									"src": "447:374:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1386,
										"nodeType": "Block",
										"src": "901:38:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1383,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1378,
														"src": "918:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1375_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:6",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1374,
													"src": "918:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1382,
												"id": 1385,
												"nodeType": "Return",
												"src": "911:21:6"
											}
										]
									},
									"id": 1387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "844:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1375_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1377,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1376,
														"name": "Counter",
														"nameLocations": [
															"844:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1375,
														"src": "844:7:6"
													},
													"referencedDeclaration": 1375,
													"src": "844:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1375_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:6"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "892:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:6"
									},
									"scope": 1443,
									"src": "827:112:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "998:70:6",
										"statements": [
											{
												"id": 1399,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:6",
												"statements": [
													{
														"expression": {
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1393,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1390,
																	"src": "1032:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1375_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1395,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:6",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1374,
																"src": "1032:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1398,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:6"
													}
												]
											}
										]
									},
									"id": 1401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "964:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1375_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1389,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1388,
														"name": "Counter",
														"nameLocations": [
															"964:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1375,
														"src": "964:7:6"
													},
													"referencedDeclaration": 1375,
													"src": "964:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1375_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:6"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:6"
									},
									"scope": 1443,
									"src": "945:123:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1428,
										"nodeType": "Block",
										"src": "1127:176:6",
										"statements": [
											{
												"assignments": [
													1408
												],
												"declarations": [
													{
														"constant": false,
														"id": 1408,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1428,
														"src": "1137:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1407,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1411,
												"initialValue": {
													"expression": {
														"id": 1409,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1404,
														"src": "1153:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1375_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:6",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1374,
													"src": "1153:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1413,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1408,
																"src": "1185:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1412,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1418,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:6"
											},
											{
												"id": 1427,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:6",
												"statements": [
													{
														"expression": {
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1419,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "1260:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1375_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1421,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:6",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1374,
																"src": "1260:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1422,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1408,
																	"src": "1277:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1426,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:6"
													}
												]
											}
										]
									},
									"id": 1429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "1093:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1375_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1403,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1402,
														"name": "Counter",
														"nameLocations": [
															"1093:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1375,
														"src": "1093:7:6"
													},
													"referencedDeclaration": 1375,
													"src": "1093:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1375_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:6"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:6"
									},
									"scope": 1443,
									"src": "1074:229:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1441,
										"nodeType": "Block",
										"src": "1358:35:6",
										"statements": [
											{
												"expression": {
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1435,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "1368:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1375_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1437,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:6",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1374,
														"src": "1368:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1440,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:6"
											}
										]
									},
									"id": 1442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "1324:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1375_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1431,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1430,
														"name": "Counter",
														"nameLocations": [
															"1324:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1375,
														"src": "1324:7:6"
													},
													"referencedDeclaration": 1375,
													"src": "1324:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1375_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:6"
									},
									"returnParameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:6"
									},
									"scope": 1443,
									"src": "1309:84:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1444,
							"src": "424:971:6",
							"usedErrors": []
						}
					],
					"src": "87:1308:6"
				},
				"id": 6
			},
			"imports/openzeppelin/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "imports/openzeppelin/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1553
						]
					},
					"id": 1554,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1445,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1446,
								"nodeType": "StructuredDocumentation",
								"src": "219:1197:7",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0, \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"
							},
							"fullyImplemented": true,
							"id": 1553,
							"linearizedBaseContracts": [
								1553
							],
							"name": "StorageSlot",
							"nameLocation": "1425:11:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1449,
									"members": [
										{
											"constant": false,
											"id": 1448,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1480:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1449,
											"src": "1472:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1447,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1472:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1450:11:7",
									"nodeType": "StructDefinition",
									"scope": 1553,
									"src": "1443:49:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1452,
									"members": [
										{
											"constant": false,
											"id": 1451,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1532:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1452,
											"src": "1527:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1450,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1527:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1505:11:7",
									"nodeType": "StructDefinition",
									"scope": 1553,
									"src": "1498:46:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1455,
									"members": [
										{
											"constant": false,
											"id": 1454,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1587:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1455,
											"src": "1579:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1453,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1579:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1557:11:7",
									"nodeType": "StructDefinition",
									"scope": 1553,
									"src": "1550:49:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1458,
									"members": [
										{
											"constant": false,
											"id": 1457,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1642:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1458,
											"src": "1634:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1456,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1634:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1612:11:7",
									"nodeType": "StructDefinition",
									"scope": 1553,
									"src": "1605:49:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1461,
									"members": [
										{
											"constant": false,
											"id": 1460,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1695:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1461,
											"src": "1688:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1459,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1688:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1667:10:7",
									"nodeType": "StructDefinition",
									"scope": 1553,
									"src": "1660:47:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1464,
									"members": [
										{
											"constant": false,
											"id": 1463,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1746:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1464,
											"src": "1740:11:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1462,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1740:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1720:9:7",
									"nodeType": "StructDefinition",
									"scope": 1553,
									"src": "1713:45:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1474,
										"nodeType": "Block",
										"src": "1940:106:7",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2002:38:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2016:14:7",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2026:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2016:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1471,
														"isOffset": false,
														"isSlot": true,
														"src": "2016:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "2026:4:7",
														"valueSize": 1
													}
												],
												"id": 1473,
												"nodeType": "InlineAssembly",
												"src": "1993:47:7"
											}
										]
									},
									"documentation": {
										"id": 1465,
										"nodeType": "StructuredDocumentation",
										"src": "1764:87:7",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1865:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1888:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "1880:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1466,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1880:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1879:14:7"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1937:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "1917:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1449_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1470,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1469,
														"name": "AddressSlot",
														"nameLocations": [
															"1917:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1449,
														"src": "1917:11:7"
													},
													"referencedDeclaration": 1449,
													"src": "1917:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1449_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1916:23:7"
									},
									"scope": 1553,
									"src": "1856:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1485,
										"nodeType": "Block",
										"src": "2228:106:7",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2290:38:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2304:14:7",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2314:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2304:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1482,
														"isOffset": false,
														"isSlot": true,
														"src": "2304:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1478,
														"isOffset": false,
														"isSlot": false,
														"src": "2314:4:7",
														"valueSize": 1
													}
												],
												"id": 1484,
												"nodeType": "InlineAssembly",
												"src": "2281:47:7"
											}
										]
									},
									"documentation": {
										"id": 1476,
										"nodeType": "StructuredDocumentation",
										"src": "2052:87:7",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2153:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2176:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "2168:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1477,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2168:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2167:14:7"
									},
									"returnParameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2225:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "2205:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1452_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1481,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1480,
														"name": "BooleanSlot",
														"nameLocations": [
															"2205:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1452,
														"src": "2205:11:7"
													},
													"referencedDeclaration": 1452,
													"src": "2205:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1452_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2204:23:7"
									},
									"scope": 1553,
									"src": "2144:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1496,
										"nodeType": "Block",
										"src": "2516:106:7",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2578:38:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2592:14:7",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2602:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2592:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1493,
														"isOffset": false,
														"isSlot": true,
														"src": "2592:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1489,
														"isOffset": false,
														"isSlot": false,
														"src": "2602:4:7",
														"valueSize": 1
													}
												],
												"id": 1495,
												"nodeType": "InlineAssembly",
												"src": "2569:47:7"
											}
										]
									},
									"documentation": {
										"id": 1487,
										"nodeType": "StructuredDocumentation",
										"src": "2340:87:7",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2441:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2464:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "2456:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1488,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2456:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2455:14:7"
									},
									"returnParameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2513:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "2493:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1455_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1492,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1491,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2493:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1455,
														"src": "2493:11:7"
													},
													"referencedDeclaration": 1455,
													"src": "2493:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1455_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:23:7"
									},
									"scope": 1553,
									"src": "2432:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1507,
										"nodeType": "Block",
										"src": "2804:106:7",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2866:38:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2880:14:7",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2890:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2880:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1504,
														"isOffset": false,
														"isSlot": true,
														"src": "2880:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1500,
														"isOffset": false,
														"isSlot": false,
														"src": "2890:4:7",
														"valueSize": 1
													}
												],
												"id": 1506,
												"nodeType": "InlineAssembly",
												"src": "2857:47:7"
											}
										]
									},
									"documentation": {
										"id": 1498,
										"nodeType": "StructuredDocumentation",
										"src": "2628:87:7",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2729:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2752:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "2744:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1499,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2744:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:14:7"
									},
									"returnParameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2801:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "2781:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1458_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1503,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1502,
														"name": "Uint256Slot",
														"nameLocations": [
															"2781:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1458,
														"src": "2781:11:7"
													},
													"referencedDeclaration": 1458,
													"src": "2781:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1458_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2780:23:7"
									},
									"scope": 1553,
									"src": "2720:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1518,
										"nodeType": "Block",
										"src": "3089:106:7",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3151:38:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3165:14:7",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3175:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3165:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1515,
														"isOffset": false,
														"isSlot": true,
														"src": "3165:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1511,
														"isOffset": false,
														"isSlot": false,
														"src": "3175:4:7",
														"valueSize": 1
													}
												],
												"id": 1517,
												"nodeType": "InlineAssembly",
												"src": "3142:47:7"
											}
										]
									},
									"documentation": {
										"id": 1509,
										"nodeType": "StructuredDocumentation",
										"src": "2916:86:7",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3016:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3038:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "3030:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1510,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3030:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3029:14:7"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3086:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "3067:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1461_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1514,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1513,
														"name": "StringSlot",
														"nameLocations": [
															"3067:10:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1461,
														"src": "3067:10:7"
													},
													"referencedDeclaration": 1461,
													"src": "3067:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1461_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3066:22:7"
									},
									"scope": 1553,
									"src": "3007:188:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1529,
										"nodeType": "Block",
										"src": "3397:112:7",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3459:44:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3473:20:7",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "3483:10:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3473:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1526,
														"isOffset": false,
														"isSlot": true,
														"src": "3473:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1522,
														"isOffset": false,
														"isSlot": true,
														"src": "3483:10:7",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1528,
												"nodeType": "InlineAssembly",
												"src": "3450:53:7"
											}
										]
									},
									"documentation": {
										"id": 1520,
										"nodeType": "StructuredDocumentation",
										"src": "3201:101:7",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3316:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3345:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "3330:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1521,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3330:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:22:7"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3394:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "3375:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1461_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1525,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1524,
														"name": "StringSlot",
														"nameLocations": [
															"3375:10:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1461,
														"src": "3375:10:7"
													},
													"referencedDeclaration": 1461,
													"src": "3375:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1461_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3374:22:7"
									},
									"scope": 1553,
									"src": "3307:202:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1540,
										"nodeType": "Block",
										"src": "3685:106:7",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3747:38:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3761:14:7",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3771:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3761:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1537,
														"isOffset": false,
														"isSlot": true,
														"src": "3761:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1533,
														"isOffset": false,
														"isSlot": false,
														"src": "3771:4:7",
														"valueSize": 1
													}
												],
												"id": 1539,
												"nodeType": "InlineAssembly",
												"src": "3738:47:7"
											}
										]
									},
									"documentation": {
										"id": 1531,
										"nodeType": "StructuredDocumentation",
										"src": "3515:85:7",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3614:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3635:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "3627:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1532,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3627:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3626:14:7"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3682:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "3664:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1464_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1536,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1535,
														"name": "BytesSlot",
														"nameLocations": [
															"3664:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1464,
														"src": "3664:9:7"
													},
													"referencedDeclaration": 1464,
													"src": "3664:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1464_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3663:21:7"
									},
									"scope": 1553,
									"src": "3605:186:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1551,
										"nodeType": "Block",
										"src": "3988:112:7",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4050:44:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4064:20:7",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "4074:10:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "4064:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1548,
														"isOffset": false,
														"isSlot": true,
														"src": "4064:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1544,
														"isOffset": false,
														"isSlot": true,
														"src": "4074:10:7",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1550,
												"nodeType": "InlineAssembly",
												"src": "4041:53:7"
											}
										]
									},
									"documentation": {
										"id": 1542,
										"nodeType": "StructuredDocumentation",
										"src": "3797:99:7",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3910:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3937:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "3923:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1543,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3923:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3922:21:7"
									},
									"returnParameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3985:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "3967:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1464_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1547,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1546,
														"name": "BytesSlot",
														"nameLocations": [
															"3967:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1464,
														"src": "3967:9:7"
													},
													"referencedDeclaration": 1464,
													"src": "3967:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1464_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3966:21:7"
									},
									"scope": 1553,
									"src": "3901:199:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1554,
							"src": "1417:2685:7",
							"usedErrors": []
						}
					],
					"src": "193:3910:7"
				},
				"id": 7
			},
			"imports/openzeppelin/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "imports/openzeppelin/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2577
						]
					},
					"id": 2578,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1555,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1556,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:8",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2577,
							"linearizedBaseContracts": [
								2577
							],
							"name": "Math",
							"nameLocation": "211:4:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1560,
									"members": [
										{
											"id": 1557,
											"name": "Down",
											"nameLocation": "246:4:8",
											"nodeType": "EnumValue",
											"src": "246:4:8"
										},
										{
											"id": 1558,
											"name": "Up",
											"nameLocation": "288:2:8",
											"nodeType": "EnumValue",
											"src": "288:2:8"
										},
										{
											"id": 1559,
											"name": "Zero",
											"nameLocation": "319:4:8",
											"nodeType": "EnumValue",
											"src": "319:4:8"
										}
									],
									"name": "Rounding",
									"nameLocation": "227:8:8",
									"nodeType": "EnumDefinition",
									"src": "222:122:8"
								},
								{
									"body": {
										"id": 1591,
										"nodeType": "Block",
										"src": "562:140:8",
										"statements": [
											{
												"id": 1590,
												"nodeType": "UncheckedBlock",
												"src": "572:124:8",
												"statements": [
													{
														"assignments": [
															1573
														],
														"declarations": [
															{
																"constant": false,
																"id": 1573,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "604:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1590,
																"src": "596:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1572,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "596:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1577,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1574,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1563,
																"src": "608:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1575,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1565,
																"src": "612:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "608:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "596:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1578,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1573,
																"src": "631:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1579,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1563,
																"src": "635:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "631:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1585,
														"nodeType": "IfStatement",
														"src": "627:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "646:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "653:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1583,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "645:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1571,
															"id": 1584,
															"nodeType": "Return",
															"src": "638:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "677:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1587,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1573,
																	"src": "683:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1588,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "676:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1571,
														"id": 1589,
														"nodeType": "Return",
														"src": "669:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1561,
										"nodeType": "StructuredDocumentation",
										"src": "350:131:8",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v5.0._"
									},
									"id": 1592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "495:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "502:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "502:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "513:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "513:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "501:22:8"
									},
									"returnParameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "547:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1567,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "547:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "553:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "553:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:15:8"
									},
									"scope": 2577,
									"src": "486:216:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1619,
										"nodeType": "Block",
										"src": "923:113:8",
										"statements": [
											{
												"id": 1618,
												"nodeType": "UncheckedBlock",
												"src": "933:97:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1604,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1597,
																"src": "961:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1605,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "965:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "961:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1611,
														"nodeType": "IfStatement",
														"src": "957:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "976:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "983:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1609,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "975:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1603,
															"id": 1610,
															"nodeType": "Return",
															"src": "968:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1007:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1613,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1595,
																		"src": "1013:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1614,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1597,
																		"src": "1017:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1013:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1616,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1006:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1603,
														"id": 1617,
														"nodeType": "Return",
														"src": "999:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1593,
										"nodeType": "StructuredDocumentation",
										"src": "708:134:8",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v5.0._"
									},
									"id": 1620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "856:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "871:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "863:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "882:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "874:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "874:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "862:22:8"
									},
									"returnParameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "908:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1599,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "908:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "914:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "907:15:8"
									},
									"scope": 2577,
									"src": "847:189:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1661,
										"nodeType": "Block",
										"src": "1260:417:8",
										"statements": [
											{
												"id": 1660,
												"nodeType": "UncheckedBlock",
												"src": "1270:401:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1632,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1623,
																"src": "1528:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1533:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1528:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1639,
														"nodeType": "IfStatement",
														"src": "1524:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1544:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1550:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1637,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1543:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1631,
															"id": 1638,
															"nodeType": "Return",
															"src": "1536:16:8"
														}
													},
													{
														"assignments": [
															1641
														],
														"declarations": [
															{
																"constant": false,
																"id": 1641,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1574:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1660,
																"src": "1566:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1640,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1566:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1645,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1642,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1623,
																"src": "1578:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1643,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1625,
																"src": "1582:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1578:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1566:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1646,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1641,
																	"src": "1601:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1647,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1623,
																	"src": "1605:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1601:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1649,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1625,
																"src": "1610:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1655,
														"nodeType": "IfStatement",
														"src": "1597:33:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1621:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1628:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1653,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1620:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1631,
															"id": 1654,
															"nodeType": "Return",
															"src": "1613:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1652:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1657,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1641,
																	"src": "1658:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1658,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1651:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1631,
														"id": 1659,
														"nodeType": "Return",
														"src": "1644:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1621,
										"nodeType": "StructuredDocumentation",
										"src": "1042:137:8",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v5.0._"
									},
									"id": 1662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1193:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1208:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "1200:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1200:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1219:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "1211:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1199:22:8"
									},
									"returnParameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "1245:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1627,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1245:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "1251:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1244:15:8"
									},
									"scope": 2577,
									"src": "1184:493:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1689,
										"nodeType": "Block",
										"src": "1902:114:8",
										"statements": [
											{
												"id": 1688,
												"nodeType": "UncheckedBlock",
												"src": "1912:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1674,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1667,
																"src": "1940:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1945:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1940:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1681,
														"nodeType": "IfStatement",
														"src": "1936:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1956:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1963:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1679,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1955:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1673,
															"id": 1680,
															"nodeType": "Return",
															"src": "1948:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1987:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1683,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1665,
																		"src": "1993:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1684,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1667,
																		"src": "1997:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1993:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1686,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1986:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1673,
														"id": 1687,
														"nodeType": "Return",
														"src": "1979:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1663,
										"nodeType": "StructuredDocumentation",
										"src": "1683:138:8",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v5.0._"
									},
									"id": 1690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1835:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1850:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "1842:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1842:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1861:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "1853:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1841:22:8"
									},
									"returnParameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "1887:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1669,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1887:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "1893:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1893:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1886:15:8"
									},
									"scope": 2577,
									"src": "1826:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1717,
										"nodeType": "Block",
										"src": "2251:114:8",
										"statements": [
											{
												"id": 1716,
												"nodeType": "UncheckedBlock",
												"src": "2261:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1702,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1695,
																"src": "2289:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2294:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2289:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1709,
														"nodeType": "IfStatement",
														"src": "2285:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2305:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2312:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1707,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2304:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1701,
															"id": 1708,
															"nodeType": "Return",
															"src": "2297:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2336:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1711,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1693,
																		"src": "2342:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1712,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1695,
																		"src": "2346:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2342:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1714,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2335:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1701,
														"id": 1715,
														"nodeType": "Return",
														"src": "2328:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1691,
										"nodeType": "StructuredDocumentation",
										"src": "2022:148:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v5.0._"
									},
									"id": 1718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2184:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2199:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "2191:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2191:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2210:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "2202:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2190:22:8"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "2236:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1697,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2236:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "2242:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2242:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2235:15:8"
									},
									"scope": 2577,
									"src": "2175:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1735,
										"nodeType": "Block",
										"src": "2502:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1728,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "2519:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1729,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1723,
															"src": "2523:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2519:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1732,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1723,
														"src": "2531:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2519:13:8",
													"trueExpression": {
														"id": 1731,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1721,
														"src": "2527:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1727,
												"id": 1734,
												"nodeType": "Return",
												"src": "2512:20:8"
											}
										]
									},
									"documentation": {
										"id": 1719,
										"nodeType": "StructuredDocumentation",
										"src": "2371:59:8",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2444:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2456:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "2448:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2448:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2467:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "2459:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2459:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:22:8"
									},
									"returnParameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "2493:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2493:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:9:8"
									},
									"scope": 2577,
									"src": "2435:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1753,
										"nodeType": "Block",
										"src": "2677:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1746,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1739,
															"src": "2694:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1747,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1741,
															"src": "2698:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2694:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1750,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1741,
														"src": "2706:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2694:13:8",
													"trueExpression": {
														"id": 1749,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "2702:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1745,
												"id": 1752,
												"nodeType": "Return",
												"src": "2687:20:8"
											}
										]
									},
									"documentation": {
										"id": 1737,
										"nodeType": "StructuredDocumentation",
										"src": "2545:60:8",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2619:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2631:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "2623:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2623:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2642:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "2634:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2634:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2622:22:8"
									},
									"returnParameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "2668:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:9:8"
									},
									"scope": 2577,
									"src": "2610:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1776,
										"nodeType": "Block",
										"src": "2898:82:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1764,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1757,
																	"src": "2953:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1765,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1759,
																	"src": "2957:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2953:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1767,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2952:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1768,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1757,
																		"src": "2963:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1769,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1759,
																		"src": "2967:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2963:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1771,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2962:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2972:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2962:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2952:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1763,
												"id": 1775,
												"nodeType": "Return",
												"src": "2945:28:8"
											}
										]
									},
									"documentation": {
										"id": 1755,
										"nodeType": "StructuredDocumentation",
										"src": "2720:102:8",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2836:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2852:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "2844:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2844:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2863:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "2855:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2843:22:8"
									},
									"returnParameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "2889:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2889:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2888:9:8"
									},
									"scope": 2577,
									"src": "2827:153:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1801,
										"nodeType": "Block",
										"src": "3250:123:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1787,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1780,
															"src": "3338:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3343:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3338:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1791,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1780,
																			"src": "3352:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3356:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3352:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1794,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3351:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1795,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "3361:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3351:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3365:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3351:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3338:28:8",
													"trueExpression": {
														"hexValue": "30",
														"id": 1790,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3347:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1786,
												"id": 1800,
												"nodeType": "Return",
												"src": "3331:35:8"
											}
										]
									},
									"documentation": {
										"id": 1778,
										"nodeType": "StructuredDocumentation",
										"src": "2986:188:8",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3188:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3204:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "3196:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3215:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "3207:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3207:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:22:8"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "3241:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3241:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3240:9:8"
									},
									"scope": 2577,
									"src": "3179:194:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1924,
										"nodeType": "Block",
										"src": "3787:4115:8",
										"statements": [
											{
												"id": 1923,
												"nodeType": "UncheckedBlock",
												"src": "3797:4099:8",
												"statements": [
													{
														"assignments": [
															1815
														],
														"declarations": [
															{
																"constant": false,
																"id": 1815,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4126:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 1923,
																"src": "4118:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1814,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4118:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1816,
														"nodeType": "VariableDeclarationStatement",
														"src": "4118:13:8"
													},
													{
														"assignments": [
															1818
														],
														"declarations": [
															{
																"constant": false,
																"id": 1818,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4198:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 1923,
																"src": "4190:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1817,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4190:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1819,
														"nodeType": "VariableDeclarationStatement",
														"src": "4190:13:8"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "4270:157:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4288:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "4305:1:8"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4308:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4315:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4311:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4311:6:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "4298:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4298:20:8"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "4292:2:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4335:18:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "4348:1:8"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4351:1:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "4344:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4344:9:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "4335:5:8"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4370:43:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4387:2:8"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4391:5:8"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4383:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4383:14:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4402:2:8"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4406:5:8"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4399:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4399:13:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4379:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4379:34:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "4370:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1815,
																"isOffset": false,
																"isSlot": false,
																"src": "4335:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1815,
																"isOffset": false,
																"isSlot": false,
																"src": "4391:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1815,
																"isOffset": false,
																"isSlot": false,
																"src": "4406:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1818,
																"isOffset": false,
																"isSlot": false,
																"src": "4370:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1805,
																"isOffset": false,
																"isSlot": false,
																"src": "4305:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1805,
																"isOffset": false,
																"isSlot": false,
																"src": "4348:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1807,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1807,
																"isOffset": false,
																"isSlot": false,
																"src": "4351:1:8",
																"valueSize": 1
															}
														],
														"id": 1820,
														"nodeType": "InlineAssembly",
														"src": "4261:166:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1821,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1818,
																"src": "4508:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4517:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4508:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1829,
														"nodeType": "IfStatement",
														"src": "4504:368:8",
														"trueBody": {
															"id": 1828,
															"nodeType": "Block",
															"src": "4520:352:8",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1824,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1815,
																			"src": "4838:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1825,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1809,
																			"src": "4846:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4838:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1813,
																	"id": 1827,
																	"nodeType": "Return",
																	"src": "4831:26:8"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1831,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1809,
																		"src": "4982:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1832,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1818,
																		"src": "4996:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4982:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1830,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "4974:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4974:53:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1836,
														"nodeType": "ExpressionStatement",
														"src": "4974:53:8"
													},
													{
														"assignments": [
															1838
														],
														"declarations": [
															{
																"constant": false,
																"id": 1838,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5291:9:8",
																"nodeType": "VariableDeclaration",
																"scope": 1923,
																"src": "5283:17:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1837,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5283:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1839,
														"nodeType": "VariableDeclarationStatement",
														"src": "5283:17:8"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "5323:291:8",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "5392:38:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "5412:1:8"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5415:1:8"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "5418:11:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "5405:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5405:25:8"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "5392:9:8"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5512:41:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "5525:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "5535:9:8"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "5546:5:8"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "5532:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5532:20:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5521:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5521:32:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "5512:5:8"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5570:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "5583:5:8"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "5590:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5579:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5579:21:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "5570:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1809,
																"isOffset": false,
																"isSlot": false,
																"src": "5418:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1815,
																"isOffset": false,
																"isSlot": false,
																"src": "5546:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1815,
																"isOffset": false,
																"isSlot": false,
																"src": "5570:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1815,
																"isOffset": false,
																"isSlot": false,
																"src": "5583:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1818,
																"isOffset": false,
																"isSlot": false,
																"src": "5512:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1818,
																"isOffset": false,
																"isSlot": false,
																"src": "5525:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1838,
																"isOffset": false,
																"isSlot": false,
																"src": "5392:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1838,
																"isOffset": false,
																"isSlot": false,
																"src": "5535:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1838,
																"isOffset": false,
																"isSlot": false,
																"src": "5590:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1805,
																"isOffset": false,
																"isSlot": false,
																"src": "5412:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1807,
																"isOffset": false,
																"isSlot": false,
																"src": "5415:1:8",
																"valueSize": 1
															}
														],
														"id": 1840,
														"nodeType": "InlineAssembly",
														"src": "5314:300:8"
													},
													{
														"assignments": [
															1842
														],
														"declarations": [
															{
																"constant": false,
																"id": 1842,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5929:4:8",
																"nodeType": "VariableDeclaration",
																"scope": 1923,
																"src": "5921:12:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1841,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5921:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1850,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1843,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1809,
																"src": "5936:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "5951:12:8",
																			"subExpression": {
																				"id": 1844,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1809,
																				"src": "5952:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5966:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "5951:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1848,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5950:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5936:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5921:47:8"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "5991:362:8",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "6056:37:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "6075:11:8"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6088:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6071:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6071:22:8"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "6056:11:8"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6160:25:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "6173:5:8"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6180:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6169:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6169:16:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "6160:5:8"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6300:39:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6320:1:8",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "6323:4:8"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "6316:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6316:12:8"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "6330:4:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6312:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6312:23:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6337:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6308:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6308:31:8"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "6300:4:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1809,
																"isOffset": false,
																"isSlot": false,
																"src": "6056:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1809,
																"isOffset": false,
																"isSlot": false,
																"src": "6075:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1815,
																"isOffset": false,
																"isSlot": false,
																"src": "6160:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1815,
																"isOffset": false,
																"isSlot": false,
																"src": "6173:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1842,
																"isOffset": false,
																"isSlot": false,
																"src": "6088:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1842,
																"isOffset": false,
																"isSlot": false,
																"src": "6180:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1842,
																"isOffset": false,
																"isSlot": false,
																"src": "6300:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1842,
																"isOffset": false,
																"isSlot": false,
																"src": "6323:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1842,
																"isOffset": false,
																"isSlot": false,
																"src": "6330:4:8",
																"valueSize": 1
															}
														],
														"id": 1851,
														"nodeType": "InlineAssembly",
														"src": "5982:371:8"
													},
													{
														"expression": {
															"id": 1856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1852,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1815,
																"src": "6419:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1853,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1818,
																	"src": "6428:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1854,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1842,
																	"src": "6436:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6428:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6419:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1857,
														"nodeType": "ExpressionStatement",
														"src": "6419:21:8"
													},
													{
														"assignments": [
															1859
														],
														"declarations": [
															{
																"constant": false,
																"id": 1859,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6766:7:8",
																"nodeType": "VariableDeclaration",
																"scope": 1923,
																"src": "6758:15:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1858,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6758:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1866,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6777:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1861,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1809,
																			"src": "6781:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6777:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1863,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6776:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6796:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6776:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6758:39:8"
													},
													{
														"expression": {
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1867,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1859,
																"src": "7014:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7025:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1869,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1809,
																		"src": "7029:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1870,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1859,
																		"src": "7043:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7029:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7025:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7014:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1874,
														"nodeType": "ExpressionStatement",
														"src": "7014:36:8"
													},
													{
														"expression": {
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1875,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1859,
																"src": "7083:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7094:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1877,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1809,
																		"src": "7098:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1878,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1859,
																		"src": "7112:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7098:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7094:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7083:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1882,
														"nodeType": "ExpressionStatement",
														"src": "7083:36:8"
													},
													{
														"expression": {
															"id": 1889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1883,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1859,
																"src": "7153:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7164:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1885,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1809,
																		"src": "7168:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1886,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1859,
																		"src": "7182:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7168:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7164:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7153:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1890,
														"nodeType": "ExpressionStatement",
														"src": "7153:36:8"
													},
													{
														"expression": {
															"id": 1897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1891,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1859,
																"src": "7223:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7234:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1893,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1809,
																		"src": "7238:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1894,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1859,
																		"src": "7252:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7238:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7234:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7223:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1898,
														"nodeType": "ExpressionStatement",
														"src": "7223:36:8"
													},
													{
														"expression": {
															"id": 1905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1899,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1859,
																"src": "7293:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7304:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1901,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1809,
																		"src": "7308:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1902,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1859,
																		"src": "7322:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7308:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7304:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7293:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1906,
														"nodeType": "ExpressionStatement",
														"src": "7293:36:8"
													},
													{
														"expression": {
															"id": 1913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1907,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1859,
																"src": "7364:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7375:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1909,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1809,
																		"src": "7379:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1910,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1859,
																		"src": "7393:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7379:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7375:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7364:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1914,
														"nodeType": "ExpressionStatement",
														"src": "7364:36:8"
													},
													{
														"expression": {
															"id": 1919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1915,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1812,
																"src": "7834:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1916,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1815,
																	"src": "7843:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1917,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1859,
																	"src": "7851:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7843:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7834:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1920,
														"nodeType": "ExpressionStatement",
														"src": "7834:24:8"
													},
													{
														"expression": {
															"id": 1921,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1812,
															"src": "7879:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1813,
														"id": 1922,
														"nodeType": "Return",
														"src": "7872:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1803,
										"nodeType": "StructuredDocumentation",
										"src": "3379:305:8",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3698:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3713:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "3705:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3705:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3724:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "3716:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3716:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3735:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "3727:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3727:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3704:43:8"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3779:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "3771:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3771:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3770:16:8"
									},
									"scope": 2577,
									"src": "3689:4213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1968,
										"nodeType": "Block",
										"src": "8144:189:8",
										"statements": [
											{
												"assignments": [
													1941
												],
												"declarations": [
													{
														"constant": false,
														"id": 1941,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8162:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1968,
														"src": "8154:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1940,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8154:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1947,
												"initialValue": {
													"arguments": [
														{
															"id": 1943,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1928,
															"src": "8178:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1944,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1930,
															"src": "8181:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1945,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1932,
															"src": "8184:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1942,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1925,
															1969
														],
														"referencedDeclaration": 1925,
														"src": "8171:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8171:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8154:42:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1560",
															"typeString": "enum Math.Rounding"
														},
														"id": 1951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1948,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1935,
															"src": "8210:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1560",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1949,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1560,
																"src": "8222:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1560_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "8231:2:8",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1558,
															"src": "8222:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1560",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "8210:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1953,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1928,
																	"src": "8244:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1954,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1930,
																	"src": "8247:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1955,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1932,
																	"src": "8250:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1952,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8237:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8237:25:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8265:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8237:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8210:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1965,
												"nodeType": "IfStatement",
												"src": "8206:98:8",
												"trueBody": {
													"id": 1964,
													"nodeType": "Block",
													"src": "8268:36:8",
													"statements": [
														{
															"expression": {
																"id": 1962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1960,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1941,
																	"src": "8282:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8292:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8282:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1963,
															"nodeType": "ExpressionStatement",
															"src": "8282:11:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1966,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1941,
													"src": "8320:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1939,
												"id": 1967,
												"nodeType": "Return",
												"src": "8313:13:8"
											}
										]
									},
									"documentation": {
										"id": 1926,
										"nodeType": "StructuredDocumentation",
										"src": "7908:121:8",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8043:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8058:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "8050:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8050:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8069:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "8061:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8061:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8080:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "8072:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8072:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8102:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "8093:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1560",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1934,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1933,
														"name": "Rounding",
														"nameLocations": [
															"8093:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1560,
														"src": "8093:8:8"
													},
													"referencedDeclaration": 1560,
													"src": "8093:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1560",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8049:62:8"
									},
									"returnParameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "8135:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8134:9:8"
									},
									"scope": 2577,
									"src": "8034:299:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2080,
										"nodeType": "Block",
										"src": "8609:1585:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1977,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1972,
														"src": "8623:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1978,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8628:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8623:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1983,
												"nodeType": "IfStatement",
												"src": "8619:45:8",
												"trueBody": {
													"id": 1982,
													"nodeType": "Block",
													"src": "8631:33:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1980,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8652:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1976,
															"id": 1981,
															"nodeType": "Return",
															"src": "8645:8:8"
														}
													]
												}
											},
											{
												"assignments": [
													1985
												],
												"declarations": [
													{
														"constant": false,
														"id": 1985,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9351:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2080,
														"src": "9343:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1984,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9343:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1994,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1986,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9360:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1988,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1972,
																			"src": "9371:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1987,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2249,
																			2285
																		],
																		"referencedDeclaration": 2249,
																		"src": "9366:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9366:7:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9377:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9366:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1992,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9365:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9360:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9343:36:8"
											},
											{
												"id": 2079,
												"nodeType": "UncheckedBlock",
												"src": "9780:408:8",
												"statements": [
													{
														"expression": {
															"id": 2004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1995,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1985,
																"src": "9804:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1996,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1985,
																				"src": "9814:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1999,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1997,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1972,
																					"src": "9823:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1998,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1985,
																					"src": "9827:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9823:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9814:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2001,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9813:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9838:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9813:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9804:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2005,
														"nodeType": "ExpressionStatement",
														"src": "9804:35:8"
													},
													{
														"expression": {
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2006,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1985,
																"src": "9853:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2007,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1985,
																				"src": "9863:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2010,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2008,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1972,
																					"src": "9872:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2009,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1985,
																					"src": "9876:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9872:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9863:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2012,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9862:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9887:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9862:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9853:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2016,
														"nodeType": "ExpressionStatement",
														"src": "9853:35:8"
													},
													{
														"expression": {
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2017,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1985,
																"src": "9902:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2018,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1985,
																				"src": "9912:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2021,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2019,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1972,
																					"src": "9921:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2020,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1985,
																					"src": "9925:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9921:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9912:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2023,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9911:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9936:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9911:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9902:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2027,
														"nodeType": "ExpressionStatement",
														"src": "9902:35:8"
													},
													{
														"expression": {
															"id": 2037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2028,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1985,
																"src": "9951:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2029,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1985,
																				"src": "9961:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2032,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2030,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1972,
																					"src": "9970:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2031,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1985,
																					"src": "9974:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9970:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9961:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2034,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9960:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9985:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9960:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9951:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2038,
														"nodeType": "ExpressionStatement",
														"src": "9951:35:8"
													},
													{
														"expression": {
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2039,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1985,
																"src": "10000:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2040,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1985,
																				"src": "10010:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2043,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2041,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1972,
																					"src": "10019:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2042,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1985,
																					"src": "10023:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10019:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10010:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2045,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10009:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10034:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10009:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10000:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2049,
														"nodeType": "ExpressionStatement",
														"src": "10000:35:8"
													},
													{
														"expression": {
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2050,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1985,
																"src": "10049:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2051,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1985,
																				"src": "10059:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2052,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1972,
																					"src": "10068:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2053,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1985,
																					"src": "10072:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10068:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10059:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2056,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10058:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10083:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10058:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10049:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2060,
														"nodeType": "ExpressionStatement",
														"src": "10049:35:8"
													},
													{
														"expression": {
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2061,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1985,
																"src": "10098:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2062,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1985,
																				"src": "10108:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2065,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2063,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1972,
																					"src": "10117:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2064,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1985,
																					"src": "10121:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10117:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10108:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2067,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10107:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10132:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10107:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10098:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2071,
														"nodeType": "ExpressionStatement",
														"src": "10098:35:8"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2073,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1985,
																	"src": "10158:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2074,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1972,
																		"src": "10166:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2075,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1985,
																		"src": "10170:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10166:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2072,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1754,
																"src": "10154:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10154:23:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1976,
														"id": 2078,
														"nodeType": "Return",
														"src": "10147:30:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1970,
										"nodeType": "StructuredDocumentation",
										"src": "8339:208:8",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8561:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8574:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "8566:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8566:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8565:11:8"
									},
									"returnParameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "8600:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8600:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8599:9:8"
									},
									"scope": 2577,
									"src": "8552:1642:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2116,
										"nodeType": "Block",
										"src": "10370:161:8",
										"statements": [
											{
												"id": 2115,
												"nodeType": "UncheckedBlock",
												"src": "10380:145:8",
												"statements": [
													{
														"assignments": [
															2093
														],
														"declarations": [
															{
																"constant": false,
																"id": 2093,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10412:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 2115,
																"src": "10404:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2092,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10404:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2097,
														"initialValue": {
															"arguments": [
																{
																	"id": 2095,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2084,
																	"src": "10426:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2094,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2081,
																	2117
																],
																"referencedDeclaration": 2081,
																"src": "10421:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10421:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10404:24:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2098,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2093,
																"src": "10449:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1560",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2102,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2099,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2087,
																					"src": "10459:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1560",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2100,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1560,
																						"src": "10471:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1560_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2101,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "10480:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1558,
																					"src": "10471:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1560",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "10459:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2107,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2105,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2103,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2093,
																						"src": "10486:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2104,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2093,
																						"src": "10495:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10486:15:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2106,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2084,
																					"src": "10504:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10486:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10459:46:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10512:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10459:54:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10508:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2112,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10458:56:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10449:65:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2091,
														"id": 2114,
														"nodeType": "Return",
														"src": "10442:72:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2082,
										"nodeType": "StructuredDocumentation",
										"src": "10200:89:8",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10303:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10316:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "10308:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10308:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10328:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "10319:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1560",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2086,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2085,
														"name": "Rounding",
														"nameLocations": [
															"10319:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1560,
														"src": "10319:8:8"
													},
													"referencedDeclaration": 1560,
													"src": "10319:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1560",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10307:30:8"
									},
									"returnParameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "10361:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10361:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10360:9:8"
									},
									"scope": 2577,
									"src": "10294:237:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2248,
										"nodeType": "Block",
										"src": "10716:922:8",
										"statements": [
											{
												"assignments": [
													2126
												],
												"declarations": [
													{
														"constant": false,
														"id": 2126,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10734:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2248,
														"src": "10726:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2125,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10726:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2128,
												"initialValue": {
													"hexValue": "30",
													"id": 2127,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10743:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10726:18:8"
											},
											{
												"id": 2245,
												"nodeType": "UncheckedBlock",
												"src": "10754:855:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2129,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2120,
																	"src": "10782:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10791:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10782:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10797:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10782:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2143,
														"nodeType": "IfStatement",
														"src": "10778:99:8",
														"trueBody": {
															"id": 2142,
															"nodeType": "Block",
															"src": "10800:77:8",
															"statements": [
																{
																	"expression": {
																		"id": 2136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2134,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2120,
																			"src": "10818:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10828:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10818:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2137,
																	"nodeType": "ExpressionStatement",
																	"src": "10818:13:8"
																},
																{
																	"expression": {
																		"id": 2140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2138,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2126,
																			"src": "10849:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10859:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10849:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2141,
																	"nodeType": "ExpressionStatement",
																	"src": "10849:13:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2144,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2120,
																	"src": "10894:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10903:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10894:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10908:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10894:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2158,
														"nodeType": "IfStatement",
														"src": "10890:96:8",
														"trueBody": {
															"id": 2157,
															"nodeType": "Block",
															"src": "10911:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 2151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2149,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2120,
																			"src": "10929:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10939:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10929:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2152,
																	"nodeType": "ExpressionStatement",
																	"src": "10929:12:8"
																},
																{
																	"expression": {
																		"id": 2155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2153,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2126,
																			"src": "10959:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10969:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10959:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2156,
																	"nodeType": "ExpressionStatement",
																	"src": "10959:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2159,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2120,
																	"src": "11003:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11012:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11003:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11017:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11003:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2173,
														"nodeType": "IfStatement",
														"src": "10999:96:8",
														"trueBody": {
															"id": 2172,
															"nodeType": "Block",
															"src": "11020:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 2166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2164,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2120,
																			"src": "11038:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11048:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11038:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2167,
																	"nodeType": "ExpressionStatement",
																	"src": "11038:12:8"
																},
																{
																	"expression": {
																		"id": 2170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2168,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2126,
																			"src": "11068:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11078:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11068:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2171,
																	"nodeType": "ExpressionStatement",
																	"src": "11068:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2174,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2120,
																	"src": "11112:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11121:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11112:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11126:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11112:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2188,
														"nodeType": "IfStatement",
														"src": "11108:96:8",
														"trueBody": {
															"id": 2187,
															"nodeType": "Block",
															"src": "11129:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 2181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2179,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2120,
																			"src": "11147:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11157:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11147:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2182,
																	"nodeType": "ExpressionStatement",
																	"src": "11147:12:8"
																},
																{
																	"expression": {
																		"id": 2185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2183,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2126,
																			"src": "11177:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11187:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11177:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2186,
																	"nodeType": "ExpressionStatement",
																	"src": "11177:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2189,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2120,
																	"src": "11221:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11230:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11221:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11234:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11221:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2203,
														"nodeType": "IfStatement",
														"src": "11217:93:8",
														"trueBody": {
															"id": 2202,
															"nodeType": "Block",
															"src": "11237:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 2196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2194,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2120,
																			"src": "11255:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11265:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11255:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2197,
																	"nodeType": "ExpressionStatement",
																	"src": "11255:11:8"
																},
																{
																	"expression": {
																		"id": 2200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2198,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2126,
																			"src": "11284:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11294:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11284:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2201,
																	"nodeType": "ExpressionStatement",
																	"src": "11284:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2204,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2120,
																	"src": "11327:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11336:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11327:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11340:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11327:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2218,
														"nodeType": "IfStatement",
														"src": "11323:93:8",
														"trueBody": {
															"id": 2217,
															"nodeType": "Block",
															"src": "11343:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 2211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2209,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2120,
																			"src": "11361:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11371:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11361:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2212,
																	"nodeType": "ExpressionStatement",
																	"src": "11361:11:8"
																},
																{
																	"expression": {
																		"id": 2215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2213,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2126,
																			"src": "11390:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11400:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11390:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2216,
																	"nodeType": "ExpressionStatement",
																	"src": "11390:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2219,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2120,
																	"src": "11433:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11442:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11433:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11446:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11433:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2233,
														"nodeType": "IfStatement",
														"src": "11429:93:8",
														"trueBody": {
															"id": 2232,
															"nodeType": "Block",
															"src": "11449:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 2226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2224,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2120,
																			"src": "11467:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11477:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11467:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2227,
																	"nodeType": "ExpressionStatement",
																	"src": "11467:11:8"
																},
																{
																	"expression": {
																		"id": 2230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2228,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2126,
																			"src": "11496:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11506:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11496:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2231,
																	"nodeType": "ExpressionStatement",
																	"src": "11496:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2234,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2120,
																	"src": "11539:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11548:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11539:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11552:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11539:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2244,
														"nodeType": "IfStatement",
														"src": "11535:64:8",
														"trueBody": {
															"id": 2243,
															"nodeType": "Block",
															"src": "11555:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 2241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2239,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2126,
																			"src": "11573:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11583:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11573:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2242,
																	"nodeType": "ExpressionStatement",
																	"src": "11573:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2246,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2126,
													"src": "11625:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2124,
												"id": 2247,
												"nodeType": "Return",
												"src": "11618:13:8"
											}
										]
									},
									"documentation": {
										"id": 2118,
										"nodeType": "StructuredDocumentation",
										"src": "10537:113:8",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10664:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10677:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "10669:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10669:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10668:15:8"
									},
									"returnParameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "10707:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10707:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10706:9:8"
									},
									"scope": 2577,
									"src": "10655:983:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2284,
										"nodeType": "Block",
										"src": "11871:165:8",
										"statements": [
											{
												"id": 2283,
												"nodeType": "UncheckedBlock",
												"src": "11881:149:8",
												"statements": [
													{
														"assignments": [
															2261
														],
														"declarations": [
															{
																"constant": false,
																"id": 2261,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11913:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 2283,
																"src": "11905:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2260,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11905:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2265,
														"initialValue": {
															"arguments": [
																{
																	"id": 2263,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2252,
																	"src": "11927:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2262,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2249,
																	2285
																],
																"referencedDeclaration": 2249,
																"src": "11922:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11922:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11905:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2266,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2261,
																"src": "11954:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1560",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2270,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2267,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2255,
																					"src": "11964:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1560",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2268,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1560,
																						"src": "11976:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1560_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2269,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11985:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1558,
																					"src": "11976:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1560",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11964:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2275,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2273,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2271,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11991:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2272,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2261,
																						"src": "11996:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11991:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2274,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2252,
																					"src": "12005:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11991:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11964:46:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12017:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11964:54:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12013:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2280,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11963:56:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11954:65:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2259,
														"id": 2282,
														"nodeType": "Return",
														"src": "11947:72:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2250,
										"nodeType": "StructuredDocumentation",
										"src": "11644:142:8",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11800:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11813:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2285,
												"src": "11805:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11805:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11829:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2285,
												"src": "11820:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1560",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2254,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2253,
														"name": "Rounding",
														"nameLocations": [
															"11820:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1560,
														"src": "11820:8:8"
													},
													"referencedDeclaration": 1560,
													"src": "11820:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1560",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11804:34:8"
									},
									"returnParameters": {
										"id": 2259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2285,
												"src": "11862:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11862:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11861:9:8"
									},
									"scope": 2577,
									"src": "11791:245:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2413,
										"nodeType": "Block",
										"src": "12223:854:8",
										"statements": [
											{
												"assignments": [
													2294
												],
												"declarations": [
													{
														"constant": false,
														"id": 2294,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12241:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2413,
														"src": "12233:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2293,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12233:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2296,
												"initialValue": {
													"hexValue": "30",
													"id": 2295,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12250:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12233:18:8"
											},
											{
												"id": 2410,
												"nodeType": "UncheckedBlock",
												"src": "12261:787:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2297,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2288,
																"src": "12289:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12298:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12304:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12298:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12289:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2313,
														"nodeType": "IfStatement",
														"src": "12285:103:8",
														"trueBody": {
															"id": 2312,
															"nodeType": "Block",
															"src": "12308:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 2306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2302,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2288,
																			"src": "12326:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2303,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12335:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2304,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12341:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12335:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12326:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2307,
																	"nodeType": "ExpressionStatement",
																	"src": "12326:17:8"
																},
																{
																	"expression": {
																		"id": 2310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2308,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2294,
																			"src": "12361:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12371:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12361:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2311,
																	"nodeType": "ExpressionStatement",
																	"src": "12361:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2314,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2288,
																"src": "12405:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12414:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12420:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12414:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12405:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2330,
														"nodeType": "IfStatement",
														"src": "12401:103:8",
														"trueBody": {
															"id": 2329,
															"nodeType": "Block",
															"src": "12424:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 2323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2319,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2288,
																			"src": "12442:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2320,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12451:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2321,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12457:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12451:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12442:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2324,
																	"nodeType": "ExpressionStatement",
																	"src": "12442:17:8"
																},
																{
																	"expression": {
																		"id": 2327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2325,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2294,
																			"src": "12477:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12487:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12477:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2328,
																	"nodeType": "ExpressionStatement",
																	"src": "12477:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2331,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2288,
																"src": "12521:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12530:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12536:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12530:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12521:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2347,
														"nodeType": "IfStatement",
														"src": "12517:103:8",
														"trueBody": {
															"id": 2346,
															"nodeType": "Block",
															"src": "12540:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 2340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2336,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2288,
																			"src": "12558:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2337,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12567:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2338,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12573:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12567:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12558:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2341,
																	"nodeType": "ExpressionStatement",
																	"src": "12558:17:8"
																},
																{
																	"expression": {
																		"id": 2344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2342,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2294,
																			"src": "12593:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12603:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12593:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2345,
																	"nodeType": "ExpressionStatement",
																	"src": "12593:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2348,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2288,
																"src": "12637:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12646:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12652:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12646:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12637:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2364,
														"nodeType": "IfStatement",
														"src": "12633:100:8",
														"trueBody": {
															"id": 2363,
															"nodeType": "Block",
															"src": "12655:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 2357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2353,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2288,
																			"src": "12673:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2354,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12682:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2355,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12688:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12682:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12673:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2358,
																	"nodeType": "ExpressionStatement",
																	"src": "12673:16:8"
																},
																{
																	"expression": {
																		"id": 2361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2359,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2294,
																			"src": "12707:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12717:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12707:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2362,
																	"nodeType": "ExpressionStatement",
																	"src": "12707:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2365,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2288,
																"src": "12750:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2368,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12759:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12765:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12759:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12750:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2381,
														"nodeType": "IfStatement",
														"src": "12746:100:8",
														"trueBody": {
															"id": 2380,
															"nodeType": "Block",
															"src": "12768:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 2374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2370,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2288,
																			"src": "12786:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2371,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12795:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2372,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12801:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12795:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12786:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2375,
																	"nodeType": "ExpressionStatement",
																	"src": "12786:16:8"
																},
																{
																	"expression": {
																		"id": 2378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2376,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2294,
																			"src": "12820:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12830:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12820:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2379,
																	"nodeType": "ExpressionStatement",
																	"src": "12820:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2382,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2288,
																"src": "12863:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12872:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12878:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12872:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12863:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2398,
														"nodeType": "IfStatement",
														"src": "12859:100:8",
														"trueBody": {
															"id": 2397,
															"nodeType": "Block",
															"src": "12881:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 2391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2387,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2288,
																			"src": "12899:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2388,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12908:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2389,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12914:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12908:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12899:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2392,
																	"nodeType": "ExpressionStatement",
																	"src": "12899:16:8"
																},
																{
																	"expression": {
																		"id": 2395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2393,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2294,
																			"src": "12933:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12943:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12933:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2396,
																	"nodeType": "ExpressionStatement",
																	"src": "12933:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2399,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2288,
																"src": "12976:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12985:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12991:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "12985:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "12976:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2409,
														"nodeType": "IfStatement",
														"src": "12972:66:8",
														"trueBody": {
															"id": 2408,
															"nodeType": "Block",
															"src": "12994:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 2406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2404,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2294,
																			"src": "13012:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13022:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13012:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2407,
																	"nodeType": "ExpressionStatement",
																	"src": "13012:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2411,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2294,
													"src": "13064:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2292,
												"id": 2412,
												"nodeType": "Return",
												"src": "13057:13:8"
											}
										]
									},
									"documentation": {
										"id": 2286,
										"nodeType": "StructuredDocumentation",
										"src": "12042:114:8",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12170:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2288,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12184:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "12176:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12176:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12175:15:8"
									},
									"returnParameters": {
										"id": 2292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2414,
												"src": "12214:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12214:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12213:9:8"
									},
									"scope": 2577,
									"src": "12161:916:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2449,
										"nodeType": "Block",
										"src": "13312:167:8",
										"statements": [
											{
												"id": 2448,
												"nodeType": "UncheckedBlock",
												"src": "13322:151:8",
												"statements": [
													{
														"assignments": [
															2426
														],
														"declarations": [
															{
																"constant": false,
																"id": 2426,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13354:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 2448,
																"src": "13346:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2425,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13346:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2430,
														"initialValue": {
															"arguments": [
																{
																	"id": 2428,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2417,
																	"src": "13369:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2427,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2414,
																	2450
																],
																"referencedDeclaration": 2414,
																"src": "13363:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13363:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13346:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2431,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2426,
																"src": "13396:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2441,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1560",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2435,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2432,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2420,
																					"src": "13406:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1560",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2433,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1560,
																						"src": "13418:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1560_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2434,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "13427:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1558,
																					"src": "13418:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1560",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "13406:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2440,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2438,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2436,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13433:2:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2437,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2426,
																						"src": "13439:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13433:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2439,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2417,
																					"src": "13448:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13433:20:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13406:47:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13460:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13406:55:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13456:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2445,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13405:57:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13396:66:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2424,
														"id": 2447,
														"nodeType": "Return",
														"src": "13389:73:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2415,
										"nodeType": "StructuredDocumentation",
										"src": "13083:143:8",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13240:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2417,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13254:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "13246:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13246:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13270:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "13261:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1560",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2419,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2418,
														"name": "Rounding",
														"nameLocations": [
															"13261:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1560,
														"src": "13261:8:8"
													},
													"referencedDeclaration": 1560,
													"src": "13261:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1560",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13245:34:8"
									},
									"returnParameters": {
										"id": 2424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "13303:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13303:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13302:9:8"
									},
									"scope": 2577,
									"src": "13231:248:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2536,
										"nodeType": "Block",
										"src": "13793:600:8",
										"statements": [
											{
												"assignments": [
													2459
												],
												"declarations": [
													{
														"constant": false,
														"id": 2459,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13811:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2536,
														"src": "13803:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2458,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13803:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2461,
												"initialValue": {
													"hexValue": "30",
													"id": 2460,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13820:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13803:18:8"
											},
											{
												"id": 2533,
												"nodeType": "UncheckedBlock",
												"src": "13831:533:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2462,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2453,
																	"src": "13859:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13868:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13859:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13874:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13859:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2476,
														"nodeType": "IfStatement",
														"src": "13855:98:8",
														"trueBody": {
															"id": 2475,
															"nodeType": "Block",
															"src": "13877:76:8",
															"statements": [
																{
																	"expression": {
																		"id": 2469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2467,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2453,
																			"src": "13895:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13905:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13895:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2470,
																	"nodeType": "ExpressionStatement",
																	"src": "13895:13:8"
																},
																{
																	"expression": {
																		"id": 2473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2471,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2459,
																			"src": "13926:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13936:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13926:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2474,
																	"nodeType": "ExpressionStatement",
																	"src": "13926:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2477,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2453,
																	"src": "13970:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13979:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "13970:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13984:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13970:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2491,
														"nodeType": "IfStatement",
														"src": "13966:95:8",
														"trueBody": {
															"id": 2490,
															"nodeType": "Block",
															"src": "13987:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 2484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2482,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2453,
																			"src": "14005:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14015:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14005:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2485,
																	"nodeType": "ExpressionStatement",
																	"src": "14005:12:8"
																},
																{
																	"expression": {
																		"id": 2488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2486,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2459,
																			"src": "14035:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14045:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14035:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2489,
																	"nodeType": "ExpressionStatement",
																	"src": "14035:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2492,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2453,
																	"src": "14078:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14087:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14078:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14092:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14078:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2506,
														"nodeType": "IfStatement",
														"src": "14074:95:8",
														"trueBody": {
															"id": 2505,
															"nodeType": "Block",
															"src": "14095:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 2499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2497,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2453,
																			"src": "14113:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14123:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14113:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2500,
																	"nodeType": "ExpressionStatement",
																	"src": "14113:12:8"
																},
																{
																	"expression": {
																		"id": 2503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2501,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2459,
																			"src": "14143:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14153:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14143:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2504,
																	"nodeType": "ExpressionStatement",
																	"src": "14143:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2507,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2453,
																	"src": "14186:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14195:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14186:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14200:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14186:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2521,
														"nodeType": "IfStatement",
														"src": "14182:95:8",
														"trueBody": {
															"id": 2520,
															"nodeType": "Block",
															"src": "14203:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 2514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2512,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2453,
																			"src": "14221:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14231:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14221:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2515,
																	"nodeType": "ExpressionStatement",
																	"src": "14221:12:8"
																},
																{
																	"expression": {
																		"id": 2518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2516,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2459,
																			"src": "14251:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14261:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14251:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2519,
																	"nodeType": "ExpressionStatement",
																	"src": "14251:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2522,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2453,
																	"src": "14294:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14303:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14294:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14307:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14294:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2532,
														"nodeType": "IfStatement",
														"src": "14290:64:8",
														"trueBody": {
															"id": 2531,
															"nodeType": "Block",
															"src": "14310:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 2529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2527,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2459,
																			"src": "14328:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14338:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14328:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2530,
																	"nodeType": "ExpressionStatement",
																	"src": "14328:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2534,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2459,
													"src": "14380:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2457,
												"id": 2535,
												"nodeType": "Return",
												"src": "14373:13:8"
											}
										]
									},
									"documentation": {
										"id": 2451,
										"nodeType": "StructuredDocumentation",
										"src": "13485:240:8",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13739:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2453,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13754:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "13746:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13746:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13745:15:8"
									},
									"returnParameters": {
										"id": 2457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "13784:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13784:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13783:9:8"
									},
									"scope": 2577,
									"src": "13730:663:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2575,
										"nodeType": "Block",
										"src": "14630:174:8",
										"statements": [
											{
												"id": 2574,
												"nodeType": "UncheckedBlock",
												"src": "14640:158:8",
												"statements": [
													{
														"assignments": [
															2549
														],
														"declarations": [
															{
																"constant": false,
																"id": 2549,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14672:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 2574,
																"src": "14664:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2548,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14664:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2553,
														"initialValue": {
															"arguments": [
																{
																	"id": 2551,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2540,
																	"src": "14688:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2550,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2537,
																	2576
																],
																"referencedDeclaration": 2537,
																"src": "14681:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14681:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14664:30:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2554,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2549,
																"src": "14715:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2567,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1560",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2558,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2555,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2543,
																					"src": "14725:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1560",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2556,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1560,
																						"src": "14737:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1560_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2557,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "14746:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1558,
																					"src": "14737:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1560",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "14725:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2564,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2559,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14752:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2562,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2560,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2549,
																									"src": "14758:6:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2561,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14768:1:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14758:11:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2563,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14757:13:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14752:18:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2565,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2540,
																					"src": "14773:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14752:26:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14725:53:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14785:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14725:61:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14781:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2571,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14724:63:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14715:72:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2547,
														"id": 2573,
														"nodeType": "Return",
														"src": "14708:79:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2538,
										"nodeType": "StructuredDocumentation",
										"src": "14399:144:8",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14557:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2540,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14572:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "14564:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14564:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14588:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "14579:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1560",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2542,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2541,
														"name": "Rounding",
														"nameLocations": [
															"14579:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1560,
														"src": "14579:8:8"
													},
													"referencedDeclaration": 1560,
													"src": "14579:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1560",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14563:34:8"
									},
									"returnParameters": {
										"id": 2547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "14621:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14621:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14620:9:8"
									},
									"scope": 2577,
									"src": "14548:256:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2578,
							"src": "203:14603:8",
							"usedErrors": []
						}
					],
					"src": "103:14704:8"
				},
				"id": 8
			}
		}
	}
}