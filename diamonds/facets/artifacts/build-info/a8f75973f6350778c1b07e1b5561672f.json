{
	"id": "a8f75973f6350778c1b07e1b5561672f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"diamonds/facets/FacetTokenLink.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport 'diamonds/facets/slots/SlotTokenLink.sol';\nimport 'imports/openzeppelin/utils/Context.sol';\nimport 'units/interfaces/IOwnableToken.sol';\n\ncontract FacetTokenLink is SlotTokenLink, Context {\n    event TokenLinkEstablished(address oldToken, address newToken);\n\n    function ____linkToken(address newToken) external virtual {\n        _onlySelf();\n        require(_self() == IOwnableToken(newToken).owner(), 'FacetTokenLink: token not owned');\n        address oldToken = tokenLink().linkedToken;\n        tokenLink().linkedToken = newToken;\n        emit TokenLinkEstablished(oldToken, newToken);\n    }\n\n    function ____mint(address account, uint amount) external virtual {\n        _onlySelf();\n        IOwnableToken(tokenLink().linkedToken).mint(account, amount);\n    }\n\n    function ____burn(address account, uint amount) external virtual {\n        _onlySelf();\n        IOwnableToken(tokenLink().linkedToken).burnFrom(account, amount);\n    }\n\n    ///\n\n    function getLinkedToken() public view virtual returns (address) {\n        return tokenLink().linkedToken;\n    }\n\n    function name() public view virtual returns (string memory) {\n        return IOwnableToken(tokenLink().linkedToken).name();\n    }\n\n    function symbol() public view virtual returns (string memory) {\n        return IOwnableToken(tokenLink().linkedToken).symbol();\n    }\n\n    function decimals() public view virtual returns (uint8) {\n        return IOwnableToken(tokenLink().linkedToken).decimals();\n    }\n\n    function totalSupply() public view virtual returns (uint) {\n        return IOwnableToken(tokenLink().linkedToken).totalSupply();\n    }\n\n    function balanceOf(address account) public view returns (uint) {\n        return IOwnableToken(tokenLink().linkedToken).balanceOf(account);\n    }\n\n    ///\n\n    function _onlySelf() internal view virtual {\n        require(_msgSender() == _self(), 'FacetTokenLink: only self');\n    }\n\n    function _self() internal view virtual returns (address) {\n        return address(this);\n    }\n}\n"
			},
			"units/interfaces/IOwnableToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport 'units/interfaces/IToken.sol';\n\ninterface IOwnableToken is IToken {\n    function mint(address account, uint amount) external;\n    function owner() external view returns (address);\n    function renounceOwnership() external;\n    function transferOwnership(address newOwner) external;\n}"
			},
			"imports/openzeppelin/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"diamonds/facets/slots/SlotTokenLink.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract SlotTokenLink {\n    bytes32 internal constant _TOKEN_LINK = keccak256('slot.token.link');\n\n    struct StorageTokenLink {\n        address linkedToken;\n    }\n\n    function tokenLink() internal pure virtual returns (StorageTokenLink storage s) {\n        bytes32 location = _TOKEN_LINK;\n        assembly {\n            s.slot := location\n        }\n    }\n}"
			},
			"units/interfaces/IToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport 'imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol';\nimport 'imports/openzeppelin/token/ERC20/extensions/IERC20Permit.sol';\nimport 'imports/openzeppelin/token/ERC20/IERC20.sol';\n\ninterface IToken is IERC20, IERC20Metadata, IERC20Permit {\n    function balanceOfAt(address account, uint snapshotId) external view returns (uint);\n    function totalSupplyAt(uint snapshotId) external view returns (uint);\n    function currentSnapshotId() external view returns (uint);\n    function snapshot() external returns (uint);\n    function burn(uint amount) external;\n    function burnFrom(address account, uint amount) external;\n}"
			},
			"imports/openzeppelin/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.19;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"imports/openzeppelin/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.19;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"diamonds/facets/FacetTokenLink.sol": {
				"FacetTokenLink": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newToken",
									"type": "address"
								}
							],
							"name": "TokenLinkEstablished",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "____burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newToken",
									"type": "address"
								}
							],
							"name": "____linkToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "____mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLinkedToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"diamonds/facets/FacetTokenLink.sol\":201:2064  contract FacetTokenLink is SlotTokenLink, Context {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"diamonds/facets/FacetTokenLink.sol\":201:2064  contract FacetTokenLink is SlotTokenLink, Context {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8752b02f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa7239f3b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xea8479bd\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4ac947f7\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"diamonds/facets/FacetTokenLink.sol\":1133:1262  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"diamonds/facets/FacetTokenLink.sol\":1542:1676  function totalSupply() public view virtual returns (uint) {... */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n        /* \"#utility.yul\":816:841   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":804:806   */\n      0x20\n        /* \"#utility.yul\":789:807   */\n      add\n        /* \"diamonds/facets/FacetTokenLink.sol\":1542:1676  function totalSupply() public view virtual returns (uint) {... */\n      tag_15\n        /* \"#utility.yul\":670:847   */\n      jump\n        /* \"diamonds/facets/FacetTokenLink.sol\":1407:1536  function decimals() public view virtual returns (uint8) {... */\n    tag_5:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n        /* \"#utility.yul\":1024:1028   */\n      0xff\n        /* \"#utility.yul\":1012:1029   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":994:1030   */\n      dup2\n      mstore\n        /* \"#utility.yul\":982:984   */\n      0x20\n        /* \"#utility.yul\":967:985   */\n      add\n        /* \"diamonds/facets/FacetTokenLink.sol\":1407:1536  function decimals() public view virtual returns (uint8) {... */\n      tag_15\n        /* \"#utility.yul\":852:1036   */\n      jump\n        /* \"diamonds/facets/FacetTokenLink.sol\":665:828  function ____mint(address account, uint amount) external virtual {... */\n    tag_6:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      stop\n        /* \"diamonds/facets/FacetTokenLink.sol\":1682:1826  function balanceOf(address account) public view returns (uint) {... */\n    tag_7:\n      tag_17\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"diamonds/facets/FacetTokenLink.sol\":1016:1127  function getLinkedToken() public view virtual returns (address) {... */\n    tag_8:\n      0x00\n      dup1\n      mload\n      0x20\n      data_61448ff004eb25be10d68311465c7f0dabb762b05dcdd9c8f4c76c341721e40b\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"diamonds/facets/FacetTokenLink.sol\":1097:1120  tokenLink().linkedToken */\n      sload\n        /* \"diamonds/facets/FacetTokenLink.sol\":1016:1127  function getLinkedToken() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetTokenLink.sol\":1097:1120  tokenLink().linkedToken */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1895:1946   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1883:1885   */\n      0x20\n        /* \"#utility.yul\":1868:1886   */\n      add\n        /* \"diamonds/facets/FacetTokenLink.sol\":1016:1127  function getLinkedToken() public view virtual returns (address) {... */\n      tag_15\n        /* \"#utility.yul\":1749:1952   */\n      jump\n        /* \"diamonds/facets/FacetTokenLink.sol\":1268:1401  function symbol() public view virtual returns (string memory) {... */\n    tag_9:\n      tag_13\n      tag_39\n      jump\t// in\n        /* \"diamonds/facets/FacetTokenLink.sol\":326:659  function ____linkToken(address newToken) external virtual {... */\n    tag_10:\n      tag_25\n      tag_42\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n        /* \"diamonds/facets/FacetTokenLink.sol\":834:1001  function ____burn(address account, uint amount) external virtual {... */\n    tag_11:\n      tag_25\n      tag_45\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n        /* \"diamonds/facets/FacetTokenLink.sol\":1133:1262  function name() public view virtual returns (string memory) {... */\n    tag_14:\n      0x00\n      dup1\n      mload\n      0x20\n      data_61448ff004eb25be10d68311465c7f0dabb762b05dcdd9c8f4c76c341721e40b\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"diamonds/facets/FacetTokenLink.sol\":1224:1247  tokenLink().linkedToken */\n      sload\n        /* \"diamonds/facets/FacetTokenLink.sol\":1210:1255  IOwnableToken(tokenLink().linkedToken).name() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x06fdde03)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"diamonds/facets/FacetTokenLink.sol\":1178:1191  string memory */\n      0x60\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetTokenLink.sol\":1224:1247  tokenLink().linkedToken */\n      and\n      swap2\n        /* \"diamonds/facets/FacetTokenLink.sol\":1210:1253  IOwnableToken(tokenLink().linkedToken).name */\n      0x06fdde03\n      swap2\n        /* \"diamonds/facets/FacetTokenLink.sol\":1210:1255  IOwnableToken(tokenLink().linkedToken).name() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n        /* \"diamonds/facets/FacetTokenLink.sol\":1224:1247  tokenLink().linkedToken */\n      0x00\n      swap3\n        /* \"diamonds/facets/FacetTokenLink.sol\":1210:1255  IOwnableToken(tokenLink().linkedToken).name() */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"diamonds/facets/FacetTokenLink.sol\":1224:1247  tokenLink().linkedToken */\n      dup7\n        /* \"diamonds/facets/FacetTokenLink.sol\":1210:1255  IOwnableToken(tokenLink().linkedToken).name() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_51\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_51:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_52\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"diamonds/facets/FacetTokenLink.sol\":1203:1255  return IOwnableToken(tokenLink().linkedToken).name() */\n      swap1\n      pop\n        /* \"diamonds/facets/FacetTokenLink.sol\":1133:1262  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"diamonds/facets/FacetTokenLink.sol\":1542:1676  function totalSupply() public view virtual returns (uint) {... */\n    tag_18:\n      0x00\n      dup1\n      mload\n      0x20\n      data_61448ff004eb25be10d68311465c7f0dabb762b05dcdd9c8f4c76c341721e40b\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"diamonds/facets/FacetTokenLink.sol\":1631:1654  tokenLink().linkedToken */\n      sload\n        /* \"diamonds/facets/FacetTokenLink.sol\":1617:1669  IOwnableToken(tokenLink().linkedToken).totalSupply() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x18160ddd)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"diamonds/facets/FacetTokenLink.sol\":1594:1598  uint */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetTokenLink.sol\":1631:1654  tokenLink().linkedToken */\n      and\n      swap2\n        /* \"diamonds/facets/FacetTokenLink.sol\":1617:1667  IOwnableToken(tokenLink().linkedToken).totalSupply */\n      0x18160ddd\n      swap2\n        /* \"diamonds/facets/FacetTokenLink.sol\":1617:1669  IOwnableToken(tokenLink().linkedToken).totalSupply() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"diamonds/facets/FacetTokenLink.sol\":1631:1654  tokenLink().linkedToken */\n      dup7\n        /* \"diamonds/facets/FacetTokenLink.sol\":1617:1669  IOwnableToken(tokenLink().linkedToken).totalSupply() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n        /* \"diamonds/facets/FacetTokenLink.sol\":1407:1536  function decimals() public view virtual returns (uint8) {... */\n    tag_22:\n      0x00\n      dup1\n      mload\n      0x20\n      data_61448ff004eb25be10d68311465c7f0dabb762b05dcdd9c8f4c76c341721e40b\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"diamonds/facets/FacetTokenLink.sol\":1494:1517  tokenLink().linkedToken */\n      sload\n        /* \"diamonds/facets/FacetTokenLink.sol\":1480:1529  IOwnableToken(tokenLink().linkedToken).decimals() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x313ce567)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"diamonds/facets/FacetTokenLink.sol\":1456:1461  uint8 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetTokenLink.sol\":1494:1517  tokenLink().linkedToken */\n      and\n      swap2\n        /* \"diamonds/facets/FacetTokenLink.sol\":1480:1527  IOwnableToken(tokenLink().linkedToken).decimals */\n      0x313ce567\n      swap2\n        /* \"diamonds/facets/FacetTokenLink.sol\":1480:1529  IOwnableToken(tokenLink().linkedToken).decimals() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"diamonds/facets/FacetTokenLink.sol\":1494:1517  tokenLink().linkedToken */\n      dup7\n        /* \"diamonds/facets/FacetTokenLink.sol\":1480:1529  IOwnableToken(tokenLink().linkedToken).decimals() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n        /* \"diamonds/facets/FacetTokenLink.sol\":665:828  function ____mint(address account, uint amount) external virtual {... */\n    tag_28:\n        /* \"diamonds/facets/FacetTokenLink.sol\":740:751  _onlySelf() */\n      tag_67\n        /* \"diamonds/facets/FacetTokenLink.sol\":740:749  _onlySelf */\n      tag_68\n        /* \"diamonds/facets/FacetTokenLink.sol\":740:751  _onlySelf() */\n      jump\t// in\n    tag_67:\n      0x00\n      dup1\n      mload\n      0x20\n      data_61448ff004eb25be10d68311465c7f0dabb762b05dcdd9c8f4c76c341721e40b\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"diamonds/facets/FacetTokenLink.sol\":775:798  tokenLink().linkedToken */\n      sload\n        /* \"diamonds/facets/FacetTokenLink.sol\":761:821  IOwnableToken(tokenLink().linkedToken).mint(account, amount) */\n      mload(0x40)\n      shl(0xe0, 0x40c10f19)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3650:3682   */\n      dup5\n      dup2\n      and\n        /* \"diamonds/facets/FacetTokenLink.sol\":761:821  IOwnableToken(tokenLink().linkedToken).mint(account, amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":3632:3683   */\n      mstore\n        /* \"#utility.yul\":3699:3717   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3692:3726   */\n      dup5\n      swap1\n      mstore\n        /* \"diamonds/facets/FacetTokenLink.sol\":775:798  tokenLink().linkedToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"diamonds/facets/FacetTokenLink.sol\":761:804  IOwnableToken(tokenLink().linkedToken).mint */\n      0x40c10f19\n      swap1\n        /* \"#utility.yul\":3605:3623   */\n      0x44\n      add\n        /* \"diamonds/facets/FacetTokenLink.sol\":761:821  IOwnableToken(tokenLink().linkedToken).mint(account, amount) */\n    tag_70:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_74\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_74:\n      pop\n      pop\n      pop\n      pop\n        /* \"diamonds/facets/FacetTokenLink.sol\":665:828  function ____mint(address account, uint amount) external virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"diamonds/facets/FacetTokenLink.sol\":1682:1826  function balanceOf(address account) public view returns (uint) {... */\n    tag_32:\n        /* \"diamonds/facets/FacetTokenLink.sol\":1739:1743  uint */\n      0x00\n      0x00\n      dup1\n      mload\n      0x20\n      data_61448ff004eb25be10d68311465c7f0dabb762b05dcdd9c8f4c76c341721e40b\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"diamonds/facets/FacetTokenLink.sol\":1776:1799  tokenLink().linkedToken */\n      sload\n        /* \"diamonds/facets/FacetTokenLink.sol\":1762:1819  IOwnableToken(tokenLink().linkedToken).balanceOf(account) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1913:1945   */\n      dup5\n      dup2\n      and\n        /* \"diamonds/facets/FacetTokenLink.sol\":1762:1819  IOwnableToken(tokenLink().linkedToken).balanceOf(account) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1895:1946   */\n      mstore\n        /* \"diamonds/facets/FacetTokenLink.sol\":1776:1799  tokenLink().linkedToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"diamonds/facets/FacetTokenLink.sol\":1762:1810  IOwnableToken(tokenLink().linkedToken).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1868:1886   */\n      0x24\n      add\n        /* \"diamonds/facets/FacetTokenLink.sol\":1762:1819  IOwnableToken(tokenLink().linkedToken).balanceOf(account) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_79\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_80:\n        /* \"diamonds/facets/FacetTokenLink.sol\":1755:1819  return IOwnableToken(tokenLink().linkedToken).balanceOf(account) */\n      swap3\n        /* \"diamonds/facets/FacetTokenLink.sol\":1682:1826  function balanceOf(address account) public view returns (uint) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"diamonds/facets/FacetTokenLink.sol\":1268:1401  function symbol() public view virtual returns (string memory) {... */\n    tag_39:\n      0x00\n      dup1\n      mload\n      0x20\n      data_61448ff004eb25be10d68311465c7f0dabb762b05dcdd9c8f4c76c341721e40b\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"diamonds/facets/FacetTokenLink.sol\":1361:1384  tokenLink().linkedToken */\n      sload\n        /* \"diamonds/facets/FacetTokenLink.sol\":1347:1394  IOwnableToken(tokenLink().linkedToken).symbol() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x95d89b41)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"diamonds/facets/FacetTokenLink.sol\":1315:1328  string memory */\n      0x60\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetTokenLink.sol\":1361:1384  tokenLink().linkedToken */\n      and\n      swap2\n        /* \"diamonds/facets/FacetTokenLink.sol\":1347:1392  IOwnableToken(tokenLink().linkedToken).symbol */\n      0x95d89b41\n      swap2\n        /* \"diamonds/facets/FacetTokenLink.sol\":1347:1394  IOwnableToken(tokenLink().linkedToken).symbol() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n        /* \"diamonds/facets/FacetTokenLink.sol\":1361:1384  tokenLink().linkedToken */\n      0x00\n      swap3\n        /* \"diamonds/facets/FacetTokenLink.sol\":1347:1394  IOwnableToken(tokenLink().linkedToken).symbol() */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"diamonds/facets/FacetTokenLink.sol\":1361:1384  tokenLink().linkedToken */\n      dup7\n        /* \"diamonds/facets/FacetTokenLink.sol\":1347:1394  IOwnableToken(tokenLink().linkedToken).symbol() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_51\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"diamonds/facets/FacetTokenLink.sol\":326:659  function ____linkToken(address newToken) external virtual {... */\n    tag_43:\n        /* \"diamonds/facets/FacetTokenLink.sol\":394:405  _onlySelf() */\n      tag_89\n        /* \"diamonds/facets/FacetTokenLink.sol\":394:403  _onlySelf */\n      tag_68\n        /* \"diamonds/facets/FacetTokenLink.sol\":394:405  _onlySelf() */\n      jump\t// in\n    tag_89:\n        /* \"diamonds/facets/FacetTokenLink.sol\":448:456  newToken */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetTokenLink.sol\":434:463  IOwnableToken(newToken).owner */\n      and\n      0x8da5cb5b\n        /* \"diamonds/facets/FacetTokenLink.sol\":434:465  IOwnableToken(newToken).owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetTokenLink.sol\":423:465  _self() == IOwnableToken(newToken).owner() */\n      and\n        /* \"diamonds/facets/FacetTokenLink.sol\":2050:2054  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"diamonds/facets/FacetTokenLink.sol\":423:465  _self() == IOwnableToken(newToken).owner() */\n      and\n      eq\n        /* \"diamonds/facets/FacetTokenLink.sol\":415:501  require(_self() == IOwnableToken(newToken).owner(), 'FacetTokenLink: token not owned') */\n      tag_96\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4195:4197   */\n      0x20\n        /* \"diamonds/facets/FacetTokenLink.sol\":415:501  require(_self() == IOwnableToken(newToken).owner(), 'FacetTokenLink: token not owned') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4177:4198   */\n      mstore\n        /* \"#utility.yul\":4234:4236   */\n      0x1f\n        /* \"#utility.yul\":4214:4232   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4207:4237   */\n      mstore\n        /* \"#utility.yul\":4273:4306   */\n      0x4661636574546f6b656e4c696e6b3a20746f6b656e206e6f74206f776e656400\n        /* \"#utility.yul\":4253:4271   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4246:4307   */\n      mstore\n        /* \"#utility.yul\":4324:4342   */\n      0x64\n      add\n        /* \"diamonds/facets/FacetTokenLink.sol\":415:501  require(_self() == IOwnableToken(newToken).owner(), 'FacetTokenLink: token not owned') */\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"diamonds/facets/FacetTokenLink.sol\":511:527  address oldToken */\n      0x00\n      0x00\n      dup1\n      mload\n      0x20\n      data_61448ff004eb25be10d68311465c7f0dabb762b05dcdd9c8f4c76c341721e40b\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"diamonds/facets/FacetTokenLink.sol\":530:553  tokenLink().linkedToken */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n        /* \"diamonds/facets/FacetTokenLink.sol\":589:597  newToken */\n      dup2\n      0x00\n      dup1\n      mload\n      0x20\n      data_61448ff004eb25be10d68311465c7f0dabb762b05dcdd9c8f4c76c341721e40b\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"diamonds/facets/FacetTokenLink.sol\":563:597  tokenLink().linkedToken = newToken */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"diamonds/facets/FacetTokenLink.sol\":612:652  TokenLinkEstablished(oldToken, newToken) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4583:4598   */\n      dup4\n      dup4\n      and\n        /* \"#utility.yul\":4565:4599   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4635:4650   */\n      swap2\n      dup5\n      and\n        /* \"#utility.yul\":4630:4632   */\n      0x20\n        /* \"#utility.yul\":4615:4633   */\n      dup4\n      add\n        /* \"#utility.yul\":4608:4651   */\n      mstore\n        /* \"diamonds/facets/FacetTokenLink.sol\":612:652  TokenLinkEstablished(oldToken, newToken) */\n      0x6a9922e4e54faa19ecbd2d1dbf36b0802c1f629fa0aba9679bddc7b932c5fe64\n      swap2\n        /* \"#utility.yul\":4500:4518   */\n      add\n        /* \"diamonds/facets/FacetTokenLink.sol\":612:652  TokenLinkEstablished(oldToken, newToken) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"diamonds/facets/FacetTokenLink.sol\":384:659  {... */\n      pop\n        /* \"diamonds/facets/FacetTokenLink.sol\":326:659  function ____linkToken(address newToken) external virtual {... */\n      pop\n      jump\t// out\n        /* \"diamonds/facets/FacetTokenLink.sol\":834:1001  function ____burn(address account, uint amount) external virtual {... */\n    tag_46:\n        /* \"diamonds/facets/FacetTokenLink.sol\":909:920  _onlySelf() */\n      tag_104\n        /* \"diamonds/facets/FacetTokenLink.sol\":909:918  _onlySelf */\n      tag_68\n        /* \"diamonds/facets/FacetTokenLink.sol\":909:920  _onlySelf() */\n      jump\t// in\n    tag_104:\n      0x00\n      dup1\n      mload\n      0x20\n      data_61448ff004eb25be10d68311465c7f0dabb762b05dcdd9c8f4c76c341721e40b\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"diamonds/facets/FacetTokenLink.sol\":944:967  tokenLink().linkedToken */\n      sload\n        /* \"diamonds/facets/FacetTokenLink.sol\":930:994  IOwnableToken(tokenLink().linkedToken).burnFrom(account, amount) */\n      mload(0x40)\n      shl(0xe4, 0x079cc679)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3650:3682   */\n      dup5\n      dup2\n      and\n        /* \"diamonds/facets/FacetTokenLink.sol\":930:994  IOwnableToken(tokenLink().linkedToken).burnFrom(account, amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":3632:3683   */\n      mstore\n        /* \"#utility.yul\":3699:3717   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3692:3726   */\n      dup5\n      swap1\n      mstore\n        /* \"diamonds/facets/FacetTokenLink.sol\":944:967  tokenLink().linkedToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"diamonds/facets/FacetTokenLink.sol\":930:977  IOwnableToken(tokenLink().linkedToken).burnFrom */\n      0x79cc6790\n      swap1\n        /* \"#utility.yul\":3605:3623   */\n      0x44\n      add\n        /* \"diamonds/facets/FacetTokenLink.sol\":930:994  IOwnableToken(tokenLink().linkedToken).burnFrom(account, amount) */\n      tag_70\n        /* \"#utility.yul\":3458:3732   */\n      jump\n        /* \"diamonds/facets/FacetTokenLink.sol\":1841:1962  function _onlySelf() internal view virtual {... */\n    tag_68:\n        /* \"imports/openzeppelin/utils/Context.sol\":720:730  msg.sender */\n      caller\n        /* \"diamonds/facets/FacetTokenLink.sol\":2050:2054  this */\n      address\n        /* \"diamonds/facets/FacetTokenLink.sol\":1902:1925  _msgSender() == _self() */\n      eq\n        /* \"diamonds/facets/FacetTokenLink.sol\":1894:1955  require(_msgSender() == _self(), 'FacetTokenLink: only self') */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4864:4866   */\n      0x20\n        /* \"diamonds/facets/FacetTokenLink.sol\":1894:1955  require(_msgSender() == _self(), 'FacetTokenLink: only self') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4846:4867   */\n      mstore\n        /* \"#utility.yul\":4903:4905   */\n      0x19\n        /* \"#utility.yul\":4883:4901   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4876:4906   */\n      mstore\n        /* \"#utility.yul\":4942:4969   */\n      0x4661636574546f6b656e4c696e6b3a206f6e6c792073656c6600000000000000\n        /* \"#utility.yul\":4922:4940   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4915:4970   */\n      mstore\n        /* \"#utility.yul\":4987:5005   */\n      0x64\n      add\n        /* \"diamonds/facets/FacetTokenLink.sol\":1894:1955  require(_msgSender() == _self(), 'FacetTokenLink: only self') */\n      tag_97\n        /* \"#utility.yul\":4662:5011   */\n      jump\n        /* \"diamonds/facets/FacetTokenLink.sol\":1894:1955  require(_msgSender() == _self(), 'FacetTokenLink: only self') */\n    tag_115:\n        /* \"diamonds/facets/FacetTokenLink.sol\":1841:1962  function _onlySelf() internal view virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":14:264   */\n    tag_120:\n        /* \"#utility.yul\":99:100   */\n      0x00\n        /* \"#utility.yul\":109:222   */\n    tag_125:\n        /* \"#utility.yul\":123:129   */\n      dup4\n        /* \"#utility.yul\":120:121   */\n      dup2\n        /* \"#utility.yul\":117:130   */\n      lt\n        /* \"#utility.yul\":109:222   */\n      iszero\n      tag_127\n      jumpi\n        /* \"#utility.yul\":199:210   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":193:211   */\n      mload\n        /* \"#utility.yul\":180:191   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":173:212   */\n      mstore\n        /* \"#utility.yul\":145:147   */\n      0x20\n        /* \"#utility.yul\":138:148   */\n      add\n        /* \"#utility.yul\":109:222   */\n      jump(tag_125)\n    tag_127:\n      pop\n      pop\n        /* \"#utility.yul\":256:257   */\n      0x00\n        /* \"#utility.yul\":238:254   */\n      swap2\n      add\n        /* \"#utility.yul\":231:258   */\n      mstore\n        /* \"#utility.yul\":14:264   */\n      jump\t// out\n        /* \"#utility.yul\":269:665   */\n    tag_16:\n        /* \"#utility.yul\":418:420   */\n      0x20\n        /* \"#utility.yul\":407:416   */\n      dup2\n        /* \"#utility.yul\":400:421   */\n      mstore\n        /* \"#utility.yul\":381:385   */\n      0x00\n        /* \"#utility.yul\":450:456   */\n      dup3\n        /* \"#utility.yul\":444:457   */\n      mload\n        /* \"#utility.yul\":493:499   */\n      dup1\n        /* \"#utility.yul\":488:490   */\n      0x20\n        /* \"#utility.yul\":477:486   */\n      dup5\n        /* \"#utility.yul\":473:491   */\n      add\n        /* \"#utility.yul\":466:500   */\n      mstore\n        /* \"#utility.yul\":509:588   */\n      tag_129\n        /* \"#utility.yul\":581:587   */\n      dup2\n        /* \"#utility.yul\":576:578   */\n      0x40\n        /* \"#utility.yul\":565:574   */\n      dup6\n        /* \"#utility.yul\":561:579   */\n      add\n        /* \"#utility.yul\":556:558   */\n      0x20\n        /* \"#utility.yul\":548:554   */\n      dup8\n        /* \"#utility.yul\":544:559   */\n      add\n        /* \"#utility.yul\":509:588   */\n      tag_120\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":649:651   */\n      0x1f\n        /* \"#utility.yul\":628:643   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":624:653   */\n      and\n        /* \"#utility.yul\":609:654   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":656:658   */\n      0x40\n        /* \"#utility.yul\":605:659   */\n      add\n      swap3\n        /* \"#utility.yul\":269:665   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1041:1172   */\n    tag_121:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1116:1147   */\n      dup2\n      and\n        /* \"#utility.yul\":1106:1148   */\n      dup2\n      eq\n        /* \"#utility.yul\":1096:1166   */\n      tag_133\n      jumpi\n        /* \"#utility.yul\":1162:1163   */\n      0x00\n        /* \"#utility.yul\":1159:1160   */\n      dup1\n        /* \"#utility.yul\":1152:1164   */\n      revert\n        /* \"#utility.yul\":1096:1166   */\n    tag_133:\n        /* \"#utility.yul\":1041:1172   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1177:1492   */\n    tag_27:\n        /* \"#utility.yul\":1245:1251   */\n      0x00\n        /* \"#utility.yul\":1253:1259   */\n      dup1\n        /* \"#utility.yul\":1306:1308   */\n      0x40\n        /* \"#utility.yul\":1294:1303   */\n      dup4\n        /* \"#utility.yul\":1285:1292   */\n      dup6\n        /* \"#utility.yul\":1281:1304   */\n      sub\n        /* \"#utility.yul\":1277:1309   */\n      slt\n        /* \"#utility.yul\":1274:1326   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":1322:1323   */\n      0x00\n        /* \"#utility.yul\":1319:1320   */\n      dup1\n        /* \"#utility.yul\":1312:1324   */\n      revert\n        /* \"#utility.yul\":1274:1326   */\n    tag_135:\n        /* \"#utility.yul\":1361:1370   */\n      dup3\n        /* \"#utility.yul\":1348:1371   */\n      calldataload\n        /* \"#utility.yul\":1380:1411   */\n      tag_136\n        /* \"#utility.yul\":1405:1410   */\n      dup2\n        /* \"#utility.yul\":1380:1411   */\n      tag_121\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":1430:1435   */\n      swap5\n        /* \"#utility.yul\":1482:1484   */\n      0x20\n        /* \"#utility.yul\":1467:1485   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1454:1486   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1177:1492   */\n      jump\t// out\n        /* \"#utility.yul\":1497:1744   */\n    tag_31:\n        /* \"#utility.yul\":1556:1562   */\n      0x00\n        /* \"#utility.yul\":1609:1611   */\n      0x20\n        /* \"#utility.yul\":1597:1606   */\n      dup3\n        /* \"#utility.yul\":1588:1595   */\n      dup5\n        /* \"#utility.yul\":1584:1607   */\n      sub\n        /* \"#utility.yul\":1580:1612   */\n      slt\n        /* \"#utility.yul\":1577:1629   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":1625:1626   */\n      0x00\n        /* \"#utility.yul\":1622:1623   */\n      dup1\n        /* \"#utility.yul\":1615:1627   */\n      revert\n        /* \"#utility.yul\":1577:1629   */\n    tag_138:\n        /* \"#utility.yul\":1664:1673   */\n      dup2\n        /* \"#utility.yul\":1651:1674   */\n      calldataload\n        /* \"#utility.yul\":1683:1714   */\n      tag_139\n        /* \"#utility.yul\":1708:1713   */\n      dup2\n        /* \"#utility.yul\":1683:1714   */\n      tag_121\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1733:1738   */\n      swap4\n        /* \"#utility.yul\":1497:1744   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1957:2084   */\n    tag_122:\n        /* \"#utility.yul\":2018:2028   */\n      0x4e487b71\n        /* \"#utility.yul\":2013:2016   */\n      0xe0\n        /* \"#utility.yul\":2009:2029   */\n      shl\n        /* \"#utility.yul\":2006:2007   */\n      0x00\n        /* \"#utility.yul\":1999:2030   */\n      mstore\n        /* \"#utility.yul\":2049:2053   */\n      0x41\n        /* \"#utility.yul\":2046:2047   */\n      0x04\n        /* \"#utility.yul\":2039:2054   */\n      mstore\n        /* \"#utility.yul\":2073:2077   */\n      0x24\n        /* \"#utility.yul\":2070:2071   */\n      0x00\n        /* \"#utility.yul\":2063:2078   */\n      revert\n        /* \"#utility.yul\":2089:2986   */\n    tag_53:\n        /* \"#utility.yul\":2169:2175   */\n      0x00\n        /* \"#utility.yul\":2222:2224   */\n      0x20\n        /* \"#utility.yul\":2210:2219   */\n      dup3\n        /* \"#utility.yul\":2201:2208   */\n      dup5\n        /* \"#utility.yul\":2197:2220   */\n      sub\n        /* \"#utility.yul\":2193:2225   */\n      slt\n        /* \"#utility.yul\":2190:2242   */\n      iszero\n      tag_143\n      jumpi\n        /* \"#utility.yul\":2238:2239   */\n      0x00\n        /* \"#utility.yul\":2235:2236   */\n      dup1\n        /* \"#utility.yul\":2228:2240   */\n      revert\n        /* \"#utility.yul\":2190:2242   */\n    tag_143:\n        /* \"#utility.yul\":2271:2280   */\n      dup2\n        /* \"#utility.yul\":2265:2281   */\n      mload\n        /* \"#utility.yul\":2300:2318   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2341:2343   */\n      dup1\n        /* \"#utility.yul\":2333:2339   */\n      dup3\n        /* \"#utility.yul\":2330:2344   */\n      gt\n        /* \"#utility.yul\":2327:2361   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":2357:2358   */\n      0x00\n        /* \"#utility.yul\":2354:2355   */\n      dup1\n        /* \"#utility.yul\":2347:2359   */\n      revert\n        /* \"#utility.yul\":2327:2361   */\n    tag_144:\n        /* \"#utility.yul\":2395:2401   */\n      dup2\n        /* \"#utility.yul\":2384:2393   */\n      dup5\n        /* \"#utility.yul\":2380:2402   */\n      add\n        /* \"#utility.yul\":2370:2402   */\n      swap2\n      pop\n        /* \"#utility.yul\":2440:2447   */\n      dup5\n        /* \"#utility.yul\":2433:2437   */\n      0x1f\n        /* \"#utility.yul\":2429:2431   */\n      dup4\n        /* \"#utility.yul\":2425:2438   */\n      add\n        /* \"#utility.yul\":2421:2448   */\n      slt\n        /* \"#utility.yul\":2411:2466   */\n      tag_145\n      jumpi\n        /* \"#utility.yul\":2462:2463   */\n      0x00\n        /* \"#utility.yul\":2459:2460   */\n      dup1\n        /* \"#utility.yul\":2452:2464   */\n      revert\n        /* \"#utility.yul\":2411:2466   */\n    tag_145:\n        /* \"#utility.yul\":2491:2493   */\n      dup2\n        /* \"#utility.yul\":2485:2494   */\n      mload\n        /* \"#utility.yul\":2513:2515   */\n      dup2\n        /* \"#utility.yul\":2509:2511   */\n      dup2\n        /* \"#utility.yul\":2506:2516   */\n      gt\n        /* \"#utility.yul\":2503:2539   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":2519:2537   */\n      tag_147\n      tag_122\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":2594:2596   */\n      0x40\n        /* \"#utility.yul\":2588:2597   */\n      mload\n        /* \"#utility.yul\":2562:2564   */\n      0x1f\n        /* \"#utility.yul\":2648:2661   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2644:2666   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2668:2670   */\n      0x3f\n        /* \"#utility.yul\":2640:2671   */\n      add\n        /* \"#utility.yul\":2636:2676   */\n      and\n        /* \"#utility.yul\":2624:2677   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2692:2710   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":2712:2734   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":2689:2735   */\n      or\n        /* \"#utility.yul\":2686:2758   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":2738:2756   */\n      tag_149\n      tag_122\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2778:2788   */\n      dup2\n        /* \"#utility.yul\":2774:2776   */\n      0x40\n        /* \"#utility.yul\":2767:2789   */\n      mstore\n        /* \"#utility.yul\":2813:2815   */\n      dup3\n        /* \"#utility.yul\":2805:2811   */\n      dup2\n        /* \"#utility.yul\":2798:2816   */\n      mstore\n        /* \"#utility.yul\":2853:2860   */\n      dup8\n        /* \"#utility.yul\":2848:2850   */\n      0x20\n        /* \"#utility.yul\":2843:2845   */\n      dup5\n        /* \"#utility.yul\":2839:2841   */\n      dup8\n        /* \"#utility.yul\":2835:2846   */\n      add\n        /* \"#utility.yul\":2831:2851   */\n      add\n        /* \"#utility.yul\":2828:2861   */\n      gt\n        /* \"#utility.yul\":2825:2878   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":2874:2875   */\n      0x00\n        /* \"#utility.yul\":2871:2872   */\n      dup1\n        /* \"#utility.yul\":2864:2876   */\n      revert\n        /* \"#utility.yul\":2825:2878   */\n    tag_150:\n        /* \"#utility.yul\":2887:2955   */\n      tag_151\n        /* \"#utility.yul\":2952:2954   */\n      dup4\n        /* \"#utility.yul\":2947:2949   */\n      0x20\n        /* \"#utility.yul\":2939:2945   */\n      dup4\n        /* \"#utility.yul\":2935:2950   */\n      add\n        /* \"#utility.yul\":2930:2932   */\n      0x20\n        /* \"#utility.yul\":2926:2928   */\n      dup9\n        /* \"#utility.yul\":2922:2933   */\n      add\n        /* \"#utility.yul\":2887:2955   */\n      tag_120\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2974:2980   */\n      swap8\n        /* \"#utility.yul\":2089:2986   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2991:3175   */\n    tag_59:\n        /* \"#utility.yul\":3061:3067   */\n      0x00\n        /* \"#utility.yul\":3114:3116   */\n      0x20\n        /* \"#utility.yul\":3102:3111   */\n      dup3\n        /* \"#utility.yul\":3093:3100   */\n      dup5\n        /* \"#utility.yul\":3089:3112   */\n      sub\n        /* \"#utility.yul\":3085:3117   */\n      slt\n        /* \"#utility.yul\":3082:3134   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":3130:3131   */\n      0x00\n        /* \"#utility.yul\":3127:3128   */\n      dup1\n        /* \"#utility.yul\":3120:3132   */\n      revert\n        /* \"#utility.yul\":3082:3134   */\n    tag_153:\n      pop\n        /* \"#utility.yul\":3153:3169   */\n      mload\n      swap2\n        /* \"#utility.yul\":2991:3175   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3180:3453   */\n    tag_65:\n        /* \"#utility.yul\":3248:3254   */\n      0x00\n        /* \"#utility.yul\":3301:3303   */\n      0x20\n        /* \"#utility.yul\":3289:3298   */\n      dup3\n        /* \"#utility.yul\":3280:3287   */\n      dup5\n        /* \"#utility.yul\":3276:3299   */\n      sub\n        /* \"#utility.yul\":3272:3304   */\n      slt\n        /* \"#utility.yul\":3269:3321   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":3317:3318   */\n      0x00\n        /* \"#utility.yul\":3314:3315   */\n      dup1\n        /* \"#utility.yul\":3307:3319   */\n      revert\n        /* \"#utility.yul\":3269:3321   */\n    tag_155:\n        /* \"#utility.yul\":3349:3358   */\n      dup2\n        /* \"#utility.yul\":3343:3359   */\n      mload\n        /* \"#utility.yul\":3399:3403   */\n      0xff\n        /* \"#utility.yul\":3392:3397   */\n      dup2\n        /* \"#utility.yul\":3388:3404   */\n      and\n        /* \"#utility.yul\":3381:3386   */\n      dup2\n        /* \"#utility.yul\":3378:3405   */\n      eq\n        /* \"#utility.yul\":3368:3423   */\n      tag_139\n      jumpi\n        /* \"#utility.yul\":3419:3420   */\n      0x00\n        /* \"#utility.yul\":3416:3417   */\n      dup1\n        /* \"#utility.yul\":3409:3421   */\n      revert\n        /* \"#utility.yul\":3737:3988   */\n    tag_93:\n        /* \"#utility.yul\":3807:3813   */\n      0x00\n        /* \"#utility.yul\":3860:3862   */\n      0x20\n        /* \"#utility.yul\":3848:3857   */\n      dup3\n        /* \"#utility.yul\":3839:3846   */\n      dup5\n        /* \"#utility.yul\":3835:3858   */\n      sub\n        /* \"#utility.yul\":3831:3863   */\n      slt\n        /* \"#utility.yul\":3828:3880   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":3876:3877   */\n      0x00\n        /* \"#utility.yul\":3873:3874   */\n      dup1\n        /* \"#utility.yul\":3866:3878   */\n      revert\n        /* \"#utility.yul\":3828:3880   */\n    tag_159:\n        /* \"#utility.yul\":3908:3917   */\n      dup2\n        /* \"#utility.yul\":3902:3918   */\n      mload\n        /* \"#utility.yul\":3927:3958   */\n      tag_139\n        /* \"#utility.yul\":3952:3957   */\n      dup2\n        /* \"#utility.yul\":3927:3958   */\n      tag_121\n      jump\t// in\n    stop\n    data_61448ff004eb25be10d68311465c7f0dabb762b05dcdd9c8f4c76c341721e40b beaf54d3716fb445aa475454e50dfd5f08f0c257447c1fe9f7e82d97c0b7a698\n\n    auxdata: 0xa264697066735822122011b7d69bfb97ba6b070e2f94d7a304539c343e8e2aa89091e9546a4a1bb08de864736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061085e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806370a082311161006657806370a08231146100fb5780638752b02f1461010e57806395d89b4114610136578063a7239f3b1461013e578063ea8479bd1461015157600080fd5b806306fdde031461009857806318160ddd146100b6578063313ce567146100cc5780634ac947f7146100e6575b600080fd5b6100a0610164565b6040516100ad9190610651565b60405180910390f35b6100be6101e8565b6040519081526020016100ad565b6100d4610263565b60405160ff90911681526020016100ad565b6100f96100f436600461069c565b6102de565b005b6100be6101093660046106c8565b61035e565b600080516020610809833981519152546040516001600160a01b0390911681526020016100ad565b6100a06103e1565b6100f961014c3660046106c8565b610438565b6100f961015f36600461069c565b61058e565b60008051602061080983398151915254604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde039160048083019260009291908290030181865afa1580156101bb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101e39190810190610702565b905090565b60008051602061080983398151915254604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801561023f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e391906107af565b600080516020610809833981519152546040805163313ce56760e01b815290516000926001600160a01b03169163313ce5679160048083019260209291908290030181865afa1580156102ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e391906107c8565b6102e66105dc565b600080516020610809833981519152546040516340c10f1960e01b81526001600160a01b03848116600483015260248201849052909116906340c10f19906044015b600060405180830381600087803b15801561034257600080fd5b505af1158015610356573d6000803e3d6000fd5b505050505050565b6000600080516020610809833981519152546040516370a0823160e01b81526001600160a01b038481166004830152909116906370a0823190602401602060405180830381865afa1580156103b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103db91906107af565b92915050565b60008051602061080983398151915254604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b419160048083019260009291908290030181865afa1580156101bb573d6000803e3d6000fd5b6104406105dc565b806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561047e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a291906107eb565b6001600160a01b0316306001600160a01b0316146105075760405162461bcd60e51b815260206004820152601f60248201527f4661636574546f6b656e4c696e6b3a20746f6b656e206e6f74206f776e65640060448201526064015b60405180910390fd5b6000600080516020610809833981519152546001600160a01b031690508160008051602061080983398151915280546001600160a01b0319166001600160a01b0392831617905560408051838316815291841660208301527f6a9922e4e54faa19ecbd2d1dbf36b0802c1f629fa0aba9679bddc7b932c5fe64910160405180910390a15050565b6105966105dc565b6000805160206108098339815191525460405163079cc67960e41b81526001600160a01b03848116600483015260248201849052909116906379cc679090604401610328565b33301461062b5760405162461bcd60e51b815260206004820152601960248201527f4661636574546f6b656e4c696e6b3a206f6e6c792073656c660000000000000060448201526064016104fe565b565b60005b83811015610648578181015183820152602001610630565b50506000910152565b602081526000825180602084015261067081604085016020870161062d565b601f01601f19169190910160400192915050565b6001600160a01b038116811461069957600080fd5b50565b600080604083850312156106af57600080fd5b82356106ba81610684565b946020939093013593505050565b6000602082840312156106da57600080fd5b81356106e581610684565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561071457600080fd5b815167ffffffffffffffff8082111561072c57600080fd5b818401915084601f83011261074057600080fd5b815181811115610752576107526106ec565b604051601f8201601f19908116603f0116810190838211818310171561077a5761077a6106ec565b8160405282815287602084870101111561079357600080fd5b6107a483602083016020880161062d565b979650505050505050565b6000602082840312156107c157600080fd5b5051919050565b6000602082840312156107da57600080fd5b815160ff811681146106e557600080fd5b6000602082840312156107fd57600080fd5b81516106e58161068456febeaf54d3716fb445aa475454e50dfd5f08f0c257447c1fe9f7e82d97c0b7a698a264697066735822122011b7d69bfb97ba6b070e2f94d7a304539c343e8e2aa89091e9546a4a1bb08de864736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x85E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0x8752B02F EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xA7239F3B EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0xEA8479BD EQ PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x4AC947F7 EQ PUSH2 0xE6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBE PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xD4 PUSH2 0x263 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xF9 PUSH2 0xF4 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x2DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBE PUSH2 0x109 CALLDATASIZE PUSH1 0x4 PUSH2 0x6C8 JUMP JUMPDEST PUSH2 0x35E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x809 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x3E1 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0x6C8 JUMP JUMPDEST PUSH2 0x438 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x809 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6FDDE03 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x60 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x6FDDE03 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1E3 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x702 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x809 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x809 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x2E6 PUSH2 0x5DC JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x809 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x356 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x809 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x7AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x809 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95D89B41 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x60 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x95D89B41 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x440 PUSH2 0x5DC JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x507 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661636574546F6B656E4C696E6B3A20746F6B656E206E6F74206F776E656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x809 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x809 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP4 AND DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x6A9922E4E54FAA19ECBD2D1DBF36B0802C1F629FA0ABA9679BDDC7B932C5FE64 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x596 PUSH2 0x5DC JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x809 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x79CC6790 SWAP1 PUSH1 0x44 ADD PUSH2 0x328 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661636574546F6B656E4C696E6B3A206F6E6C792073656C6600000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x648 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x630 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x670 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x62D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x699 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x6BA DUP2 PUSH2 0x684 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6E5 DUP2 PUSH2 0x684 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x714 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x72C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x740 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x752 JUMPI PUSH2 0x752 PUSH2 0x6EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x77A JUMPI PUSH2 0x77A PUSH2 0x6EC JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x793 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A4 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x62D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6E5 DUP2 PUSH2 0x684 JUMP INVALID 0xBE 0xAF SLOAD 0xD3 PUSH18 0x6FB445AA475454E50DFD5F08F0C257447C1F 0xE9 0xF7 0xE8 0x2D SWAP8 0xC0 0xB7 0xA6 SWAP9 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT 0xB7 0xD6 SWAP12 0xFB SWAP8 0xBA PUSH12 0x70E2F94D7A304539C343E8E 0x2A 0xA8 SWAP1 SWAP2 0xE9 SLOAD PUSH11 0x4A1BB08DE864736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "201:1863:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@____burn_94": {
									"entryPoint": 1422,
									"id": 94,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@____linkToken_52": {
									"entryPoint": 1080,
									"id": 52,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@____mint_73": {
									"entryPoint": 734,
									"id": 73,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_376": {
									"entryPoint": null,
									"id": 376,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_onlySelf_190": {
									"entryPoint": 1500,
									"id": 190,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_self_201": {
									"entryPoint": null,
									"id": 201,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@balanceOf_177": {
									"entryPoint": 862,
									"id": 177,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_146": {
									"entryPoint": 611,
									"id": 146,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getLinkedToken_104": {
									"entryPoint": null,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_118": {
									"entryPoint": 356,
									"id": 118,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_132": {
									"entryPoint": 993,
									"id": 132,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenLink_224": {
									"entryPoint": null,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_160": {
									"entryPoint": 488,
									"id": 160,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 2027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 1992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_092cee7f222b50d96892a7e00c04833137bbc16a7bb9202cbf33df1d5dba94bd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8f8aacd07a5f6eb0c1a64aaf9e853b63aa8523d22012262d59b29cb2f8aeca59__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1581,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1772,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 1668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5013:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "80:184:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "90:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "99:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "94:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "159:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "184:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "189:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "180:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "180:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "203:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "208:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "199:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "199:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "193:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "193:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "173:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "173:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "173:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "120:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "123:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "117:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "117:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "131:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "133:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "142:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "145:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "138:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "138:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "133:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "113:3:8",
																"statements": []
															},
															"src": "109:113:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "242:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "247:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "238:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "238:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "256:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "231:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "231:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "58:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "63:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:8",
														"type": ""
													}
												],
												"src": "14:250:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "390:275:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "407:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "418:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "400:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "430:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "450:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "444:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "444:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "434:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "477:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "488:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "473:18:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "493:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "466:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "466:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "466:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "548:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "556:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "544:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "544:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "565:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "576:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "561:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "561:18:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "581:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "509:34:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:79:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:79:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "597:62:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "613:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "632:6:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "640:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "628:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "628:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "649:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "645:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "645:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "624:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "624:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "609:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "609:45:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "656:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "605:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "605:54:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "597:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "359:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "370:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "381:4:8",
														"type": ""
													}
												],
												"src": "269:396:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "771:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "781:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "793:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "804:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "789:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "789:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "781:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "823:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "834:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "816:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "816:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "816:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "740:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "751:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "762:4:8",
														"type": ""
													}
												],
												"src": "670:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "949:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "959:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "971:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "982:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "967:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "967:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "959:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1001:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1016:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1024:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1012:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1012:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "994:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "994:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "994:36:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "918:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "929:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "940:4:8",
														"type": ""
													}
												],
												"src": "852:184:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1086:86:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1150:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1159:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1162:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1152:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1152:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1152:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1109:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1120:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1135:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1140:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1131:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1131:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1144:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1127:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1127:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1116:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1116:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1106:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1106:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1099:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1099:50:8"
															},
															"nodeType": "YulIf",
															"src": "1096:70:8"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1075:5:8",
														"type": ""
													}
												],
												"src": "1041:131:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1264:228:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1310:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1319:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1322:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1312:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1312:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1312:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1285:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1294:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1281:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1281:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1277:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1277:32:8"
															},
															"nodeType": "YulIf",
															"src": "1274:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1335:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1361:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1348:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1348:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1339:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1405:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1380:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1380:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1420:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1430:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1420:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1444:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1471:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1482:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1467:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1467:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1454:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1444:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1222:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1233:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1245:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1253:6:8",
														"type": ""
													}
												],
												"src": "1177:315:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1567:177:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1613:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1622:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1625:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1615:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1615:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1615:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1588:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1597:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1584:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1584:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1609:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1580:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1580:32:8"
															},
															"nodeType": "YulIf",
															"src": "1577:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1638:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1664:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1651:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1651:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1642:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1708:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1683:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1683:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1683:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1723:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1733:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1533:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1544:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1556:6:8",
														"type": ""
													}
												],
												"src": "1497:247:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1850:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1860:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1872:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1883:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1868:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1868:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1860:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1902:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1917:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1933:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1938:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1929:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1929:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1942:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1925:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1925:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1913:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1913:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1895:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1895:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1895:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1819:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1830:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1841:4:8",
														"type": ""
													}
												],
												"src": "1749:203:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1989:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2006:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2013:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2018:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2009:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2009:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1999:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1999:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1999:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2046:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2049:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2039:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2039:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2039:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2070:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2073:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2063:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2063:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2063:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1957:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2180:806:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2226:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2235:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2238:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2228:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2228:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2228:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2201:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2210:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2197:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2197:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2222:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2193:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2193:32:8"
															},
															"nodeType": "YulIf",
															"src": "2190:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2251:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2271:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2265:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2265:16:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2255:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2290:28:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2300:18:8",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2294:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2345:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2354:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2357:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2347:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2347:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2347:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2333:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2341:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2330:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2330:14:8"
															},
															"nodeType": "YulIf",
															"src": "2327:34:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2370:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2384:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2395:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2380:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2380:22:8"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2374:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2450:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2459:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2462:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2452:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2452:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2452:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2429:2:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2433:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2425:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2425:13:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2440:7:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2421:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2421:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2414:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2414:35:8"
															},
															"nodeType": "YulIf",
															"src": "2411:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2475:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2491:2:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2485:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2485:9:8"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2479:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2517:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2519:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2519:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2519:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2509:2:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2513:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2506:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2506:10:8"
															},
															"nodeType": "YulIf",
															"src": "2503:36:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2548:17:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2562:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "2558:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2558:7:8"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "2552:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2574:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2594:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2588:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2588:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2578:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2606:71:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2628:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "2652:2:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2656:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2648:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2648:13:8"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "2663:2:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "2644:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2644:22:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2668:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2640:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2640:31:8"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "2673:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2636:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2636:40:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2624:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2624:53:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2610:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2736:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2738:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2738:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2738:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2695:10:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2707:2:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2692:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2692:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2715:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2727:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2712:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2689:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2689:46:8"
															},
															"nodeType": "YulIf",
															"src": "2686:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2774:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2778:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2767:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2767:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2767:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2805:6:8"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2813:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2798:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2798:18:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2798:18:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2862:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2871:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2874:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2864:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2864:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2864:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2839:2:8"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2843:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2835:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2835:11:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2848:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2831:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2831:20:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2853:7:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2828:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2828:33:8"
															},
															"nodeType": "YulIf",
															"src": "2825:53:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2926:2:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2930:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2922:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2922:11:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2939:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2947:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2935:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2935:15:8"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2952:2:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2887:34:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2887:68:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2887:68:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2964:16:8",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2974:6:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2964:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2146:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2157:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2169:6:8",
														"type": ""
													}
												],
												"src": "2089:897:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3072:103:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3118:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3127:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3130:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3120:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3120:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3120:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3093:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3102:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3089:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3114:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3085:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3085:32:8"
															},
															"nodeType": "YulIf",
															"src": "3082:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3143:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3153:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3153:16:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3143:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3038:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3049:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3061:6:8",
														"type": ""
													}
												],
												"src": "2991:184:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3259:194:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3305:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3314:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3317:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3307:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3307:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3307:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3280:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3289:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3276:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3276:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3301:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3272:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3272:32:8"
															},
															"nodeType": "YulIf",
															"src": "3269:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3330:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3349:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3343:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3343:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3334:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3407:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3416:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3419:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3409:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3409:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3409:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3381:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3392:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3399:4:8",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3388:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3388:16:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3378:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3378:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3371:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3371:35:8"
															},
															"nodeType": "YulIf",
															"src": "3368:55:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3432:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3442:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3432:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3225:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3236:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3248:6:8",
														"type": ""
													}
												],
												"src": "3180:273:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3587:145:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3597:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3609:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3620:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3605:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3605:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3597:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3639:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3654:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3670:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3675:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3666:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3666:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3679:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3662:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3662:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3650:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3650:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3632:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3632:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3632:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3703:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3714:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3699:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3699:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3719:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3692:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3692:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3692:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3548:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3559:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3567:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3578:4:8",
														"type": ""
													}
												],
												"src": "3458:274:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3818:170:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3864:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3873:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3876:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3866:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3866:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3866:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3839:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3848:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3835:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3835:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3860:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3831:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3831:32:8"
															},
															"nodeType": "YulIf",
															"src": "3828:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3889:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3908:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3902:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3902:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3893:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3952:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3927:24:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3927:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3927:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3967:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3977:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3967:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3784:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3795:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3807:6:8",
														"type": ""
													}
												],
												"src": "3737:251:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4167:181:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4184:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4195:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4177:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4177:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4177:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4218:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4229:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4214:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4214:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4234:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4207:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4207:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4207:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4257:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4268:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4253:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4253:18:8"
																	},
																	{
																		"hexValue": "4661636574546f6b656e4c696e6b3a20746f6b656e206e6f74206f776e6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4273:33:8",
																		"type": "",
																		"value": "FacetTokenLink: token not owned"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4246:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4246:61:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4246:61:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4316:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4328:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4339:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4324:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4324:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4316:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8f8aacd07a5f6eb0c1a64aaf9e853b63aa8523d22012262d59b29cb2f8aeca59__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4144:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4158:4:8",
														"type": ""
													}
												],
												"src": "3993:355:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4482:175:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4492:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4504:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4515:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4500:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4500:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4492:4:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4527:29:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4545:3:8",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4550:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4541:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4541:11:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4537:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4537:19:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4531:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4572:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4587:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4595:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4583:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4583:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4565:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4565:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4565:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4619:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4630:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4615:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4615:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4639:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4647:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4635:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4635:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4608:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4608:43:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4608:43:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4443:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4454:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4462:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4473:4:8",
														"type": ""
													}
												],
												"src": "4353:304:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4836:175:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4853:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4864:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4846:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4846:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4846:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4887:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4898:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4883:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4883:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4903:2:8",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4876:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4876:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4876:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4926:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4937:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4922:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4922:18:8"
																	},
																	{
																		"hexValue": "4661636574546f6b656e4c696e6b3a206f6e6c792073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4942:27:8",
																		"type": "",
																		"value": "FacetTokenLink: only self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4915:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4915:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4915:55:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4979:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4991:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5002:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4987:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4987:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4979:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_092cee7f222b50d96892a7e00c04833137bbc16a7bb9202cbf33df1d5dba94bd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4813:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4827:4:8",
														"type": ""
													}
												],
												"src": "4662:349:8"
											}
										]
									},
									"contents": "{\n    { }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_2, 32), add(memPtr, 32), _3)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_8f8aacd07a5f6eb0c1a64aaf9e853b63aa8523d22012262d59b29cb2f8aeca59__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"FacetTokenLink: token not owned\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_092cee7f222b50d96892a7e00c04833137bbc16a7bb9202cbf33df1d5dba94bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"FacetTokenLink: only self\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c806370a082311161006657806370a08231146100fb5780638752b02f1461010e57806395d89b4114610136578063a7239f3b1461013e578063ea8479bd1461015157600080fd5b806306fdde031461009857806318160ddd146100b6578063313ce567146100cc5780634ac947f7146100e6575b600080fd5b6100a0610164565b6040516100ad9190610651565b60405180910390f35b6100be6101e8565b6040519081526020016100ad565b6100d4610263565b60405160ff90911681526020016100ad565b6100f96100f436600461069c565b6102de565b005b6100be6101093660046106c8565b61035e565b600080516020610809833981519152546040516001600160a01b0390911681526020016100ad565b6100a06103e1565b6100f961014c3660046106c8565b610438565b6100f961015f36600461069c565b61058e565b60008051602061080983398151915254604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde039160048083019260009291908290030181865afa1580156101bb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101e39190810190610702565b905090565b60008051602061080983398151915254604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801561023f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e391906107af565b600080516020610809833981519152546040805163313ce56760e01b815290516000926001600160a01b03169163313ce5679160048083019260209291908290030181865afa1580156102ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e391906107c8565b6102e66105dc565b600080516020610809833981519152546040516340c10f1960e01b81526001600160a01b03848116600483015260248201849052909116906340c10f19906044015b600060405180830381600087803b15801561034257600080fd5b505af1158015610356573d6000803e3d6000fd5b505050505050565b6000600080516020610809833981519152546040516370a0823160e01b81526001600160a01b038481166004830152909116906370a0823190602401602060405180830381865afa1580156103b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103db91906107af565b92915050565b60008051602061080983398151915254604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b419160048083019260009291908290030181865afa1580156101bb573d6000803e3d6000fd5b6104406105dc565b806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561047e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a291906107eb565b6001600160a01b0316306001600160a01b0316146105075760405162461bcd60e51b815260206004820152601f60248201527f4661636574546f6b656e4c696e6b3a20746f6b656e206e6f74206f776e65640060448201526064015b60405180910390fd5b6000600080516020610809833981519152546001600160a01b031690508160008051602061080983398151915280546001600160a01b0319166001600160a01b0392831617905560408051838316815291841660208301527f6a9922e4e54faa19ecbd2d1dbf36b0802c1f629fa0aba9679bddc7b932c5fe64910160405180910390a15050565b6105966105dc565b6000805160206108098339815191525460405163079cc67960e41b81526001600160a01b03848116600483015260248201849052909116906379cc679090604401610328565b33301461062b5760405162461bcd60e51b815260206004820152601960248201527f4661636574546f6b656e4c696e6b3a206f6e6c792073656c660000000000000060448201526064016104fe565b565b60005b83811015610648578181015183820152602001610630565b50506000910152565b602081526000825180602084015261067081604085016020870161062d565b601f01601f19169190910160400192915050565b6001600160a01b038116811461069957600080fd5b50565b600080604083850312156106af57600080fd5b82356106ba81610684565b946020939093013593505050565b6000602082840312156106da57600080fd5b81356106e581610684565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561071457600080fd5b815167ffffffffffffffff8082111561072c57600080fd5b818401915084601f83011261074057600080fd5b815181811115610752576107526106ec565b604051601f8201601f19908116603f0116810190838211818310171561077a5761077a6106ec565b8160405282815287602084870101111561079357600080fd5b6107a483602083016020880161062d565b979650505050505050565b6000602082840312156107c157600080fd5b5051919050565b6000602082840312156107da57600080fd5b815160ff811681146106e557600080fd5b6000602082840312156107fd57600080fd5b81516106e58161068456febeaf54d3716fb445aa475454e50dfd5f08f0c257447c1fe9f7e82d97c0b7a698a264697066735822122011b7d69bfb97ba6b070e2f94d7a304539c343e8e2aa89091e9546a4a1bb08de864736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0x8752B02F EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xA7239F3B EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0xEA8479BD EQ PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x4AC947F7 EQ PUSH2 0xE6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x651 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBE PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xD4 PUSH2 0x263 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xF9 PUSH2 0xF4 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x2DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBE PUSH2 0x109 CALLDATASIZE PUSH1 0x4 PUSH2 0x6C8 JUMP JUMPDEST PUSH2 0x35E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x809 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x3E1 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0x6C8 JUMP JUMPDEST PUSH2 0x438 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x809 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6FDDE03 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x60 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x6FDDE03 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1E3 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x702 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x809 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x809 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x2E6 PUSH2 0x5DC JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x809 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x356 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x809 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x7AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x809 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95D89B41 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x60 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x95D89B41 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x440 PUSH2 0x5DC JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x507 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661636574546F6B656E4C696E6B3A20746F6B656E206E6F74206F776E656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x809 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x809 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP4 AND DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x6A9922E4E54FAA19ECBD2D1DBF36B0802C1F629FA0ABA9679BDDC7B932C5FE64 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x596 PUSH2 0x5DC JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x809 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x79CC6790 SWAP1 PUSH1 0x44 ADD PUSH2 0x328 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661636574546F6B656E4C696E6B3A206F6E6C792073656C6600000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x648 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x630 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x670 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x62D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x699 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x6BA DUP2 PUSH2 0x684 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6E5 DUP2 PUSH2 0x684 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x714 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x72C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x740 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x752 JUMPI PUSH2 0x752 PUSH2 0x6EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x77A JUMPI PUSH2 0x77A PUSH2 0x6EC JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x793 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A4 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x62D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6E5 DUP2 PUSH2 0x684 JUMP INVALID 0xBE 0xAF SLOAD 0xD3 PUSH18 0x6FB445AA475454E50DFD5F08F0C257447C1F 0xE9 0xF7 0xE8 0x2D SWAP8 0xC0 0xB7 0xA6 SWAP9 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT 0xB7 0xD6 SWAP12 0xFB SWAP8 0xBA PUSH12 0x70E2F94D7A304539C343E8E 0x2A 0xA8 SWAP1 SWAP2 0xE9 SLOAD PUSH11 0x4A1BB08DE864736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "201:1863:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1133:129;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1542:134;;;:::i;:::-;;;816:25:8;;;804:2;789:18;1542:134:0;670:177:8;1407:129:0;;;:::i;:::-;;;1024:4:8;1012:17;;;994:36;;982:2;967:18;1407:129:0;852:184:8;665:163:0;;;;;;:::i;:::-;;:::i;:::-;;1682:144;;;;;;:::i;:::-;;:::i;1016:111::-;-1:-1:-1;;;;;;;;;;;1097:23:0;1016:111;;-1:-1:-1;;;;;1097:23:0;;;1895:51:8;;1883:2;1868:18;1016:111:0;1749:203:8;1268:133:0;;;:::i;326:333::-;;;;;;:::i;:::-;;:::i;834:167::-;;;;;;:::i;:::-;;:::i;1133:129::-;-1:-1:-1;;;;;;;;;;;1224:23:0;1210:45;;;-1:-1:-1;;;1210:45:0;;;;1178:13;;-1:-1:-1;;;;;1224:23:0;;1210:43;;:45;;;;;1224:23;;1210:45;;;;;;;1224:23;1210:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1210:45:0;;;;;;;;;;;;:::i;:::-;1203:52;;1133:129;:::o;1542:134::-;-1:-1:-1;;;;;;;;;;;1631:23:0;1617:52;;;-1:-1:-1;;;1617:52:0;;;;1594:4;;-1:-1:-1;;;;;1631:23:0;;1617:50;;:52;;;;;;;;;;;;;;1631:23;1617:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1407:129::-;-1:-1:-1;;;;;;;;;;;1494:23:0;1480:49;;;-1:-1:-1;;;1480:49:0;;;;1456:5;;-1:-1:-1;;;;;1494:23:0;;1480:47;;:49;;;;;;;;;;;;;;1494:23;1480:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;665:163::-;740:11;:9;:11::i;:::-;-1:-1:-1;;;;;;;;;;;775:23:0;761:60;;-1:-1:-1;;;761:60:0;;-1:-1:-1;;;;;3650:32:8;;;761:60:0;;;3632:51:8;3699:18;;;3692:34;;;775:23:0;;;;761:43;;3605:18:8;;761:60:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:163;;:::o;1682:144::-;1739:4;-1:-1:-1;;;;;;;;;;;1776:23:0;1762:57;;-1:-1:-1;;;1762:57:0;;-1:-1:-1;;;;;1913:32:8;;;1762:57:0;;;1895:51:8;1776:23:0;;;;1762:48;;1868:18:8;;1762:57:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1755:64;1682:144;-1:-1:-1;;1682:144:0:o;1268:133::-;-1:-1:-1;;;;;;;;;;;1361:23:0;1347:47;;;-1:-1:-1;;;1347:47:0;;;;1315:13;;-1:-1:-1;;;;;1361:23:0;;1347:45;;:47;;;;;1361:23;;1347:47;;;;;;;1361:23;1347:47;;;;;;;;;;;;;;326:333;394:11;:9;:11::i;:::-;448:8;-1:-1:-1;;;;;434:29:0;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;423:42:0;2050:4;-1:-1:-1;;;;;423:42:0;;415:86;;;;-1:-1:-1;;;415:86:0;;4195:2:8;415:86:0;;;4177:21:8;4234:2;4214:18;;;4207:30;4273:33;4253:18;;;4246:61;4324:18;;415:86:0;;;;;;;;;511:16;-1:-1:-1;;;;;;;;;;;530:23:0;-1:-1:-1;;;;;530:23:0;;-1:-1:-1;589:8:0;-1:-1:-1;;;;;;;;;;;563:34:0;;-1:-1:-1;;;;;;563:34:0;-1:-1:-1;;;;;563:34:0;;;;;;612:40;;;4583:15:8;;;4565:34;;4635:15;;;4630:2;4615:18;;4608:43;612:40:0;;4500:18:8;612:40:0;;;;;;;384:275;326:333;:::o;834:167::-;909:11;:9;:11::i;:::-;-1:-1:-1;;;;;;;;;;;944:23:0;930:64;;-1:-1:-1;;;930:64:0;;-1:-1:-1;;;;;3650:32:8;;;930:64:0;;;3632:51:8;3699:18;;;3692:34;;;944:23:0;;;;930:47;;3605:18:8;;930:64:0;3458:274:8;1841:121:0;720:10:5;2050:4:0;1902:23;1894:61;;;;-1:-1:-1;;;1894:61:0;;4864:2:8;1894:61:0;;;4846:21:8;4903:2;4883:18;;;4876:30;4942:27;4922:18;;;4915:55;4987:18;;1894:61:0;4662:349:8;1894:61:0;1841:121::o;14:250:8:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:8;238:16;;231:27;14:250::o;269:396::-;418:2;407:9;400:21;381:4;450:6;444:13;493:6;488:2;477:9;473:18;466:34;509:79;581:6;576:2;565:9;561:18;556:2;548:6;544:15;509:79;:::i;:::-;649:2;628:15;-1:-1:-1;;624:29:8;609:45;;;;656:2;605:54;;269:396;-1:-1:-1;;269:396:8:o;1041:131::-;-1:-1:-1;;;;;1116:31:8;;1106:42;;1096:70;;1162:1;1159;1152:12;1096:70;1041:131;:::o;1177:315::-;1245:6;1253;1306:2;1294:9;1285:7;1281:23;1277:32;1274:52;;;1322:1;1319;1312:12;1274:52;1361:9;1348:23;1380:31;1405:5;1380:31;:::i;:::-;1430:5;1482:2;1467:18;;;;1454:32;;-1:-1:-1;;;1177:315:8:o;1497:247::-;1556:6;1609:2;1597:9;1588:7;1584:23;1580:32;1577:52;;;1625:1;1622;1615:12;1577:52;1664:9;1651:23;1683:31;1708:5;1683:31;:::i;:::-;1733:5;1497:247;-1:-1:-1;;;1497:247:8:o;1957:127::-;2018:10;2013:3;2009:20;2006:1;1999:31;2049:4;2046:1;2039:15;2073:4;2070:1;2063:15;2089:897;2169:6;2222:2;2210:9;2201:7;2197:23;2193:32;2190:52;;;2238:1;2235;2228:12;2190:52;2271:9;2265:16;2300:18;2341:2;2333:6;2330:14;2327:34;;;2357:1;2354;2347:12;2327:34;2395:6;2384:9;2380:22;2370:32;;2440:7;2433:4;2429:2;2425:13;2421:27;2411:55;;2462:1;2459;2452:12;2411:55;2491:2;2485:9;2513:2;2509;2506:10;2503:36;;;2519:18;;:::i;:::-;2594:2;2588:9;2562:2;2648:13;;-1:-1:-1;;2644:22:8;;;2668:2;2640:31;2636:40;2624:53;;;2692:18;;;2712:22;;;2689:46;2686:72;;;2738:18;;:::i;:::-;2778:10;2774:2;2767:22;2813:2;2805:6;2798:18;2853:7;2848:2;2843;2839;2835:11;2831:20;2828:33;2825:53;;;2874:1;2871;2864:12;2825:53;2887:68;2952:2;2947;2939:6;2935:15;2930:2;2926;2922:11;2887:68;:::i;:::-;2974:6;2089:897;-1:-1:-1;;;;;;;2089:897:8:o;2991:184::-;3061:6;3114:2;3102:9;3093:7;3089:23;3085:32;3082:52;;;3130:1;3127;3120:12;3082:52;-1:-1:-1;3153:16:8;;2991:184;-1:-1:-1;2991:184:8:o;3180:273::-;3248:6;3301:2;3289:9;3280:7;3276:23;3272:32;3269:52;;;3317:1;3314;3307:12;3269:52;3349:9;3343:16;3399:4;3392:5;3388:16;3381:5;3378:27;3368:55;;3419:1;3416;3409:12;3737:251;3807:6;3860:2;3848:9;3839:7;3835:23;3831:32;3828:52;;;3876:1;3873;3866:12;3828:52;3908:9;3902:16;3927:31;3952:5;3927:31;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "428400",
								"executionCost": "461",
								"totalCost": "428861"
							},
							"external": {
								"____burn(address,uint256)": "infinite",
								"____linkToken(address)": "infinite",
								"____mint(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"decimals()": "infinite",
								"getLinkedToken()": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "infinite"
							},
							"internal": {
								"_onlySelf()": "infinite",
								"_self()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 201,
									"end": 2064,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 201,
									"end": 2064,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 201,
									"end": 2064,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 201,
									"end": 2064,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 201,
									"end": 2064,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 201,
									"end": 2064,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 201,
									"end": 2064,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 201,
									"end": 2064,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 201,
									"end": 2064,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 2064,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 201,
									"end": 2064,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 201,
									"end": 2064,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 201,
									"end": 2064,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 201,
									"end": 2064,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 201,
									"end": 2064,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 201,
									"end": 2064,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 201,
									"end": 2064,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 201,
									"end": 2064,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 2064,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 201,
									"end": 2064,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 2064,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122011b7d69bfb97ba6b070e2f94d7a304539c343e8e2aa89091e9546a4a1bb08de864736f6c63430008130033",
									".code": [
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "8752B02F"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "A7239F3B"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "EA8479BD"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "4AC947F7"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 2064,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1262,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1133,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1133,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1133,
											"end": 1262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1262,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1133,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1133,
											"end": 1262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1133,
											"end": 1262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1133,
											"end": 1262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1262,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1133,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1133,
											"end": 1262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1262,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1676,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1542,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1542,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1542,
											"end": 1676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1676,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1542,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 1676,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 816,
											"end": 841,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 816,
											"end": 841,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 816,
											"end": 841,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 804,
											"end": 806,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 789,
											"end": 807,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1542,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 670,
											"end": 847,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1536,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1407,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1407,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1407,
											"end": 1536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1536,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1407,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1536,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 1536,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1024,
											"end": 1028,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1012,
											"end": 1029,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1029,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1029,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 994,
											"end": 1030,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 994,
											"end": 1030,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 982,
											"end": 984,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 985,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1407,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 852,
											"end": 1036,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 665,
											"end": 828,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 665,
											"end": 828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 665,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 665,
											"end": 828,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 665,
											"end": 828,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 665,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 665,
											"end": 828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 828,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 665,
											"end": 828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 665,
											"end": 828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 828,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 665,
											"end": 828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 828,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1682,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1682,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1682,
											"end": 1826,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 1826,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1682,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1682,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1682,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1682,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1127,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1016,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "61448FF004EB25BE10D68311465C7F0DABB762B05DCDD9C8F4C76C341721E40B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1097,
											"end": 1120,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1016,
											"end": 1127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1097,
											"end": 1120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1120,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1946,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1895,
											"end": 1946,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1883,
											"end": 1885,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1868,
											"end": 1886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1016,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1749,
											"end": 1952,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1268,
											"end": 1401,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1268,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1268,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1268,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 326,
											"end": 659,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 326,
											"end": 659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 326,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 326,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 326,
											"end": 659,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 326,
											"end": 659,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 326,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 326,
											"end": 659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 326,
											"end": 659,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 326,
											"end": 659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 326,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 326,
											"end": 659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 834,
											"end": 1001,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 834,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 834,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 834,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 834,
											"end": 1001,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 834,
											"end": 1001,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 834,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 834,
											"end": 1001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 834,
											"end": 1001,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 834,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 834,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 834,
											"end": 1001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1262,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1133,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "61448FF004EB25BE10D68311465C7F0DABB762B05DCDD9C8F4C76C341721E40B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6FDDE03"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1178,
											"end": 1191,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1178,
											"end": 1191,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1210,
											"end": 1253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1210,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1210,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1203,
											"end": 1255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1676,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1542,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "61448FF004EB25BE10D68311465C7F0DABB762B05DCDD9C8F4C76C341721E40B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18160DDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1598,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1667,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1617,
											"end": 1667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1617,
											"end": 1669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1536,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1407,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "61448FF004EB25BE10D68311465C7F0DABB762B05DCDD9C8F4C76C341721E40B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313CE567"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1456,
											"end": 1461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1461,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1527,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1480,
											"end": 1527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1480,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1480,
											"end": 1529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 828,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 665,
											"end": 828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 740,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 740,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 740,
											"end": 751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 740,
											"end": 751,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 740,
											"end": 751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "61448FF004EB25BE10D68311465C7F0DABB762B05DCDD9C8F4C76C341721E40B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 775,
											"end": 798,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 761,
											"end": 821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40C10F19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 761,
											"end": 821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3650,
											"end": 3682,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3650,
											"end": 3682,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3650,
											"end": 3682,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 761,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 761,
											"end": 821,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3632,
											"end": 3683,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3699,
											"end": 3717,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3699,
											"end": 3717,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3699,
											"end": 3717,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3692,
											"end": 3726,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3692,
											"end": 3726,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3692,
											"end": 3726,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 775,
											"end": 798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 775,
											"end": 798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 775,
											"end": 798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 775,
											"end": 798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 761,
											"end": 804,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 761,
											"end": 804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3605,
											"end": 3623,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3605,
											"end": 3623,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 761,
											"end": 821,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 761,
											"end": 821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 761,
											"end": 821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 821,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 761,
											"end": 821,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 761,
											"end": 821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 761,
											"end": 821,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 821,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 761,
											"end": 821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 761,
											"end": 821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1682,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "61448FF004EB25BE10D68311465C7F0DABB762B05DCDD9C8F4C76C341721E40B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1776,
											"end": 1799,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1913,
											"end": 1945,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1913,
											"end": 1945,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1913,
											"end": 1945,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1946,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1776,
											"end": 1799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1776,
											"end": 1799,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1776,
											"end": 1799,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1776,
											"end": 1799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1810,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1762,
											"end": 1810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1868,
											"end": 1886,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1868,
											"end": 1886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1762,
											"end": 1819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1762,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1819,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 1826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1682,
											"end": 1826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1401,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1268,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "61448FF004EB25BE10D68311465C7F0DABB762B05DCDD9C8F4C76C341721E40B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1361,
											"end": 1384,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95D89B41"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1328,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1315,
											"end": 1328,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1361,
											"end": 1384,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1361,
											"end": 1384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1392,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1347,
											"end": 1392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1361,
											"end": 1384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 1384,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1361,
											"end": 1384,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1347,
											"end": 1394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 326,
											"end": 659,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 326,
											"end": 659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 394,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 394,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 394,
											"end": 405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 394,
											"end": 405,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 394,
											"end": 405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 448,
											"end": 456,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 434,
											"end": 463,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 434,
											"end": 463,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 434,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 434,
											"end": 465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 434,
											"end": 465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 434,
											"end": 465,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 434,
											"end": 465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 434,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 434,
											"end": 465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 434,
											"end": 465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 465,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 434,
											"end": 465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 434,
											"end": 465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 434,
											"end": 465,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 434,
											"end": 465,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 434,
											"end": 465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 434,
											"end": 465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 434,
											"end": 465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 434,
											"end": 465,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 434,
											"end": 465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 423,
											"end": 465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2054,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 423,
											"end": 465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 423,
											"end": 465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 415,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 415,
											"end": 501,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 415,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 415,
											"end": 501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 415,
											"end": 501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 415,
											"end": 501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4195,
											"end": 4197,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 415,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 415,
											"end": 501,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 415,
											"end": 501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4177,
											"end": 4198,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4234,
											"end": 4236,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4214,
											"end": 4232,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4214,
											"end": 4232,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4232,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4207,
											"end": 4237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4273,
											"end": 4306,
											"name": "PUSH",
											"source": 8,
											"value": "4661636574546F6B656E4C696E6B3A20746F6B656E206E6F74206F776E656400"
										},
										{
											"begin": 4253,
											"end": 4271,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4253,
											"end": 4271,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4253,
											"end": 4271,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4246,
											"end": 4307,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4324,
											"end": 4342,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4324,
											"end": 4342,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 415,
											"end": 501,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 415,
											"end": 501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 415,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 415,
											"end": 501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 415,
											"end": 501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 415,
											"end": 501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 415,
											"end": 501,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 415,
											"end": 501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 415,
											"end": 501,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 415,
											"end": 501,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 415,
											"end": 501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 511,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "61448FF004EB25BE10D68311465C7F0DABB762B05DCDD9C8F4C76C341721E40B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 530,
											"end": 553,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 530,
											"end": 553,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 530,
											"end": 553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 589,
											"end": 597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "61448FF004EB25BE10D68311465C7F0DABB762B05DCDD9C8F4C76C341721E40B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 563,
											"end": 597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 563,
											"end": 597,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 563,
											"end": 597,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 563,
											"end": 597,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 563,
											"end": 597,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 563,
											"end": 597,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 563,
											"end": 597,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 563,
											"end": 597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 563,
											"end": 597,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 612,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 612,
											"end": 652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4598,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4583,
											"end": 4598,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4583,
											"end": 4598,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4565,
											"end": 4599,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4565,
											"end": 4599,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 4650,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 4650,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 4650,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4630,
											"end": 4632,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4615,
											"end": 4633,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4615,
											"end": 4633,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4608,
											"end": 4651,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 612,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "6A9922E4E54FAA19ECBD2D1DBF36B0802C1F629FA0ABA9679BDDC7B932C5FE64"
										},
										{
											"begin": 612,
											"end": 652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4500,
											"end": 4518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 612,
											"end": 652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 612,
											"end": 652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 612,
											"end": 652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 612,
											"end": 652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 612,
											"end": 652,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 612,
											"end": 652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 612,
											"end": 652,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 384,
											"end": 659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 326,
											"end": 659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 326,
											"end": 659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 834,
											"end": 1001,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 834,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 909,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 909,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 909,
											"end": 920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 909,
											"end": 920,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 909,
											"end": 920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "61448FF004EB25BE10D68311465C7F0DABB762B05DCDD9C8F4C76C341721E40B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 944,
											"end": 967,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 930,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 930,
											"end": 994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79CC679"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 930,
											"end": 994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 930,
											"end": 994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3650,
											"end": 3682,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3650,
											"end": 3682,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3650,
											"end": 3682,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 930,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 930,
											"end": 994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 930,
											"end": 994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3632,
											"end": 3683,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3699,
											"end": 3717,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3699,
											"end": 3717,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3699,
											"end": 3717,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3692,
											"end": 3726,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3692,
											"end": 3726,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3692,
											"end": 3726,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 944,
											"end": 967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 944,
											"end": 967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 944,
											"end": 967,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 944,
											"end": 967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 930,
											"end": 977,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3605,
											"end": 3623,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3605,
											"end": 3623,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 930,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3458,
											"end": 3732,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1841,
											"end": 1962,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1841,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 720,
											"end": 730,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2050,
											"end": 2054,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1902,
											"end": 1925,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1894,
											"end": 1955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1894,
											"end": 1955,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1894,
											"end": 1955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4866,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1894,
											"end": 1955,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1894,
											"end": 1955,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1955,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4846,
											"end": 4867,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4903,
											"end": 4905,
											"name": "PUSH",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4876,
											"end": 4906,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4942,
											"end": 4969,
											"name": "PUSH",
											"source": 8,
											"value": "4661636574546F6B656E4C696E6B3A206F6E6C792073656C6600000000000000"
										},
										{
											"begin": 4922,
											"end": 4940,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4922,
											"end": 4940,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4922,
											"end": 4940,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4915,
											"end": 4970,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5005,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4987,
											"end": 5005,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1894,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4662,
											"end": 5011,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1894,
											"end": 1955,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1894,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 264,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 14,
											"end": 264,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 123,
											"end": 129,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 120,
											"end": 121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 117,
											"end": 130,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 109,
											"end": 222,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 109,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 199,
											"end": 210,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 199,
											"end": 210,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 199,
											"end": 210,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 193,
											"end": 211,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 180,
											"end": 191,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 180,
											"end": 191,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 180,
											"end": 191,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 173,
											"end": 212,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 145,
											"end": 147,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 138,
											"end": 148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 109,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 109,
											"end": 222,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 256,
											"end": 257,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 254,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 238,
											"end": 254,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 231,
											"end": 258,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14,
											"end": 264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 269,
											"end": 665,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 269,
											"end": 665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 418,
											"end": 420,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 400,
											"end": 421,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 381,
											"end": 385,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 450,
											"end": 456,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 444,
											"end": 457,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 493,
											"end": 499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 488,
											"end": 490,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 477,
											"end": 486,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 473,
											"end": 491,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 466,
											"end": 500,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 509,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 581,
											"end": 587,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 576,
											"end": 578,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 565,
											"end": 574,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 561,
											"end": 579,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 556,
											"end": 558,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 548,
											"end": 554,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 544,
											"end": 559,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 509,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 509,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 509,
											"end": 588,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 509,
											"end": 588,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 649,
											"end": 651,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 628,
											"end": 643,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 624,
											"end": 653,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 609,
											"end": 654,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 609,
											"end": 654,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 609,
											"end": 654,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 609,
											"end": 654,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 656,
											"end": 658,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 605,
											"end": 659,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 605,
											"end": 659,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 269,
											"end": 665,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 269,
											"end": 665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1172,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 1041,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1116,
											"end": 1147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1116,
											"end": 1147,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1106,
											"end": 1148,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1106,
											"end": 1148,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1096,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 1096,
											"end": 1166,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1162,
											"end": 1163,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1159,
											"end": 1160,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1096,
											"end": 1166,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 1096,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1172,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1177,
											"end": 1492,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1177,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1251,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1259,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1306,
											"end": 1308,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1294,
											"end": 1303,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1285,
											"end": 1292,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1281,
											"end": 1304,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1277,
											"end": 1309,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1274,
											"end": 1326,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1274,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 1274,
											"end": 1326,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1319,
											"end": 1320,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1312,
											"end": 1324,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1274,
											"end": 1326,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 1274,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1361,
											"end": 1370,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1371,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 1380,
											"end": 1411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1411,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 1380,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1430,
											"end": 1435,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1482,
											"end": 1484,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1485,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1467,
											"end": 1485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1467,
											"end": 1485,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1467,
											"end": 1485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1486,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1486,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1497,
											"end": 1744,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1497,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1556,
											"end": 1562,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1609,
											"end": 1611,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1597,
											"end": 1606,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1588,
											"end": 1595,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1584,
											"end": 1607,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1580,
											"end": 1612,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1577,
											"end": 1629,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1577,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 1577,
											"end": 1629,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1625,
											"end": 1626,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1622,
											"end": 1623,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1627,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1577,
											"end": 1629,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 1577,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1664,
											"end": 1673,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1651,
											"end": 1674,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 1708,
											"end": 1713,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 1683,
											"end": 1714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 1683,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1738,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1497,
											"end": 1744,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1497,
											"end": 1744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1957,
											"end": 2084,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 1957,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2018,
											"end": 2028,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 2013,
											"end": 2016,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2009,
											"end": 2029,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2007,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2030,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2049,
											"end": 2053,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2046,
											"end": 2047,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2039,
											"end": 2054,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2073,
											"end": 2077,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2070,
											"end": 2071,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2063,
											"end": 2078,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2089,
											"end": 2986,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 2089,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2222,
											"end": 2224,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2210,
											"end": 2219,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2201,
											"end": 2208,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2197,
											"end": 2220,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2193,
											"end": 2225,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2190,
											"end": 2242,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2190,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 2190,
											"end": 2242,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2238,
											"end": 2239,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2236,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2228,
											"end": 2240,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2190,
											"end": 2242,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 2190,
											"end": 2242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2280,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2265,
											"end": 2281,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2318,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2339,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2330,
											"end": 2344,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2361,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 2327,
											"end": 2361,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2355,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2347,
											"end": 2359,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2361,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 2327,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2401,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2384,
											"end": 2393,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2402,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2447,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2433,
											"end": 2437,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2429,
											"end": 2431,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2421,
											"end": 2448,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 2411,
											"end": 2466,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2462,
											"end": 2463,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2459,
											"end": 2460,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2452,
											"end": 2464,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2466,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 2411,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2493,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2515,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2509,
											"end": 2511,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2506,
											"end": 2516,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2539,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 2503,
											"end": 2539,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2519,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 2519,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 2519,
											"end": 2537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2519,
											"end": 2537,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 2519,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2594,
											"end": 2596,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2588,
											"end": 2597,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2564,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2648,
											"end": 2661,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2661,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2644,
											"end": 2666,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2666,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2666,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 2640,
											"end": 2671,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2636,
											"end": 2676,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2624,
											"end": 2677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2624,
											"end": 2677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2624,
											"end": 2677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2692,
											"end": 2710,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2692,
											"end": 2710,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2692,
											"end": 2710,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2734,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2734,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2734,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2689,
											"end": 2735,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2686,
											"end": 2758,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2686,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 2686,
											"end": 2758,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2738,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 2738,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 2738,
											"end": 2756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2738,
											"end": 2756,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 2738,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2778,
											"end": 2788,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2774,
											"end": 2776,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2767,
											"end": 2789,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2813,
											"end": 2815,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2860,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2848,
											"end": 2850,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2843,
											"end": 2845,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2841,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2835,
											"end": 2846,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2831,
											"end": 2851,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2828,
											"end": 2861,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2825,
											"end": 2878,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2825,
											"end": 2878,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 2825,
											"end": 2878,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2871,
											"end": 2872,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2864,
											"end": 2876,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2825,
											"end": 2878,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 2825,
											"end": 2878,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 2952,
											"end": 2954,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2947,
											"end": 2949,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2939,
											"end": 2945,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2935,
											"end": 2950,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2930,
											"end": 2932,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2926,
											"end": 2928,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2922,
											"end": 2933,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 2887,
											"end": 2955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2955,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 2887,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 2980,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 2089,
											"end": 2986,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2089,
											"end": 2986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2991,
											"end": 3175,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 2991,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3114,
											"end": 3116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3102,
											"end": 3111,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3093,
											"end": 3100,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3112,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3085,
											"end": 3117,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3082,
											"end": 3134,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3082,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 3082,
											"end": 3134,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3130,
											"end": 3131,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3128,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3120,
											"end": 3132,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3082,
											"end": 3134,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 3082,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3153,
											"end": 3169,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3153,
											"end": 3169,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2991,
											"end": 3175,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2991,
											"end": 3175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3453,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 3180,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3248,
											"end": 3254,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3301,
											"end": 3303,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3289,
											"end": 3298,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3280,
											"end": 3287,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3276,
											"end": 3299,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3304,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3269,
											"end": 3321,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3269,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 3269,
											"end": 3321,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3318,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3314,
											"end": 3315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3307,
											"end": 3319,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3269,
											"end": 3321,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 3269,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3358,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3343,
											"end": 3359,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3399,
											"end": 3403,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3392,
											"end": 3397,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3381,
											"end": 3386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3378,
											"end": 3405,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3368,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 3368,
											"end": 3423,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3419,
											"end": 3420,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3417,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3421,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3737,
											"end": 3988,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 3737,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3807,
											"end": 3813,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3860,
											"end": 3862,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3848,
											"end": 3857,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3846,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3835,
											"end": 3858,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3831,
											"end": 3863,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3828,
											"end": 3880,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3828,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 3828,
											"end": 3880,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3876,
											"end": 3877,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3873,
											"end": 3874,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3866,
											"end": 3878,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3828,
											"end": 3880,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 3828,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3917,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3902,
											"end": 3918,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3927,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 3952,
											"end": 3957,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3927,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 3927,
											"end": 3958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										}
									],
									".data": {
										"61448FF004EB25BE10D68311465C7F0DABB762B05DCDD9C8F4C76C341721E40B": "beaf54d3716fb445aa475454e50dfd5f08f0c257447c1fe9f7e82d97c0b7a698"
									}
								}
							},
							"sourceList": [
								"diamonds/facets/FacetTokenLink.sol",
								"diamonds/facets/slots/SlotTokenLink.sol",
								"imports/openzeppelin/token/ERC20/IERC20.sol",
								"imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol",
								"imports/openzeppelin/token/ERC20/extensions/IERC20Permit.sol",
								"imports/openzeppelin/utils/Context.sol",
								"units/interfaces/IOwnableToken.sol",
								"units/interfaces/IToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"____burn(address,uint256)": "ea8479bd",
							"____linkToken(address)": "a7239f3b",
							"____mint(address,uint256)": "4ac947f7",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getLinkedToken()": "8752b02f",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newToken\",\"type\":\"address\"}],\"name\":\"TokenLinkEstablished\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"____burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newToken\",\"type\":\"address\"}],\"name\":\"____linkToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"____mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLinkedToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"diamonds/facets/FacetTokenLink.sol\":\"FacetTokenLink\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"diamonds/facets/FacetTokenLink.sol\":{\"keccak256\":\"0xa876289612c6de24972701b82a4d2a377d611da3b465e8e219291357ee6bf7d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f55d96f179d6acc6a10a90c6de522f5784a3e2d7c0b92566ad300c3a70090bd\",\"dweb:/ipfs/QmRL2NZciVSkxKtNCKfa3YrxUjTRXFjicy7f84J7h3NZJg\"]},\"diamonds/facets/slots/SlotTokenLink.sol\":{\"keccak256\":\"0x36eda44932f47a74e35581220ea20f114bbcc90a2e3cf4d3e9dd0757198401a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3e3985e9b75cebc17b509ea460f9790d1ec5a1959f82938e79551d022df822a\",\"dweb:/ipfs/QmZvyFhJisqHioK9cQKQJKzCz6FHrLt8FGmN9sapeg16TN\"]},\"imports/openzeppelin/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x25c33569824f7653c064ccac6b9c63ba19833c7818debaa3f7f7737f5175d7d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c002fe819fd2da94ef4cbcddcd4a62ba42454b000d2321314bfff73353792e7\",\"dweb:/ipfs/QmadL9VMe3jTyf5sg8g8Y9Q4ESsyos42rZPnvJaKuhUacK\"]},\"imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x2837661e72b15493671ff5e5099b565b626c53f4d90f347211dd78924aca24ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34ced2145df7d08fbb3fba9471faf5a1609fc3def76d004c658f480e5cebb013\",\"dweb:/ipfs/QmSJ42tRU39HdpJSLXCinUtzzxnxBFncnCbfK6juqqep7U\"]},\"imports/openzeppelin/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"imports/openzeppelin/utils/Context.sol\":{\"keccak256\":\"0x639f180f9bedd48998c68f1bf4f8d01b37a4573bc496acb04a55308c6de0045c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ff2313c66e4e14d167aae923b38509ec68dcaa281d2314f45b527139d33d4af\",\"dweb:/ipfs/QmU7aik96EmKeG8feBbQZ8BufngtYB6guGTkZoX5umP73i\"]},\"units/interfaces/IOwnableToken.sol\":{\"keccak256\":\"0xbaf2a0021218a444e12ebe1e5476b50132fff5c0f29747aca5e4979d17fc5590\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56bd8c29af83345aa2c5791d961bcd3be8f7f851a33872a1a545165c9da28621\",\"dweb:/ipfs/QmNtj9WgnMkt7E2HxBBjgpNVYJZy8chVZBajgLpqSLSwrZ\"]},\"units/interfaces/IToken.sol\":{\"keccak256\":\"0xb44f8b30fb2321aed6ca019eae8176275691a9427a3d21a1aa5ceed68334067d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://026da09e63f32e761ee5c76b643c05746755196b6069a3b55653b6b1e9b6543a\",\"dweb:/ipfs/QmUmvz2QxYfXSDtzFGJkKKaKDeSJBZ3f7dkcaEkmH2xjWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"diamonds/facets/slots/SlotTokenLink.sol": {
				"SlotTokenLink": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"diamonds/facets/slots/SlotTokenLink.sol\":57:416  contract SlotTokenLink {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"diamonds/facets/slots/SlotTokenLink.sol\":57:416  contract SlotTokenLink {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c7a85cde196bf26322dfda279ba77f48e0b45898b23006b7b8c5a68d38fdd2df64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220c7a85cde196bf26322dfda279ba77f48e0b45898b23006b7b8c5a68d38fdd2df64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xA8 0x5C 0xDE NOT PUSH12 0xF26322DFDA279BA77F48E0B4 PC SWAP9 0xB2 ADDRESS MOD 0xB7 0xB8 0xC5 0xA6 DUP14 CODESIZE REVERT 0xD2 0xDF PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "57:359:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220c7a85cde196bf26322dfda279ba77f48e0b45898b23006b7b8c5a68d38fdd2df64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xA8 0x5C 0xDE NOT PUSH12 0xF26322DFDA279BA77F48E0B4 PC SWAP9 0xB2 ADDRESS MOD 0xB7 0xB8 0xC5 0xA6 DUP14 CODESIZE REVERT 0xD2 0xDF PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "57:359:1:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"tokenLink()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 416,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 416,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 416,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 57,
									"end": 416,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 57,
									"end": 416,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 57,
									"end": 416,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 57,
									"end": 416,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 416,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 57,
									"end": 416,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 416,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 57,
									"end": 416,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 57,
									"end": 416,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 416,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 57,
									"end": 416,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 57,
									"end": 416,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 416,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 57,
									"end": 416,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 416,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 416,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 57,
									"end": 416,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 416,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c7a85cde196bf26322dfda279ba77f48e0b45898b23006b7b8c5a68d38fdd2df64736f6c63430008130033",
									".code": [
										{
											"begin": 57,
											"end": 416,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 416,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 416,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 57,
											"end": 416,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 416,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 57,
											"end": 416,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"diamonds/facets/FacetTokenLink.sol",
								"diamonds/facets/slots/SlotTokenLink.sol",
								"imports/openzeppelin/token/ERC20/IERC20.sol",
								"imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol",
								"imports/openzeppelin/token/ERC20/extensions/IERC20Permit.sol",
								"imports/openzeppelin/utils/Context.sol",
								"units/interfaces/IOwnableToken.sol",
								"units/interfaces/IToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"diamonds/facets/slots/SlotTokenLink.sol\":\"SlotTokenLink\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"diamonds/facets/slots/SlotTokenLink.sol\":{\"keccak256\":\"0x36eda44932f47a74e35581220ea20f114bbcc90a2e3cf4d3e9dd0757198401a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3e3985e9b75cebc17b509ea460f9790d1ec5a1959f82938e79551d022df822a\",\"dweb:/ipfs/QmZvyFhJisqHioK9cQKQJKzCz6FHrLt8FGmN9sapeg16TN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/openzeppelin/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/openzeppelin/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/openzeppelin/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x25c33569824f7653c064ccac6b9c63ba19833c7818debaa3f7f7737f5175d7d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c002fe819fd2da94ef4cbcddcd4a62ba42454b000d2321314bfff73353792e7\",\"dweb:/ipfs/QmadL9VMe3jTyf5sg8g8Y9Q4ESsyos42rZPnvJaKuhUacK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/openzeppelin/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x25c33569824f7653c064ccac6b9c63ba19833c7818debaa3f7f7737f5175d7d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c002fe819fd2da94ef4cbcddcd4a62ba42454b000d2321314bfff73353792e7\",\"dweb:/ipfs/QmadL9VMe3jTyf5sg8g8Y9Q4ESsyos42rZPnvJaKuhUacK\"]},\"imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x2837661e72b15493671ff5e5099b565b626c53f4d90f347211dd78924aca24ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34ced2145df7d08fbb3fba9471faf5a1609fc3def76d004c658f480e5cebb013\",\"dweb:/ipfs/QmSJ42tRU39HdpJSLXCinUtzzxnxBFncnCbfK6juqqep7U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/openzeppelin/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/openzeppelin/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/openzeppelin/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"imports/openzeppelin/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"imports/openzeppelin/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/openzeppelin/utils/Context.sol\":{\"keccak256\":\"0x639f180f9bedd48998c68f1bf4f8d01b37a4573bc496acb04a55308c6de0045c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ff2313c66e4e14d167aae923b38509ec68dcaa281d2314f45b527139d33d4af\",\"dweb:/ipfs/QmU7aik96EmKeG8feBbQZ8BufngtYB6guGTkZoX5umP73i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"units/interfaces/IOwnableToken.sol": {
				"IOwnableToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "snapshotId",
									"type": "uint256"
								}
							],
							"name": "balanceOfAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentSnapshotId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "snapshot",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "snapshotId",
									"type": "uint256"
								}
							],
							"name": "totalSupplyAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balanceOfAt(address,uint256)": "4ee2cd7e",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"currentSnapshotId()": "970875ce",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"owner()": "8da5cb5b",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"renounceOwnership()": "715018a6",
							"snapshot()": "9711715a",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"totalSupplyAt(uint256)": "981b24d0",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentSnapshotId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"units/interfaces/IOwnableToken.sol\":\"IOwnableToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/openzeppelin/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x25c33569824f7653c064ccac6b9c63ba19833c7818debaa3f7f7737f5175d7d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c002fe819fd2da94ef4cbcddcd4a62ba42454b000d2321314bfff73353792e7\",\"dweb:/ipfs/QmadL9VMe3jTyf5sg8g8Y9Q4ESsyos42rZPnvJaKuhUacK\"]},\"imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x2837661e72b15493671ff5e5099b565b626c53f4d90f347211dd78924aca24ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34ced2145df7d08fbb3fba9471faf5a1609fc3def76d004c658f480e5cebb013\",\"dweb:/ipfs/QmSJ42tRU39HdpJSLXCinUtzzxnxBFncnCbfK6juqqep7U\"]},\"imports/openzeppelin/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"units/interfaces/IOwnableToken.sol\":{\"keccak256\":\"0xbaf2a0021218a444e12ebe1e5476b50132fff5c0f29747aca5e4979d17fc5590\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56bd8c29af83345aa2c5791d961bcd3be8f7f851a33872a1a545165c9da28621\",\"dweb:/ipfs/QmNtj9WgnMkt7E2HxBBjgpNVYJZy8chVZBajgLpqSLSwrZ\"]},\"units/interfaces/IToken.sol\":{\"keccak256\":\"0xb44f8b30fb2321aed6ca019eae8176275691a9427a3d21a1aa5ceed68334067d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://026da09e63f32e761ee5c76b643c05746755196b6069a3b55653b6b1e9b6543a\",\"dweb:/ipfs/QmUmvz2QxYfXSDtzFGJkKKaKDeSJBZ3f7dkcaEkmH2xjWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"units/interfaces/IToken.sol": {
				"IToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "snapshotId",
									"type": "uint256"
								}
							],
							"name": "balanceOfAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentSnapshotId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "snapshot",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "snapshotId",
									"type": "uint256"
								}
							],
							"name": "totalSupplyAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balanceOfAt(address,uint256)": "4ee2cd7e",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"currentSnapshotId()": "970875ce",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"snapshot()": "9711715a",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"totalSupplyAt(uint256)": "981b24d0",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentSnapshotId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"units/interfaces/IToken.sol\":\"IToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"imports/openzeppelin/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x25c33569824f7653c064ccac6b9c63ba19833c7818debaa3f7f7737f5175d7d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c002fe819fd2da94ef4cbcddcd4a62ba42454b000d2321314bfff73353792e7\",\"dweb:/ipfs/QmadL9VMe3jTyf5sg8g8Y9Q4ESsyos42rZPnvJaKuhUacK\"]},\"imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x2837661e72b15493671ff5e5099b565b626c53f4d90f347211dd78924aca24ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34ced2145df7d08fbb3fba9471faf5a1609fc3def76d004c658f480e5cebb013\",\"dweb:/ipfs/QmSJ42tRU39HdpJSLXCinUtzzxnxBFncnCbfK6juqqep7U\"]},\"imports/openzeppelin/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"units/interfaces/IToken.sol\":{\"keccak256\":\"0xb44f8b30fb2321aed6ca019eae8176275691a9427a3d21a1aa5ceed68334067d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://026da09e63f32e761ee5c76b643c05746755196b6069a3b55653b6b1e9b6543a\",\"dweb:/ipfs/QmUmvz2QxYfXSDtzFGJkKKaKDeSJBZ3f7dkcaEkmH2xjWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"diamonds/facets/FacetTokenLink.sol": {
				"ast": {
					"absolutePath": "diamonds/facets/FacetTokenLink.sol",
					"exportedSymbols": {
						"Context": [
							386
						],
						"FacetTokenLink": [
							202
						],
						"IERC20": [
							303
						],
						"IERC20Metadata": [
							328
						],
						"IERC20Permit": [
							364
						],
						"IOwnableToken": [
							412
						],
						"IToken": [
							462
						],
						"SlotTokenLink": [
							225
						]
					},
					"id": 203,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "diamonds/facets/slots/SlotTokenLink.sol",
							"file": "diamonds/facets/slots/SlotTokenLink.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 203,
							"sourceUnit": 226,
							"src": "56:49:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/openzeppelin/utils/Context.sol",
							"file": "imports/openzeppelin/utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 203,
							"sourceUnit": 387,
							"src": "106:48:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "units/interfaces/IOwnableToken.sol",
							"file": "units/interfaces/IOwnableToken.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 203,
							"sourceUnit": 413,
							"src": "155:44:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "SlotTokenLink",
										"nameLocations": [
											"228:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 225,
										"src": "228:13:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "228:13:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nameLocations": [
											"243:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 386,
										"src": "243:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "243:7:0"
								}
							],
							"canonicalName": "FacetTokenLink",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 202,
							"linearizedBaseContracts": [
								202,
								386,
								225
							],
							"name": "FacetTokenLink",
							"nameLocation": "210:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "6a9922e4e54faa19ecbd2d1dbf36b0802c1f629fa0aba9679bddc7b932c5fe64",
									"id": 14,
									"name": "TokenLinkEstablished",
									"nameLocation": "263:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldToken",
												"nameLocation": "292:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "284:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "284:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": false,
												"mutability": "mutable",
												"name": "newToken",
												"nameLocation": "310:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "302:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "302:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "283:36:0"
									},
									"src": "257:63:0"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "384:275:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 19,
														"name": "_onlySelf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "394:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "394:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "394:11:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 23,
																	"name": "_self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "423:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "423:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 26,
																				"name": "newToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 16,
																				"src": "448:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 25,
																			"name": "IOwnableToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 412,
																			"src": "434:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IOwnableToken_$412_$",
																				"typeString": "type(contract IOwnableToken)"
																			}
																		},
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "434:23:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IOwnableToken_$412",
																			"typeString": "contract IOwnableToken"
																		}
																	},
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "458:5:0",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 403,
																	"src": "434:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "434:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "423:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661636574546f6b656e4c696e6b3a20746f6b656e206e6f74206f776e6564",
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "467:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8f8aacd07a5f6eb0c1a64aaf9e853b63aa8523d22012262d59b29cb2f8aeca59",
																"typeString": "literal_string \"FacetTokenLink: token not owned\""
															},
															"value": "FacetTokenLink: token not owned"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8f8aacd07a5f6eb0c1a64aaf9e853b63aa8523d22012262d59b29cb2f8aeca59",
																"typeString": "literal_string \"FacetTokenLink: token not owned\""
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "415:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "415:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "415:86:0"
											},
											{
												"assignments": [
													35
												],
												"declarations": [
													{
														"constant": false,
														"id": 35,
														"mutability": "mutable",
														"name": "oldToken",
														"nameLocation": "519:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 51,
														"src": "511:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 34,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "511:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 39,
												"initialValue": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 36,
															"name": "tokenLink",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "530:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageTokenLink_$212_storage_ptr_$",
																"typeString": "function () pure returns (struct SlotTokenLink.StorageTokenLink storage pointer)"
															}
														},
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "530:11:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StorageTokenLink_$212_storage_ptr",
															"typeString": "struct SlotTokenLink.StorageTokenLink storage pointer"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "542:11:0",
													"memberName": "linkedToken",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 211,
													"src": "530:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "511:42:0"
											},
											{
												"expression": {
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 40,
																"name": "tokenLink",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 224,
																"src": "563:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageTokenLink_$212_storage_ptr_$",
																	"typeString": "function () pure returns (struct SlotTokenLink.StorageTokenLink storage pointer)"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "563:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StorageTokenLink_$212_storage_ptr",
																"typeString": "struct SlotTokenLink.StorageTokenLink storage pointer"
															}
														},
														"id": 42,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "575:11:0",
														"memberName": "linkedToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 211,
														"src": "563:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 43,
														"name": "newToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "589:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "563:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "563:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 47,
															"name": "oldToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "633:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 48,
															"name": "newToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "643:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 46,
														"name": "TokenLinkEstablished",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "612:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "612:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 50,
												"nodeType": "EmitStatement",
												"src": "607:45:0"
											}
										]
									},
									"functionSelector": "a7239f3b",
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "____linkToken",
									"nameLocation": "335:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "newToken",
												"nameLocation": "357:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "349:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:18:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "384:0:0"
									},
									"scope": 202,
									"src": "326:333:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "730:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 59,
														"name": "_onlySelf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "740:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "740:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "740:11:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 68,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "805:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 69,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "814:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 63,
																			"name": "tokenLink",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 224,
																			"src": "775:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageTokenLink_$212_storage_ptr_$",
																				"typeString": "function () pure returns (struct SlotTokenLink.StorageTokenLink storage pointer)"
																			}
																		},
																		"id": 64,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "775:11:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StorageTokenLink_$212_storage_ptr",
																			"typeString": "struct SlotTokenLink.StorageTokenLink storage pointer"
																		}
																	},
																	"id": 65,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "787:11:0",
																	"memberName": "linkedToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 211,
																	"src": "775:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 62,
																"name": "IOwnableToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "761:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IOwnableToken_$412_$",
																	"typeString": "type(contract IOwnableToken)"
																}
															},
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "761:38:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOwnableToken_$412",
																"typeString": "contract IOwnableToken"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "800:4:0",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 398,
														"src": "761:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "761:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "761:60:0"
											}
										]
									},
									"functionSelector": "4ac947f7",
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "____mint",
									"nameLocation": "674:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "691:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "683:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "705:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "700:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "700:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "682:30:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "730:0:0"
									},
									"scope": 202,
									"src": "665:163:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "899:102:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 80,
														"name": "_onlySelf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "909:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "909:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "909:11:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 89,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "978:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 90,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "987:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 84,
																			"name": "tokenLink",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 224,
																			"src": "944:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageTokenLink_$212_storage_ptr_$",
																				"typeString": "function () pure returns (struct SlotTokenLink.StorageTokenLink storage pointer)"
																			}
																		},
																		"id": 85,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "944:11:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StorageTokenLink_$212_storage_ptr",
																			"typeString": "struct SlotTokenLink.StorageTokenLink storage pointer"
																		}
																	},
																	"id": 86,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "956:11:0",
																	"memberName": "linkedToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 211,
																	"src": "944:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 83,
																"name": "IOwnableToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "930:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IOwnableToken_$412_$",
																	"typeString": "type(contract IOwnableToken)"
																}
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "930:38:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOwnableToken_$412",
																"typeString": "contract IOwnableToken"
															}
														},
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "969:8:0",
														"memberName": "burnFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 461,
														"src": "930:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "930:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "930:64:0"
											}
										]
									},
									"functionSelector": "ea8479bd",
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "____burn",
									"nameLocation": "843:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "860:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "852:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "874:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "869:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "851:30:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "899:0:0"
									},
									"scope": 202,
									"src": "834:167:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1080:47:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 99,
															"name": "tokenLink",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "1097:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageTokenLink_$212_storage_ptr_$",
																"typeString": "function () pure returns (struct SlotTokenLink.StorageTokenLink storage pointer)"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1097:11:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StorageTokenLink_$212_storage_ptr",
															"typeString": "struct SlotTokenLink.StorageTokenLink storage pointer"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1109:11:0",
													"memberName": "linkedToken",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 211,
													"src": "1097:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 98,
												"id": 102,
												"nodeType": "Return",
												"src": "1090:30:0"
											}
										]
									},
									"functionSelector": "8752b02f",
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLinkedToken",
									"nameLocation": "1025:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1039:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1071:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1071:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1070:9:0"
									},
									"scope": 202,
									"src": "1016:111:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "1193:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 110,
																			"name": "tokenLink",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 224,
																			"src": "1224:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageTokenLink_$212_storage_ptr_$",
																				"typeString": "function () pure returns (struct SlotTokenLink.StorageTokenLink storage pointer)"
																			}
																		},
																		"id": 111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1224:11:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StorageTokenLink_$212_storage_ptr",
																			"typeString": "struct SlotTokenLink.StorageTokenLink storage pointer"
																		}
																	},
																	"id": 112,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1236:11:0",
																	"memberName": "linkedToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 211,
																	"src": "1224:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 109,
																"name": "IOwnableToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "1210:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IOwnableToken_$412_$",
																	"typeString": "type(contract IOwnableToken)"
																}
															},
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1210:38:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOwnableToken_$412",
																"typeString": "contract IOwnableToken"
															}
														},
														"id": 114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1249:4:0",
														"memberName": "name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 315,
														"src": "1210:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view external returns (string memory)"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1210:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 108,
												"id": 116,
												"nodeType": "Return",
												"src": "1203:52:0"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1142:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1146:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "1178:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 106,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1178:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1177:15:0"
									},
									"scope": 202,
									"src": "1133:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "1330:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 124,
																			"name": "tokenLink",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 224,
																			"src": "1361:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageTokenLink_$212_storage_ptr_$",
																				"typeString": "function () pure returns (struct SlotTokenLink.StorageTokenLink storage pointer)"
																			}
																		},
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1361:11:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StorageTokenLink_$212_storage_ptr",
																			"typeString": "struct SlotTokenLink.StorageTokenLink storage pointer"
																		}
																	},
																	"id": 126,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1373:11:0",
																	"memberName": "linkedToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 211,
																	"src": "1361:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 123,
																"name": "IOwnableToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "1347:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IOwnableToken_$412_$",
																	"typeString": "type(contract IOwnableToken)"
																}
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1347:38:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOwnableToken_$412",
																"typeString": "contract IOwnableToken"
															}
														},
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1386:6:0",
														"memberName": "symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 321,
														"src": "1347:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view external returns (string memory)"
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1347:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 122,
												"id": 130,
												"nodeType": "Return",
												"src": "1340:54:0"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1277:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1283:2:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1315:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 120,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1315:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1314:15:0"
									},
									"scope": 202,
									"src": "1268:133:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "1463:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 138,
																			"name": "tokenLink",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 224,
																			"src": "1494:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageTokenLink_$212_storage_ptr_$",
																				"typeString": "function () pure returns (struct SlotTokenLink.StorageTokenLink storage pointer)"
																			}
																		},
																		"id": 139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1494:11:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StorageTokenLink_$212_storage_ptr",
																			"typeString": "struct SlotTokenLink.StorageTokenLink storage pointer"
																		}
																	},
																	"id": 140,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1506:11:0",
																	"memberName": "linkedToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 211,
																	"src": "1494:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 137,
																"name": "IOwnableToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "1480:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IOwnableToken_$412_$",
																	"typeString": "type(contract IOwnableToken)"
																}
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1480:38:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOwnableToken_$412",
																"typeString": "contract IOwnableToken"
															}
														},
														"id": 142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1519:8:0",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 327,
														"src": "1480:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1480:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 136,
												"id": 144,
												"nodeType": "Return",
												"src": "1473:56:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1416:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1424:2:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1456:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 134,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1456:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1455:7:0"
									},
									"scope": 202,
									"src": "1407:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "1600:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 152,
																			"name": "tokenLink",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 224,
																			"src": "1631:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageTokenLink_$212_storage_ptr_$",
																				"typeString": "function () pure returns (struct SlotTokenLink.StorageTokenLink storage pointer)"
																			}
																		},
																		"id": 153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1631:11:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StorageTokenLink_$212_storage_ptr",
																			"typeString": "struct SlotTokenLink.StorageTokenLink storage pointer"
																		}
																	},
																	"id": 154,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1643:11:0",
																	"memberName": "linkedToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 211,
																	"src": "1631:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 151,
																"name": "IOwnableToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "1617:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IOwnableToken_$412_$",
																	"typeString": "type(contract IOwnableToken)"
																}
															},
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1617:38:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOwnableToken_$412",
																"typeString": "contract IOwnableToken"
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1656:11:0",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 252,
														"src": "1617:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1617:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 150,
												"id": 158,
												"nodeType": "Return",
												"src": "1610:59:0"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1551:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1562:2:0"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "1594:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1594:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:6:0"
									},
									"scope": 202,
									"src": "1542:134:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "1745:81:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 173,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "1811:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 168,
																			"name": "tokenLink",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 224,
																			"src": "1776:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_StorageTokenLink_$212_storage_ptr_$",
																				"typeString": "function () pure returns (struct SlotTokenLink.StorageTokenLink storage pointer)"
																			}
																		},
																		"id": 169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1776:11:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StorageTokenLink_$212_storage_ptr",
																			"typeString": "struct SlotTokenLink.StorageTokenLink storage pointer"
																		}
																	},
																	"id": 170,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1788:11:0",
																	"memberName": "linkedToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 211,
																	"src": "1776:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 167,
																"name": "IOwnableToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "1762:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IOwnableToken_$412_$",
																	"typeString": "type(contract IOwnableToken)"
																}
															},
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1762:38:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOwnableToken_$412",
																"typeString": "contract IOwnableToken"
															}
														},
														"id": 172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1801:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 260,
														"src": "1762:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1762:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 166,
												"id": 175,
												"nodeType": "Return",
												"src": "1755:64:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1691:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1709:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "1701:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1700:17:0"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "1739:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1739:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1738:6:0"
									},
									"scope": 202,
									"src": "1682:144:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1884:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 181,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 376,
																	"src": "1902:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1902:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 183,
																	"name": "_self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "1918:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1918:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1902:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661636574546f6b656e4c696e6b3a206f6e6c792073656c66",
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1927:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_092cee7f222b50d96892a7e00c04833137bbc16a7bb9202cbf33df1d5dba94bd",
																"typeString": "literal_string \"FacetTokenLink: only self\""
															},
															"value": "FacetTokenLink: only self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_092cee7f222b50d96892a7e00c04833137bbc16a7bb9202cbf33df1d5dba94bd",
																"typeString": "literal_string \"FacetTokenLink: only self\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1894:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1894:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "1894:61:0"
											}
										]
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_onlySelf",
									"nameLocation": "1850:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1859:2:0"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1884:0:0"
									},
									"scope": 202,
									"src": "1841:121:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 200,
										"nodeType": "Block",
										"src": "2025:37:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 197,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "2050:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_FacetTokenLink_$202",
																"typeString": "contract FacetTokenLink"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_FacetTokenLink_$202",
																"typeString": "contract FacetTokenLink"
															}
														],
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2042:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 195,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2042:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2042:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 194,
												"id": 199,
												"nodeType": "Return",
												"src": "2035:20:0"
											}
										]
									},
									"id": 201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_self",
									"nameLocation": "1977:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1982:2:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "2016:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2016:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2015:9:0"
									},
									"scope": 202,
									"src": "1968:94:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 203,
							"src": "201:1863:0",
							"usedErrors": []
						}
					],
					"src": "32:2033:0"
				},
				"id": 0
			},
			"diamonds/facets/slots/SlotTokenLink.sol": {
				"ast": {
					"absolutePath": "diamonds/facets/slots/SlotTokenLink.sol",
					"exportedSymbols": {
						"SlotTokenLink": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 204,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SlotTokenLink",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "SlotTokenLink",
							"nameLocation": "66:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 209,
									"mutability": "constant",
									"name": "_TOKEN_LINK",
									"nameLocation": "112:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 225,
									"src": "86:68:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 205,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "86:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "736c6f742e746f6b656e2e6c696e6b",
												"id": 207,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "136:17:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_beaf54d3716fb445aa475454e50dfd5f08f0c257447c1fe9f7e82d97c0b7a698",
													"typeString": "literal_string \"slot.token.link\""
												},
												"value": "slot.token.link"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_beaf54d3716fb445aa475454e50dfd5f08f0c257447c1fe9f7e82d97c0b7a698",
													"typeString": "literal_string \"slot.token.link\""
												}
											],
											"id": 206,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "126:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 208,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "126:28:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "SlotTokenLink.StorageTokenLink",
									"id": 212,
									"members": [
										{
											"constant": false,
											"id": 211,
											"mutability": "mutable",
											"name": "linkedToken",
											"nameLocation": "203:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 212,
											"src": "195:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 210,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "195:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StorageTokenLink",
									"nameLocation": "168:16:1",
									"nodeType": "StructDefinition",
									"scope": 225,
									"src": "161:60:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "307:107:1",
										"statements": [
											{
												"assignments": [
													219
												],
												"declarations": [
													{
														"constant": false,
														"id": 219,
														"mutability": "mutable",
														"name": "location",
														"nameLocation": "325:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 223,
														"src": "317:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 218,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "317:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 221,
												"initialValue": {
													"id": 220,
													"name": "_TOKEN_LINK",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 209,
													"src": "336:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "317:30:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "366:42:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "380:18:1",
															"value": {
																"name": "location",
																"nodeType": "YulIdentifier",
																"src": "390:8:1"
															},
															"variableNames": [
																{
																	"name": "s.slot",
																	"nodeType": "YulIdentifier",
																	"src": "380:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 219,
														"isOffset": false,
														"isSlot": false,
														"src": "390:8:1",
														"valueSize": 1
													},
													{
														"declaration": 216,
														"isOffset": false,
														"isSlot": true,
														"src": "380:6:1",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 222,
												"nodeType": "InlineAssembly",
												"src": "357:51:1"
											}
										]
									},
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenLink",
									"nameLocation": "236:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "245:2:1"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "304:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "279:26:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StorageTokenLink_$212_storage_ptr",
													"typeString": "struct SlotTokenLink.StorageTokenLink"
												},
												"typeName": {
													"id": 215,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 214,
														"name": "StorageTokenLink",
														"nameLocations": [
															"279:16:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 212,
														"src": "279:16:1"
													},
													"referencedDeclaration": 212,
													"src": "279:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StorageTokenLink_$212_storage_ptr",
														"typeString": "struct SlotTokenLink.StorageTokenLink"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "278:28:1"
									},
									"scope": 225,
									"src": "227:187:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 226,
							"src": "57:359:1",
							"usedErrors": []
						}
					],
					"src": "32:384:1"
				},
				"id": 1
			},
			"imports/openzeppelin/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "imports/openzeppelin/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							303
						]
					},
					"id": 304,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 303,
							"linearizedBaseContracts": [
								303
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 237,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 246,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "704:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 303,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "836:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 260,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "932:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:2"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "972:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:2"
									},
									"scope": 303,
									"src": "913:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "987:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 270,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1203:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1220:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "1212:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1232:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "1224:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1211:28:2"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "1258:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 267,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1258:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1257:6:2"
									},
									"scope": 303,
									"src": "1194:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "1270:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1548:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1566:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "1558:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1581:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "1573:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1573:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1557:32:2"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "1613:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:9:2"
									},
									"scope": 303,
									"src": "1539:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "1628:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 290,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2284:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2300:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "2292:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2292:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2317:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "2309:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2309:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2291:33:2"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "2343:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 287,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2343:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2342:6:2"
									},
									"scope": 303,
									"src": "2275:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2355:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2656:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2677:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2669:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2691:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2683:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2703:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2695:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2668:42:2"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2729:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2729:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2728:6:2"
									},
									"scope": 303,
									"src": "2647:88:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 304,
							"src": "203:2534:2",
							"usedErrors": []
						}
					],
					"src": "106:2632:2"
				},
				"id": 2
			},
			"imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							303
						],
						"IERC20Metadata": [
							328
						]
					},
					"id": 329,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 305,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:3"
						},
						{
							"absolutePath": "imports/openzeppelin/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 306,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 329,
							"sourceUnit": 304,
							"src": "136:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 308,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 303,
										"src": "306:6:3"
									},
									"id": 309,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 307,
								"nodeType": "StructuredDocumentation",
								"src": "161:116:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 328,
							"linearizedBaseContracts": [
								328,
								303
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 315,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 312,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 328,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 321,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 318,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 328,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 324,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 328,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 329,
							"src": "278:405:3",
							"usedErrors": []
						}
					],
					"src": "110:574:3"
				},
				"id": 3
			},
			"imports/openzeppelin/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "imports/openzeppelin/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							364
						]
					},
					"id": 365,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 330,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "123:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 331,
								"nodeType": "StructuredDocumentation",
								"src": "148:480:4",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 364,
							"linearizedBaseContracts": [
								364
							],
							"name": "IERC20Permit",
							"nameLocation": "639:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "658:792:4",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 349,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1464:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1488:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1480:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1511:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1503:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1536:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1528:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1559:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1551:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1583:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1577:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 341,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1577:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1602:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1594:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 343,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1594:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1621:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1613:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 345,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:158:4"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1637:0:4"
									},
									"scope": 364,
									"src": "1455:183:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "1644:294:4",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1952:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1967:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1959:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:4"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1997:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:9:4"
									},
									"scope": 364,
									"src": "1943:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "2012:128:4",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2207:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2223:2:4"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2249:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 360,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2248:9:4"
									},
									"scope": 364,
									"src": "2198:60:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 365,
							"src": "629:1631:4",
							"usedErrors": []
						}
					],
					"src": "123:2138:4"
				},
				"id": 4
			},
			"imports/openzeppelin/utils/Context.sol": {
				"ast": {
					"absolutePath": "imports/openzeppelin/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							386
						]
					},
					"id": 387,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 366,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "86:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 367,
								"nodeType": "StructuredDocumentation",
								"src": "112:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 386,
							"linearizedBaseContracts": [
								386
							],
							"name": "Context",
							"nameLocation": "627:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "703:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 372,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "720:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "724:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "720:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 371,
												"id": 374,
												"nodeType": "Return",
												"src": "713:17:5"
											}
										]
									},
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "650:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "660:2:5"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "694:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:9:5"
									},
									"scope": 386,
									"src": "641:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "810:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 381,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "827:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "831:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "827:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 380,
												"id": 383,
												"nodeType": "Return",
												"src": "820:15:5"
											}
										]
									},
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "752:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "760:2:5"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "794:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 378,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "794:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:16:5"
									},
									"scope": 386,
									"src": "743:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 387,
							"src": "609:235:5",
							"usedErrors": []
						}
					],
					"src": "86:759:5"
				},
				"id": 5
			},
			"units/interfaces/IOwnableToken.sol": {
				"ast": {
					"absolutePath": "units/interfaces/IOwnableToken.sol",
					"exportedSymbols": {
						"IERC20": [
							303
						],
						"IERC20Metadata": [
							328
						],
						"IERC20Permit": [
							364
						],
						"IOwnableToken": [
							412
						],
						"IToken": [
							462
						]
					},
					"id": 413,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 388,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"absolutePath": "units/interfaces/IToken.sol",
							"file": "units/interfaces/IToken.sol",
							"id": 389,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 413,
							"sourceUnit": 463,
							"src": "56:37:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 390,
										"name": "IToken",
										"nameLocations": [
											"122:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "122:6:6"
									},
									"id": 391,
									"nodeType": "InheritanceSpecifier",
									"src": "122:6:6"
								}
							],
							"canonicalName": "IOwnableToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 412,
							"linearizedBaseContracts": [
								412,
								462,
								364,
								328,
								303
							],
							"name": "IOwnableToken",
							"nameLocation": "105:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40c10f19",
									"id": 398,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "144:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "157:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "149:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "149:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "171:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "166:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "166:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "148:30:6"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "187:0:6"
									},
									"scope": 412,
									"src": "135:53:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8da5cb5b",
									"id": 403,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "202:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "207:2:6"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "233:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "233:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "232:9:6"
									},
									"scope": 412,
									"src": "193:49:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "715018a6",
									"id": 406,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceOwnership",
									"nameLocation": "256:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "273:2:6"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "284:0:6"
									},
									"scope": 412,
									"src": "247:38:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f2fde38b",
									"id": 411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferOwnership",
									"nameLocation": "299:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "325:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "317:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "317:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "316:18:6"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "343:0:6"
									},
									"scope": 412,
									"src": "290:54:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 413,
							"src": "95:251:6",
							"usedErrors": []
						}
					],
					"src": "32:314:6"
				},
				"id": 6
			},
			"units/interfaces/IToken.sol": {
				"ast": {
					"absolutePath": "units/interfaces/IToken.sol",
					"exportedSymbols": {
						"IERC20": [
							303
						],
						"IERC20Metadata": [
							328
						],
						"IERC20Permit": [
							364
						],
						"IToken": [
							462
						]
					},
					"id": 463,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 414,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"absolutePath": "imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "imports/openzeppelin/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 415,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 463,
							"sourceUnit": 329,
							"src": "56:72:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/openzeppelin/token/ERC20/extensions/IERC20Permit.sol",
							"file": "imports/openzeppelin/token/ERC20/extensions/IERC20Permit.sol",
							"id": 416,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 463,
							"sourceUnit": 365,
							"src": "129:70:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "imports/openzeppelin/token/ERC20/IERC20.sol",
							"file": "imports/openzeppelin/token/ERC20/IERC20.sol",
							"id": 417,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 463,
							"sourceUnit": 304,
							"src": "200:53:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 418,
										"name": "IERC20",
										"nameLocations": [
											"275:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 303,
										"src": "275:6:7"
									},
									"id": 419,
									"nodeType": "InheritanceSpecifier",
									"src": "275:6:7"
								},
								{
									"baseName": {
										"id": 420,
										"name": "IERC20Metadata",
										"nameLocations": [
											"283:14:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 328,
										"src": "283:14:7"
									},
									"id": 421,
									"nodeType": "InheritanceSpecifier",
									"src": "283:14:7"
								},
								{
									"baseName": {
										"id": 422,
										"name": "IERC20Permit",
										"nameLocations": [
											"299:12:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 364,
										"src": "299:12:7"
									},
									"id": 423,
									"nodeType": "InheritanceSpecifier",
									"src": "299:12:7"
								}
							],
							"canonicalName": "IToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 462,
							"linearizedBaseContracts": [
								462,
								364,
								328,
								303
							],
							"name": "IToken",
							"nameLocation": "265:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "4ee2cd7e",
									"id": 432,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfAt",
									"nameLocation": "327:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "347:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "339:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "snapshotId",
												"nameLocation": "361:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "356:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "356:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:34:7"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "396:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "396:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "395:6:7"
									},
									"scope": 462,
									"src": "318:84:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "981b24d0",
									"id": 439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupplyAt",
									"nameLocation": "416:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "snapshotId",
												"nameLocation": "435:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "430:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "430:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "429:17:7"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "470:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "470:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "469:6:7"
									},
									"scope": 462,
									"src": "407:69:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "970875ce",
									"id": 444,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "currentSnapshotId",
									"nameLocation": "490:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "507:2:7"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "533:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "533:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:6:7"
									},
									"scope": 462,
									"src": "481:58:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9711715a",
									"id": 449,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshot",
									"nameLocation": "553:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "561:2:7"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "582:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "582:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "581:6:7"
									},
									"scope": 462,
									"src": "544:44:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42966c68",
									"id": 454,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "602:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "612:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "607:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "607:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "606:13:7"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "628:0:7"
									},
									"scope": 462,
									"src": "593:36:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "79cc6790",
									"id": 461,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "643:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "660:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "652:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "674:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "669:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "669:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:30:7"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "690:0:7"
									},
									"scope": 462,
									"src": "634:57:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 463,
							"src": "255:438:7",
							"usedErrors": []
						}
					],
					"src": "32:661:7"
				},
				"id": 7
			}
		}
	}
}